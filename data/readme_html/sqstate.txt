<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-sqstate" class="anchor" aria-hidden="true" href="#sqstate"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SqState</h1>
<p>Squeezed state solver for quantum optics.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/foldfelis/SqState.jl/workflows/CI/badge.svg"><img src="https://github.com/foldfelis/SqState.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/foldfelis/SqState.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/654499dbedbb11864fd28da8ba9c22e7999c6e30b37fd436494f493c73ee0bdd/68747470733a2f2f636f6465636f762e696f2f67682f666f6c6466656c69732f537153746174652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4c49564639364e30354b" alt="codecov" data-canonical-src="https://codecov.io/gh/foldfelis/SqState.jl/branch/master/graph/badge.svg?token=LIVF96N05K" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/11832946fcbfc8edb0436992499ea0e127500cdee69df9da42af19819ad5665b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f666f6c6466656c69732f537173746174652e6a6c"><img src="https://camo.githubusercontent.com/11832946fcbfc8edb0436992499ea0e127500cdee69df9da42af19819ad5665b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f666f6c6466656c69732f537173746174652e6a6c" alt="GitHub release (latest by date)" data-canonical-src="https://img.shields.io/github/v/release/foldfelis/Sqstate.jl" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/981bacdb63932f5f64f66b837e45066feb81863d534e95b7f6be220a70ef3be0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f666f6c6466656c69732f537153746174652e6a6c"><img src="https://camo.githubusercontent.com/981bacdb63932f5f64f66b837e45066feb81863d534e95b7f6be220a70ef3be0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f666f6c6466656c69732f537153746174652e6a6c" alt="GitHub Release Date" data-canonical-src="https://img.shields.io/github/release-date/foldfelis/SqState.jl" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5c6a163d5428a6d3c4c5d97e9bb24ba65cbd6d3c24b69db753671567b03abd34/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75726c3d6874747073253341253246253246666f6c6466656c69732e6769746875622e696f253246537153746174652e6a6c253246"><img src="https://camo.githubusercontent.com/5c6a163d5428a6d3c4c5d97e9bb24ba65cbd6d3c24b69db753671567b03abd34/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75726c3d6874747073253341253246253246666f6c6466656c69732e6769746875622e696f253246537153746174652e6a6c253246" alt="Website" data-canonical-src="https://img.shields.io/website?url=https%3A%2F%2Ffoldfelis.github.io%2FSqState.jl%2F" style="max-width:100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7d1733678b97168865e3d0bb177ef6c275caf451c00dd787e1b61dc76418a3f4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f666f6c6466656c69732f537153746174652e6a6c"><img src="https://camo.githubusercontent.com/7d1733678b97168865e3d0bb177ef6c275caf451c00dd787e1b61dc76418a3f4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f666f6c6466656c69732f537153746174652e6a6c" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/foldfelis/SqState.jl" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="gallery/wigner_surface_banner.png"><img src="gallery/wigner_surface_banner.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-state" class="anchor" aria-hidden="true" href="#state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>State</h2>
<h3><a id="user-content-fock-state" class="anchor" aria-hidden="true" href="#fock-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Fock state</h3>
<p>The following example shows how to construct Fock states.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; FockState(0)
(1.0 + 0.0im)|0⟩

julia&gt; FockState(1)
(1.0 + 0.0im)|1⟩

julia&gt; FockState(2)
(1.0 + 0.0im)|2⟩
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">FockState</span>(<span class="pl-c1">0</span>)
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">FockState</span>(<span class="pl-c1">1</span>)
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">1</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">FockState</span>(<span class="pl-c1">2</span>)
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">2</span>⟩</pre></div>
<p>The alias are also acceptable.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; VacuumState()
(1.0 + 0.0im)|0⟩

julia&gt; SinglePhotonState()
(1.0 + 0.0im)|1⟩

julia&gt; NumberState(2)
(1.0 + 0.0im)|2⟩
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">VacuumState</span>()
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">SinglePhotonState</span>()
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">1</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">NumberState</span>(<span class="pl-c1">2</span>)
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">2</span>⟩</pre></div>
<p>The Fock state can be also constructed by applying <code>create</code> operator to vacuum state, or by applying <code>annihilate</code> operator to <code>FockState(n)</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; state = VacuumState()
(1.0 + 0.0im)|0⟩

julia&gt; create(state)
(1.0 + 0.0im)|1⟩

julia&gt; create(create(state))
(1.4142135623730951 + 0.0im)|2⟩

julia&gt; create(create(create(state)))
(2.4494897427831783 + 0.0im)|3⟩
"><pre>julia<span class="pl-k">&gt;</span> state <span class="pl-k">=</span> <span class="pl-c1">VacuumState</span>()
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">create</span>(state)
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">1</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">create</span>(<span class="pl-c1">create</span>(state))
(<span class="pl-c1">1.4142135623730951</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">2</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">create</span>(<span class="pl-c1">create</span>(<span class="pl-c1">create</span>(state)))
(<span class="pl-c1">2.4494897427831783</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">3</span>⟩</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; state = FockState(5)
(1.0 + 0.0im)|5⟩

julia&gt; annihilate(state)
(2.23606797749979 + 0.0im)|4⟩

julia&gt; annihilate(annihilate(state))
(4.47213595499958 + 0.0im)|3⟩

julia&gt; annihilate(annihilate(annihilate(state)))
(7.745966692414834 + 0.0im)|2⟩
"><pre>julia<span class="pl-k">&gt;</span> state <span class="pl-k">=</span> <span class="pl-c1">FockState</span>(<span class="pl-c1">5</span>)
(<span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">5</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">annihilate</span>(state)
(<span class="pl-c1">2.23606797749979</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">4</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">annihilate</span>(<span class="pl-c1">annihilate</span>(state))
(<span class="pl-c1">4.47213595499958</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">3</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">annihilate</span>(<span class="pl-c1">annihilate</span>(<span class="pl-c1">annihilate</span>(state)))
(<span class="pl-c1">7.745966692414834</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">2</span>⟩</pre></div>
<p>Or simply use <code>createⁿ</code> operator and <code>annihilateⁿ</code> operator.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; createⁿ(VacuumState(), 3)
(2.4494897427831783 + 0.0im)|3⟩

julia&gt; annihilateⁿ(FockState(5), 3)
(7.745966692414834 + 0.0im)|2⟩
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">createⁿ</span>(<span class="pl-c1">VacuumState</span>(), <span class="pl-c1">3</span>)
(<span class="pl-c1">2.4494897427831783</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">3</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">annihilateⁿ</span>(<span class="pl-c1">FockState</span>(<span class="pl-c1">5</span>), <span class="pl-c1">3</span>)
(<span class="pl-c1">7.745966692414834</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)<span class="pl-k">|</span><span class="pl-c1">2</span>⟩</pre></div>
<p>State vector of Fock state</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; vec(VacuumState())
35-element Vector{Complex}:
 1.0 + 0.0im
   0 + 0im
   0 + 0im
   0 + 0im
     ⋮
   0 + 0im
   0 + 0im

julia&gt; vec(SinglePhotonState())
35-element Vector{Complex}:
   0 + 0im
 1.0 + 0.0im
   0 + 0im
   0 + 0im
     ⋮
   0 + 0im
   0 + 0im

   julia&gt; vec(FockState(3))
35-element Vector{Complex}:
   0 + 0im
   0 + 0im
   0 + 0im
 1.0 + 0.0im
     ⋮
   0 + 0im
   0 + 0im
   0 + 0im
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">vec</span>(<span class="pl-c1">VacuumState</span>())
<span class="pl-c1">35</span><span class="pl-k">-</span>element Vector{Complex}<span class="pl-k">:</span>
 <span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
     ⋮
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">vec</span>(<span class="pl-c1">SinglePhotonState</span>())
<span class="pl-c1">35</span><span class="pl-k">-</span>element Vector{Complex}<span class="pl-k">:</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
 <span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
     ⋮
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>

   julia<span class="pl-k">&gt;</span> <span class="pl-c1">vec</span>(<span class="pl-c1">FockState</span>(<span class="pl-c1">3</span>))
<span class="pl-c1">35</span><span class="pl-k">-</span>element Vector{Complex}<span class="pl-k">:</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
 <span class="pl-c1">1.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>
     ⋮
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span>
   <span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">0im</span></pre></div>
<p>Density matrix of Fock state</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ρ(VacuumState())
35×35 Matrix{Complex}:
 1.0+0.0im  0+0im  0+0im  0+0im  …  0+0im  0+0im  0+0im  0+0im  0+0im
   0+0im    0+0im  0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
   0+0im    0+0im  0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
   0+0im    0+0im  0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
    ⋮                            ⋱   ⋮
   0+0im    0+0im  0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
   0+0im    0+0im  0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im

julia&gt; ρ(SinglePhotonState())
35×35 Matrix{Complex}:
 0+0im    0+0im    0+0im  0+0im  …  0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im  1.0+0.0im  0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im    0+0im    0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im    0+0im    0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
  ⋮                              ⋱   ⋮
 0+0im    0+0im    0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im    0+0im    0+0im  0+0im     0+0im  0+0im  0+0im  0+0im  0+0im

julia&gt; ρ(FockState(3))
35×35 Matrix{Complex}:
 0+0im  0+0im  0+0im    0+0im    …  0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im  0+0im  0+0im    0+0im       0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im  0+0im  0+0im    0+0im       0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im  0+0im  0+0im  1.0+0.0im     0+0im  0+0im  0+0im  0+0im  0+0im
  ⋮                              ⋱   ⋮
 0+0im  0+0im  0+0im    0+0im       0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im  0+0im  0+0im    0+0im       0+0im  0+0im  0+0im  0+0im  0+0im
 0+0im  0+0im  0+0im    0+0im       0+0im  0+0im  0+0im  0+0im  0+0im
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ρ</span>(<span class="pl-c1">VacuumState</span>())
<span class="pl-c1">35</span><span class="pl-k">×</span><span class="pl-c1">35</span> Matrix{Complex}<span class="pl-k">:</span>
 <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  …  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
   <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
   <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
   <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
    ⋮                            ⋱   ⋮
   <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
   <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ρ</span>(<span class="pl-c1">SinglePhotonState</span>())
<span class="pl-c1">35</span><span class="pl-k">×</span><span class="pl-c1">35</span> Matrix{Complex}<span class="pl-k">:</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  …  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
  ⋮                              ⋱   ⋮
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ρ</span>(<span class="pl-c1">FockState</span>(<span class="pl-c1">3</span>))
<span class="pl-c1">35</span><span class="pl-k">×</span><span class="pl-c1">35</span> Matrix{Complex}<span class="pl-k">:</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    …  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>       <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>       <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
  ⋮                              ⋱   ⋮
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>       <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>       <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>
 <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>    <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>       <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span>  <span class="pl-c1">0</span><span class="pl-k">+</span><span class="pl-c1">0im</span></pre></div>
<h3><a id="user-content-coherent-state" class="anchor" aria-hidden="true" href="#coherent-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Coherent state</h3>
<p>A coherent state is often construced by a displacement operator(with specific argument) working on a vacuum state.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; D = displacement(Arg(2, π/4));

julia&gt; state_vector = D(VacuumState())
35-element Vector{ComplexF64}:
     0.1353352832366127 + 0.0im
    0.19139299302082188 - 0.19139299302082186im
                        ⋮
  2.789607177562496e-10 - 2.7896071775624755e-10im
 5.1078452787717455e-25 - 1.3531582408319167e-10im

julia&gt; ρ_coherent = state_vector * state_vector'
35×35 Matrix{ComplexF64}:
   0.0183156+0.0im            0.0259022+0.0259022im    …  6.91272e-26+1.8313e-11im
   0.0259022-0.0259022im      0.0732626+0.0im             2.58985e-11+2.58985e-11im
 1.15029e-17-0.0518044im      0.0732626-0.0732626im        5.1797e-11-1.8402e-25im
            ⋮                                          ⋱
 1.53354e-10+5.44824e-25im  2.16876e-10+2.16876e-10im     3.40466e-35+1.53332e-19im
 3.77532e-11-3.77532e-11im  1.06782e-10+3.87741e-25im     3.77478e-20+3.77478e-20im
 6.91272e-26-1.8313e-11im   2.58985e-11-2.58985e-11im     1.83104e-20+0.0im
"><pre>julia<span class="pl-k">&gt;</span> D <span class="pl-k">=</span> <span class="pl-c1">displacement</span>(<span class="pl-c1">Arg</span>(<span class="pl-c1">2</span>, π<span class="pl-k">/</span><span class="pl-c1">4</span>));

julia<span class="pl-k">&gt;</span> state_vector <span class="pl-k">=</span> <span class="pl-c1">D</span>(<span class="pl-c1">VacuumState</span>())
<span class="pl-c1">35</span><span class="pl-k">-</span>element Vector{ComplexF64}<span class="pl-k">:</span>
     <span class="pl-c1">0.1353352832366127</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>
    <span class="pl-c1">0.19139299302082188</span> <span class="pl-k">-</span> <span class="pl-c1">0.19139299302082186im</span>
                        ⋮
  <span class="pl-c1">2.789607177562496e-10</span> <span class="pl-k">-</span> <span class="pl-c1">2.7896071775624755e-10im</span>
 <span class="pl-c1">5.1078452787717455e-25</span> <span class="pl-k">-</span> <span class="pl-c1">1.3531582408319167e-10im</span>

julia<span class="pl-k">&gt;</span> ρ_coherent <span class="pl-k">=</span> state_vector <span class="pl-k">*</span> state_vector<span class="pl-k">'</span>
<span class="pl-c1">35</span><span class="pl-k">×</span><span class="pl-c1">35</span> Matrix{ComplexF64}<span class="pl-k">:</span>
   <span class="pl-c1">0.0183156</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>            <span class="pl-c1">0.0259022</span><span class="pl-k">+</span><span class="pl-c1">0.0259022im</span>    …  <span class="pl-c1">6.91272e-26</span><span class="pl-k">+</span><span class="pl-c1">1.8313e-11im</span>
   <span class="pl-c1">0.0259022</span><span class="pl-k">-</span><span class="pl-c1">0.0259022im</span>      <span class="pl-c1">0.0732626</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>             <span class="pl-c1">2.58985e-11</span><span class="pl-k">+</span><span class="pl-c1">2.58985e-11im</span>
 <span class="pl-c1">1.15029e-17</span><span class="pl-k">-</span><span class="pl-c1">0.0518044im</span>      <span class="pl-c1">0.0732626</span><span class="pl-k">-</span><span class="pl-c1">0.0732626im</span>        <span class="pl-c1">5.1797e-11</span><span class="pl-k">-</span><span class="pl-c1">1.8402e-25im</span>
            ⋮                                          ⋱
 <span class="pl-c1">1.53354e-10</span><span class="pl-k">+</span><span class="pl-c1">5.44824e-25im</span>  <span class="pl-c1">2.16876e-10</span><span class="pl-k">+</span><span class="pl-c1">2.16876e-10im</span>     <span class="pl-c1">3.40466e-35</span><span class="pl-k">+</span><span class="pl-c1">1.53332e-19im</span>
 <span class="pl-c1">3.77532e-11</span><span class="pl-k">-</span><span class="pl-c1">3.77532e-11im</span>  <span class="pl-c1">1.06782e-10</span><span class="pl-k">+</span><span class="pl-c1">3.87741e-25im</span>     <span class="pl-c1">3.77478e-20</span><span class="pl-k">+</span><span class="pl-c1">3.77478e-20im</span>
 <span class="pl-c1">6.91272e-26</span><span class="pl-k">-</span><span class="pl-c1">1.8313e-11im</span>   <span class="pl-c1">2.58985e-11</span><span class="pl-k">-</span><span class="pl-c1">2.58985e-11im</span>     <span class="pl-c1">1.83104e-20</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<p>Or one can simply construct a coherent state as following.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; state = CoherentState(Arg(2, π/4))
D(2.0 exp[-0.7853981633974483im])|0⟩

julia&gt; vec(state)
35-element Vector{ComplexF64}:
     0.1353352832366127 + 0.0im
    0.19139299302082188 - 0.19139299302082186im
                        ⋮
  1.1331437922182883e-9 + 4.0257354506617855e-24im
  2.789607177562496e-10 - 2.7896071775624755e-10im
 5.1078452787717455e-25 - 1.3531582408319167e-10im

julia&gt; ρ(state)
35×35 Matrix{ComplexF64}:
   0.0183156+0.0im            0.0259022+0.0259022im    …  6.91272e-26+1.8313e-11im
   0.0259022-0.0259022im      0.0732626+0.0im             2.58985e-11+2.58985e-11im
 1.15029e-17-0.0518044im      0.0732626-0.0732626im        5.1797e-11-1.8402e-25im
            ⋮                                          ⋱
 1.53354e-10+5.44824e-25im  2.16876e-10+2.16876e-10im     3.40466e-35+1.53332e-19im
 3.77532e-11-3.77532e-11im  1.06782e-10+3.87741e-25im     3.77478e-20+3.77478e-20im
 6.91272e-26-1.8313e-11im   2.58985e-11-2.58985e-11im     1.83104e-20+0.0im
"><pre>julia<span class="pl-k">&gt;</span> state <span class="pl-k">=</span> <span class="pl-c1">CoherentState</span>(<span class="pl-c1">Arg</span>(<span class="pl-c1">2</span>, π<span class="pl-k">/</span><span class="pl-c1">4</span>))
<span class="pl-c1">D</span>(<span class="pl-c1">2.0</span> exp[<span class="pl-k">-</span><span class="pl-c1">0.7853981633974483im</span>])<span class="pl-k">|</span><span class="pl-c1">0</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">vec</span>(state)
<span class="pl-c1">35</span><span class="pl-k">-</span>element Vector{ComplexF64}<span class="pl-k">:</span>
     <span class="pl-c1">0.1353352832366127</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>
    <span class="pl-c1">0.19139299302082188</span> <span class="pl-k">-</span> <span class="pl-c1">0.19139299302082186im</span>
                        ⋮
  <span class="pl-c1">1.1331437922182883e-9</span> <span class="pl-k">+</span> <span class="pl-c1">4.0257354506617855e-24im</span>
  <span class="pl-c1">2.789607177562496e-10</span> <span class="pl-k">-</span> <span class="pl-c1">2.7896071775624755e-10im</span>
 <span class="pl-c1">5.1078452787717455e-25</span> <span class="pl-k">-</span> <span class="pl-c1">1.3531582408319167e-10im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ρ</span>(state)
<span class="pl-c1">35</span><span class="pl-k">×</span><span class="pl-c1">35</span> Matrix{ComplexF64}<span class="pl-k">:</span>
   <span class="pl-c1">0.0183156</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>            <span class="pl-c1">0.0259022</span><span class="pl-k">+</span><span class="pl-c1">0.0259022im</span>    …  <span class="pl-c1">6.91272e-26</span><span class="pl-k">+</span><span class="pl-c1">1.8313e-11im</span>
   <span class="pl-c1">0.0259022</span><span class="pl-k">-</span><span class="pl-c1">0.0259022im</span>      <span class="pl-c1">0.0732626</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>             <span class="pl-c1">2.58985e-11</span><span class="pl-k">+</span><span class="pl-c1">2.58985e-11im</span>
 <span class="pl-c1">1.15029e-17</span><span class="pl-k">-</span><span class="pl-c1">0.0518044im</span>      <span class="pl-c1">0.0732626</span><span class="pl-k">-</span><span class="pl-c1">0.0732626im</span>        <span class="pl-c1">5.1797e-11</span><span class="pl-k">-</span><span class="pl-c1">1.8402e-25im</span>
            ⋮                                          ⋱
 <span class="pl-c1">1.53354e-10</span><span class="pl-k">+</span><span class="pl-c1">5.44824e-25im</span>  <span class="pl-c1">2.16876e-10</span><span class="pl-k">+</span><span class="pl-c1">2.16876e-10im</span>     <span class="pl-c1">3.40466e-35</span><span class="pl-k">+</span><span class="pl-c1">1.53332e-19im</span>
 <span class="pl-c1">3.77532e-11</span><span class="pl-k">-</span><span class="pl-c1">3.77532e-11im</span>  <span class="pl-c1">1.06782e-10</span><span class="pl-k">+</span><span class="pl-c1">3.87741e-25im</span>     <span class="pl-c1">3.77478e-20</span><span class="pl-k">+</span><span class="pl-c1">3.77478e-20im</span>
 <span class="pl-c1">6.91272e-26</span><span class="pl-k">-</span><span class="pl-c1">1.8313e-11im</span>   <span class="pl-c1">2.58985e-11</span><span class="pl-k">-</span><span class="pl-c1">2.58985e-11im</span>     <span class="pl-c1">1.83104e-20</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<h2><a id="user-content-plot-state" class="anchor" aria-hidden="true" href="#plot-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Plot state</h2>
<h3><a id="user-content-initial-wigner-function" class="anchor" aria-hidden="true" href="#initial-wigner-function"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Initial Wigner Function</h3>
<p>The Wigner function is calculated by Moyal function in Fock basis. And due to the fact that the Moyal function is a generalization of the Wigner function. We can therefore imply that</p>
<p><strong>W(x, p) = ∑ ρₘₙ Wₘₙ(x, p)</strong></p>
<p>We can initialize Wigner function as following. (It takes a while~~)</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; x_range = -10:0.1:10
-10.0:0.1:10.0

julia&gt; p_range = -10:0.1:10
-10.0:0.1:10.0

julia&gt; wf = WignerFunction(x_range, p_range);
"><pre>julia<span class="pl-k">&gt;</span> x_range <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">10</span>
<span class="pl-k">-</span><span class="pl-c1">10.0</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">10.0</span>

julia<span class="pl-k">&gt;</span> p_range <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">10</span>
<span class="pl-k">-</span><span class="pl-c1">10.0</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">10.0</span>

julia<span class="pl-k">&gt;</span> wf <span class="pl-k">=</span> <span class="pl-c1">WignerFunction</span>(x_range, p_range);</pre></div>
<h3><a id="user-content-rander-state" class="anchor" aria-hidden="true" href="#rander-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rander state</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; w = wf(ρ(SinglePhotonState()));
"><pre>julia<span class="pl-k">&gt;</span> w <span class="pl-k">=</span> <span class="pl-c1">wf</span>(<span class="pl-c1">ρ</span>(<span class="pl-c1">SinglePhotonState</span>()));</pre></div>
<h3><a id="user-content-plot-surface-of-the-state" class="anchor" aria-hidden="true" href="#plot-surface-of-the-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Plot <strong>Surface</strong> of the state</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; plot_wigner(wf, w, Surface, size=(640, 320))
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot_wigner</span>(wf, w, Surface, size<span class="pl-k">=</span>(<span class="pl-c1">640</span>, <span class="pl-c1">320</span>))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="gallery/wigner_surface_1.png"><img src="gallery/wigner_surface_1.png" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-plot-contour-of-the-state" class="anchor" aria-hidden="true" href="#plot-contour-of-the-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Plot <strong>Contour</strong> of the state</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; plot_wigner(wf, w, Contour, size=(640, 600))
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot_wigner</span>(wf, w, Contour, size<span class="pl-k">=</span>(<span class="pl-c1">640</span>, <span class="pl-c1">600</span>))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="gallery/wigner_contour_1.png"><img src="gallery/wigner_contour_1.png" alt="" style="max-width:100%;"></a></p>
</article></div>