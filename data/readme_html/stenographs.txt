<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text">
<p dir="auto"><a id="user-content-stenographs.jl-―-a-concise-language-to-write-meta-graphs"></a></p>
<p dir="auto"><a id="user-content-stenographs.jl-―-a-concise-language-to-write-meta-graphs-1"></a></p>
<h1 dir="auto"><a id="user-content-stenographsjl--a-concise-language-to-write-meta-graphs" class="anchor" aria-hidden="true" href="#stenographsjl--a-concise-language-to-write-meta-graphs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StenoGraphs.jl ― A concise language to write meta graphs</h1>
<p dir="auto"><a href="https://aaronpeikert.github.io/StenoGraphs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a> <a href="https://github.com/aaronpeikert/StenoGraphs.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/aaronpeikert/StenoGraphs.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/aaronpeikert/StenoGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9be2446ba335ec04901cb6e5956cde772ccb5c2837c156d8db4367b03857f1bf/68747470733a2f2f636f6465636f762e696f2f67682f6161726f6e7065696b6572742f5374656e6f4772617068732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/aaronpeikert/StenoGraphs.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<blockquote>
<p dir="auto"><strong>Stenography</strong>: a quick way of writing using special signs or abbreviations</p>
</blockquote>
<p dir="auto"><code>StenoGraphs.jl</code> lets you quickly write meta graphs. As with shorthand, it is optimized for writing quickly (by humans) but is less quickly read (by computers).</p>
<p dir="auto">To install <code>StenoGraphs.jl</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;StenoGraphs&quot;)"><pre><span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>StenoGraphs<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Your first <code>@StenoGraph</code> using <code>StenoGraphs</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using StenoGraphs
@StenoGraph a → b"><pre><span class="pl-k">using</span> StenoGraphs
<span class="pl-c1">@StenoGraph</span> a → b</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → b
"><pre class="notranslate"><code>a → b

</code></pre></div>
<p dir="auto">By the way, typing arrows can be done quickly on Linux by using <code>Alt Gr + I</code> resulting in <code>←</code> and <code>Alt GR + I</code> resulting in <code>→</code> . All other platforms must use <code>\leftarrow</code> + <code>Tab</code> or <code>\rightarrow</code> + <code>Tab</code>.</p>
<p dir="auto"><a id="user-content-multiple-nodes"></a></p>
<p dir="auto"><a id="user-content-multiple-nodes-1"></a></p>
<h2 dir="auto"><a id="user-content-multiple-nodes" class="anchor" aria-hidden="true" href="#multiple-nodes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multiple Nodes</h2>
<p dir="auto">Multiple nodes on one side lead to multiple edges:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@StenoGraph [a b] → c"><pre><span class="pl-c1">@StenoGraph</span> [a b] → c</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → c
b → c
"><pre class="notranslate"><code>a → c
b → c

</code></pre></div>
<p dir="auto">There are two desirable outcomes for multible edges on both sides, either element-wise edges or cross product. The single line arrow (<code>→</code>) means element-wise and double line arrow (<code>⇒</code>) means crossproduct (don't tell anyone but for a single node on one side <code>→</code> is converted to <code>⇒</code> for convinience).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@StenoGraph [a b] → [c d]"><pre><span class="pl-c1">@StenoGraph</span> [a b] → [c d]</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → c
b → d
"><pre class="notranslate"><code>a → c
b → d

</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@StenoGraph [a b] ⇒ [c d]"><pre><span class="pl-c1">@StenoGraph</span> [a b] ⇒ [c d]</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → c
a → d
b → c
b → d
"><pre class="notranslate"><code>a → c
a → d
b → c
b → d

</code></pre></div>
<p dir="auto"><a id="user-content-modification"></a></p>
<p dir="auto"><a id="user-content-modification-1"></a></p>
<h2 dir="auto"><a id="user-content-modification" class="anchor" aria-hidden="true" href="#modification"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Modification</h2>
<p dir="auto">Modification is done by overloading <code>*</code> for types of Modifier.</p>
<p dir="auto">Let's define a <code>Modifier</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct Weight &lt;: EdgeModifier
    w::Number
end"><pre><span class="pl-k">struct</span> Weight <span class="pl-k">&lt;:</span> <span class="pl-c1">EdgeModifier</span>
    w<span class="pl-k">::</span><span class="pl-c1">Number</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">An  <code>EdgeModifier</code> can be directly applied to edges:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@StenoGraph (a → b) * Weight(1)"><pre><span class="pl-c1">@StenoGraph</span> (a → b) <span class="pl-k">*</span> <span class="pl-c1">Weight</span>(<span class="pl-c1">1</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → b * Main.Weight(1)
"><pre class="notranslate"><code>a → b * Main.Weight(1)

</code></pre></div>
<p dir="auto">Multiplying a <code>Node</code> with an <code>EdgeModifier</code> leads to a <code>ModifyingNode</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content=":b * Weight(1)"><pre><span class="pl-c1">:b</span> <span class="pl-k">*</span> <span class="pl-c1">Weight</span>(<span class="pl-c1">1</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="b * Main.Weight(1)"><pre class="notranslate"><code>b * Main.Weight(1)
</code></pre></div>
<p dir="auto">A <code>ModifyingNode</code> will modify its edges:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@StenoGraph a → b * Weight(1)"><pre><span class="pl-c1">@StenoGraph</span> a → b <span class="pl-k">*</span> <span class="pl-c1">Weight</span>(<span class="pl-c1">1</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → b * Main.Weight(1)
"><pre class="notranslate"><code>a → b * Main.Weight(1)

</code></pre></div>
<p dir="auto">To modify Nodes directly with a <code>NodeModifier</code> to create a <code>ModifiedNode</code> (instead of <code>ModifyingNode</code>) we overload <code>^</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct NodeLabel &lt;: NodeModifier
    l
end

@StenoGraph a → b^NodeLabel(&quot;Dickes B&quot;)"><pre><span class="pl-k">struct</span> NodeLabel <span class="pl-k">&lt;:</span> <span class="pl-c1">NodeModifier</span>
    l
<span class="pl-k">end</span>

<span class="pl-c1">@StenoGraph</span> a → b<span class="pl-k">^</span><span class="pl-c1">NodeLabel</span>(<span class="pl-s"><span class="pl-pds">"</span>Dickes B<span class="pl-pds">"</span></span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="a → b^Main.NodeLabel(&quot;Dickes B&quot;)
"><pre class="notranslate"><code>a → b^Main.NodeLabel("Dickes B")

</code></pre></div>
<p dir="auto"><a id="user-content-related-software"></a></p>
<p dir="auto"><a id="user-content-related-software-1"></a></p>
<h2 dir="auto"><a id="user-content-related-software" class="anchor" aria-hidden="true" href="#related-software"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Software</h2>
<p dir="auto">The R programming language has formulas of the form <code>a ~ b</code> to specify regressions. This inspired Yves Rosseel to create a very concise, yet expressive syntax for Structural Equation Models for <a href="https://lavaan.ugent.be/tutorial/syntax1.html" rel="nofollow"><code>lavaan</code></a>. <code>Stenographs.jl</code> tries to maintain the best features of this syntax while creating Julia Objects that represent a graph (i.e., similar to <a href="https://github.com/JuliaGraphs/MetaGraphs.jl">MetaGraphs</a>).</p>
</article></div>