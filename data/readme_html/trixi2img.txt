<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-trixi2imgjl" class="anchor" aria-hidden="true" href="#trixi2imgjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Trixi2Img.jl</h1>
<p><a href="https://trixi-framework.github.io/Trixi.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/trixi-framework/Trixi2Img.jl/actions?query=workflow%3ACI"><img src="https://github.com/trixi-framework/Trixi2Img.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/trixi-framework/Trixi2Img.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/01a043e9d8c5d58e1ca36877234ac9e9772b1bfe5530f4f3a987e6d0ea080bbf/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74726978692d6672616d65776f726b2f547269786932496d672e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/trixi-framework/Trixi2Img.jl/badge.svg?branch=main" style="max-width:100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/2da4b47047416995ad40532496f4b028e9aeca4a9ad036ed17bee5d2fb753b32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d737563636573732e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-success.svg" style="max-width:100%;"></a>
<a href="https://github.com/trixi-framework/Trixi2Img.jl"><img src="https://camo.githubusercontent.com/20c8040a889b5cd262a82ebd658fd335330333bb0b2cfce0749798fa9b6fd267/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f74726978692d6672616d65776f726b2f547269786932496d672e6a6c2f76302e322e352e7376673f7374796c653d736f6369616c266c6f676f3d676974687562" alt="GitHub commits since tagged version" data-canonical-src="https://img.shields.io/github/commits-since/trixi-framework/Trixi2Img.jl/v0.2.5.svg?style=social&amp;logo=github" style="max-width:100%;"></a></p>
<p><strong>Trixi2Img.jl</strong> can create PDF/PNG files from output files created by
<a href="https://github.com/trixi-framework/Trixi.jl">Trixi.jl</a> (solution or restart
files). Trixi2Img is part of the <a href="https://github.com/trixi-framework">Trixi framework</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>If you have not yet installed Julia, please <a href="https://julialang.org/downloads/platform/" rel="nofollow">follow the instructions for your
operating system</a>. Trixi2Img works
with Julia v1.5.</p>
<p>Trixi2Img is a registered Julia package. Hence, you can install it by executing
the following commands in the Julia REPL:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;Trixi2Img&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Trixi2Img<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>In the Julia REPL, first load the package Trixi2Img</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Trixi2Img
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Trixi2Img</pre></div>
<p>To process an HDF5 file generated by a 2D simulation with Trixi.jl, execute</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; trixi2img(joinpath(&quot;out&quot;, &quot;solution_000040.h5&quot;), output_directory=&quot;out&quot;, grid_lines=true)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">trixi2img</span>(<span class="pl-c1">joinpath</span>(<span class="pl-s"><span class="pl-pds">"</span>out<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>solution_000040.h5<span class="pl-pds">"</span></span>), output_directory<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>out<span class="pl-pds">"</span></span>, grid_lines<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p>This will create a file <code>solution_000040_scalar.png</code> in the <code>out/</code> subdirectory
that can be opened with any image viewer:</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="docs/src/assets/solution_000040_scalar_resized.png"><img width="300px" src="docs/src/assets/solution_000040_scalar_resized.png" style="max-width:100%;"></a>
</p>
<p>To visualize 3D data generated by Trixi.jl, a 2D slice must be extracted.
A slice can only lie in a plane orthogonal to one of the coordinate axes.
The slice plane is defined by the axis to which it is orthogonal and an axis intercept.</p>
<p>For example, to create a 2D slice in the xy-plane at the axis intercept <code>z = 0.5</code> from 3D data, execute</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; trixi2img(joinpath(&quot;out&quot;, &quot;solution_000000.h5&quot;), output_directory=&quot;out&quot;, grid_lines=true, slice_axis=:z, slice_axis_intercept=0.5)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">trixi2img</span>(<span class="pl-c1">joinpath</span>(<span class="pl-s"><span class="pl-pds">"</span>out<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>solution_000000.h5<span class="pl-pds">"</span></span>), output_directory<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>out<span class="pl-pds">"</span></span>, grid_lines<span class="pl-k">=</span><span class="pl-c1">true</span>, slice_axis<span class="pl-k">=</span><span class="pl-c1">:z</span>, slice_axis_intercept<span class="pl-k">=</span><span class="pl-c1">0.5</span>)</pre></div>
<p>For further information on how to use Trixi with Trixi2Img, please refer to the
<a href="https://trixi-framework.github.io/Trixi.jl/stable/" rel="nofollow">documentation of Trixi</a>.</p>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<p>Trixi2Img is maintained by the
<a href="https://github.com/trixi-framework/Trixi.jl/blob/main/AUTHORS.md">Trixi authors</a>.
Its principal developers are
<a href="https://www.mi.uni-koeln.de/NumSim/schlottke-lakemper" rel="nofollow">Michael Schlottke-Lakemper</a>
(University of Cologne, Germany) and
<a href="https://ranocha.de" rel="nofollow">Hendrik Ranocha</a> (KAUST, Saudi Arabia).</p>
<h2><a id="user-content-license-and-contributing" class="anchor" aria-hidden="true" href="#license-and-contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License and contributing</h2>
<p>Trixi2Img is licensed under the MIT license (see <a href="LICENSE.md">LICENSE.md</a>).</p>
</article></div>