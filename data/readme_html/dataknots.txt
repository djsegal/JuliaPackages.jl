<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dataknotsjl" class="anchor" aria-hidden="true" href="#dataknotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DataKnots.jl</h1>
<p><em>DataKnots is a Julia library for querying data with
an extensible, practical and coherent algebra of query
combinators.</em></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Process</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://rbt-lang.github.io/DataKnots.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/2e8800b94760f1109db10b41f13c9894b1f8dac9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d677265656e2e737667" alt="Stable Documentation" data-canonical-src="https://img.shields.io/badge/docs-stable-green.svg" style="max-width:100%;"></a> <a href="https://rbt-lang.github.io/DataKnots.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Development Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/rbt-lang/DataKnots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9974bc4561637826539afe3895efc58fe8d7476d/68747470733a2f2f7472617669732d63692e6f72672f7262742d6c616e672f446174614b6e6f74732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Linux/OSX Build Status" data-canonical-src="https://travis-ci.org/rbt-lang/DataKnots.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/rbt-lang/dataknots-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/7c08f25f64299547d449c248d74dd9b0eb7ebaea/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7262742d6c616e672f446174614b6e6f74732e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/rbt-lang/DataKnots.jl?branch=master&amp;svg=true" style="max-width:100%;"></a> <a href="https://codecov.io/gh/rbt-lang/DataKnots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1ecfedeba817fdd1882f67689fc1e5929d2c79d0/68747470733a2f2f636f6465636f762e696f2f67682f7262742d6c616e672f446174614b6e6f74732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage Status" data-canonical-src="https://codecov.io/gh/rbt-lang/DataKnots.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://gitter.im/rbt-lang/rbt-proto/" rel="nofollow"><img src="https://camo.githubusercontent.com/e5c511b92e5dc8a6f4b5757e6a83067c15f5fcbf/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f7262742d6c616e672f7262742d70726f746f2e7376673f636f6c6f723d253233373533613838" alt="Chat on Gitter" data-canonical-src="https://img.shields.io/gitter/room/rbt-lang/rbt-proto.svg?color=%23753a88" style="max-width:100%;"></a> <a href="https://github.com/rbt-lang/DataKnots.jl/issues"><img src="https://camo.githubusercontent.com/32b8255524c2a52fddaa4cdb824d40c62c311375/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7262742d6c616e672f446174614b6e6f74732e6a6c2e737667" alt="Open Issues" data-canonical-src="https://img.shields.io/github/issues/rbt-lang/DataKnots.jl.svg" style="max-width:100%;"></a> <a href="https://raw.githubusercontent.com/rbt-lang/DataKnots.jl/master/LICENSE.md" rel="nofollow"><img src="https://camo.githubusercontent.com/e7302c620b3589a361fc5503732f3505347205d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>DataKnots is designed to let data analysts and other
accidental programmers query and analyze complex
structured data.</p>
<h2><a id="user-content-showcase" class="anchor" aria-hidden="true" href="#showcase"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Showcase</h2>
<p>Let's take some Chicago public data and convert it
into a <code>DataKnot</code>.</p>
<pre><code>using DataKnots, CSV

employee_csv_file = """
    name,department,position,salary
    "JEFFERY A","POLICE","SERGEANT",101442
    "NANCY A","POLICE","POLICE OFFICER",80016
    "JAMES A","FIRE","FIRE ENGINEER-EMT",103350
    "DANIEL A","FIRE","FIRE FIGHTER-EMT",95484
    "BRENDA B","OEMC","TRAFFIC CONTROL AIDE",64392
    """ |&gt; IOBuffer |&gt; CSV.File

chicago = DataKnot(:employee =&gt; employee_csv_file)
</code></pre>
<p>We could then query this data to return employees with
salaries greater than their department's average.</p>
<pre><code>using Statistics: mean

@query chicago begin
    employee
    group(department)
    keep(avg_salary =&gt; mean(employee.salary))
    employee
    filter(salary &gt; avg_salary)
end
#=&gt;
  │ employee                                         │
  │ name       department  position           salary │
──┼──────────────────────────────────────────────────┼
1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
2 │ JEFFERY A  POLICE      SERGEANT           101442 │
=#
</code></pre>
<p>In this example, nouns, such as <code>employee</code>, <code>department</code> and
<code>salary</code>, are <em>query primitives</em>. The verbs, such as <code>group</code>,
<code>keep</code>, <code>mean</code> and <code>filter</code> are <em>query combinators</em>. Query
expressions, such as <code>group(department)</code>, are built from
existing queries by applying these combinators.</p>
<p>Queries could also be constructed with pure Julia code,
without using macros. The query above could be
equivalently written:</p>
<pre><code>using Statistics: mean

chicago[It.employee &gt;&gt;
        Group(It.department) &gt;&gt;
        Keep(:avg_salary =&gt; mean.(It.employee.salary)) &gt;&gt;
        It.employee &gt;&gt;
        Filter(It.salary .&gt; It.avg_salary)]
#=&gt;
  │ employee                                         │
  │ name       department  position           salary │
──┼──────────────────────────────────────────────────┼
1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
2 │ JEFFERY A  POLICE      SERGEANT           101442 │
=#
</code></pre>
<h2><a id="user-content-objectives" class="anchor" aria-hidden="true" href="#objectives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Objectives</h2>
<p>DataKnots implements an algebraic query interface of
<a href="https://arxiv.org/abs/1702.08409" rel="nofollow">Query Combinators</a>. This algebra’s elements, or queries,
represent relationships among class entities and data
types. This algebra’s operations, or combinators, are
applied to construct query expressions.</p>
<p>We seek to prove that this query algebra has
significant advantages over the state of the art:</p>
<ul>
<li>
<p>DataKnots is a practical alternative to SQL with
a declarative syntax; this makes it suitable for
use by domain experts.</p>
</li>
<li>
<p>DataKnots' data model handles nested and recursive
structures (unlike DataFrames or SQL); this makes
it suitable for working with CSV, JSON, XML, and
SQL databases.</p>
</li>
<li>
<p>DataKnots has a formal semantic model based upon
monadic composition; this makes it easy to reason
about the structure and interpretation of queries.</p>
</li>
<li>
<p>DataKnots is a combinator algebra (like XPath but
unlike LINQ or SQL); this makes it easier to assemble
queries dynamically.</p>
</li>
<li>
<p>DataKnots is fully extensible with Julia; this makes
it possible to specialize it into various domain
specific query languages.</p>
</li>
</ul>
<h2><a id="user-content-support" class="anchor" aria-hidden="true" href="#support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Support</h2>
<p>At this time, while we welcome feedback and contributions,
DataKnots is not yet usable for general audiences.</p>
<p>Our development chat is currently hosted on Gitter:
<a href="https://gitter.im/rbt-lang/rbt-proto" rel="nofollow">https://gitter.im/rbt-lang/rbt-proto</a></p>
<p>Current documentation could be found at:
<a href="https://rbt-lang.github.io/DataKnots.jl/stable/" rel="nofollow">https://rbt-lang.github.io/DataKnots.jl/stable/</a></p>
</article></div>