<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cthulhujl" class="anchor" aria-hidden="true" href="#cthulhujl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cthulhu.jl</h1>
<p><em>The slow descent into madness</em></p>
<p>Cthulhu can help you debug type inference issues by recursively showing the
<code>code_typed</code> output until you find the exact point where inference gave up,
messed up, or did something unexpected. Using the Cthulhu interface you can
debug type inference problems faster.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">descend</span>(f, tt)
<span class="pl-c1">@descend</span> <span class="pl-c1">f</span>()</pre></div>
<p>Given a function and a tuple-type, interactively explore the output of
<code>code_typed</code> by descending into <code>invoke</code> and <code>call</code> statements. (<code>invoke</code>
statements correspond to static dispatch, whereas <code>call</code> statements correspond
to dynamic dispatch.) Press enter to select an <code>invoke</code> or <code>call</code> to descend
into, select <g-emoji class="g-emoji" alias="leftwards_arrow_with_hook" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/21a9.png">â†©</g-emoji>  to ascend, and press q or control-c to quit.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">foo</span>()
    T <span class="pl-k">=</span> <span class="pl-c1">rand</span>() <span class="pl-k">&gt;</span> <span class="pl-c1">0.5</span> ? Int64 : Float64
    <span class="pl-c1">sum</span>(<span class="pl-c1">rand</span>(T, <span class="pl-c1">100</span>))
<span class="pl-k">end</span>

<span class="pl-c1">descend</span>(foo, Tuple{})
<span class="pl-c1">@descend</span> <span class="pl-c1">foo</span>()</pre></div>
<h2><a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Methods</h2>
<ul>
<li><code>@descend_code_typed</code></li>
<li><code>descend_code_typed</code></li>
<li><code>@descend_code_warntype</code></li>
<li><code>descend_code_warntype</code></li>
<li><code>@descend</code>: Shortcut for <code>@descend_code_typed</code></li>
<li><code>descend</code>: Shortcut for <code>descend_code_typed</code></li>
</ul>
</article></div>