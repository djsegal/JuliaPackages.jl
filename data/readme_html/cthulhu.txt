<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-cthulhujl" class="anchor" aria-hidden="true" href="#cthulhujl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Cthulhu.jl</h1>
<p><em>The slow descent into madness</em></p>
<p>Cthulhu can help you debug type inference issues by recursively showing the
<code>code_typed</code> output until you find the exact point where inference gave up,
messed up, or did something unexpected. Using the Cthulhu interface you can
debug type inference problems faster.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">descend</span>(f, tt)
<span class="pl-c1">@descend</span> <span class="pl-c1">f</span>()</pre></div>
<p>Given a function and a tuple-type, interactively explore the output of
<code>code_typed</code> by descending into <code>invoke</code> and <code>call</code> statements. (<code>invoke</code>
statements correspond to static dispatch, whereas <code>call</code> statements correspond
to dynamic dispatch.) Press enter to select an <code>invoke</code> or <code>call</code> to descend
into, select â†©  to ascend, and press q or control-c to quit.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">foo</span>()
    T <span class="pl-k">=</span> <span class="pl-c1">rand</span>() <span class="pl-k">&gt;</span> <span class="pl-c1">0.5</span> ? Int64 : Float64
    <span class="pl-c1">sum</span>(<span class="pl-c1">rand</span>(T, <span class="pl-c1">100</span>))
<span class="pl-k">end</span>

<span class="pl-c1">descend</span>(foo, Tuple{})
<span class="pl-c1">@descend</span> <span class="pl-c1">foo</span>()</pre></div>
<h2><a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Methods</h2>
<ul>
<li><code>@descend_code_typed</code></li>
<li><code>descend_code_typed</code></li>
<li><code>@descend_code_warntype</code></li>
<li><code>descend_code_warntype</code></li>
<li><code>@descend</code>: Shortcut for <code>@descend_code_typed</code></li>
<li><code>descend</code>: Shortcut for <code>descend_code_typed</code></li>
</ul>
</article></div>