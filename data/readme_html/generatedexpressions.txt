<div id="readme" class="md" data-path="readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-generatedexpressionsjl--expression-comprehensions-in-julia" class="anchor" aria-hidden="true" href="#generatedexpressionsjl--expression-comprehensions-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeneratedExpressions.jl: <br> Expression Comprehensions in Julia</h1>
<p align="center" dir="auto">
  <a href="#about">About</a> |
  <a href="#context-reactivedynamics">Context</a> |
  <a href="#features">Features</a> |
  <a href="#showcase">Showcase</a> |
  <a href="https://merck.github.io/GeneratedExpressions.jl/" rel="nofollow">Documentation</a>
</p>
<h2 dir="auto"><a id="user-content-about" class="anchor" aria-hidden="true" href="#about"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About</h2>
<p dir="auto">The package implements a metalanguage to support code-less expression comprehensions in Julia.</p>
<p dir="auto">In particular, we provide a convenient proxy (inspired by mustache.js's notation) which takes an expression (string, alternatively), interpolates the $s in the expressions from ranges provided at the input, and then amalgamates the generated expressions into a block, a tuple, etc.</p>
<p dir="auto">It is possible to retrieve the generated expression (function <code>generate</code>) or to evaluate the expression in the caller's scope on the fly (macro <code>@generate</code>, <code>@fileval</code>).</p>
<h2 dir="auto"><a id="user-content-context-dynamics-of-value-evolution-dyve" class="anchor" aria-hidden="true" href="#context-dynamics-of-value-evolution-dyve"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Context: Dynamics of Value Evolution (DyVE)</h2>
<p dir="auto">The package is an integral part of the <strong>Dynamics of Value Evolution (DyVE)</strong> computational framework for learning, designing, integrating, simulating, and optimizing R&amp;D process models, to better inform strategic decisions in science and business.</p>
<p dir="auto">As the framework evolves, multiple functionalities have matured enough to become standalone packages.</p>
<p dir="auto">This includes <strong><a href="https://github.com/Merck/ReactiveDynamics.jl">ReactiveDynamics.jl</a></strong>, a package which implements a category of reaction (transportation) network-type dynamical systems. The central concept of the package is of a stateful, parametric transition; simultaneous action of the transitions then evolves the dynamical system. Moreover, a network's dynamics can be specified using a compact modeling metalanguage.</p>
<p dir="auto">Another package is <strong><a href="https://github.com/Merck/AlgebraicAgents.jl">AlgebraicAgents.jl</a></strong>, a lightweight package to enable hierarchical, heterogeneous dynamical systems co-integration. It implements a highly scalable, fully customizable interface featuring sums and compositions of dynamical systems. In present context, we note it can be used to co-integrate a reaction network problem with, e.g., a stochastic ordinary differential problem!</p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<p dir="auto">At the input is a general expression with (nested) expression comprehension atoms of the form <code>{&lt;expression body&gt;, &lt;substitution ranges&gt;, &lt;local generator opts&gt;}</code>. The substitution ranges yield an iterator over substitution choices; by default, this is a product over the ranges and the ranges are evaluated in a sequential order from left to right. Use <code>zip=true</code> within <code>&lt;local generator opts&gt;</code> to zip the iterators instead (Julia's standard zipping behavior).</p>
<p dir="auto">For each substitution choice, expressions of the from <code>$sym</code> within <code>&lt;expression body&gt;</code> are substituted with the respective choices (otherwise left unchanged). The resulting vector of expressions is either wrapped into 1) a block expression or 2) a call expression. In the latter case, the function's name is specified in <code>dlm=&lt;call name&gt;</code>; additionally, <code>dlm=:(=)</code> is supported as well.</p>
<p dir="auto">Note that in the above process, the substitution happens at the expression level. It is likewise possible to input a string, perform string substitutions according to rules described above, and parse the resulting string into an expression. Because of the internal parsing, an expression body containing a comma has to be escaped by another pair of angle brackets (<code>&lt;</code> and <code>&gt;</code>).</p>
<p dir="auto">In addition, both function and macro forms accept top-level generation opts: you may 1) provide singular substitution ranges with global effect (interpolates corresponding <code>$sym</code>s within the expression at the input) and 2) evaluate the macros before returning the expression (the usecase is bound to the function form).</p>
<h2 dir="auto"><a id="user-content-showcase" class="anchor" aria-hidden="true" href="#showcase"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Showcase</h2>
<h3 dir="auto"><a id="user-content-function-form-retrieve-generated-expression" class="anchor" aria-hidden="true" href="#function-form-retrieve-generated-expression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Function form: retrieve generated expression</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; generate(&quot;{\$a+\$b, a=1:2, b=1:2}&quot;) |&gt; println
1+1
1+2
2+1
2+2"><pre lang="julia-repl" class="notranslate"><code>julia&gt; generate("{\$a+\$b, a=1:2, b=1:2}") |&gt; println
1+1
1+2
2+1
2+2
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; generate(&quot;{\$a+\$b, a=1:2, b=1:2, zip=true}&quot;) |&gt; println
1+1
2+2"><pre lang="julia-repl" class="notranslate"><code>julia&gt; generate("{\$a+\$b, a=1:2, b=1:2, zip=true}") |&gt; println
1+1
2+2
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; generate(&quot;{&lt;\$a+{\$b, b=1:\$a, dlm=+}&gt;, a=1:2}&quot;) |&gt; println
1+1
2+1+2"><pre lang="julia-repl" class="notranslate"><code>julia&gt; generate("{&lt;\$a+{\$b, b=1:\$a, dlm=+}&gt;, a=1:2}") |&gt; println
1+1
2+1+2
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; generate(&quot;{&lt;\$a+{&lt;\$b+{\$c, c=1:(\$a+\$b), dlm=+}&gt;, b=1:\$a, dlm=+}&gt;, a=1:2}&quot;) |&gt; println
1+1+1+2
2+1+1+2+3+2+1+2+3+4"><pre lang="julia-repl" class="notranslate"><code>julia&gt; generate("{&lt;\$a+{&lt;\$b+{\$c, c=1:(\$a+\$b), dlm=+}&gt;, b=1:\$a, dlm=+}&gt;, a=1:2}") |&gt; println
1+1+1+2
2+1+1+2+3+2+1+2+3+4
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; generate(&quot;&quot;&quot;{\$a, a=[&quot;str_\$c&quot; for c in 1:2], dlm=&quot; &quot;}&quot;&quot;&quot;) |&gt; println
str_1 str_2"><pre lang="julia-repl" class="notranslate"><code>julia&gt; generate("""{\$a, a=["str_\$c" for c in 1:2], dlm=" "}""") |&gt; println
str_1 str_2
</code></pre></div>
<h3 dir="auto"><a id="user-content-macro-form-evaluate-generated-expression" class="anchor" aria-hidden="true" href="#macro-form-evaluate-generated-expression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Macro form: evaluate generated expression</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; @generate {$a+$b, a=1:3, b=1:2, zip=true, dlm=+}
6"><pre lang="julia-repl" class="notranslate"><code>julia&gt; @generate {$a+$b, a=1:3, b=1:2, zip=true, dlm=+}
6
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; @generate {$a+$b, a=1:3, b=1:$a, dlm=+}
24"><pre lang="julia-repl" class="notranslate"><code>julia&gt; @generate {$a+$b, a=1:3, b=1:$a, dlm=+}
24
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; N=2; @generate &quot;{&lt;\$a+\$b+\$r&gt;, a=1:3, b=1:\$a, r=N, dlm=+}&quot;
36"><pre lang="julia-repl" class="notranslate"><code>julia&gt; N=2; @generate "{&lt;\$a+\$b+\$r&gt;, a=1:3, b=1:\$a, r=N, dlm=+}"
36
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a=b=c=1; @generate(&quot;{&lt;\$[a,b,c]&gt;, dlm=+}&quot;)
3"><pre lang="julia-repl" class="notranslate"><code>julia&gt; a=b=c=1; @generate("{&lt;\$[a,b,c]&gt;, dlm=+}")
3
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; write(&quot;file_expr.jl&quot;, &quot;&quot;&quot;{println(\$your_name, &quot;, that is &quot;, \$name), name=[&quot;bot_\$i&quot; for i in 1:2]}&quot;&quot;&quot;)
72

julia&gt; @fileval file_expr.jl your_name=&quot;myself&quot;
myself, that is bot_1
myself, that is bot_2"><pre lang="julia-repl" class="notranslate"><code>julia&gt; write("file_expr.jl", """{println(\$your_name, ", that is ", \$name), name=["bot_\$i" for i in 1:2]}""")
72

julia&gt; @fileval file_expr.jl your_name="myself"
myself, that is bot_1
myself, that is bot_2
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; write(&quot;file_string.jl&quot;, &quot;&quot;&quot;{&lt;println(&quot;\$your_name, that is \$name&quot;)&gt;, name=[&quot;bot_\$i&quot; for i in 1:2]}&quot;&quot;&quot;)
70

julia&gt; @fileval file_string.jl mode=string your_name=&quot;myself&quot;
myself, that is bot_1
myself, that is bot_2"><pre lang="julia-repl" class="notranslate"><code>julia&gt; write("file_string.jl", """{&lt;println("\$your_name, that is \$name")&gt;, name=["bot_\$i" for i in 1:2]}""")
70

julia&gt; @fileval file_string.jl mode=string your_name="myself"
myself, that is bot_1
myself, that is bot_2
</code></pre></div>
</article></div>