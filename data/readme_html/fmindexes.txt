<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-fmindexes" class="anchor" aria-hidden="true" href="#fmindexes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FMIndexes</h1>
<p><a href="https://travis-ci.org/BioJulia/FMIndexes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1d738f2ec9ab226c4ca6f565acb71c0e5e4bed21/68747470733a2f2f7472617669732d63692e6f72672f42696f4a756c69612f464d496e64657865732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/BioJulia/FMIndexes.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://en.wikipedia.org/wiki/FM-index" rel="nofollow">FM-index</a> is a static, compact, and fast index for full-text search.</p>
<p>The index type, <code>FMIndex{w,T}</code>, is able to index an arbitrary byte sequence.
<code>w</code> is the number of bits required to encode the alphabet of the sequence and <code>T</code> is the type of positions of the sequence.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FMIndexes

julia<span class="pl-k">&gt;</span> fmindex <span class="pl-k">=</span> <span class="pl-c1">FMIndex</span>(<span class="pl-s"><span class="pl-pds">"</span>abracadabra<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">count</span>(<span class="pl-s"><span class="pl-pds">"</span>abra<span class="pl-pds">"</span></span>, fmindex)  <span class="pl-c"><span class="pl-c">#</span> count the number of occurrences of a query</span>
<span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> loc <span class="pl-k">in</span> <span class="pl-c1">locate</span>(<span class="pl-s"><span class="pl-pds">"</span>ra<span class="pl-pds">"</span></span>, fmindex)  <span class="pl-c"><span class="pl-c">#</span> return the iterator of positions of a query</span>
           <span class="pl-c1">println</span>(loc)
       <span class="pl-k">end</span>
<span class="pl-c1">10</span>
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">locateall</span>(<span class="pl-s"><span class="pl-pds">"</span>ra<span class="pl-pds">"</span></span>, fmindex)  <span class="pl-c"><span class="pl-c">#</span> return the all positions of a query</span>
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">10</span>
  <span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">String</span>(<span class="pl-c1">restore</span>(fmindex))  <span class="pl-c"><span class="pl-c">#</span> restore a byte sequence from the index</span>
<span class="pl-s"><span class="pl-pds">"</span>abracadabra<span class="pl-pds">"</span></span>
</pre></div>
<h2><a id="user-content-tips-for-efficient-indexing" class="anchor" aria-hidden="true" href="#tips-for-efficient-indexing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tips for efficient indexing</h2>
<p>The following is a general constructor:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">FMIndex</span>(seq, σ<span class="pl-k">=</span><span class="pl-c1">256</span>; r<span class="pl-k">=</span><span class="pl-c1">32</span>, program<span class="pl-k">=</span><span class="pl-c1">:SuffixArrays</span>, mmap<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>, opts<span class="pl-k">...</span>)</pre></div>
<p><code>seq</code> is expected be a byte sequence; <code>seq[i]</code> should return a value of <code>UInt8</code>.
If the alphabet of a sequence can be encoded less that 8 bits, <a href="https://github.com/bicycle1885/IntArrays.jl">IntArrays.jl</a> would be helpful to save the space.</p>
<p><code>σ</code> is the size of the alphabet; for example, if the sequence is a DNA sequence, setting <code>σ</code> to 4 (four nucleotides) is the best choice in terms of efficiency.
Setting larger <code>σ</code> value than necessary is just a waste of query time and index space.</p>
<p>The positions of the sequence are sampled every <code>r</code> elements. There is a trade-off between query time and index space about this value: the smaller <code>r</code> is, the faster it is to locate positions but the larger the index is.</p>
<p><code>program</code> is used to construct the suffix array of the sequence. The <a href="https://github.com/quinnj/SuffixArrays.jl">SuffixArrays.jl</a> package is used by default, but if you want to create the index for a very long sequence it is recommended to use the <a href="https://www.cs.helsinki.fi/group/pads/pSAscan.html" rel="nofollow">pSAscan</a> program.
Also, the <code>mmap</code> flag determines wheather the suffix array is stored in a memory-mapped array or not. This flag would be necessary for a long sequence because the temporary suffix array often consumes larger memory space than the index itself (for instance, the suffix array of a sequence of 2^32 length consumes 16GiB RAM).</p>
</article></div>