<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><div align="center" dir="auto">
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ChifiSource/image_dump/blob/main/toolips/toolipsauth.png"><img src="https://github.com/ChifiSource/image_dump/raw/main/toolips/toolipsauth.png" style="max-width: 100%;"></a>
<h5 dir="auto"><a id="user-content-universal-authentication-for-toolips" class="anchor" aria-hidden="true" href="#universal-authentication-for-toolips"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>universal authentication for toolips</h5>
</div>
<ul dir="auto">
<li><a href="https://doc.toolips.app/extensions/toolips_auth/" rel="nofollow">Documentation</a></li>
<li><a href="https://github.com/ChifiSource/Toolips.jl">Toolips</a></li>
<li><a href="https://toolips.app/?page=gallery&amp;selected=auth" rel="nofollow">Extension Gallery</a></li>
</ul>
<p dir="auto">Authentication has long been a daunting and problematic task for many developers, but this is no more with toolips. Using this extension, we can create different experiences for different groups just by writing different functions!</p>
<ul dir="auto">
<li>step 1: add toolips auth to your webapp:</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Toolips
using Pkg

Toolips.new_webapp(&quot;MyApp&quot;)
Pkg.add(&quot;ToolipsAuth&quot;)"><pre><span class="pl-k">using</span> Toolips
<span class="pl-k">using</span> Pkg

Toolips<span class="pl-k">.</span><span class="pl-c1">new_webapp</span>(<span class="pl-s"><span class="pl-pds">"</span>MyApp<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ToolipsAuth<span class="pl-pds">"</span></span>)</pre></div>
<ul dir="auto">
<li>step 2: add toolips auth to your extension vector:</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="routes = [route(&quot;/&quot;, home), fourofour]
extensions = Vector{ServerExtension}([Logger(), Files(), Session(), Auth()])"><pre>routes <span class="pl-k">=</span> [<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/<span class="pl-pds">"</span></span>, home), fourofour]
extensions <span class="pl-k">=</span> <span class="pl-c1">Vector</span><span class="pl-c1">{ServerExtension}</span>([<span class="pl-c1">Logger</span>(), <span class="pl-c1">Files</span>(), <span class="pl-c1">Session</span>(), <span class="pl-c1">Auth</span>()])</pre></div>
<ul dir="auto">
<li>step 3: use toolips auth. The <code>group</code> method is passed a Connection, String, and Function to produce the high-level syntax. <strong>clients are grouped as 'new' by default.</strong></li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function home(c::Connection)
    group(c, &quot;user&quot;) do c::Connection
        write!(c, &quot;this is the user page&quot;)
    end
    group(c, &quot;new&quot;) do c::Connection
        group!(c, &quot;user&quot;, reset = true)
        write!(c, &quot;you are now a user!, click below to reload!&quot;)
        b = button(&quot;reload&quot;, text = &quot;reload&quot;)
        on(c, b, &quot;click&quot;) do cm::ComponentModifier
            redirect!(cm, &quot;/&quot;)
        end
        write!(c, [br(), b])
    end
end"><pre><span class="pl-k">function</span> <span class="pl-en">home</span>(c<span class="pl-k">::</span><span class="pl-c1">Connection</span>)
    <span class="pl-c1">group</span>(c, <span class="pl-s"><span class="pl-pds">"</span>user<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> c<span class="pl-k">::</span><span class="pl-c1">Connection</span>
        <span class="pl-c1">write!</span>(c, <span class="pl-s"><span class="pl-pds">"</span>this is the user page<span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
    <span class="pl-c1">group</span>(c, <span class="pl-s"><span class="pl-pds">"</span>new<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> c<span class="pl-k">::</span><span class="pl-c1">Connection</span>
        <span class="pl-c1">group!</span>(c, <span class="pl-s"><span class="pl-pds">"</span>user<span class="pl-pds">"</span></span>, reset <span class="pl-k">=</span> <span class="pl-c1">true</span>)
        <span class="pl-c1">write!</span>(c, <span class="pl-s"><span class="pl-pds">"</span>you are now a user!, click below to reload!<span class="pl-pds">"</span></span>)
        b <span class="pl-k">=</span> <span class="pl-c1">button</span>(<span class="pl-s"><span class="pl-pds">"</span>reload<span class="pl-pds">"</span></span>, text <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>reload<span class="pl-pds">"</span></span>)
        <span class="pl-c1">on</span>(c, b, <span class="pl-s"><span class="pl-pds">"</span>click<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> cm<span class="pl-k">::</span><span class="pl-c1">ComponentModifier</span>
            <span class="pl-c1">redirect!</span>(cm, <span class="pl-s"><span class="pl-pds">"</span>/<span class="pl-pds">"</span></span>)
        <span class="pl-k">end</span>
        <span class="pl-c1">write!</span>(c, [<span class="pl-c1">br</span>(), b])
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
</article></div>