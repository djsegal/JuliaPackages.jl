<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-minlplib" class="anchor" aria-hidden="true" href="#minlplib"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MINLPLib</h1>
<p dir="auto">STATUS: <a href="https://github.com/lanl-ansi/MINLPLib.jl/actions/workflows/ci.yml"><img src="https://github.com/lanl-ansi/MINLPLib.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://lanl-ansi.github.io/MINLPLib.jl/dev/" rel="nofollow"><img src="https://github.com/lanl-ansi/MINLPLib.jl/actions/workflows/documentation.yml/badge.svg" alt="Documentation" style="max-width: 100%;"></a></p>
<p dir="auto">MINLPLib.jl is an extensive collection of Mixed-Integer and Continuous Nonlinear Programming Instances in the native <a href="https://github.com/JuliaOpt/JuMP.jl"><code>JuMP.jl</code></a> format. Numerous instances in this library are based on the standard <a href="http://www.minlplib.org" rel="nofollow">MINLPLib.org</a> instances in addition to hundreds of global optimization instances which appear in the litearature. This library can be useful for:</p>
<ul dir="auto">
<li>
<p dir="auto">Benchmarking the Julia-based MINLP solvers, like <a href="https://github.com/lanl-ansi/Alpine.jl">Alpine.jl</a> and <a href="https://github.com/lanl-ansi/Juniper.jl">Juniper.jl</a>, by performing rigorous numerical experiments</p>
</li>
<li>
<p dir="auto">Viewing meta information of each instance to assist your analyses and experiments</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-included-libraries" class="anchor" aria-hidden="true" href="#included-libraries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Included Libraries</h2>
<p dir="auto">For more details of the libraries included in this package, please see <a href="https://lanl-ansi.github.io/MINLPLib.jl/latest/" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install, at your <code>Julia</code> command prompt,</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/lanl-ansi/MINLPLib.jl.git&quot;)"><pre class="notranslate"><code>Pkg.clone("https://github.com/lanl-ansi/MINLPLib.jl.git")
</code></pre></div>
<h2 dir="auto"><a id="user-content-fetching-a-model" class="anchor" aria-hidden="true" href="#fetching-a-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fetching a model</h2>
<p dir="auto">Fetch an instance by its <code>libname/name</code> just like the following,</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using MINLPLib
m = fetch_model(&quot;minlp2/blend029&quot;)"><pre class="notranslate"><code>using MINLPLib
m = fetch_model("minlp2/blend029")
</code></pre></div>
<p dir="auto">or</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using MINLPLib
m = fetch_model(&quot;minlp2&quot;, &quot;blend029&quot;)"><pre class="notranslate"><code>using MINLPLib
m = fetch_model("minlp2", "blend029")
</code></pre></div>
<p dir="auto">For special built-in model that requires additional inputs,</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using MINLPLib
m = fetch_model(&quot;special&quot;, &quot;multiKND&quot;, options=Dict(:K=&gt;3, :N=&gt;3, :D=&gt;1))"><pre class="notranslate"><code>using MINLPLib
m = fetch_model("special", "multiKND", options=Dict(:K=&gt;3, :N=&gt;3, :D=&gt;1))
</code></pre></div>
<p dir="auto">The above script initializes an optimization <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP</a> model <code>multiKND</code>. The formulation is controlled with parameter <code>:K</code>, <code>:N</code>, and <code>:D</code>, which yields the following problem:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Max x[1] * x[2] * x[3] + x[3] * x[4] * x[5] + x[5] * x[6] * x[7]
Subject to
 x[1] + x[2] + x[3] &lt;= 3
 x[3] + x[4] + x[5] &lt;= 3
 x[5] + x[6] + x[7] &lt;= 3
 0.1 &lt;= x[i] &lt;= 10 for all i in {1,2,..,6,7}"><pre class="notranslate"><code>Max x[1] * x[2] * x[3] + x[3] * x[4] * x[5] + x[5] * x[6] * x[7]
Subject to
 x[1] + x[2] + x[3] &lt;= 3
 x[3] + x[4] + x[5] &lt;= 3
 x[5] + x[6] + x[7] &lt;= 3
 0.1 &lt;= x[i] &lt;= 10 for all i in {1,2,..,6,7}
</code></pre></div>
<h2 dir="auto"><a id="user-content-viewing-instances-meta-info" class="anchor" aria-hidden="true" href="#viewing-instances-meta-info"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Viewing instance's meta info</h2>
<p dir="auto">To know a instance better, you can do the following to get a dictionary of meta info.
Note that as we continue to develop and test. More verified attributes will be added to the meta.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; meta = MINLPLib.fetch_meta(&quot;minlp2&quot;, &quot;blend029&quot;)
Dict{String,Any} with 18 entries:
  &quot;NINTVARS&quot;   =&gt; 0
  &quot;NLINCONS&quot;   =&gt; 202
  &quot;OBJBOUND&quot;   =&gt; nothing
  &quot;NAME&quot;       =&gt; &quot;blend029&quot;
  &quot;OBJVAL&quot;     =&gt; nothing
  &quot;LIBRARY&quot;    =&gt; &quot;minlp2&quot;
  &quot;NCONS&quot;      =&gt; 214
  &quot;NVARS&quot;      =&gt; 103
  &quot;OBJTYPE&quot;    =&gt; &quot;linear&quot;
  &quot;NLOPERATOR&quot; =&gt; Any[&quot;mul&quot;]
  &quot;LOAD&quot;       =&gt; 1.7414
  &quot;OBJSENSE&quot;   =&gt; &quot;Max&quot;
  &quot;NSDPCONS&quot;   =&gt; 0
  &quot;NNLCONS&quot;    =&gt; 12
  &quot;NBINVARS&quot;   =&gt; 36
  &quot;NQUADCONS&quot;  =&gt; 0
  &quot;NSOSCONS&quot;   =&gt; 0"><pre class="notranslate"><code>julia&gt; meta = MINLPLib.fetch_meta("minlp2", "blend029")
Dict{String,Any} with 18 entries:
  "NINTVARS"   =&gt; 0
  "NLINCONS"   =&gt; 202
  "OBJBOUND"   =&gt; nothing
  "NAME"       =&gt; "blend029"
  "OBJVAL"     =&gt; nothing
  "LIBRARY"    =&gt; "minlp2"
  "NCONS"      =&gt; 214
  "NVARS"      =&gt; 103
  "OBJTYPE"    =&gt; "linear"
  "NLOPERATOR" =&gt; Any["mul"]
  "LOAD"       =&gt; 1.7414
  "OBJSENSE"   =&gt; "Max"
  "NSDPCONS"   =&gt; 0
  "NNLCONS"    =&gt; 12
  "NBINVARS"   =&gt; 36
  "NQUADCONS"  =&gt; 0
  "NSOSCONS"   =&gt; 0
</code></pre></div>
<h2 dir="auto"><a id="user-content-customize-your-own-instance-library" class="anchor" aria-hidden="true" href="#customize-your-own-instance-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Customize your own instance library</h2>
<p dir="auto">Currently, MINLPLib.jl contains over 6000 instances. Experimenting with all
of them can be computationally heavy and risky. For your research projects, the scope may be
limited to a specific type of problems. Hence, it is necessary to construct you very own
library for research experiments. Below, we write a small <code>.jl</code> script that will generate a
user instance library (without actually copying the problem) called <code>USERLib</code> that collect all instances with
<code>exp</code> function. The directory will be created with name <code>instance/USERLib</code>. Please see our
<a href="https://lanl-ansi.github.io/MINLPLib.jl/latest/PODLib.html#PODLib-1" rel="nofollow">PODLib</a> designed for
testing <a href="https://github.com/lanl-ansi/Alpine.jl">Alpine.jl</a> solver. This customized library contains instances reference
as well as full instances. Note that each instance can be drastically different with different formulations and
implementations (peak into the library called <code>special</code> and you will see some examples).
It is up to you to select and construct your own instance library for more exciting and convenient experiments.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using MINLPLib

# Collect target problem from these libraries
for lib in [&quot;bcp&quot;, &quot;global&quot;, &quot;ibm&quot;, &quot;inf&quot;, &quot;minlp&quot;, &quot;minlp2&quot;]
    NAMES = MINLPLib.fetch_names(lib)   # Fetch a list of instance names
    for i in NAMES
        Meta = MINLPLib.fetch_meta(lib, i)  # Fetch instance meta
        isempty(Meta) &amp;&amp; continue
        !haskey(Meta, &quot;NLOPERATOR&quot;) &amp;&amp; continue
        if occursin(&quot;exp&quot;, in Meta[&quot;NLOPERATOR&quot;][1])
            MINLPLib.add_to_lib(&quot;USERLib&quot;, lib, i)  # Collect instance
        else
            continue
        end
    end
end
println(MINLPLib.fetch_names(&quot;USERLib&quot;))"><pre class="notranslate"><code>using MINLPLib

# Collect target problem from these libraries
for lib in ["bcp", "global", "ibm", "inf", "minlp", "minlp2"]
    NAMES = MINLPLib.fetch_names(lib)   # Fetch a list of instance names
    for i in NAMES
        Meta = MINLPLib.fetch_meta(lib, i)  # Fetch instance meta
        isempty(Meta) &amp;&amp; continue
        !haskey(Meta, "NLOPERATOR") &amp;&amp; continue
        if occursin("exp", in Meta["NLOPERATOR"][1])
            MINLPLib.add_to_lib("USERLib", lib, i)  # Collect instance
        else
            continue
        end
    end
end
println(MINLPLib.fetch_names("USERLib"))
</code></pre></div>
</article></div>