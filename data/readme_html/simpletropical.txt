<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simpletropical" class="anchor" aria-hidden="true" href="#simpletropical"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimpleTropical</h1>
<p dir="auto"><a href="https://travis-ci.com/scheinerman/SimpleTropical.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/88c9b40b695f0c6111d0d542b27b1e3ff63e6343fa3ca2033fea119fb983a5a1/68747470733a2f2f7472617669732d63692e636f6d2f73636865696e65726d616e2f53696d706c6554726f706963616c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/scheinerman/SimpleTropical.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This is an implementation of tropical (min-plus) arithmetic in Julia.</p>
<h2 dir="auto"><a id="user-content-numbers" class="anchor" aria-hidden="true" href="#numbers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Numbers</h2>
<p dir="auto">The tropical numbers consist of the real numbers and infinity. The
<code>SimpleTropical</code> module defines the <code>Tropical</code> type (which is a
subtype of <code>Number</code>). Tropical numbers can be parameterized by type,
but this is taken care of automatically:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SimpleTropical

julia&gt; x = Tropical(3.5)
Tropical(3.5)

julia&gt; y = Tropical{Int}(4)
Tropical(4)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimpleTropical

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">3.5</span>)
<span class="pl-c1">Tropical</span>(<span class="pl-c1">3.5</span>)

julia<span class="pl-k">&gt;</span> y <span class="pl-k">=</span> <span class="pl-c1">Tropical</span><span class="pl-c1">{Int}</span>(<span class="pl-c1">4</span>)
<span class="pl-c1">Tropical</span>(<span class="pl-c1">4</span>)</pre></div>
<p dir="auto">Tropical infinity is available via <code>TropicalInf</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; TropicalInf
Tropical(∞)"><pre class="notranslate"><code>julia&gt; TropicalInf
Tropical(∞)
</code></pre></div>
<h2 dir="auto"><a id="user-content-arithmetic" class="anchor" aria-hidden="true" href="#arithmetic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Arithmetic</h2>
<p dir="auto">The <code>+</code> operation is defined as the min of the two values and <code>*</code>
as the sum:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; x+y
Tropical(3.5)

julia&gt; x*y
Tropical(7.5)"><pre>julia<span class="pl-k">&gt;</span> x<span class="pl-k">+</span>y
<span class="pl-c1">Tropical</span>(<span class="pl-c1">3.5</span>)

julia<span class="pl-k">&gt;</span> x<span class="pl-k">*</span>y
<span class="pl-c1">Tropical</span>(<span class="pl-c1">7.5</span>)</pre></div>
<p dir="auto">The identity element for <code>+</code> is <code>TropicalInf</code> and the identity
element for <code>*</code> is <code>Tropical(0)</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; x + TropicalInf
Tropical(3.5)

julia&gt; x * Tropical(0)
Tropical(3.5)"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">+</span> TropicalInf
<span class="pl-c1">Tropical</span>(<span class="pl-c1">3.5</span>)

julia<span class="pl-k">&gt;</span> x <span class="pl-k">*</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">0</span>)
<span class="pl-c1">Tropical</span>(<span class="pl-c1">3.5</span>)</pre></div>
<p dir="auto">No elements in tropical arithmetic have additive inverses, but they
do have multiplicative inverses (except for infinity):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; inv(x)
Tropical(-3.5)

julia&gt; inv(TropicalInf)
ERROR: AssertionError: TropicalInf is not invertible"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">inv</span>(x)
<span class="pl-c1">Tropical</span>(<span class="pl-k">-</span><span class="pl-c1">3.5</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">inv</span>(TropicalInf)
ERROR<span class="pl-k">:</span> AssertionError<span class="pl-k">:</span> TropicalInf is not invertible</pre></div>
<p dir="auto">Exponentiation by integers works:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; x^10
Tropical(35.0)

julia&gt; x^-2
Tropical(-7.0)"><pre>julia<span class="pl-k">&gt;</span> x<span class="pl-k">^</span><span class="pl-c1">10</span>
<span class="pl-c1">Tropical</span>(<span class="pl-c1">35.0</span>)

julia<span class="pl-k">&gt;</span> x<span class="pl-k">^-</span><span class="pl-c1">2</span>
<span class="pl-c1">Tropical</span>(<span class="pl-k">-</span><span class="pl-c1">7.0</span>)</pre></div>
<h3 dir="auto"><a id="user-content--and-" class="anchor" aria-hidden="true" href="#-and-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>⊕ and ⊗</h3>
<p dir="auto">The symbols <code>⊕</code> and <code>⊗</code> may be used instead of <code>+</code> and <code>*</code> for <code>Tropical</code> numbers. In addition, these may be used on <code>Real</code> numbers with the result
being the appropriate <code>Tropical</code> number.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; 5 ⊕ 2
Tropical(2)

julia&gt; 5 ⊗ 2
Tropical(7)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">5</span> ⊕ <span class="pl-c1">2</span>
<span class="pl-c1">Tropical</span>(<span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">5</span> ⊗ <span class="pl-c1">2</span>
<span class="pl-c1">Tropical</span>(<span class="pl-c1">7</span>)</pre></div>
<p dir="auto"><strong>Note</strong>: In the REPL, the symbol <code>⊕</code> is created by typing <code>\oplus</code> and then pressing TAB. Likewise, <code>⊗</code> is created as <code>\otimes</code> followed by TAB.</p>
<h3 dir="auto"><a id="user-content-identity-elements-zero-and-one" class="anchor" aria-hidden="true" href="#identity-elements-zero-and-one"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Identity elements: <code>zero</code> and <code>one</code></h3>
<p dir="auto">The Julia function <code>zero</code> normally returns the number zero because that is the
identity element for addition; likewise, <code>one</code> returns the number one because
that is the identity element for multiplication.</p>
<p dir="auto">In tropical arithmetic, these identity elements are <code>Tropical(∞)</code> and <code>Tropical(0)</code>,
respectively. Therefore we define the <code>zero</code> and <code>one</code> functions to return these values.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; a = Tropical(3)
Tropical(3)

julia&gt; zero(a)
Tropical(∞)

julia&gt; zero(Tropical)
Tropical(∞)

julia&gt; one(a)
Tropical(0)

julia&gt; one(Tropical)
Tropical(0)"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">3</span>)
<span class="pl-c1">Tropical</span>(<span class="pl-c1">3</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zero</span>(a)
<span class="pl-c1">Tropical</span>(∞)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zero</span>(Tropical)
<span class="pl-c1">Tropical</span>(∞)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">one</span>(a)
<span class="pl-c1">Tropical</span>(<span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">one</span>(Tropical)
<span class="pl-c1">Tropical</span>(<span class="pl-c1">0</span>)</pre></div>
<p dir="auto">Likewise, the functions <code>zeros</code> and <code>ones</code> return an array of the appropriate values:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; zeros(Tropical,3)
3-element Vector{Tropical}:
 Tropical(∞)
 Tropical(∞)
 Tropical(∞)

julia&gt; ones(Tropical,3)
3-element Vector{Tropical}:
 Tropical(0)
 Tropical(0)
 Tropical(0)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">zeros</span>(Tropical,<span class="pl-c1">3</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Tropical}<span class="pl-k">:</span>
 <span class="pl-c1">Tropical</span>(∞)
 <span class="pl-c1">Tropical</span>(∞)
 <span class="pl-c1">Tropical</span>(∞)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ones</span>(Tropical,<span class="pl-c1">3</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Tropical}<span class="pl-k">:</span>
 <span class="pl-c1">Tropical</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Tropical</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Tropical</span>(<span class="pl-c1">0</span>)</pre></div>
<h2 dir="auto"><a id="user-content-predicates" class="anchor" aria-hidden="true" href="#predicates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Predicates</h2>
<p dir="auto">Use <code>isinf(X)</code> to test if a tropical number is infinity.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; isinf(x)
false

julia&gt; isinf(TropicalInf)
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">isinf</span>(x)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">isinf</span>(TropicalInf)
<span class="pl-c1">true</span></pre></div>
<p dir="auto">The usual comparison operators <code>==</code> and <code>!==</code> work as expected:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Tropical(3.0) == Tropical(3)
true

julia&gt; Tropical(3.1) != Tropical(3//1)
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">3.0</span>) <span class="pl-k">==</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">3</span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">3.1</span>) <span class="pl-k">!=</span> <span class="pl-c1">Tropical</span>(<span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">1</span>)
<span class="pl-c1">true</span></pre></div>
<h2 dir="auto"><a id="user-content-display-style" class="anchor" aria-hidden="true" href="#display-style"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Display Style</h2>
<p dir="auto">By default, <code>Tropical</code> numbers are displayed in the form <code>Tropical(xxx)</code> such as
<code>Tropical(-3)</code> or <code>Tropical(∞)</code>. This behavior can be changed using the function
<code>long_tropical_show</code>.</p>
<ul dir="auto">
<li><code>long_tropical_show(true)</code> gives the default behavior.</li>
<li><code>long_tropical_show(false)</code> makes <code>Tropical</code> numbers appear as ordinary real numbers.</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; long_tropical_show(false)
false

julia&gt; 5 ⊕ 2
2

julia&gt; 5 ⊗ 2
7

julia&gt; typeof(ans)
Tropical{Int64}"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">long_tropical_show</span>(<span class="pl-c1">false</span>)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">5</span> ⊕ <span class="pl-c1">2</span>
<span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">5</span> ⊗ <span class="pl-c1">2</span>
<span class="pl-c1">7</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">typeof</span>(ans)
Tropical{Int64}</pre></div>
<p dir="auto">Calling <code>long_tropical_show()</code> without any arguments returns the current state
for showing <code>Tropical</code> numbers: <code>true</code> for the default behavior and <code>false</code>
for the short display.</p>
</article></div>