<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-fastanonymous" class="anchor" aria-hidden="true" href="#fastanonymous"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FastAnonymous</h1>
<p>Creating efficient "anonymous functions" in <a href="http://julialang.org/" rel="nofollow">Julia</a>.</p>
<p><a href="https://travis-ci.org/timholy/FastAnonymous.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9e3d795d54ceb10348a3f9d3c7738192630fd513/68747470733a2f2f7472617669732d63692e6f72672f74696d686f6c792f46617374416e6f6e796d6f75732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/timholy/FastAnonymous.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-note-this-package-is-deprecated" class="anchor" aria-hidden="true" href="#note-this-package-is-deprecated"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Note: this package is deprecated</h1>
<p>FastAnonymous provoked/inspired the creation of fast anonymous
functions as a native feature for Julia 0.5. Hence this package is not
necessary (and not supported) for Julia 0.5 and higher. Starting with
Julia 0.7, this package will not be installable by the package manager.</p>
<h2><a id="user-content-fastanonymous-versions" class="anchor" aria-hidden="true" href="#fastanonymous-versions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FastAnonymous versions</h2>
<p>There are two implementations, one that runs on julia 0.3 and the other for julia 0.4.
If you're running julia 0.3, see the relevant <a href="doc/README_0.3.md">README</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Install this package within Julia using</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>FastAnonymous<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>In Julia, you can create an anonymous function this way:</p>
<div class="highlight highlight-source-julia"><pre>offset <span class="pl-k">=</span> <span class="pl-c1">1.2</span>
f <span class="pl-k">=</span> x<span class="pl-k">-&gt;</span>(x<span class="pl-k">+</span>offset)<span class="pl-k">^</span><span class="pl-c1">2</span></pre></div>
<p>At present, this function is not very efficient, as will be shown below.
You can make it more performant by adding the <code>@anon</code> macro:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FastAnonymous

offset <span class="pl-k">=</span> <span class="pl-c1">1.2</span>
f <span class="pl-k">=</span> <span class="pl-c1">@anon</span> x<span class="pl-k">-&gt;</span>(x<span class="pl-k">+</span>offset)<span class="pl-k">^</span><span class="pl-c1">2</span></pre></div>
<p>You can use <code>f</code> like an ordinary function.</p>
<p>Here's a concrete example and speed comparison:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FastAnonymous

<span class="pl-k">function</span> <span class="pl-en">testn</span>(f, n)
    s <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
    <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n
        s <span class="pl-k">+=</span> <span class="pl-c1">f</span>(i<span class="pl-k">/</span>n)
    <span class="pl-k">end</span>
    s
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">test_inlined</span>(n)
    s <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
    <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n
        s <span class="pl-k">+=</span> (i<span class="pl-k">/</span>n<span class="pl-k">+</span><span class="pl-c1">1.2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
    <span class="pl-k">end</span>
    s
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Conventional anonymous function</span>
offset <span class="pl-k">=</span> <span class="pl-c1">1.2</span>
f <span class="pl-k">=</span> x<span class="pl-k">-&gt;</span>(x<span class="pl-k">+</span>offset)<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-c1">@time</span> <span class="pl-c1">testn</span>(f, <span class="pl-c1">1</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> <span class="pl-c1">testn</span>(f, <span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">7</span>)
elapsed time<span class="pl-k">:</span> <span class="pl-c1">1.344960759</span> seconds (<span class="pl-c1">610</span> MB allocated, <span class="pl-c1">4.13</span><span class="pl-k">%</span> gc time <span class="pl-k">in</span> <span class="pl-c1">28</span> pauses with <span class="pl-c1">0</span> full sweep)
<span class="pl-c1">2.973333503333424e7</span>

<span class="pl-c"><span class="pl-c">#</span> Hard-wired generic function</span>
<span class="pl-en">sqroffset</span>(x) <span class="pl-k">=</span> (x<span class="pl-k">+</span><span class="pl-c1">1.2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-c1">@time</span> <span class="pl-c1">testn</span>(sqroffset, <span class="pl-c1">1</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> <span class="pl-c1">testn</span>(sqroffset, <span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">7</span>)
elapsed time<span class="pl-k">:</span> <span class="pl-c1">0.627085369</span> seconds (<span class="pl-c1">457</span> MB allocated, <span class="pl-c1">5.99</span><span class="pl-k">%</span> gc time <span class="pl-k">in</span> <span class="pl-c1">21</span> pauses with <span class="pl-c1">0</span> full sweep)
<span class="pl-c1">2.973333503333424e7</span>

<span class="pl-c"><span class="pl-c">#</span> @anon-ized function</span>
g <span class="pl-k">=</span> <span class="pl-c1">@anon</span> x<span class="pl-k">-&gt;</span>(x<span class="pl-k">+</span>offset)<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-c1">@time</span> <span class="pl-c1">testn</span>(g, <span class="pl-c1">1</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> <span class="pl-c1">testn</span>(g, <span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">7</span>)
elapsed time<span class="pl-k">:</span> <span class="pl-c1">0.07966527</span> seconds (<span class="pl-c1">112</span> bytes allocated)
<span class="pl-c1">2.973333503333424e7</span>

<span class="pl-c"><span class="pl-c">#</span> Full manual inlining</span>
<span class="pl-c1">@time</span> <span class="pl-c1">test_inlined</span>(<span class="pl-c1">1</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> <span class="pl-c1">test_inlined</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">7</span>)
elapsed time<span class="pl-k">:</span> <span class="pl-c1">0.078703981</span> seconds (<span class="pl-c1">112</span> bytes allocated)
<span class="pl-c1">2.973333503333424e7</span></pre></div>
<p>You can see that it's more than 20-fold faster than the anonymous-function version,
and more than tenfold faster than the generic function version.
Indeed, it's as fast as if we had manually inlined this function.
Relatedly, it also exhibits no unnecessary memory allocation.</p>
<h2><a id="user-content-changing-parameter-values" class="anchor" aria-hidden="true" href="#changing-parameter-values"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Changing parameter values</h2>
<p>With the previous definition of <code>f</code>, the display at the REPL is informative:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> <span class="pl-c1">@anon</span> x<span class="pl-k">-&gt;</span>(x<span class="pl-k">+</span>offset)<span class="pl-k">^</span><span class="pl-c1">2</span>
(x) <span class="pl-k">-&gt;</span> <span class="pl-k">quote</span>  <span class="pl-c"><span class="pl-c">#</span> none, line 1:</span>
    Main<span class="pl-k">.^</span>(Main<span class="pl-k">.+</span>(x,offset),<span class="pl-c1">2</span>)
<span class="pl-k">end</span>
with<span class="pl-k">:</span>
  offset<span class="pl-k">:</span> <span class="pl-c1">1.2</span></pre></div>
<p><code>Main.</code> is a necessary addition for specifying the module scope; without them,
you can see the function definition as <code>^(+(x,offset),2)</code> which is equivalent to <code>(x+offset)^2</code>.
At the end, you see the "environment," which consists of stored values, in this case <code>offset: 1.2</code>.
After creating <code>f</code>, you can change environmental variables:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> f<span class="pl-k">.</span>offset <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">7</span>
<span class="pl-k">-</span><span class="pl-c1">7.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">7</span>)
<span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">9</span>)
<span class="pl-c1">4.0</span></pre></div>
<p>Any symbols that are not arguments end up in environmental variables. As a second example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">linspace</span>(<span class="pl-c1">0</span>,pi);

julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> <span class="pl-c1">@anon</span> (A,θ) <span class="pl-k">-&gt;</span> A<span class="pl-k">*</span><span class="pl-c1">sin</span>(x<span class="pl-k">+</span>θ)
(A,θ) <span class="pl-k">-&gt;</span> <span class="pl-k">quote</span>  <span class="pl-c"><span class="pl-c">#</span> none, line 1:</span>
    Main<span class="pl-k">.*</span>(A,Main<span class="pl-k">.</span><span class="pl-c1">sin</span>(Main<span class="pl-k">.+</span>(x,θ)))
<span class="pl-k">end</span>
with<span class="pl-k">:</span>
  x<span class="pl-k">:</span> [<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0317333</span>,<span class="pl-c1">0.0634665</span>,<span class="pl-c1">0.0951998</span>,<span class="pl-c1">0.126933</span>,<span class="pl-c1">0.158666</span>,<span class="pl-c1">0.1904</span>,<span class="pl-c1">0.222133</span>,<span class="pl-c1">0.253866</span>,<span class="pl-c1">0.285599</span>  …  <span class="pl-c1">2.85599</span>,<span class="pl-c1">2.88773</span>,<span class="pl-c1">2.91946</span>,<span class="pl-c1">2.95119</span>,<span class="pl-c1">2.98293</span>,<span class="pl-c1">3.01466</span>,<span class="pl-c1">3.04639</span>,<span class="pl-c1">3.07813</span>,<span class="pl-c1">3.10986</span>,<span class="pl-c1">3.14159</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">10</span>,pi<span class="pl-k">/</span><span class="pl-c1">4</span>)
<span class="pl-c1">100</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
  <span class="pl-c1">7.07107</span>
  <span class="pl-c1">7.29186</span>
  <span class="pl-c1">7.50531</span>
  ⋮
 <span class="pl-k">-</span><span class="pl-c1">6.60836</span>
 <span class="pl-k">-</span><span class="pl-c1">6.84316</span>
 <span class="pl-k">-</span><span class="pl-c1">7.07107</span>

julia<span class="pl-k">&gt;</span> f<span class="pl-k">.</span>x[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">15</span>
<span class="pl-c1">15</span>

julia<span class="pl-k">&gt;</span> f
(A,θ) <span class="pl-k">-&gt;</span> <span class="pl-k">quote</span>  <span class="pl-c"><span class="pl-c">#</span> none, line 1:</span>
    Main<span class="pl-k">.*</span>(A,Main<span class="pl-k">.</span><span class="pl-c1">sin</span>(Main<span class="pl-k">.+</span>(x,θ)))
<span class="pl-k">end</span>
with<span class="pl-k">:</span>
  x<span class="pl-k">:</span> [<span class="pl-c1">0.0</span>,<span class="pl-c1">15.0</span>,<span class="pl-c1">0.0634665</span>,<span class="pl-c1">0.0951998</span>,<span class="pl-c1">0.126933</span>,<span class="pl-c1">0.158666</span>,<span class="pl-c1">0.1904</span>,<span class="pl-c1">0.222133</span>,<span class="pl-c1">0.253866</span>,<span class="pl-c1">0.285599</span>  …  <span class="pl-c1">2.85599</span>,<span class="pl-c1">2.88773</span>,<span class="pl-c1">2.91946</span>,<span class="pl-c1">2.95119</span>,<span class="pl-c1">2.98293</span>,<span class="pl-c1">3.01466</span>,<span class="pl-c1">3.04639</span>,<span class="pl-c1">3.07813</span>,<span class="pl-c1">3.10986</span>,<span class="pl-c1">3.14159</span>]</pre></div>
<h2><a id="user-content-inner-workings" class="anchor" aria-hidden="true" href="#inner-workings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Inner workings</h2>
<p>This package uses shameless hacks to implement closures that behave much like
<a href="https://github.com/JuliaLang/julia/pull/10269#issuecomment-75389370">a likely native solution</a>.
One major difference is that the native closure environment is likely to be immutable, but here it is mutable.</p>
<h2><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgments</h2>
<p>This package can be viewed in part as an alternative syntax to the excellent
<a href="https://github.com/lindahua/NumericFuns.jl">NumericFuns</a>,
which was split out from <a href="https://github.com/lindahua/NumericExtensions.jl">NumericExtensions</a>.</p>
</article></div>