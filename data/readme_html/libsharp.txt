<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-libsharp" class="anchor" aria-hidden="true" href="#libsharp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Libsharp</h1>
<p dir="auto"><a href="https://github.com/ziotom78/Libsharp.jl/actions?query=workflow%3A%22Tests%22"><img src="https://github.com/ziotom78/Libsharp.jl/workflows/Tests/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ziotom78/Libsharp.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/78f81db3197d6c840a6cf1a50838eeebfa9e68588a07407e9dc40360ce857636/68747470733a2f2f636f6465636f762e696f2f67682f7a696f746f6d37382f4c696273686172702e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/ziotom78/Libsharp.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This Julia package provides bindings to the <a href="https://gitlab.mpcdf.mpg.de/mtr/libsharp" rel="nofollow">libsharp2</a> library, written by Martin Reinecke.</p>
<p dir="auto">We export the following job types for <code>sharp_execute!</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="SHARP_YtW                   # analysis
SHARP_MAP2ALM = SHARP_YtW   # analysis
SHARP_Y                     # synthesis
SHARP_ALM2MAP = SHARP_Y     # synthesis
SHARP_Yt                    # adjoint synthesis
SHARP_WY                    # adjoint analysis
SHARP_ALM2MAP_DERIV1        # synthesis of first derivatives"><pre class="notranslate"><code>SHARP_YtW                   # analysis
SHARP_MAP2ALM = SHARP_YtW   # analysis
SHARP_Y                     # synthesis
SHARP_ALM2MAP = SHARP_Y     # synthesis
SHARP_Yt                    # adjoint synthesis
SHARP_WY                    # adjoint analysis
SHARP_ALM2MAP_DERIV1        # synthesis of first derivatives
</code></pre></div>
<p dir="auto">Libsharp uses its own OpenMP parallelization. Set the environmental variable <code>OMP_NUM_THREADS</code> to control the number of threads used.</p>
</article></div>