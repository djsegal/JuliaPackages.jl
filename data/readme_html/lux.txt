<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-lux-" class="anchor" aria-hidden="true" href="#lux-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lux <g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">ðŸ”¥</g-emoji></h1>
<p dir="auto"><a href="https://julialang.zulipchat.com/#narrow/stream/machine-learning" rel="nofollow"><img src="https://camo.githubusercontent.com/667867fc71b8b3c9ed350ce154a04d38adca002ecfa38edf519284e0365ee553/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d5a756c6970266d6573736167653d6368617426636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="Join the chat at https://julialang.zulipchat.com #machine-learning" data-canonical-src="https://img.shields.io/static/v1?label=Zulip&amp;message=chat&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="http://lux.csail.mit.edu/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Latest Docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a>
<a href="http://lux.csail.mit.edu/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/avik-pal/Lux.jl/actions/workflows/CI.yml"><img src="https://github.com/avik-pal/Lux.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://buildkite.com/julialang/lux-dot-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e9ef0699e8b9b65cd30d69ba47c522e5934a9bba55d04398cf83a10c36a7316f/68747470733a2f2f696d672e736869656c64732e696f2f6275696c646b6974652f62613166393632326164643539373863326437623139343536336664393332373131336339633231653537333462653230652e7376673f6c6162656c3d677075" alt="Build status" data-canonical-src="https://img.shields.io/buildkite/ba1f9622add5978c2d7b194563fd9327113c9c21e5734be20e.svg?label=gpu" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/LuxDL/Lux.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c0a34b0cfefe58e7dcfaf68b13a937ecae4fe17b29a8fc28c06c4a46f6bd2335/68747470733a2f2f636f6465636f762e696f2f67682f4c7578444c2f4c75782e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d494d71424d316533687a" alt="codecov" data-canonical-src="https://codecov.io/gh/LuxDL/Lux.jl/branch/main/graph/badge.svg?token=IMqBM1e3hz" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=Lux" rel="nofollow"><img src="https://camo.githubusercontent.com/09c9b56ed018bd97330a3bd4c72f986eea91b49631f0d084783265e3805eeb6f/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f4c7578" alt="Package Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/Lux" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLStyle"><img src="https://camo.githubusercontent.com/3e16f03bad047817fbc07f49307817ed7919ef79c339dc75ad4ce813012c3e0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d5363694d4c26636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="SciML Code Style" data-canonical-src="https://img.shields.io/static/v1?label=code%20style&amp;message=SciML&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a></p>
<p dir="auto">The <g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">ðŸ”¥</g-emoji> Deep Learning Framework</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add Lux"><pre>] add Lux</pre></div>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Lux, Random, Optimisers, Zygote

# Seeding
rng = Random.default_rng()
Random.seed!(rng, 0)

# Construct the layer
model = Chain(BatchNorm(128), Dense(128, 256, tanh), BatchNorm(256),
              Chain(Dense(256, 1, tanh), Dense(1, 10)))

# Parameter and State Variables
ps, st = Lux.setup(rng, model) .|&gt; gpu

# Dummy Input
x = rand(rng, Float32, 128, 2) |&gt; gpu

# Run the model
y, st = Lux.apply(model, x, ps, st)

# Gradients
gs = gradient(p -&gt; sum(Lux.apply(model, x, p, st)[1]), ps)[1]

# Optimization
st_opt = Optimisers.setup(Optimisers.Adam(0.0001), ps)
st_opt, ps = Optimisers.update(st_opt, ps, gs)"><pre><span class="pl-k">using</span> Lux, Random, Optimisers, Zygote

<span class="pl-c"><span class="pl-c">#</span> Seeding</span>
rng <span class="pl-k">=</span> Random<span class="pl-k">.</span><span class="pl-c1">default_rng</span>()
Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(rng, <span class="pl-c1">0</span>)

<span class="pl-c"><span class="pl-c">#</span> Construct the layer</span>
model <span class="pl-k">=</span> <span class="pl-c1">Chain</span>(<span class="pl-c1">BatchNorm</span>(<span class="pl-c1">128</span>), <span class="pl-c1">Dense</span>(<span class="pl-c1">128</span>, <span class="pl-c1">256</span>, tanh), <span class="pl-c1">BatchNorm</span>(<span class="pl-c1">256</span>),
              <span class="pl-c1">Chain</span>(<span class="pl-c1">Dense</span>(<span class="pl-c1">256</span>, <span class="pl-c1">1</span>, tanh), <span class="pl-c1">Dense</span>(<span class="pl-c1">1</span>, <span class="pl-c1">10</span>)))

<span class="pl-c"><span class="pl-c">#</span> Parameter and State Variables</span>
ps, st <span class="pl-k">=</span> Lux<span class="pl-k">.</span><span class="pl-c1">setup</span>(rng, model) <span class="pl-k">.|</span><span class="pl-k">&gt;</span> gpu

<span class="pl-c"><span class="pl-c">#</span> Dummy Input</span>
x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(rng, Float32, <span class="pl-c1">128</span>, <span class="pl-c1">2</span>) <span class="pl-k">|&gt;</span> gpu

<span class="pl-c"><span class="pl-c">#</span> Run the model</span>
y, st <span class="pl-k">=</span> Lux<span class="pl-k">.</span><span class="pl-c1">apply</span>(model, x, ps, st)

<span class="pl-c"><span class="pl-c">#</span> Gradients</span>
gs <span class="pl-k">=</span> <span class="pl-c1">gradient</span>(p <span class="pl-k">-&gt;</span> <span class="pl-c1">sum</span>(Lux<span class="pl-k">.</span><span class="pl-c1">apply</span>(model, x, p, st)[<span class="pl-c1">1</span>]), ps)[<span class="pl-c1">1</span>]

<span class="pl-c"><span class="pl-c">#</span> Optimization</span>
st_opt <span class="pl-k">=</span> Optimisers<span class="pl-k">.</span><span class="pl-c1">setup</span>(Optimisers<span class="pl-k">.</span><span class="pl-c1">Adam</span>(<span class="pl-c1">0.0001</span>), ps)
st_opt, ps <span class="pl-k">=</span> Optimisers<span class="pl-k">.</span><span class="pl-c1">update</span>(st_opt, ps, gs)</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Look in the <a href="/examples/">examples</a> directory for self-contained usage examples. The <a href="https://lux.csail.mit.edu/dev" rel="nofollow">documentation</a> has examples sorted into proper categories.</p>
<h2 dir="auto"><a id="user-content-ecosystem" class="anchor" aria-hidden="true" href="#ecosystem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Ecosystem</h2>
<p dir="auto">Checkout our <a href="http://lux.csail.mit.edu/dev/introduction/ecosystem/" rel="nofollow">Ecosystem</a> page for more details.</p>
<h2 dir="auto"><a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Help</h2>
<p dir="auto">For usage related questions, please use <a href="https://github.com/avik-pal/Lux.jl/discussions">Github Discussions</a> or <a href="https://discourse.julialang.org/c/domain/ml/" rel="nofollow">JuliaLang Discourse (machine learning domain)</a> which allows questions and answers to be indexed. To report bugs use <a href="https://github.com/avik-pal/Lux.jl/issues">github issues</a> or even better send in a <a href="https://github.com/avik-pal/Lux.jl/pulls">pull request</a>.</p>
<h2 dir="auto"><a id="user-content-package-ecosystem-structure" class="anchor" aria-hidden="true" href="#package-ecosystem-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Package Ecosystem Structure</h2>
<p dir="auto">Structure of the packages part of the <code>Lux.jl</code> Universe<sup><a href="#user-content-fn-1-8ab269bcdbb69f9a30211bd41610b962" id="user-content-fnref-1-8ab269bcdbb69f9a30211bd41610b962" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>: (Rounded Rectangles denote packages maintained by <code>Lux.jl</code> developers)</p>
<section class="js-render-needs-enrichment render-needs-enrichment position-relative" data-identity="b292f75b-d0cf-4c0b-84f6-08e585a63d80" data-host="https://viewscreen.githubusercontent.com" data-src="https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com" data-type="mermaid" aria-label="mermaid rendered output container">
  <div class="js-render-enrichment-target" data-json="{&quot;data&quot;:&quot;flowchart LR\n    subgraph Interface\n        LuxCore(LuxCore)\n    end\n    subgraph Backend\n        LuxLib(LuxLib)\n        NNlib\n        CUDA\n    end\n    subgraph ExternalML[External ML Packages]\n        Flux\n        Metalhead\n    end\n    subgraph CompViz[Computer Vision]\n        Boltz(Boltz)\n    end\n    subgraph SciML[Scientific Machine Learning]\n        DeepEquilibriumNetworks(DeepEquilibriumNetworks)\n        DiffEqFlux(DiffEqFlux)\n        NeuralPDE[Neural PDE: PINNs]\n    end\n    subgraph AD[Automatic Differentiation]\n        Zygote\n        Enzyme[\&quot;Enzyme (experimental)\&quot;]\n    end\n    subgraph Dist[Distributed Training]\n        FluxMPI(FluxMPI)\n    end\n    subgraph SerializeModels[Serialize Models]\n        Serial[Serialization]\n        JLD2\n        BSON\n    end\n    subgraph Opt[Optimization]\n        Optimisers\n        Optimization\n    end\n    subgraph Parameters\n        ComponentArrays\n    end\n    Lux(Lux)\n    Parameters --&amp;gt; Lux\n    LuxCore --&amp;gt; Lux\n    Backend --&amp;gt; Lux\n    Lux --&amp;gt; SciML\n    AD --&amp;gt; Lux\n    Lux --&amp;gt; Dist\n    Lux --&amp;gt; SerializeModels\n    Lux --&amp;gt; Opt\n    Lux --&amp;gt; CompViz\n    ExternalML -.-&amp;gt; CompViz\n&quot;}" data-plain="flowchart LR
    subgraph Interface
        LuxCore(LuxCore)
    end
    subgraph Backend
        LuxLib(LuxLib)
        NNlib
        CUDA
    end
    subgraph ExternalML[External ML Packages]
        Flux
        Metalhead
    end
    subgraph CompViz[Computer Vision]
        Boltz(Boltz)
    end
    subgraph SciML[Scientific Machine Learning]
        DeepEquilibriumNetworks(DeepEquilibriumNetworks)
        DiffEqFlux(DiffEqFlux)
        NeuralPDE[Neural PDE: PINNs]
    end
    subgraph AD[Automatic Differentiation]
        Zygote
        Enzyme[&quot;Enzyme (experimental)&quot;]
    end
    subgraph Dist[Distributed Training]
        FluxMPI(FluxMPI)
    end
    subgraph SerializeModels[Serialize Models]
        Serial[Serialization]
        JLD2
        BSON
    end
    subgraph Opt[Optimization]
        Optimisers
        Optimization
    end
    subgraph Parameters
        ComponentArrays
    end
    Lux(Lux)
    Parameters --&gt; Lux
    LuxCore --&gt; Lux
    Backend --&gt; Lux
    Lux --&gt; SciML
    AD --&gt; Lux
    Lux --&gt; Dist
    Lux --&gt; SerializeModels
    Lux --&gt; Opt
    Lux --&gt; CompViz
    ExternalML -.-&gt; CompViz
" dir="auto">
    <div class="render-plaintext-hidden" dir="auto">
      <pre lang="mermaid" aria-label="Raw mermaid code">flowchart LR
    subgraph Interface
        LuxCore(LuxCore)
    end
    subgraph Backend
        LuxLib(LuxLib)
        NNlib
        CUDA
    end
    subgraph ExternalML[External ML Packages]
        Flux
        Metalhead
    end
    subgraph CompViz[Computer Vision]
        Boltz(Boltz)
    end
    subgraph SciML[Scientific Machine Learning]
        DeepEquilibriumNetworks(DeepEquilibriumNetworks)
        DiffEqFlux(DiffEqFlux)
        NeuralPDE[Neural PDE: PINNs]
    end
    subgraph AD[Automatic Differentiation]
        Zygote
        Enzyme["Enzyme (experimental)"]
    end
    subgraph Dist[Distributed Training]
        FluxMPI(FluxMPI)
    end
    subgraph SerializeModels[Serialize Models]
        Serial[Serialization]
        JLD2
        BSON
    end
    subgraph Opt[Optimization]
        Optimisers
        Optimization
    end
    subgraph Parameters
        ComponentArrays
    end
    Lux(Lux)
    Parameters --&gt; Lux
    LuxCore --&gt; Lux
    Backend --&gt; Lux
    Lux --&gt; SciML
    AD --&gt; Lux
    Lux --&gt; Dist
    Lux --&gt; SerializeModels
    Lux --&gt; Opt
    Lux --&gt; CompViz
    ExternalML -.-&gt; CompViz
</pre>
    </div>
  </div>
  <span class="js-render-enrichment-loader d-flex flex-justify-center flex-items-center width-full" style="min-height:100px" role="presentation">
    <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true" class="octospinner mx-auto anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke"></circle>
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke"></path>
</svg>
  </span>
</section>

<h2 dir="auto"><a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Projects</h2>
<ul dir="auto">
<li><a href="https://github.com/FluxML/Flux.jl">Flux.jl</a> -- We share most of the backend infrastructure with Flux (<a href="https://github.com/FluxML/Flux.jl/issues/1829" data-hovercard-type="issue" data-hovercard-url="/FluxML/Flux.jl/issues/1829/hovercard">Roadmap</a> hints towards making Flux explicit-parameter first)</li>
<li><a href="https://github.com/denizyuret/Knet.jl">Knet.jl</a> -- One of the mature and OG Julia Deep Learning Frameworks</li>
<li><a href="https://github.com/PumasAI/SimpleChains.jl">SimpleChains.jl</a> -- Extremely Efficient for Small Neural Networks on CPU</li>
<li><a href="https://github.com/dfdx/Avalon.jl">Avalon.jl</a> -- Uses tracing based AD <a href="https://github.com/dfdx/Yota.jl">Yota.jl</a></li>
</ul>
<h2 dir="auto"><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citation</h2>
<p dir="auto">If you found this library to be useful in academic work, then please cite:</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@software{pal2023lux,
  author       = {Pal, Avik},
  title        = {{Lux: Explicit Parameterization of Deep Neural Networks in Julia}},
  month        = April,
  year         = 2023,
  note         = {If you use this software, please cite it as below.},
  publisher    = {Zenodo},
  version      = {v0.4.50},
  doi          = {10.5281/zenodo.7808904},
  url          = {https://doi.org/10.5281/zenodo.7808904}
}"><pre><span class="pl-k">@software</span>{<span class="pl-en">pal2023lux</span>,
  <span class="pl-s">author</span>       = <span class="pl-s"><span class="pl-pds">{</span>Pal, Avik<span class="pl-pds">}</span></span>,
  <span class="pl-s">title</span>        = <span class="pl-s"><span class="pl-pds">{</span>{Lux: Explicit Parameterization of Deep Neural Networks in Julia}<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span>        = April,
  <span class="pl-s">year</span>         = <span class="pl-c1">2023</span>,
  <span class="pl-s">note</span>         = <span class="pl-s"><span class="pl-pds">{</span>If you use this software, please cite it as below.<span class="pl-pds">}</span></span>,
  <span class="pl-s">publisher</span>    = <span class="pl-s"><span class="pl-pds">{</span>Zenodo<span class="pl-pds">}</span></span>,
  <span class="pl-s">version</span>      = <span class="pl-s"><span class="pl-pds">{</span>v0.4.50<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span>          = <span class="pl-s"><span class="pl-pds">{</span>10.5281/zenodo.7808904<span class="pl-pds">}</span></span>,
  <span class="pl-s">url</span>          = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.5281/zenodo.7808904<span class="pl-pds">}</span></span>
}</pre></div>
<p dir="auto">Also consider starring <a href="https://github.com/avik-pal/Lux.jl/">our github repo</a></p>
<section data-footnotes="" class="footnotes"><h2 id="footnote-label" class="sr-only" dir="auto">Footnotes</h2>
<ol dir="auto">
<li id="user-content-fn-1-8ab269bcdbb69f9a30211bd41610b962">
<p dir="auto">These packages only constitute a subset of the ecosystem. Specifically these are the packages which the maintainers of Lux.jl have personally tested out. If you want a new package to be listed here, please open an issue. <a href="#user-content-fnref-1-8ab269bcdbb69f9a30211bd41610b962" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref"><g-emoji class="g-emoji" alias="leftwards_arrow_with_hook" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/21a9.png">â†©</g-emoji></a></p>
</li>
</ol>
</section>
</article></div>