<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-harmonicorthogonalpolynomialsjl" class="anchor" aria-hidden="true" href="#harmonicorthogonalpolynomialsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HarmonicOrthogonalPolynomials.jl</h1>
<p dir="auto">A Julia package for working with spherical harmonic expansions and
harmonic polynomials in  balls.</p>
<p dir="auto"><a href="https://github.com/JuliaApproximation/HarmonicOrthogonalPolynomials.jl/actions"><img src="https://github.com/JuliaApproximation/HarmonicOrthogonalPolynomials.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaApproximation/HarmonicOrthogonalPolynomials.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/78ded67b8dd193c67efe361c5a07d7c58e8727dd8b4a291c5599e076b1eceba0/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961417070726f78696d6174696f6e2f4861726d6f6e69634f7274686f676f6e616c506f6c796e6f6d69616c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaApproximation/HarmonicOrthogonalPolynomials.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A <a href="https://en.wikipedia.org/wiki/Harmonic_polynomial" rel="nofollow">harmonic polynomial</a> is a multivariate polynomial that solves Laplace's equation.
<a href="https://en.wikipedia.org/wiki/Spherical_harmonics" rel="nofollow">Spherical harmonics</a> are restrictions of harmonic polynomials to the sphere. Importantly they
are orthogonal. This package is primarily an implementation of spherical harmonics (in 2D and 3D) but exploiting their
polynomial features.</p>
<p dir="auto">Currently this package focusses on support for
3D spherical harmonics. We use the convention of <a href="https://mikaelslevinsky.github.io/FastTransforms/transforms.html" rel="nofollow">FastTransforms</a> for real spherical harmonics:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; θ,φ = 0.1,0.2 # θ is polar, φ is azimuthal (physics convention)

julia&gt; sphericalharmonicy(ℓ, m, θ, φ)
0.07521112971423363 + 0.015246050775019674im"><pre>julia<span class="pl-k">&gt;</span> θ,φ <span class="pl-k">=</span> <span class="pl-c1">0.1</span>,<span class="pl-c1">0.2</span> <span class="pl-c"><span class="pl-c">#</span> θ is polar, φ is azimuthal (physics convention)</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sphericalharmonicy</span>(ℓ, m, θ, φ)
<span class="pl-c1">0.07521112971423363</span> <span class="pl-k">+</span> <span class="pl-c1">0.015246050775019674im</span></pre></div>
<p dir="auto">But we also allow function approximation, building on top of  <a href="https://github.com/JuliaApproximation/ContinuumArrays.jl">ContinuumArrays.jl</a> and <a href="https://github.com/JuliaApproximation/ClassicalOrthogonalPolynomials.jl">ClassicalOrthogonalPolynomials.jl</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; S = SphericalHarmonic() # A quasi-matrix representation of spherical harmonics
SphericalHarmonic{Complex{Float64}}

julia&gt; S[SphericalCoordinate(θ,φ),Block(ℓ+1)] # evaluate all spherical harmonics with specified ℓ
5-element Array{Complex{Float64},1}:
 0.003545977402630546 - 0.0014992151996309556im
  0.07521112971423363 - 0.015246050775019674im
    0.621352880681805 + 0.0im
  0.07521112971423363 + 0.015246050775019674im
 0.003545977402630546 + 0.0014992151996309556im

julia&gt; 𝐱 = axes(S,1) # represent the unit sphere as a quasi-vector
Inclusion(the 3-dimensional unit sphere)

julia&gt; f = 𝐱 -&gt; ((x,y,z) = 𝐱; exp(x)*cos(y*sin(z))); # function to be approximation

julia&gt; S \ f.(𝐱) # expansion coefficients, adaptively computed
∞-blocked ∞-element PseudoBlockArray{Complex{Float64},1,LazyArrays.CachedArray{Complex{Float64},1,Array{Complex{Float64},1},Zeros{Complex{Float64},1,Tuple{InfiniteArrays.OneToInf{Int64}}}},Tuple{BlockedUnitRange{ArrayLayouts.RangeCumsum{Int64,InfiniteArrays.InfStepRange{Int64,Int64}}}}}:
        4.05681442931116 + 0.0im                   
 ──────────────────────────────────────────────────
      1.5777291816142751 + 3.19754060061646e-16im  
  -8.006900295635809e-17 + 0.0im                   
      1.5777291816142751 - 3.539535261006306e-16im 
 ──────────────────────────────────────────────────
      0.3881560551355611 + 5.196884701505137e-17im 
  -7.035627371746071e-17 + 2.5784941810054987e-18im
    -0.30926350498081934 + 0.0im                   
   -6.82462130695514e-17 - 3.515332651034677e-18im 
      0.3881560551355611 - 6.271963079558218e-17im 
 ──────────────────────────────────────────────────
     0.06830566496722756 - 8.852861226980248e-17im 
 -2.3672451919730833e-17 + 2.642173739237023e-18im 
     -0.0514592471634392 - 1.5572791163000952e-17im
  1.1972144648274198e-16 + 0.0im                   
    -0.05145924716343915 + 1.5264133695821818e-17im
                         ⋮

julia&gt; f̃ = S * (S \ f.(𝐱)); # expansion of f in spherical harmonics

julia&gt; f̃[SphericalCoordinate(θ,φ)] # approximates f
1.1026374731849062 + 4.004893695029451e-16im"><pre>julia<span class="pl-k">&gt;</span> S <span class="pl-k">=</span> <span class="pl-c1">SphericalHarmonic</span>() <span class="pl-c"><span class="pl-c">#</span> A quasi-matrix representation of spherical harmonics</span>
SphericalHarmonic{Complex{Float64}}

julia<span class="pl-k">&gt;</span> S[<span class="pl-c1">SphericalCoordinate</span>(θ,φ),<span class="pl-c1">Block</span>(ℓ<span class="pl-k">+</span><span class="pl-c1">1</span>)] <span class="pl-c"><span class="pl-c">#</span> evaluate all spherical harmonics with specified ℓ</span>
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Complex{Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.003545977402630546</span> <span class="pl-k">-</span> <span class="pl-c1">0.0014992151996309556im</span>
  <span class="pl-c1">0.07521112971423363</span> <span class="pl-k">-</span> <span class="pl-c1">0.015246050775019674im</span>
    <span class="pl-c1">0.621352880681805</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>
  <span class="pl-c1">0.07521112971423363</span> <span class="pl-k">+</span> <span class="pl-c1">0.015246050775019674im</span>
 <span class="pl-c1">0.003545977402630546</span> <span class="pl-k">+</span> <span class="pl-c1">0.0014992151996309556im</span>

julia<span class="pl-k">&gt;</span> 𝐱 <span class="pl-k">=</span> <span class="pl-c1">axes</span>(S,<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> represent the unit sphere as a quasi-vector</span>
<span class="pl-c1">Inclusion</span>(the <span class="pl-c1">3</span><span class="pl-k">-</span>dimensional unit sphere)

julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> 𝐱 <span class="pl-k">-&gt;</span> ((x,y,z) <span class="pl-k">=</span> 𝐱; <span class="pl-c1">exp</span>(x)<span class="pl-k">*</span><span class="pl-c1">cos</span>(y<span class="pl-k">*</span><span class="pl-c1">sin</span>(z))); <span class="pl-c"><span class="pl-c">#</span> function to be approximation</span>

julia<span class="pl-k">&gt;</span> S <span class="pl-k">\</span> <span class="pl-c1">f</span>.(𝐱) <span class="pl-c"><span class="pl-c">#</span> expansion coefficients, adaptively computed</span>
∞<span class="pl-k">-</span>blocked ∞<span class="pl-k">-</span>element PseudoBlockArray{Complex{Float64},<span class="pl-c1">1</span>,LazyArrays<span class="pl-k">.</span>CachedArray{Complex{Float64},<span class="pl-c1">1</span>,Array{Complex{Float64},<span class="pl-c1">1</span>},Zeros{Complex{Float64},<span class="pl-c1">1</span>,Tuple{InfiniteArrays<span class="pl-k">.</span>OneToInf{Int64}}}},Tuple{BlockedUnitRange{ArrayLayouts<span class="pl-k">.</span>RangeCumsum{Int64,InfiniteArrays<span class="pl-k">.</span>InfStepRange{Int64,Int64}}}}}<span class="pl-k">:</span>
        <span class="pl-c1">4.05681442931116</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>                   
 ──────────────────────────────────────────────────
      <span class="pl-c1">1.5777291816142751</span> <span class="pl-k">+</span> <span class="pl-c1">3.19754060061646e-16im</span>  
  <span class="pl-k">-</span><span class="pl-c1">8.006900295635809e-17</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>                   
      <span class="pl-c1">1.5777291816142751</span> <span class="pl-k">-</span> <span class="pl-c1">3.539535261006306e-16im</span> 
 ──────────────────────────────────────────────────
      <span class="pl-c1">0.3881560551355611</span> <span class="pl-k">+</span> <span class="pl-c1">5.196884701505137e-17im</span> 
  <span class="pl-k">-</span><span class="pl-c1">7.035627371746071e-17</span> <span class="pl-k">+</span> <span class="pl-c1">2.5784941810054987e-18im</span>
    <span class="pl-k">-</span><span class="pl-c1">0.30926350498081934</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>                   
   <span class="pl-k">-</span><span class="pl-c1">6.82462130695514e-17</span> <span class="pl-k">-</span> <span class="pl-c1">3.515332651034677e-18im</span> 
      <span class="pl-c1">0.3881560551355611</span> <span class="pl-k">-</span> <span class="pl-c1">6.271963079558218e-17im</span> 
 ──────────────────────────────────────────────────
     <span class="pl-c1">0.06830566496722756</span> <span class="pl-k">-</span> <span class="pl-c1">8.852861226980248e-17im</span> 
 <span class="pl-k">-</span><span class="pl-c1">2.3672451919730833e-17</span> <span class="pl-k">+</span> <span class="pl-c1">2.642173739237023e-18im</span> 
     <span class="pl-k">-</span><span class="pl-c1">0.0514592471634392</span> <span class="pl-k">-</span> <span class="pl-c1">1.5572791163000952e-17im</span>
  <span class="pl-c1">1.1972144648274198e-16</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>                   
    <span class="pl-k">-</span><span class="pl-c1">0.05145924716343915</span> <span class="pl-k">+</span> <span class="pl-c1">1.5264133695821818e-17im</span>
                         ⋮

julia<span class="pl-k">&gt;</span> f̃ <span class="pl-k">=</span> S <span class="pl-k">*</span> (S <span class="pl-k">\</span> <span class="pl-c1">f</span>.(𝐱)); <span class="pl-c"><span class="pl-c">#</span> expansion of f in spherical harmonics</span>

julia<span class="pl-k">&gt;</span> f̃[<span class="pl-c1">SphericalCoordinate</span>(θ,φ)] <span class="pl-c"><span class="pl-c">#</span> approximates f</span>
<span class="pl-c1">1.1026374731849062</span> <span class="pl-k">+</span> <span class="pl-c1">4.004893695029451e-16im</span></pre></div>
</article></div>