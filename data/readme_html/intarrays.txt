<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-intarrays" class="anchor" aria-hidden="true" href="#intarrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IntArrays</h1>
<p dir="auto"><a href="https://travis-ci.org/bicycle1885/IntArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/22f14c9d4afe2cb5b6404fa8b11679ca8ec21dfc2ba00aec926d94a71c9c9319/68747470733a2f2f7472617669732d63692e6f72672f62696379636c65313838352f496e744172726179732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/bicycle1885/IntArrays.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">IntArrays.jl is a package for packed integer arrays.
An array type, <code>IntArray</code>, is exported from this package and some methods in
<code>Base</code> are extended for it.</p>
<p dir="auto">The <code>IntArray</code> type is defined as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="type IntArray{w,T&lt;:Unsigned,n} &lt;: AbstractArray{T,n}"><pre>type IntArray{w,T<span class="pl-k">&lt;:</span><span class="pl-c1">Unsigned</span>,n} <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractArray{T,n}</span></pre></div>
<p dir="auto">where</p>
<ul dir="auto">
<li><code>w</code>: the bit width of integers (i.e. the number of bits to encode an integer)</li>
<li><code>T</code>: the type of integers</li>
<li><code>n</code>: the number of dimensions in the array.</li>
</ul>
<p dir="auto">This works like normal arrays, but each element is packed in a buffer as compact as possible.
That means the total memory footprint can be reduced if you specify small <code>w</code>
value: the total size is about <code>w * length(int_array)</code> bits.
You can think of it as a generalization of <code>BitArray</code> defined in the standard library:
<code>IntArray</code> can store any (unsigned) integers, whereas <code>BitArray</code> is restricted
to <code>Bool</code>.
It is your responsibility to keep values between <code>0</code> and <code>2^w-1</code>; otherwise
values will be truncated to <code>w</code> bits with no warning.</p>
<p dir="auto">Like <code>Vector{T}</code> and <code>Matrix{T}</code> in <code>Base</code>, <code>IntVector{w,T}</code> and <code>IntMatrix{w,T}</code> are also defined as a type alias of <code>IntArray{w,T,n}</code>.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using IntArrays

julia&gt; ivec = IntVector{2}([0x00, 0x01, 0x03, 0x02])
4-element IntArrays.IntArray{2,UInt8,1}:
 0x00
 0x01
 0x03
 0x02

julia&gt; ivec[2]
0x01

julia&gt; ivec[2] = 0x03
0x03

julia&gt; ivec[2]
0x03"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> IntArrays

julia<span class="pl-k">&gt;</span> ivec <span class="pl-k">=</span> <span class="pl-c1">IntVector</span><span class="pl-c1">{2}</span>([<span class="pl-c1">0x00</span>, <span class="pl-c1">0x01</span>, <span class="pl-c1">0x03</span>, <span class="pl-c1">0x02</span>])
<span class="pl-c1">4</span><span class="pl-k">-</span>element IntArrays<span class="pl-k">.</span>IntArray{<span class="pl-c1">2</span>,UInt8,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0x00</span>
 <span class="pl-c1">0x01</span>
 <span class="pl-c1">0x03</span>
 <span class="pl-c1">0x02</span>

julia<span class="pl-k">&gt;</span> ivec[<span class="pl-c1">2</span>]
<span class="pl-c1">0x01</span>

julia<span class="pl-k">&gt;</span> ivec[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">0x03</span>
<span class="pl-c1">0x03</span>

julia<span class="pl-k">&gt;</span> ivec[<span class="pl-c1">2</span>]
<span class="pl-c1">0x03</span></pre></div>
<p dir="auto">See <a href="./tutorial.ipynb">tutorial.ipynb</a> for more details.</p>
<h2 dir="auto"><a id="user-content-plan" class="anchor" aria-hidden="true" href="#plan"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plan</h2>
<ul dir="auto">
<li>Make it behave more like usual arrays.</li>
<li>Store signed integers.</li>
</ul>
</article></div>