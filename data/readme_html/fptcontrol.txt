<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fptcontrol" class="anchor" aria-hidden="true" href="#fptcontrol"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FPTControl</h1>
<p><a href="https://travis-ci.org/krisztiankosi/FPTControl" rel="nofollow"><img src="https://camo.githubusercontent.com/c626e772e486eb2db0d8a3fd3de8076bded797aab4a1ecf1522fed9ad609273a/68747470733a2f2f7472617669732d63692e6f72672f6b7269737a7469616e6b6f73692f465054436f6e74726f6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/krisztiankosi/FPTControl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Fixed Point Transformation Based Control</p>
<p>Some examples can be found on my Control github repo.
<a href="https://github.com/krisztiankosi/Control">https://github.com/krisztiankosi/Control</a></p>
<p>The Original article for this method is in <a href="http://uni-obuda.hu/journal" rel="nofollow">Acta Polytechnica Hungarica</a> published by <a href="https://www.uni-obuda.hu" rel="nofollow">Óbuda University</a>
It is an Open Access Journal, IF for 2014: 0.649
<a href="http://uni-obuda.hu/journal/Tar_Bito_Nadai_Machado_17.pdf" rel="nofollow">Robust Fixed Point Transformations in Adaptive Control Using Local Basin of Attraction</a></p>
<p>##Usage examples</p>
<p>If we see a 2nd order system,</p>
<p>Kinematic Block</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="KB(n,lambda,errors,nominal)
"><pre><code>KB(n,lambda,errors,nominal)
</code></pre></div>
<p>in code:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="errors=[error_int,h,h_p]
qDes_pp[i]=KB(3,Λ,errors,qN_pp[i])
"><pre><code>errors=[error_int,h,h_p]
qDes_pp[i]=KB(3,Λ,errors,qN_pp[i])
</code></pre></div>
<p>Deformation functions</p>
<p>SISO case:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="G_SISO(past_input,past_response,desired,Kc,Bc,Ac)
"><pre><code>G_SISO(past_input,past_response,desired,Kc,Bc,Ac)
</code></pre></div>
<p>MIMO case:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="G_MIMO(past_input,past_response,desired,Kc,Bc,Ac)
"><pre><code>G_MIMO(past_input,past_response,desired,Kc,Bc,Ac)
</code></pre></div>
<p>using SISO in code:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="qDef_pp[i]=G_SISO(past_input,past_response,qDes_pp[i],K,B,A)
"><pre><code>qDef_pp[i]=G_SISO(past_input,past_response,qDes_pp[i],K,B,A)
</code></pre></div>
<p>Simple Euler Integral (rectangle method)</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Integ(Integral,step,input)
"><pre><code>Integ(Integral,step,input)
</code></pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="error_int=Integ(error_int,δt,h)
"><pre><code>error_int=Integ(error_int,δt,h)
</code></pre></div>
<p>Complete example using this toolbox can be found <a href="https://github.com/krisztiankosi/Control/blob/master/examples/RFPT_SISO/Duffing%20Oscillator%20with%20FPTControl%20Toolbox/Duffing_RFPT_with_FPTControl_v2.jl">here</a></p>
<p>The model is a simple Duffing Oscillator.</p>
<p>Manual: the first version of the manual is in the Manual folder (pdf)</p>
</article></div>