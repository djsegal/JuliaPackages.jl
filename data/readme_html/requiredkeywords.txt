<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-requiredkeywords" class="anchor" aria-hidden="true" href="#requiredkeywords"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RequiredKeywords</h1>
<p dir="auto"><a href="https://travis-ci.org/adamslc/RequiredKeywords.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e903a3825041ddb945b90dc2753367f1bc30633244d401bb5871dbd4c42183bf/68747470733a2f2f7472617669732d63692e6f72672f6164616d736c632f52657175697265644b6579776f7264732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/adamslc/RequiredKeywords.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/adamslc/requiredkeywords-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cc632756db1688e1bb21deb9cdc989dc5ad585e4cd1ac1989bd0b86959376420/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f623871626d30336868396b6e687678623f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/b8qbm03hh9knhvxb?svg=true" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/adamslc/RequiredKeywords.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9e02997da4a44aa0c9e704eb8b91ab21cee5ba534c9e9f4f4d605f9ab6275525/687474703a2f2f636f6465636f762e696f2f6769746875622f6164616d736c632f52657175697265644b6579776f7264732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/adamslc/RequiredKeywords.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This package allows you to specify required keyword arguments, as suggusted in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="24117431" data-permission-text="Title is private" data-url="https://github.com/JuliaLang/julia/issues/5111" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/5111/hovercard" href="https://github.com/JuliaLang/julia/issues/5111">JuliaLang/julia#5111</a>.</p>
<p dir="auto">As of Julia version 0.7.0, this functionality is built in. From this version forward, the <code>@required_keywords</code> macro won't do anything.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using RequiredKeywords

julia&gt; @required_keywords f(x; y::Int64) = x*y
f (generic function with 1 method)

julia&gt; f(2,y=2)
4

julia&gt; f(2)
ERROR: Unassigned Keyword:  Required keyword y::Int64 not included.
Stacktrace:
 [1] f(::Int64) at ./REPL[5]:1"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> RequiredKeywords

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@required_keywords</span> <span class="pl-en">f</span>(x; y<span class="pl-k">::</span><span class="pl-c1">Int64</span>) <span class="pl-k">=</span> x<span class="pl-k">*</span>y
f (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">2</span>,y<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">2</span>)
ERROR<span class="pl-k">:</span> Unassigned Keyword<span class="pl-k">:</span>  Required keyword y<span class="pl-k">::</span><span class="pl-c1">Int64</span> not included.
Stacktrace<span class="pl-k">:</span>
 [<span class="pl-c1">1</span>] <span class="pl-c1">f</span>(<span class="pl-k">::</span><span class="pl-c1">Int64</span>) at <span class="pl-k">./</span>REPL[<span class="pl-c1">5</span>]<span class="pl-k">:</span><span class="pl-c1">1</span></pre></div>
</article></div>