<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-plumber" class="anchor" aria-hidden="true" href="#plumber"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Plumber</h1>
<p>Provides the <code>@pipe</code> macro which makes using the <code>|&gt;</code> syntax a little nicer.
Instead of writing an anonymous function like so:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = 10
f(x) = x^2
g(x,y) = x + y

x |&gt; f |&gt; x -&gt; g(x,x)  

"><pre>x <span class="pl-k">=</span> <span class="pl-c1">10</span>
<span class="pl-en">f</span>(x) <span class="pl-k">=</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-en">g</span>(x,y) <span class="pl-k">=</span> x <span class="pl-k">+</span> y

x <span class="pl-k">|&gt;</span> f <span class="pl-k">|&gt;</span> x <span class="pl-k">-&gt;</span> <span class="pl-c1">g</span>(x,x)  
</pre></div>
<p>You can reference the output with an underscore:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = 10
f(x) = x^2
g(x,y) = x + y

@pipe x |&gt; f |&gt; g(_,_)  
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">10</span>
<span class="pl-en">f</span>(x) <span class="pl-k">=</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-en">g</span>(x,y) <span class="pl-k">=</span> x <span class="pl-k">+</span> y

<span class="pl-c1">@pipe</span> x <span class="pl-k">|&gt;</span> f <span class="pl-k">|&gt;</span> <span class="pl-c1">g</span>(_,_)  </pre></div>
<p>Any code that uses underscores will be transformed, adding an anonymous function:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x |&gt; f |&gt; whale-&gt;begin
            g(whale, whale)
        end
"><pre>x <span class="pl-k">|&gt;</span> f <span class="pl-k">|&gt;</span> whale<span class="pl-k">-&gt;</span><span class="pl-k">begin</span>
            <span class="pl-c1">g</span>(whale, whale)
        <span class="pl-k">end</span></pre></div>
<p>Should work even for weird expressions:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = 10
@pipe(x |&gt; [_,_] |&gt; [_...,_...] ) == [10,10,10,10]
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">10</span>
<span class="pl-c1">@pipe</span>(x <span class="pl-k">|&gt;</span> [_,_] <span class="pl-k">|&gt;</span> [_<span class="pl-k">...</span>,_<span class="pl-k">...</span>] ) <span class="pl-k">==</span> [<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">10</span>]</pre></div>
<p>To install run:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add Plumber
"><pre>] add Plumber</pre></div>
</article></div>