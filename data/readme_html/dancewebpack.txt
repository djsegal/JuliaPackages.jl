<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dancewebpack" class="anchor" aria-hidden="true" href="#dancewebpack"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DanceWebpack</h1>
<p>Plugin to integrate Webpack and NodeJS environment into DanceJL project.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.com/DanceJL/DanceWebpack.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/10dd1ba1351236087b6973e4d295269e53d699cc88b5898a003c7e340fa68a08/68747470733a2f2f7472617669732d63692e636f6d2f44616e63654a4c2f44616e63655765627061636b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/DanceJL/DanceWebpack.jl.svg?branch=master" style="max-width:100%;"></a>  <a href="https://codecov.io/gh/DanceJL/DanceWebpack.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cedd6014e7e80131f2220af1048dc32a77cb6222a94b9aeaccb203b7c6a1856a/68747470733a2f2f636f6465636f762e696f2f67682f44616e63654a4c2f44616e63655765627061636b2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/DanceJL/DanceWebpack.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-1---introduction" class="anchor" aria-hidden="true" href="#1---introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>1 - Introduction</h2>
<p>Well structured frontend environment is crucial for any modern website, to make best use of responsive layouts or simply have more SEO optimised behaviour.</p>
<p>That said taking advantage of Webpack, DanceWebpack:</p>
<ul>
<li>Allows Dance to serve minified production files (separate CSS and JS files). Files saved to <code>static/dist</code> directory of your Dance app.</li>
<li>Uses <code>webpack-dev-server</code> on node port 3000 in development mode, in order to take advantage of <code>Hot Module Replacement</code> (no need refresh page to see changes).</li>
<li>Supports <code>css</code>, <code>scss</code>, <code>sass</code> and <code>js</code> file formats.</li>
<li>Supports ES6 style Javascript.</li>
<li>Comes pre-configured with Bootstrap4 and jQuery.</li>
<li>Pre-configured Javascript linting checker before creating Webpack bundle.</li>
<li>Supports Webpack bundling (chunks and asynchronous loading).</li>
</ul>
<p>Supplied Webpack integration is for very generic frontend environment: <code>css</code>, <code>scss</code>, <code>sass</code> and <code>js</code> files without any framework.
If you are using a frontend framework (e.g VueJS) for project, better rely on more specific Webpack integration directly offered by the framework.</p>
<p>That said <strong>aim of DanceWebpack is to take away abstraction in setting up frontend environment for average web developer not specialised in any frontend framework</strong>.</p>
<hr>
<h2><a id="user-content-2---installation" class="anchor" aria-hidden="true" href="#2---installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2 - Installation</h2>
<p>Package can be installed with Julia's package manager, either by using Pkg REPL mode (<em>press ]</em>):</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg&gt; add DanceWebpack
"><pre><code>pkg&gt; add DanceWebpack
</code></pre></div>
<p>or by using Pkg functions</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(&quot;DanceWebpack&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>DanceWebpack<span class="pl-pds">"</span></span>)</pre></div>
<p>Compatibility is with Julia 1.1 Dance 0.2.1 upward.</p>
<h2><a id="user-content-3---setup" class="anchor" aria-hidden="true" href="#3---setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>3 - Setup</h2>
<p><strong>Please make sure NodeJS is installed on your system.</strong></p>
<p>If using Linux or MacOS your package manager should easily allow this.
For Windows please download installer from <a href="https://nodejs.org" rel="nofollow">NodeJS project web page</a>.</p>
<h3><a id="user-content-31---file-generation" class="anchor" aria-hidden="true" href="#31---file-generation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>3.1 - File Generation</h3>
<p>Invoke terminal in project root directory and run:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DanceWebpack
setup()
"><pre><span class="pl-k">using</span> DanceWebpack
<span class="pl-c1">setup</span>()</pre></div>
<p>As output of running above will suggest, please cd into <code>static</code> dir and run <code>npm install</code> thereafter to set up NodeJS packages.</p>
<h3><a id="user-content-32---packagejson-metadata" class="anchor" aria-hidden="true" href="#32---packagejson-metadata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>3.2 - Package.json Metadata</h3>
<p>Note that depending on whether <code>authors</code>, <code>name</code> and <code>version</code> are specified in <code>Project.toml</code>, corresponding values in <code>static/package.json</code> will be automatically filled-in.</p>
<p>If not is case, values will simply be left blank.</p>
<h3><a id="user-content-33---adding-static-route--links-in-basehtml" class="anchor" aria-hidden="true" href="#33---adding-static-route--links-in-basehtml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>3.3 - Adding Static Route &amp; Links in <code>base.html</code></h3>
<p>Will automatically be appended to <code>routes.jl</code> (or equivalent as specified in project settings): <code>static_dir("/static", "static/dist")</code> entry.</p>
<p><code>base.html</code> (or equivalent as specified in project settings) will automatically have <code>&lt;link&gt;</code> and <code>&lt;script&gt;</code> tags appended and updated each time you compile static assets with Webpack (see "4.2 - Serving Webpack Bundle" section).</p>
<h2><a id="user-content-4---nodejs-integration" class="anchor" aria-hidden="true" href="#4---nodejs-integration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4 - NodeJS Integration</h2>
<p>Setup will create <code>src/js/main.js</code> and <code>src/css/main.css</code> files, which serve as boilerplate for you to add custom styling and logic.</p>
<p>As you can see in <code>src/js/main.js</code> as well as <code>dependencies</code> section of <code>package.json</code>, Bootstrap4 and jQuery come pre-configured.</p>
<p>Any other required NodeJS packages can be installed by running:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="npm add &lt;package name&gt;
"><pre><code>npm add &lt;package name&gt;
</code></pre></div>
<h3><a id="user-content-41---structure" class="anchor" aria-hidden="true" href="#41---structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.1 - Structure</h3>
<p>Javascript and CSS styling logic can be broken down into smaller module files.
These files are then loaded into <code>src/js/main.js</code> and <code>src/css/main.css</code>, where import path is relative to <code>src/js/main.js</code> and <code>src/css/main.css</code>.</p>
<p>In case of <code>css</code>, <code>scss</code> or <code>sass</code> files, under <code>src/css/main.css</code> add:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@import &quot;base/page&quot;;
"><pre><code>@import "base/page";
</code></pre></div>
<p>In case of <code>js</code> file, under <code>src/js/main.js</code> add:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="import &quot;./chat&quot;;
"><pre><code>import "./chat";
</code></pre></div>
<h4><a id="user-content-411---static-files" class="anchor" aria-hidden="true" href="#411---static-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.1.1 - Static Files</h4>
<p>One can also add media files under <code>src</code>. Supported formats are:</p>
<ul>
<li><code>png</code>, <code>svg</code>, <code>jpg</code>, <code>jpeg</code>, <code>gif</code> for images</li>
<li><code>woff</code>, <code>woff2</code>, <code>eot</code>, <code>ttf</code>, <code>otf</code> for fonts</li>
</ul>
<p>That said in order to take best advantage of Webpack bundling, it is recommended to serve all static files (images, fonts) via Javascript <code>require</code> calls.
Let Webpack optimise bundling process!</p>
<h4><a id="user-content-412---lazy-loading" class="anchor" aria-hidden="true" href="#412---lazy-loading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.1.2 - Lazy Loading</h4>
<p>Lazy-loading is also supported.
This means that browser will fetch resources only when required, speeding-up page loads.</p>
<p>As an example, consider chat integration via a button.
With demo code below, chat functionality will only be fetched by browser once user clicks button.</p>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="$('#js-button').click(function() {
  import(&quot;./chat&quot;).then(chat =&gt; {
    chat.init()
  })
});
"><pre><span class="pl-en">$</span><span class="pl-kos">(</span><span class="pl-s">'#js-button'</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">click</span><span class="pl-kos">(</span><span class="pl-k">function</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-k">import</span><span class="pl-kos">(</span><span class="pl-s">"./chat"</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">then</span><span class="pl-kos">(</span><span class="pl-s1">chat</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-s1">chat</span><span class="pl-kos">.</span><span class="pl-en">init</span><span class="pl-kos">(</span><span class="pl-kos">)</span>
  <span class="pl-kos">}</span><span class="pl-kos">)</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<h3><a id="user-content-42---serving-webpack-bundle" class="anchor" aria-hidden="true" href="#42---serving-webpack-bundle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.2 - Serving Webpack Bundle</h3>
<p>When compiling Webpack bundle, DanceWebpack will automatically add <code>&lt;script&gt;</code> and <code>&lt;link rel="stylesheet"&gt;</code> HTML tags to project's project base html template.</p>
<p>That said please understand difference between development and productions modes, explained here below.</p>
<h4><a id="user-content-421----development-mode" class="anchor" aria-hidden="true" href="#421----development-mode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.2.1 -  Development Mode</h4>
<p>From <code>static</code> directory run:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="npm run develop
"><pre><code>npm run develop
</code></pre></div>
<p>Static files will be served via Node server web socket on port 3000.
Source maps will also be supplied, allowing you to easily debug eventual errors.</p>
<p>Any changes you make to static files will automatically be sent to browser via <code>webpack-dev-server</code>'s <code>Hot Module Replacement</code>.
If working with framework such as ReactJS or VueJS, state of page will be conserved during process.</p>
<p><strong>Save time without re-compiling and reloading page!</strong></p>
<h4><a id="user-content-422--production-mode" class="anchor" aria-hidden="true" href="#422--production-mode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.2.2  Production Mode</h4>
<p>From <code>static</code> directory run:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="npm run build
"><pre><code>npm run build
</code></pre></div>
<p>This will output minified files to <code>static/dist</code> dir of your project.
Source maps are not supplied.</p>
<p>Please start Dance web server to serve these static assets.</p>
<h3><a id="user-content-43---javascript-linting" class="anchor" aria-hidden="true" href="#43---javascript-linting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>4.3 - Javascript Linting</h3>
<p>Running <code>npm run develop</code> and <code>npm run build</code> will automatically check your Javascript files for errors.
This is particularly useful when having to debug Javascript of a running web app in the browser.</p>
<p>After linter outputs errors, easy fixes can be applied by running:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="npm run lint:fix
"><pre><code>npm run lint:fix
</code></pre></div>
<p>Running <code>npm run develop</code> or <code>npm run build</code> again will warn of any persisting errors that you will need to manually fix.</p>
</article></div>