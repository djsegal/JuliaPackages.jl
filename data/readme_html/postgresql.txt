<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-postgresqljl" class="anchor" aria-hidden="true" href="#postgresqljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PostgreSQL.jl</h1>
<p><a href="https://travis-ci.org/JuliaDB/PostgreSQL.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5e86616efcbd35c104b95d187a5075bd1df7ffb0e3ac4c4ed657f9686a9d1885/68747470733a2f2f7472617669732d63692e6f72672f4a756c696144422f506f737467726553514c2e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaDB/PostgreSQL.jl.svg" style="max-width:100%;"></a>  <a href="https://coveralls.io/r/JuliaDB/PostgreSQL.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1fb182995da8123cbab1f03be6013ae4be5be775e0c94e1b20513bde70800be6/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f4a756c696144422f506f737467726553514c2e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/JuliaDB/PostgreSQL.jl.svg" style="max-width:100%;"></a>  <a href="http://codecov.io/github/JuliaDB/PostgreSQL.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0a74ed5155e9c7912c99ed55d0cc6f7b1c68ab8643c604d60ebf98a77b963b7a/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696144422f506f737467726553514c2e6a6c2f636f7665726167652e737667" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaDB/PostgreSQL.jl/coverage.svg" style="max-width:100%;"></a></p>
<p>An interface to PostgreSQL from Julia. Uses libpq (the C PostgreSQL API) and obeys the <a href="https://github.com/JuliaDB/DBI.jl">DBI.jl protocol</a>.</p>
<h2><a id="user-content-maintenance-notice" class="anchor" aria-hidden="true" href="#maintenance-notice"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Maintenance Notice</h2>
<p>I can no longer spend work time on this so this project is in maintenance mode (accepting PRs and attempting to resolve issues). New code on the <code>dbapi</code> branch (<a href="https://github.com/JuliaDB/DBAPI.jl">https://github.com/JuliaDB/DBAPI.jl</a>) represents the most recent work, which I will continue if I am in a position to do so again.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DBI
using PostgreSQL

conn = connect(Postgres, &quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;dbname&quot;, 5432)

stmt = prepare(conn, &quot;SELECT 1::bigint, 2.0::double precision, 'foo'::character varying, &quot; *
					 &quot;'foo'::character(10);&quot;)
result = execute(stmt)
for row in result
	# code
end

finish(stmt)

disconnect(conn)
"><pre><span class="pl-k">using</span> DBI
<span class="pl-k">using</span> PostgreSQL

conn <span class="pl-k">=</span> <span class="pl-c1">connect</span>(Postgres, <span class="pl-s"><span class="pl-pds">"</span>localhost<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>dbname<span class="pl-pds">"</span></span>, <span class="pl-c1">5432</span>)

stmt <span class="pl-k">=</span> <span class="pl-c1">prepare</span>(conn, <span class="pl-s"><span class="pl-pds">"</span>SELECT 1::bigint, 2.0::double precision, 'foo'::character varying, <span class="pl-pds">"</span></span> <span class="pl-k">*</span>
					 <span class="pl-s"><span class="pl-pds">"</span>'foo'::character(10);<span class="pl-pds">"</span></span>)
result <span class="pl-k">=</span> <span class="pl-c1">execute</span>(stmt)
<span class="pl-k">for</span> row <span class="pl-k">in</span> result
	<span class="pl-c"><span class="pl-c">#</span> code</span>
<span class="pl-k">end</span>

<span class="pl-c1">finish</span>(stmt)

<span class="pl-c1">disconnect</span>(conn)</pre></div>
<h3><a id="user-content-block-syntax" class="anchor" aria-hidden="true" href="#block-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Block Syntax</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DBI
using PostgreSQL

connect(Postgres, &quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;dbname&quot;, 5432) do conn
	#code
end
"><pre><span class="pl-k">using</span> DBI
<span class="pl-k">using</span> PostgreSQL

<span class="pl-c1">connect</span>(Postgres, <span class="pl-s"><span class="pl-pds">"</span>localhost<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>dbname<span class="pl-pds">"</span></span>, <span class="pl-c1">5432</span>) <span class="pl-k">do</span> conn
	<span class="pl-c"><span class="pl-c">#</span>code</span>
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h2>
<ul>
<li><a href="https://github.com/JuliaDB/DBI.jl">DBI.jl</a></li>
<li><a href="https://github.com/JuliaStats/DataFrames.jl">DataFrames.jl</a> &gt;= v0.8.0</li>
<li><a href="https://github.com/JuliaStats/DataArrays.jl">DataArrays.jl</a> &gt;= v0.3.4 for Julia 0.4, v0.3.8 for Julia 0.5</li>
<li>libpq shared library (comes with a standard PostgreSQL client installation)</li>
<li>Julia 0.4</li>
</ul>
<p>Tests require a local PostgreSQL server with a postgres user/database (installed by default with PostgreSQL server installations) with trusted authentication from localhost.</p>
<h2><a id="user-content-systems" class="anchor" aria-hidden="true" href="#systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Systems</h2>
<ul>
<li>Tested on Funtoo Linux and Windows 8</li>
<li>Should work on other systems provided libpq is avaiable (please file an issue if this is not the case)</li>
</ul>
<h2><a id="user-content-todo-soon" class="anchor" aria-hidden="true" href="#todo-soon"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODO (soon)</h2>
<ul>
<li>Implement more default PostgreSQL type handling</li>
<li>Test type handling overrides</li>
<li>More comprehensive error handling and tests</li>
<li>Support for COPY</li>
</ul>
<h2><a id="user-content-todo-not-soon" class="anchor" aria-hidden="true" href="#todo-not-soon"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODO (not soon)</h2>
<ul>
<li>Asynchronous connection support</li>
<li>Asynchronous Julia for handling asynchronous connections</li>
<li>Testing and compatibility with multiple versions of PostgreSQL and libpq</li>
</ul>
</article></div>