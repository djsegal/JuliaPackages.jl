<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-blue-noise-for-julia" class="anchor" aria-hidden="true" href="#blue-noise-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Blue Noise for Julia</h1>
<p>The <code>BlueNoise</code> package provides several pregenerated sources of noise. It can
be used as follows:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using BlueNoise
x = 123
y = 456
println(blue_noise_2d1v(x, y))
"><pre><span class="pl-k">using</span> BlueNoise
x <span class="pl-k">=</span> <span class="pl-c1">123</span>
y <span class="pl-k">=</span> <span class="pl-c1">456</span>
<span class="pl-c1">println</span>(<span class="pl-c1">blue_noise_2d1v</span>(x, y))</pre></div>
<p>Coordinates are integers and will automatically be wrapped to be in the domain
of the data. The algorithm used ensures that the noise can be tiled in this
way. The raw data can also be accessed like this:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using BlueNoise
using Plots
heatmap(BlueNoise.PREGENERATED_2D4V[:, :, 1])
"><pre><span class="pl-k">using</span> BlueNoise
<span class="pl-k">using</span> Plots
<span class="pl-c1">heatmap</span>(BlueNoise<span class="pl-k">.</span>PREGENERATED_2D4V[:, :, <span class="pl-c1">1</span>])</pre></div>
<p>Multiple values can be retrieved for a single coordinate, which is useful in
cases where multiple parameters need to be seeded:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using BlueNoise
(Δx, Δy) = blue_noise_2d2v(x, y)
"><pre><span class="pl-k">using</span> BlueNoise
(Δx, Δy) <span class="pl-k">=</span> <span class="pl-c1">blue_noise_2d2v</span>(x, y)</pre></div>
<p>The <code>BlueNoiseGeneration</code> package was used to generate the files included in
the <code>BlueNoise</code> package.</p>
</article></div>