<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-jsonpointer" class="anchor" aria-hidden="true" href="#jsonpointer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>JSONPointer</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ad8758fbaebbced78645b98e446c0bb5ec223676ed61700184320887cadbfb8e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"><img src="https://camo.githubusercontent.com/ad8758fbaebbced78645b98e446c0bb5ec223676ed61700184320887cadbfb8e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="LICENSE MIT" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square" style="max-width: 100%;"></a>
<a href="https://github.com/YongHee-Kim/JSONPointer.jl/actions/workflows/ci-master.yml"><img src="https://github.com/YongHee-Kim/JSONPointer.jl/actions/workflows/ci-master.yml/badge.svg" alt="Run CI" style="max-width: 100%;"></a>
<a href="https://yonghee-kim.github.io/JSONPointer.jl/coverage/index" rel="nofollow"><img src="https://github.com/YongHee-Kim/JSONPointer.jl/raw/gh-pages/docs/coverage/badge_linecoverage.svg" alt="Converage" style="max-width: 100%;"></a></p>
<p dir="auto">Implementation of JSON Pointers according to <a href="https://www.rfc-editor.org/rfc/rfc6901" rel="nofollow">RFC 6901</a></p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto"><a href="https://tools.ietf.org/html/rfc6901/" rel="nofollow">JSONPointer</a> is a Unicode string containing a sequence of zero or more reference tokens, each prefixed by a '/' (%x2F) character.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<h3 dir="auto"><a id="user-content-constructing-dictionary" class="anchor" aria-hidden="true" href="#constructing-dictionary"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constructing Dictionary</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JSONPointer

julia&gt;p1 = j&quot;/a/1/b&quot;
      p2 = j&quot;/a/2/b&quot;
      data = PointerDict(p1 =&gt;1, p2 =&gt; 2)
PointerDict{String,Any} with 1 entry:
  &quot;a&quot; =&gt; Any[OrderedDict{String,Any}(&quot;b&quot;=&gt;1), OrderedDict{String,Any}(&quot;b&quot;=&gt;2)]
"><pre><span class="pl-k">using</span> JSONPointer

julia<span class="pl-k">&gt;</span>p1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a/1/b<span class="pl-pds">"</span></span>
      p2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a/2/b<span class="pl-pds">"</span></span>
      data <span class="pl-k">=</span> <span class="pl-c1">PointerDict</span>(p1 <span class="pl-k">=&gt;</span><span class="pl-c1">1</span>, p2 <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>)
PointerDict{String,Any} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> Any[<span class="pl-c1">OrderedDict</span><span class="pl-c1">{String,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1</span>), <span class="pl-c1">OrderedDict</span><span class="pl-c1">{String,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">2</span>)]
</pre></div>
<h3 dir="auto"><a id="user-content-accessing-nested-data" class="anchor" aria-hidden="true" href="#accessing-nested-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Accessing nested data</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JSONPointer

julia&gt; arr = [[10, 20, 30, [&quot;me&quot;]]]
       arr[j&quot;/1&quot;] == [10, 20, 30, [&quot;me&quot;]]
       arr[j&quot;/1/2&quot;] == 20
       arr[j&quot;/1/4&quot;] == [&quot;me&quot;]
       arr[j&quot;/1/4/1&quot;] == &quot;me&quot;

julia&gt; dict = PointerDict(&quot;a&quot; =&gt; Dict(&quot;b&quot; =&gt; Dict(&quot;c&quot; =&gt; [100, Dict(&quot;d&quot; =&gt; 200)])))
       dict[j&quot;/a&quot;]
       dict[j&quot;/a/b&quot;]
       dict[j&quot;/a/b/c/1&quot;]
       dict[j&quot;/a/b/c/2/d&quot;]"><pre><span class="pl-k">using</span> JSONPointer

julia<span class="pl-k">&gt;</span> arr <span class="pl-k">=</span> [[<span class="pl-c1">10</span>, <span class="pl-c1">20</span>, <span class="pl-c1">30</span>, [<span class="pl-s"><span class="pl-pds">"</span>me<span class="pl-pds">"</span></span>]]]
       arr[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/1<span class="pl-pds">"</span></span>] <span class="pl-k">==</span> [<span class="pl-c1">10</span>, <span class="pl-c1">20</span>, <span class="pl-c1">30</span>, [<span class="pl-s"><span class="pl-pds">"</span>me<span class="pl-pds">"</span></span>]]
       arr[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/1/2<span class="pl-pds">"</span></span>] <span class="pl-k">==</span> <span class="pl-c1">20</span>
       arr[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/1/4<span class="pl-pds">"</span></span>] <span class="pl-k">==</span> [<span class="pl-s"><span class="pl-pds">"</span>me<span class="pl-pds">"</span></span>]
       arr[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/1/4/1<span class="pl-pds">"</span></span>] <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>me<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> dict <span class="pl-k">=</span> <span class="pl-c1">PointerDict</span>(<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">100</span>, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>d<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">200</span>)])))
       dict[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a<span class="pl-pds">"</span></span>]
       dict[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a/b<span class="pl-pds">"</span></span>]
       dict[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a/b/c/1<span class="pl-pds">"</span></span>]
       dict[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a/b/c/2/d<span class="pl-pds">"</span></span>]</pre></div>
<h2 dir="auto"><a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Advanced</h2>
<h2 dir="auto"><a id="user-content-array-index" class="anchor" aria-hidden="true" href="#array-index"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Array-index</h2>
<ul dir="auto">
<li>Note that Julia is using 1-based index, 0-based index can be used if argument <code>shift_index = true</code> is given to a <code>JSONPointer.Pointer</code> constructer</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;JSONPointer.Pointer(j&quot;/foo/0&quot;; shift_index = true)"><pre>julia<span class="pl-k">&gt;</span>JSONPointer<span class="pl-k">.</span><span class="pl-c1">Pointer</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/foo/0<span class="pl-pds">"</span></span>; shift_index <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<h3 dir="auto"><a id="user-content-constructing-dictionary-with-static-type" class="anchor" aria-hidden="true" href="#constructing-dictionary-with-static-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constructing Dictionary With Static type</h3>
<p dir="auto">You can enforce type with <code>::T</code> at the end of pointer:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="  p1 = j&quot;/a::array&quot;
  p2 = j&quot;/b/2::string&quot;
  data = PointerDict(p1 =&gt; [1,2,3], p2 =&gt; &quot;Must be a String&quot;)
  data = PointerDict(p1 =&gt; &quot;MethodError&quot;, p2 =&gt; &quot;Must be a String&quot;)
  data = PointerDict(p1 =&gt; [1,2,3], p2 =&gt; :MethodError)"><pre>  p1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/a::array<span class="pl-pds">"</span></span>
  p2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/b/2::string<span class="pl-pds">"</span></span>
  data <span class="pl-k">=</span> <span class="pl-c1">PointerDict</span>(p1 <span class="pl-k">=&gt;</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], p2 <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Must be a String<span class="pl-pds">"</span></span>)
  data <span class="pl-k">=</span> <span class="pl-c1">PointerDict</span>(p1 <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>MethodError<span class="pl-pds">"</span></span>, p2 <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Must be a String<span class="pl-pds">"</span></span>)
  data <span class="pl-k">=</span> <span class="pl-c1">PointerDict</span>(p1 <span class="pl-k">=&gt;</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], p2 <span class="pl-k">=&gt;</span> <span class="pl-c1">:MethodError</span>)</pre></div>
<p dir="auto">The type <code>T</code> must be one of the six types supported by JSON:</p>
<ul dir="auto">
<li><code>::string</code></li>
<li><code>::number</code></li>
<li><code>::object</code></li>
<li><code>::array</code></li>
<li><code>::boolean</code></li>
<li><code>::null</code></li>
</ul>
<h3 dir="auto"><a id="user-content-string-number-as-a-key" class="anchor" aria-hidden="true" href="#string-number-as-a-key"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>String number as a key</h3>
<p dir="auto">If you need to use a string number as key for dict, put '' in front of a number</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="    p1 = j&quot;/\10&quot;
    data = PointerDict(p1 =&gt; &quot;this won't be a array&quot;)

    data[p1]"><pre>    p1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">j</span>"</span>/<span class="pl-cce">\1</span>0<span class="pl-pds">"</span></span>
    data <span class="pl-k">=</span> <span class="pl-c1">PointerDict</span>(p1 <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>this won't be a array<span class="pl-pds">"</span></span>)

    data[p1]</pre></div>
</article></div>