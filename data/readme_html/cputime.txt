<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-cputimejl" class="anchor" aria-hidden="true" href="#cputimejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CPUTime.jl</h1>
<p><a href="https://travis-ci.org/schmrlng/CPUTime.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eeb9e27f470bc02c693f4618bfdad8db2aa5367a/68747470733a2f2f7472617669732d63692e6f72672f7363686d726c6e672f43505554696d652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/schmrlng/CPUTime.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A Julia package for measuring elapsed CPU time in Julia.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>You should only use this package if you know what you're doing - CPU time on multi-core processors is a tricky beast. Please at least read the discussion in <a href="https://github.com/schmrlng/CPUTime.jl/issues/1">Issue #1</a> before proceeding. Once you've done that, to install call:</p>
<pre><code>Pkg.add("CPUTime")
</code></pre>
<p>from the Julia command line.</p>
<h2><a id="user-content-functions-and-macros" class="anchor" aria-hidden="true" href="#functions-and-macros"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functions and Macros</h2>
<p>The exported functions and macros, as well as their absolute time equivalents, are listed in the following table.</p>
<table>
<thead>
<tr>
<th>Real time (Julia standard library)</th>
<th>CPU time (CPUTime.jl)</th>
</tr>
</thead>
<tbody>
<tr>
<td>time_ns()</td>
<td>CPUtime_us()</td>
</tr>
<tr>
<td>tic()</td>
<td>CPUtic()</td>
</tr>
<tr>
<td>toq()</td>
<td>CPUtoq()</td>
</tr>
<tr>
<td>toc()</td>
<td>CPUtoc()</td>
</tr>
<tr>
<td>@time</td>
<td>@CPUtime</td>
</tr>
<tr>
<td>@elapsed</td>
<td>@CPUelapsed</td>
</tr>
</tbody>
</table>
<p>Note that the finest resolution for CPU time is microseconds, as opposed to nanoseconds for absolute time.</p>
<h2><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage Example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CPUTime

<span class="pl-k">function</span> <span class="pl-en">add_and_sleep</span>()
    x <span class="pl-k">=</span> <span class="pl-c1">0</span>
    <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000_000</span>
        x <span class="pl-k">+=</span> i
    <span class="pl-k">end</span>
    <span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>)
    x
<span class="pl-k">end</span>

<span class="pl-c1">@time</span> <span class="pl-c1">@CPUtime</span> <span class="pl-c1">add_and_sleep</span>()</pre></div>
<pre><code>elapsed CPU time: 0.000174 seconds
  1.005624 seconds (32 allocations: 1.109 KiB)
50000005000000
</code></pre>
</article></div>