<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-interpolatedpdfsjl" class="anchor" aria-hidden="true" href="#interpolatedpdfsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>InterpolatedPDFs.jl</h1>
<p><a href="https://m-wells.github.io/InterpolatedPDFs.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://m-wells.github.io/InterpolatedPDFs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/m-wells/InterpolatedPDFs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/48e59f90b12819c22f7e9f881cf114c2000e2ce1/68747470733a2f2f7472617669732d63692e636f6d2f6d2d77656c6c732f496e746572706f6c61746564504446732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/m-wells/InterpolatedPDFs.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/m-wells/InterpolatedPDFs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/742c75caae23cafeaaed6c1a8e5f7120fee447e3/68747470733a2f2f636f6465636f762e696f2f67682f6d2d77656c6c732f496e746572706f6c61746564504446732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/m-wells/InterpolatedPDFs.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/m-wells/InterpolatedPDFs.jl?branch=master&amp;kill_cache=1" rel="nofollow"><img src="https://camo.githubusercontent.com/f211c4d064b4c811183a64c5e79cb1e59781e9ef/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d2d77656c6c732f496e746572706f6c61746564504446732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/m-wells/InterpolatedPDFs.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Simple extension of <a href="https://github.com/JuliaStats/Distributions.jl">Distributions.jl</a> providing support for interpolated pdfs.
Currently only one type is implemented</p>
<pre><code>LinearInterpolatedPDF{T,1,ITP,IT} &lt;: ContinuousUnivariateDistribution
</code></pre>
<p>A continuous univariate linearly interpolated distribution.
The pdf, cdf, and inverse cdf are interpolated using <a href="https://github.com/JuliaMath/Interpolations.jl">Interpolations.jl</a>.</p>
<h1><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h1>
<p>The easiest way to create a distribution is to use <code>fit_cpl</code></p>
<pre><code>julia&gt; x = range(0,pi/2,length=10)
0.0:0.17453292519943295:1.5707963267948966

julia&gt; s = acos.(rand(1000));

julia&gt; d = fit_cpl(x,s)
LinearInterpolatedPDF{Float64,1,Interpolations.ScaledInterpolation{Float64,1,Interpolations.BSplineInterpolation{Float64,1,Array{Float64,1},Interpolations.BSpline{Interpolations.Linear},Tuple{Base.OneTo{Int64}}},Interpolations.BSpline{Interpolations.Linear},Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Interpolations.BSpline{Interpolations.Linear}}(
pdf_itp: 10-element extrapolate(scale(interpolate(::Array{Float64,1}, BSpline(Interpolations.Linear())), (0.0:0.17453292519943295:1.5707963267948966,)), Throw()) with element type Float64:
 0.02655632680672288
 0.18866696639956113
 0.37005881440239063
 0.45112960446603656
 0.6649161652243859
 0.8050441586869701
 0.7890753253462918
 0.89708286054468
 1.042727491447746
 1.0151968027736178
cdf_itp: 10-element extrapolate(scale(interpolate(::Array{Float64,1}, BSpline(Interpolations.Linear())), (0.0:0.17453292519943295:1.5707963267948966,)), Throw()) with element type Float64:
 0.0
 0.018781775467173994
 0.06753979792102491
 0.1392020063635268
 0.23659537278378787
 0.36487361041346533
 0.5039867787463332
 0.6511318390125935
 0.8204122265452835
 1.0
invcdf_itp: 10-element extrapolate(interpolate((::Array{Float64,1},), ::Array{Float64,1}, Gridded(Interpolations.Linear())), Throw()) with element type Float64:
 0.0
 0.17453292519943295
 0.3490658503988659
 0.5235987755982988
 0.6981317007977318
 0.8726646259971648
 1.0471975511965976
 1.2217304763960306
 1.3962634015954636
 1.5707963267948966
)
</code></pre>
<p>After fitting the distribution you can do useful things like</p>
<pre><code>julia&gt; pdf(d,1)
0.7933936499734955

julia&gt; cdf(d,0.5)
0.12951248575312788

julia&gt; quantile(d,0.9)
1.4736110218924767

julia&gt; rand(d,10)
10-element Array{Float64,1}:
 0.27565417806686643
 1.074337923663701
 1.237530643864552
 0.4744230962935516
 1.18776692814955
 0.8436400094154567
 1.0835325983972564
 1.1413257453616537
 0.8701141622223004
 1.1702951450424084
</code></pre>
</article></div>