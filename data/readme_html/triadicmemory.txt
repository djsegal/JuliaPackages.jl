<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-triadicmemory" class="anchor" aria-hidden="true" href="#triadicmemory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TriadicMemory</h1>
<p dir="auto"><a href="https://github.com/alior101/TriadicMemory.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/alior101/TriadicMemory.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">Julia implementation based on <a href="https://github.com/PeterOvermann">https://github.com/PeterOvermann</a> with optimization and improvements from <a href="https://github.com/rogerturner/TriadicMemory">https://github.com/rogerturner/TriadicMemory</a>.</p>
<p dir="auto">See PeterOverman github for detailed algorithm documentation.</p>
<p dir="auto">Example:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;src/examples.jl&quot;)
Memorizing x=[1, 2, 3, 4],y=[5, 6, 7, 8], z=[9, 10, 11, 12]

Querying z given x,y
Querying with x=[1, 2, 3, 4],y=[5, 6, 7, 8], z=missing
Memorized z is Int16[9, 10, 11, 12]

Querying x given y,z
Querying with x=missing,y=[5, 6, 7, 8], z=[9, 10, 11, 12]
Memorized x is Int16[1, 2, 3, 4]

Querying y given x,z
Querying with x=[1, 2, 3, 4],y=missing, z=[9, 10, 11, 12]
Memorized y is Int16[5, 6, 7, 8]"><pre class="notranslate"><code>julia&gt; include("src/examples.jl")
Memorizing x=[1, 2, 3, 4],y=[5, 6, 7, 8], z=[9, 10, 11, 12]

Querying z given x,y
Querying with x=[1, 2, 3, 4],y=[5, 6, 7, 8], z=missing
Memorized z is Int16[9, 10, 11, 12]

Querying x given y,z
Querying with x=missing,y=[5, 6, 7, 8], z=[9, 10, 11, 12]
Memorized x is Int16[1, 2, 3, 4]

Querying y given x,z
Querying with x=[1, 2, 3, 4],y=missing, z=[9, 10, 11, 12]
Memorized y is Int16[5, 6, 7, 8]
</code></pre></div>
</article></div>