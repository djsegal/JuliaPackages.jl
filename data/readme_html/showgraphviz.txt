<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-showgraphviz-derive-various-show-methods-from-textvndgraphviz" class="anchor" aria-hidden="true" href="#showgraphviz-derive-various-show-methods-from-textvndgraphviz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ShowGraphviz: Derive various <code>show</code> methods from <code>text/vnd.graphviz</code></h1>
<p dir="auto">The main API of ShowGraphviz.jl is <code>@deriveall</code>. Given a type that defines
<code>show</code> on DOT language  MIME type<code>text/vnd.graphviz</code>, it defines <code>show</code> methods
for various image types such as PNG, GIF, SVG, PDF, etc.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct HelloWorld end

Base.show(io::IO, ::MIME&quot;text/vnd.graphviz&quot;, ::HelloWorld) =
    print(io, &quot;digraph G {Hello-&gt;World}&quot;)

using ShowGraphviz
ShowGraphviz.@deriveall HelloWorld

svg = sprint(show, &quot;image/svg+xml&quot;, HelloWorld())
occursin(&quot;&lt;svg&quot;, svg)

# output
true"><pre><span class="pl-k">struct</span> HelloWorld <span class="pl-k">end</span>

Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, <span class="pl-k">::</span><span class="pl-c1">MIME"text/vnd.graphviz"</span>, <span class="pl-k">::</span><span class="pl-c1">HelloWorld</span>) <span class="pl-k">=</span>
    <span class="pl-c1">print</span>(io, <span class="pl-s"><span class="pl-pds">"</span>digraph G {Hello-&gt;World}<span class="pl-pds">"</span></span>)

<span class="pl-k">using</span> ShowGraphviz
ShowGraphviz<span class="pl-k">.</span><span class="pl-c1">@deriveall</span> HelloWorld

svg <span class="pl-k">=</span> <span class="pl-c1">sprint</span>(show, <span class="pl-s"><span class="pl-pds">"</span>image/svg+xml<span class="pl-pds">"</span></span>, <span class="pl-c1">HelloWorld</span>())
<span class="pl-c1">occursin</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;svg<span class="pl-pds">"</span></span>, svg)

<span class="pl-c"><span class="pl-c">#</span> output</span>
<span class="pl-c1">true</span></pre></div>
<h2 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h2>
<p dir="auto">All top level functions and types (but not modules) defined in <code>ShowGraphviz</code>
are public API.</p>
<h3 dir="auto"><a id="user-content-low-level-api" class="anchor" aria-hidden="true" href="#low-level-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Low-level API</h3>
<ul dir="auto">
<li><code>ShowGraphviz.@derive type mimes...</code>: Similar to <code>@deriveall</code> but only define
the methods with specified <code>mimes</code>.</li>
<li><code>ShowGraphviz.show(io, mime, x)</code>: show <code>x</code> as an image of MIME type <code>mime</code>
using <code>dot</code> command line program.</li>
<li><code>ShowGraphviz.setoption(io, option)</code>: Set command line option for <code>dot</code> program
via <code>IOContext</code>.</li>
<li><code>ShowGraphviz.addoption(io, option)</code>: Append option.</li>
<li><code>ShowGraphviz.getoption(io)</code>: Get option.</li>
</ul>
<h3 dir="auto"><a id="user-content-utilities" class="anchor" aria-hidden="true" href="#utilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Utilities</h3>
<ul dir="auto">
<li><code>ShowGraphviz.DOT(source)</code>: a wrapper object that converts DOT <code>source</code></li>
<li><code>ShowGraphviz.dot"source"</code>: create <code>DOT</code> using a string macro</li>
<li><code>ShowGraphviz.CONFIG.dot</code>: <code>dot</code> command</li>
<li><code>ShowGraphviz.CONFIG.dot_option</code>: global <code>dot</code> command option</li>
</ul>
</article></div>