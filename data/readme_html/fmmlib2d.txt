<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fmmlib2d" class="anchor" aria-hidden="true" href="#fmmlib2d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FMMLIB2D</h1>
<p><a href="https://travis-ci.org/ludvigak/FMMLIB2D.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/08452720eaee996506567fd347afe33e0aee34b2a67e577c6c323c078d956df5/68747470733a2f2f7472617669732d63692e6f72672f6c7564766967616b2f464d4d4c494232442e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ludvigak/FMMLIB2D.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/ludvigak/FMMLIB2D.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2621a9634a8b47a7f0e0ebd5a507726e91ddf58bc9d16417e1650873e70cadea/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c7564766967616b2f464d4d4c494232442e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/ludvigak/FMMLIB2D.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a Julia interface to the Fast Multipole Method (FMM) library
<a href="https://github.com/zgimbutas/fmmlib2d">FMMLIB2D</a> by Leslie Greengard and Zydrunas
Gimbutas. Currently v1.2.3 is used.</p>
<p>Documentation for the library can be found in the <a href="https://github.com/ludvigak/fmmlib2d/blob/master/doc/fmm2dpart_manual.pdf">FMMLIB2D User's Guide</a>.</p>
<p>This package currently provides interfaces to the FMM's for Laplace (real and complex), Helmholtz, and complex sums:
<code>rfmm2dpartself</code>, <code>rfmm2dparttarg</code>, <code>lfmm2dpartself</code>, <code>lfmm2dparttarg</code>, <code>hfmm2dparttarg</code>, <code>zfmm2dparttarg</code></p>
<p>The most convenient way of calling them is through the Julia interfaces with keyword arguments, e.g.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = rand(2, 10)
y = rand(2, 20)
q = rand(10) + 1im*rand(10)
U = lfmm2d(source=x, charge=q, target=y, ifgradtarg=true, tol=1e-9)
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span>)
y <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">2</span>, <span class="pl-c1">20</span>)
q <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>) <span class="pl-k">+</span> <span class="pl-c1">1im</span><span class="pl-k">*</span><span class="pl-c1">rand</span>(<span class="pl-c1">10</span>)
U <span class="pl-k">=</span> <span class="pl-c1">lfmm2d</span>(source<span class="pl-k">=</span>x, charge<span class="pl-k">=</span>q, target<span class="pl-k">=</span>y, ifgradtarg<span class="pl-k">=</span><span class="pl-c1">true</span>, tol<span class="pl-k">=</span><span class="pl-c1">1e-9</span>)</pre></div>
<h3><a id="user-content-real-laplace-fmm" class="anchor" aria-hidden="true" href="#real-laplace-fmm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Real Laplace FMM:</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U = rfmm2d(source::Array{Float64} = ...,
           target::Array{Float64} = ...,
           charge::Array{Float64} = ...,
           dipstr::Array{Float64} = ...,
           dipvec::Array{Float64} = ...,
           tol::Float64 = ...,
           ifpot::Bool = ...,
           ifgrad::Bool = ...,
           ifhess::Bool = ...,
           ifpottarg::Bool = ...,
           ifgradtarg::Bool = ...,
           ifhesstarg::Bool = ...,
           )
"><pre>U <span class="pl-k">=</span> <span class="pl-c1">rfmm2d</span>(source<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           target<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           charge<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipstr<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipvec<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           tol<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifpot<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifgrad<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifhess<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifpottarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifgradtarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifhesstarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           )</pre></div>
<p>Output format:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U.pot      (Nsrc)
U.grad     (2,Nsrc)
U.hess     (3,Nsrc)
U.pottarg  (Ntrg)
U.gradtarg (2,Ntrg)
U.hesstarg (3,Ntrg)
"><pre>U<span class="pl-k">.</span>pot      (Nsrc)
U<span class="pl-k">.</span>grad     (<span class="pl-c1">2</span>,Nsrc)
U<span class="pl-k">.</span>hess     (<span class="pl-c1">3</span>,Nsrc)
U<span class="pl-k">.</span>pottarg  (Ntrg)
U<span class="pl-k">.</span>gradtarg (<span class="pl-c1">2</span>,Ntrg)
U<span class="pl-k">.</span>hesstarg (<span class="pl-c1">3</span>,Ntrg)</pre></div>
<h3><a id="user-content-complex-laplace-fmm" class="anchor" aria-hidden="true" href="#complex-laplace-fmm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Complex Laplace FMM:</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U = lfmm2d(source::Array{Float64} = ...,
           target::Array{Float64} = ...,
           charge::Array{ComplexF64} = ...,
           dipstr::Array{ComplexF64} = ...,
           dipvec::Array{Float64} = ...,
           tol::Float64 = ...,
           ifpot::Bool = ...,
           ifgrad::Bool = ...,
           ifhess::Bool = ...,
           ifpottarg::Bool = ...,
           ifgradtarg::Bool = ...,
           ifhesstarg::Bool = ...,
           )
"><pre>U <span class="pl-k">=</span> <span class="pl-c1">lfmm2d</span>(source<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           target<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           charge<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipstr<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipvec<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           tol<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifpot<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifgrad<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifhess<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifpottarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifgradtarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifhesstarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           )</pre></div>
<p>Output format:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U.pot      (Nsrc)
U.grad     (2,Nsrc)
U.hess     (3,Nsrc)
U.pottarg  (Ntrg)
U.gradtarg (2,Ntrg)
U.hesstarg (3,Ntrg)
"><pre>U<span class="pl-k">.</span>pot      (Nsrc)
U<span class="pl-k">.</span>grad     (<span class="pl-c1">2</span>,Nsrc)
U<span class="pl-k">.</span>hess     (<span class="pl-c1">3</span>,Nsrc)
U<span class="pl-k">.</span>pottarg  (Ntrg)
U<span class="pl-k">.</span>gradtarg (<span class="pl-c1">2</span>,Ntrg)
U<span class="pl-k">.</span>hesstarg (<span class="pl-c1">3</span>,Ntrg)</pre></div>
<h3><a id="user-content-helmholtz-fmm" class="anchor" aria-hidden="true" href="#helmholtz-fmm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Helmholtz FMM:</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U = hfmm2d(source::Array{Float64} = ...,
           target::Array{Float64} = ...,
           charge::Array{ComplexF64} = ...,
           dipstr::Array{ComplexF64} = ...,
           dipvec::Array{Float64} = ...,
           tol::Float64 = ...,
           zk::ComplexF64 = ...,
           ifpot::Bool = ...,
           ifgrad::Bool = ...,
           ifhess::Bool = ...,
           ifpottarg::Bool = ...,
           ifgradtarg::Bool = ...,
           ifhesstarg::Bool = ...,
           )
"><pre>U <span class="pl-k">=</span> <span class="pl-c1">hfmm2d</span>(source<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           target<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           charge<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipstr<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipvec<span class="pl-k">::</span><span class="pl-c1">Array{Float64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           tol<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           zk<span class="pl-k">::</span><span class="pl-c1">ComplexF64</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifpot<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifgrad<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifhess<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifpottarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifgradtarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           ifhesstarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           )</pre></div>
<p>Output format:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U.pot      (Nsrc)
U.grad     (2,Nsrc)
U.hess     (3,Nsrc)
U.pottarg  (Ntrg)
U.gradtarg (2,Ntrg)
U.hesstarg (3,Ntrg)
"><pre>U<span class="pl-k">.</span>pot      (Nsrc)
U<span class="pl-k">.</span>grad     (<span class="pl-c1">2</span>,Nsrc)
U<span class="pl-k">.</span>hess     (<span class="pl-c1">3</span>,Nsrc)
U<span class="pl-k">.</span>pottarg  (Ntrg)
U<span class="pl-k">.</span>gradtarg (<span class="pl-c1">2</span>,Ntrg)
U<span class="pl-k">.</span>hesstarg (<span class="pl-c1">3</span>,Ntrg)</pre></div>
<h3><a id="user-content-complex-fmm" class="anchor" aria-hidden="true" href="#complex-fmm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Complex FMM:</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U = zfmm2d(source::Array{ComplexF64} = ...,
           target::Array{ComplexF64} = ...,
           dipstr::Array{ComplexF64} = ...,
           tol::Float64 = 1e-15,
           ifpot::Bool = true,
           ifgrad::Bool = false,
           ifhess::Bool = false,
           ifpottarg::Bool = true,
           ifgradtarg::Bool = false,
           ifhesstarg::Bool = false
           )
"><pre>U <span class="pl-k">=</span> <span class="pl-c1">zfmm2d</span>(source<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           target<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           dipstr<span class="pl-k">::</span><span class="pl-c1">Array{ComplexF64}</span> <span class="pl-k">=</span> <span class="pl-k">...</span>,
           tol<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">1e-15</span>,
           ifpot<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>,
           ifgrad<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
           ifhess<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
           ifpottarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>,
           ifgradtarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
           ifhesstarg<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>
           )</pre></div>
<p>Output format:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="U.pot      (Nsrc)
U.grad     (Nsrc)
U.hess     (Nsrc)
U.pottarg  (Ntrg)
U.gradtarg (Ntrg)
U.hesstarg (Ntrg)
"><pre>U<span class="pl-k">.</span>pot      (Nsrc)
U<span class="pl-k">.</span>grad     (Nsrc)
U<span class="pl-k">.</span>hess     (Nsrc)
U<span class="pl-k">.</span>pottarg  (Ntrg)
U<span class="pl-k">.</span>gradtarg (Ntrg)
U<span class="pl-k">.</span>hesstarg (Ntrg)</pre></div>
</article></div>