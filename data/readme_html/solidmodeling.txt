<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-solidmodelingjl" class="anchor" aria-hidden="true" href="#solidmodelingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SolidModeling.jl</h1>
<p><strong>Constructive Solid Geometry (CSG)</strong> is a solid modeling technique that uses boolean operations like union and intersection to combine 3D solids. This library implements CSG operations on using BSP trees.</p>
<p>It's ported from the excellent javascript library <a href="https://evanw.github.io/csg.js/docs/" rel="nofollow">csg.js</a> with some added features (like volume calculation).</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>You can install this package using the following Julia command:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.add(&quot;SolidModeling&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SolidModeling<span class="pl-pds">"</span></span>)</pre></div>
<p>The package can then be loaded and used in a Julia script or a Jupyter Notebook by:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using SolidModeling
"><pre><span class="pl-k">using</span> SolidModeling</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>You can perform 3 basic operations on two solids - <code>intersection</code>, <code>subtraction</code> and <code>union</code>.</p>
<h3><a id="user-content-union-of-two-cubes" class="anchor" aria-hidden="true" href="#union-of-two-cubes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Union of two cubes</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# 1x1x1 cube with center point in [0.5, 0.5, 0.5]
c1 = cube(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)

# 1.5x1.5x1.5 cube with center point in [1.25, 1.25, 1.25]
c2 = cube(0.5, 0.5, 0.5, 2.0, 2.0, 2.0)

# calculate union of the two cubes
c = bunion(c1, c2)

# calculate volume of the union if needed
vol = volume(c) 
"><pre><span class="pl-c"><span class="pl-c">#</span> 1x1x1 cube with center point in [0.5, 0.5, 0.5]</span>
c1 <span class="pl-k">=</span> <span class="pl-c1">cube</span>(<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>)

<span class="pl-c"><span class="pl-c">#</span> 1.5x1.5x1.5 cube with center point in [1.25, 1.25, 1.25]</span>
c2 <span class="pl-k">=</span> <span class="pl-c1">cube</span>(<span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>)

<span class="pl-c"><span class="pl-c">#</span> calculate union of the two cubes</span>
c <span class="pl-k">=</span> <span class="pl-c1">bunion</span>(c1, c2)

<span class="pl-c"><span class="pl-c">#</span> calculate volume of the union if needed</span>
vol <span class="pl-k">=</span> <span class="pl-c1">volume</span>(c) </pre></div>
<h3><a id="user-content-intersection-of-two-cubes" class="anchor" aria-hidden="true" href="#intersection-of-two-cubes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Intersection of two cubes</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# calculate intersection of the two cubes from above
c = bintersect(c1, c2)

# calculate volume of the union if needed
vol = volume(c) 
"><pre><span class="pl-c"><span class="pl-c">#</span> calculate intersection of the two cubes from above</span>
c <span class="pl-k">=</span> <span class="pl-c1">bintersect</span>(c1, c2)

<span class="pl-c"><span class="pl-c">#</span> calculate volume of the union if needed</span>
vol <span class="pl-k">=</span> <span class="pl-c1">volume</span>(c) </pre></div>
<h3><a id="user-content-subtraction-of-two-cubes" class="anchor" aria-hidden="true" href="#subtraction-of-two-cubes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Subtraction of two cubes</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# calculate subtraction of the two cubes from above (c1-c2)
c = bsubtract(c1, c2)

# calculate volume of the union if needed
vol = volume(c) 
"><pre><span class="pl-c"><span class="pl-c">#</span> calculate subtraction of the two cubes from above (c1-c2)</span>
c <span class="pl-k">=</span> <span class="pl-c1">bsubtract</span>(c1, c2)

<span class="pl-c"><span class="pl-c">#</span> calculate volume of the union if needed</span>
vol <span class="pl-k">=</span> <span class="pl-c1">volume</span>(c) </pre></div>
<p>To see more about CSG operations, see the <a href="https://evanw.github.io/csg.js/docs/" rel="nofollow">csg.js docs</a>.</p>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<ul>
<li><strong>Jan Vorisek</strong> &lt;<a href="mailto:jan@vorisek.me"><strong>jan@vorisek.me</strong></a>&gt;</li>
</ul>
<p>Original javascript code written by:</p>
<ul>
<li><a href="https://github.com/evanw"><strong>Evan Wallace</strong></a> - <a href="https://evanw.github.io/csg.js/docs/" rel="nofollow">csg.js</a></li>
</ul>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>This project is licensed under the <a href="LICENSE.md">MIT License</a>.</p>
</article></div>