<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-extensions-to-pycalljl" class="anchor" aria-hidden="true" href="#extensions-to-pycalljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extensions to PyCall.jl</h1>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add PyCallUtils<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> PyCall, PyCallUtils</pre></div>
<h3><a id="user-content-import-modules-and-functions-from-python-elegantly" class="anchor" aria-hidden="true" href="#import-modules-and-functions-from-python-elegantly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Import modules and functions from python elegantly</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@imports</span> numpy as np
<span class="pl-c1">@from</span> datetime imports datetime</pre></div>
<h3><a id="user-content-transfer-sparsematrixcsc-tofrom-scipy" class="anchor" aria-hidden="true" href="#transfer-sparsematrixcsc-tofrom-scipy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Transfer SparseMatrixCSC to/from scipy</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> SparseArrays
x <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">0.5</span>)
<span class="pl-c1">@assert</span> <span class="pl-c1">convert</span>(SparseMatrixCSC, <span class="pl-c1">PyObject</span>(x)) <span class="pl-k">==</span> x</pre></div>
<h3><a id="user-content-serializedeserialize-python-object-to-bsonjl" class="anchor" aria-hidden="true" href="#serializedeserialize-python-object-to-bsonjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Serialize/Deserialize python object to <a href="https://github.com/MikeInnes/BSON.jl">BSON.jl</a></h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BSON
BSON<span class="pl-k">.</span><span class="pl-c1">@save</span> <span class="pl-s"><span class="pl-pds">"</span>test.bson<span class="pl-pds">"</span></span> x <span class="pl-k">=</span> np<span class="pl-k">.</span>sin</pre></div>
<h3><a id="user-content-make-getindexsetindex-behave-exactly-like-in-python" class="anchor" aria-hidden="true" href="#make-getindexsetindex-behave-exactly-like-in-python"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Make getindex/setindex! behave exactly like in python</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@imports</span> pandas as pd
df <span class="pl-k">=</span> pd<span class="pl-k">.</span><span class="pl-c1">DataFrame</span>(<span class="pl-c1">Dict</span>(<span class="pl-c1">:name</span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>], <span class="pl-c1">:age</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">27</span>, <span class="pl-c1">30</span>]))
<span class="pl-c1">@assert</span> df<span class="pl-k">.</span>loc[<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span>] <span class="pl-k">==</span> <span class="pl-c1">30</span>
sr <span class="pl-k">=</span> pd<span class="pl-k">.</span><span class="pl-c1">Series</span>([<span class="pl-c1">3</span>, <span class="pl-c1">5</span>], index <span class="pl-k">=</span> [<span class="pl-c1">:a</span>, <span class="pl-c1">:b</span>])
<span class="pl-c1">@assert</span> <span class="pl-c1">all</span>(sr<span class="pl-k">.</span>iloc[<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>] <span class="pl-k">==</span> sr)
<span class="pl-c1">@assert</span> <span class="pl-c1">all</span>(sr<span class="pl-k">.</span>iloc[:] <span class="pl-k">==</span> sr)</pre></div>
</article></div>