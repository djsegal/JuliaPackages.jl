<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p>#mbr.jl
axis aligned minimum bounding box (MBR).
inspired by <a href="https://github.com/simplegeo/jts/blob/master/src/com/vividsolutions/jts/geom/Envelope.java">JTS Envelope</a></p>
<p>##api</p>
<p>Create bounding box using 4 values (min max x) &amp; (min max y)</p>
<p><em>MBR(x1::Float64, x2::Float64, y1::Float64, y2::Float64)</em></p>
<p>Create bounding box using 2 points</p>
<p><em>MBR(p1::Vector{Real}, p2::Vector{Real})</em></p>
<p><em>MBR(p1::(Real,Real), p2::(Real,Real))</em></p>
<p>##example</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>../mbr.jl<span class="pl-pds">"</span></span>)
m00 <span class="pl-k">=</span> <span class="pl-c1">MBR</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>);
<span class="pl-c1">expand</span>(m00, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>);

m0 <span class="pl-k">=</span> <span class="pl-c1">MBR</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>);
<span class="pl-c1">expandby</span>(m0, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>);

m1 <span class="pl-k">=</span> <span class="pl-c1">MBR</span>(<span class="pl-c1">0</span>, <span class="pl-c1">2</span>, <span class="pl-c1">0</span>, <span class="pl-c1">2</span>);
m2 <span class="pl-k">=</span> <span class="pl-c1">MBR</span>(<span class="pl-c1">4</span>, <span class="pl-c1">8</span>, <span class="pl-c1">5</span>, <span class="pl-c1">9</span>);

println (<span class="pl-c1">equals</span>(m0, m1));
println (<span class="pl-c1">equals</span>(m00, m1));
println (<span class="pl-c1">isnull</span>(<span class="pl-c1">intersection</span>(m1, m2)));
println (<span class="pl-c1">distance</span>(m1, m2)); <span class="pl-c"><span class="pl-c">#</span>hypot(2,3)</span>

<span class="pl-c"><span class="pl-c">#</span>MBR(1.0,2.000045,1.0,2.00001)</span>
<span class="pl-c1">println</span>(<span class="pl-c1">MBR</span>((<span class="pl-c1">1</span>, <span class="pl-c1">1</span>), (<span class="pl-c1">2.000045</span>, <span class="pl-c1">2.00001</span>)))

println (<span class="pl-c1">contains</span>(m1, [<span class="pl-c1">1.5</span>, <span class="pl-c1">1.5</span>])) <span class="pl-c"><span class="pl-c">#</span>true</span>
println (<span class="pl-c1">completely_contains</span>(m1, <span class="pl-c1">1.5</span>, <span class="pl-c1">1.5</span>)) <span class="pl-c"><span class="pl-c">#</span>true</span>

<span class="pl-c"><span class="pl-c">#</span>see test for more examples</span>
</pre></div>
<p>#test</p>
<p><code>julia test/test.jl</code></p>
<p>#lic
MIT</p>
</article></div>