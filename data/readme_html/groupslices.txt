<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-groupslicesjl" class="anchor" aria-hidden="true" href="#groupslicesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>GroupSlices.jl</h1>
<p><a href="https://travis-ci.org/mcabbott/GroupSlices.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b9987d55b30fde48d929c53bd0db3b52cc7b2f01/68747470733a2f2f7472617669732d63692e6f72672f6d636162626f74742f47726f7570536c696365732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mcabbott/GroupSlices.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>The function <code>groupslices</code> is related to <code>unique</code>, but instead of returning the unique elements,
it returns a list of indices showing where an equivalent entry first appeared. Like this:</p>
<div class="highlight highlight-source-julia"><pre>(v1<span class="pl-c1">.2</span>) pkg<span class="pl-k">&gt;</span> add GroupSlices

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GroupSlices

julia<span class="pl-k">&gt;</span> V <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-s"><span class="pl-pds">'</span>α<span class="pl-pds">'</span></span>:<span class="pl-s"><span class="pl-pds">'</span>γ<span class="pl-pds">'</span></span>, <span class="pl-c1">5</span>)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Char,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">'</span>β<span class="pl-pds">'</span></span>
 <span class="pl-s"><span class="pl-pds">'</span>β<span class="pl-pds">'</span></span>
 <span class="pl-s"><span class="pl-pds">'</span>γ<span class="pl-pds">'</span></span>
 <span class="pl-s"><span class="pl-pds">'</span>α<span class="pl-pds">'</span></span>
 <span class="pl-s"><span class="pl-pds">'</span>β<span class="pl-pds">'</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">groupslices</span>(V)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>
 <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">unique</span>(V)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{Char,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">'</span>β<span class="pl-pds">'</span></span>
 <span class="pl-s"><span class="pl-pds">'</span>γ<span class="pl-pds">'</span></span>
 <span class="pl-s"><span class="pl-pds">'</span>α<span class="pl-pds">'</span></span>

julia<span class="pl-k">&gt;</span> M <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">4</span>, <span class="pl-c1">2</span>,<span class="pl-c1">13</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">13</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">groupslices</span>(M, dims<span class="pl-k">=</span><span class="pl-c1">2</span>) <span class="pl-k">|&gt;</span> transpose
<span class="pl-c1">1</span><span class="pl-k">×</span><span class="pl-c1">13</span> LinearAlgebra<span class="pl-k">.</span>Transpose{Int64,Array{Int64,<span class="pl-c1">1</span>}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">7</span>  <span class="pl-c1">1</span>  <span class="pl-c1">7</span>  <span class="pl-c1">10</span>  <span class="pl-c1">11</span>  <span class="pl-c1">1</span>  <span class="pl-c1">10</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">unique</span>(M, dims<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">6</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span></pre></div>
<p>This package was written by <a href="https://github.com/AndyGreenwell/GroupSlices.jl">AndyGreenwell</a>
in 2015, originally for Julia PRs <a href="https://github.com/JuliaLang/julia/pull/14142">#14142</a> and <a href="https://github.com/JuliaLang/julia/pull/15503">#15503</a>.</p>
<p>My fork is now the registered version. It has minimal changes to make it work on Julia 1.0,
and to accept keywords like <code>dims=2</code> (although <code>groupslices(M,2)</code> will also still work).</p>
<p>See <a href="https://github.com/JuliaLang/julia/issues/1845">JuliaLang/julia#1845</a> for discussion of possible replacements.</p>
</article></div>