<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-stochdynamicprogramming" class="anchor" aria-hidden="true" href="#stochdynamicprogramming"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StochDynamicProgramming</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Social</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"></td>
<td align="center"><a href="https://travis-ci.org/JuliaStochOpt/StochDynamicProgramming.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4ec8b721c5ee57a6d42215a9a6a40bd6cb27aa53/68747470733a2f2f7472617669732d63692e6f72672f4a756c696153746f63684f70742f53746f636844796e616d696350726f6772616d6d696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaStochOpt/StochDynamicProgramming.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://gitter.im/JuliaOpt/StochasticDualDynamicProgramming.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7427c093bf9bab7107beb2652970deeb54c293ae/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c696153746f63684f70742f53746f636861737469634475616c44796e616d696350726f6772616d6d696e672e6a6c2e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/JuliaStochOpt/StochasticDualDynamicProgramming.jl.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="http://stochdynamicprogramming.readthedocs.io/en/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/github/JuliaStochOpt/StochDynamicProgramming.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6796a700bd0afb52b329f93ff3a98ca85f532e73/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c696153746f63684f70742f53746f636844796e616d696350726f6772616d6d696e672e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="https://codecov.io/github/JuliaStochOpt/StochDynamicProgramming.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow"><img src="https://camo.githubusercontent.com/844580b76167bd89eb6ec484c60c71856712a94e/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f612f61662f446973636f757273655f6c6f676f2e706e672f37393970782d446973636f757273655f6c6f676f2e706e67" width="64" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Discourse_logo.png/799px-Discourse_logo.png" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>This is a Julia package for optimizing controlled stochastic dynamic system,
in discrete time. It offers three methods of resolution :</p>
<ul>
<li><em>Stochastic Dual Dynamic Programming</em> (SDDP) algorithm.</li>
<li><em>Extensive formulation</em>.</li>
<li><em>Stochastic Dynamic Programming</em>.</li>
</ul>
<p>It is built on top of <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP</a>.</p>
<p>StochDynamicProgramming asks the user to provide explicit the cost <code>c(t, x, u, w)</code> and
dynamics <code>f(t, x, u, w)</code> functions. Also, the package was developed back
in 2016, and some parts of its API are not idiomatic, in a Julia sense.
For other implementations of the SDDP algorithm in Julia, we advise to
have a look at these two packages:</p>
<ul>
<li><a href="https://github.com/odow/SDDP.jl">SDDP.jl</a></li>
<li><a href="https://github.com/JuliaStochOpt/StructDualDynProg.jl">StructDualDynProg.jl</a></li>
</ul>
<h2><a id="user-content-what-problems-solves-this-package-" class="anchor" aria-hidden="true" href="#what-problems-solves-this-package-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What problems solves this package ?</h2>
<p>StochDynamicProgramming targets problems with</p>
<ul>
<li>Stage-wise independent discrete noise</li>
<li>Linear dynamics</li>
<li>Linear or convex piecewise linear costs</li>
</ul>
<p>Extension to non-linear formulation are under development.</p>
<h3><a id="user-content-why-sddp" class="anchor" aria-hidden="true" href="#why-sddp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Why SDDP?</h3>
<p>SDDP is a dynamic programming algorithm relying on cutting planes. The algorithm requires convexity
of the value function but does not discretize the state space. The complexity is linear in the
number of stage, and can accomodate higher dimension state spaces than standard dynamic programming.
The algorithm returns exact lower bound and estimated upper bound as well as approximate optimal
control strategies.</p>
<h3><a id="user-content-why-extensive-formulation-" class="anchor" aria-hidden="true" href="#why-extensive-formulation-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Why Extensive formulation ?</h3>
<p>An extensive formulation approach consists in representing the stochastic problem as a deterministic
one and then calling a standard deterministic solver. It is mainly usable in a linear
setting. Computational complexity is exponential in the number of stages.</p>
<h3><a id="user-content-why-stochastic-dynamic-programming-" class="anchor" aria-hidden="true" href="#why-stochastic-dynamic-programming-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Why Stochastic Dynamic Programming ?</h3>
<p>Dynamic Programming is a standard tool to solve stochastic optimal control problem with
independent noise. The method requires discretizing the state space, and its
complexity is exponential in the dimension of the state space.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>StochDynamicProgramming is a registered Julia package.
To install the package, open Julia and enter</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add StochDynamicProgramming
</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>IJulia Notebooks are provided to explain how this package works.
A first example on a two dams valley <a href="http://nbviewer.jupyter.org/github/leclere/StochDP-notebooks/blob/master/notebooks/damsvalley.ipynb" rel="nofollow">here</a>.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>The documentation is built with Sphinx, so ensure that this package is installed:</p>
<div class="highlight highlight-source-shell"><pre>sudo apt-get install python-sphinx
</pre></div>
<p>To build the documentation:</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c1">cd</span> doc
make html
</pre></div>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>Released under Mozilla Public License (see LICENSE.md for further details).</p>
</article></div>