<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/ahwillia/NonNegLeastSquares.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/54457f9cd933d824005925d77ba8700bce597de4/68747470733a2f2f7472617669732d63692e6f72672f616877696c6c69612f4e6f6e4e65674c65617374537175617265732e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/ahwillia/NonNegLeastSquares.jl.svg" style="max-width:100%;"></a>
<a href="LICENSE.md"><img src="https://camo.githubusercontent.com/4440d5deb3a53c4f8661ee765378e6071e7878e8/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"></a></p>
<h1><a id="user-content-nonnegleastsquaresjl" class="anchor" aria-hidden="true" href="#nonnegleastsquaresjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NonNegLeastSquares.jl</h1>
<p>Some nonnegative least squares solvers in Julia</p>
<h3><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage:</h3>
<p>The command <code>X = nonneg_lsq(A,B)</code> solves the optimization problem:</p>
<p>Minimize <code>||A*X - B||</code> subject to <code>Xᵢⱼ &gt;= 0</code>; in this case, <code>||.||</code> denotes the Frobenius norm (equivalently, the Euclidean norm if <code>B</code> is a column vector). The arguments <code>A</code> and <code>B</code> are respectively (m x k) and (m x n) matrices, so <code>X</code> is a (k x n) matrix.</p>
<h3><a id="user-content-currently-implemented-algorithms" class="anchor" aria-hidden="true" href="#currently-implemented-algorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Currently Implemented Algorithms:</h3>
<p>The code defaults to the "Pivot Method" algorithm. To specify a different algorithm, use the keyword argument <code>alg</code>. Currently implemented algorithms are:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">nonneg_lsq</span>(A,b;alg<span class="pl-k">=</span><span class="pl-c1">:nnls</span>)  <span class="pl-c"><span class="pl-c">#</span> NNLS</span>
<span class="pl-c1">nonneg_lsq</span>(A,b;alg<span class="pl-k">=</span><span class="pl-c1">:fnnls</span>) <span class="pl-c"><span class="pl-c">#</span> Fast NNLS</span>
<span class="pl-c1">nonneg_lsq</span>(A,b;alg<span class="pl-k">=</span><span class="pl-c1">:pivot</span>) <span class="pl-c"><span class="pl-c">#</span> Pivot Method</span>
<span class="pl-c1">nonneg_lsq</span>(A,b;alg<span class="pl-k">=</span><span class="pl-c1">:pivot</span>,variant<span class="pl-k">=</span><span class="pl-c1">:cache</span>) <span class="pl-c"><span class="pl-c">#</span> Pivot Method (cache pseudoinverse up front)</span>
<span class="pl-c1">nonneg_lsq</span>(A,b;alg<span class="pl-k">=</span><span class="pl-c1">:pivot</span>,variant<span class="pl-k">=</span><span class="pl-c1">:comb</span>) <span class="pl-c"><span class="pl-c">#</span> Pivot Method with combinatorial least-squares</span></pre></div>
<p>Default algorithm:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">nonneg_lsq</span>(A,b) <span class="pl-c"><span class="pl-c">#</span> pivot method</span></pre></div>
<p>The keyword <code>Gram</code> specifies whether the the inputs are Gram matrices (as shown in the examples below). This defaults to <code>false</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">nonneg_lsq</span>(A<span class="pl-k">'</span><span class="pl-k">*</span>A,A<span class="pl-k">'</span><span class="pl-k">*</span>b;alg<span class="pl-k">=</span><span class="pl-c1">:nnls</span>,gram<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> NNLS</span>
<span class="pl-c1">nonneg_lsq</span>(A<span class="pl-k">'</span><span class="pl-k">*</span>A,A<span class="pl-k">'</span><span class="pl-k">*</span>b;alg<span class="pl-k">=</span><span class="pl-c1">:fnnls</span>,gram<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> Fast NNLS</span></pre></div>
<p><em><strong>References</strong></em></p>
<ul>
<li><strong>NNLS</strong>:
<ul>
<li>Lawson, C.L. and R.J. Hanson, Solving Least-Squares Problems, Prentice-Hall, Chapter 23, p. 161, 1974.</li>
</ul>
</li>
<li><strong>Fast NNLS</strong>:
<ul>
<li>Bro R, De Jong S. <a href="https://dx.doi.org/10.1002%2F%28SICI%291099-128X%28199709%2F10%2911%3A5%3C393%3A%3AAID-CEM483%3E3.0.CO%3B2-L" rel="nofollow">A fast non-negativitity-constrained least squares algorithm</a>. Journal of Chemometrics. 11, 393–401 (1997)</li>
</ul>
</li>
<li><strong>Pivot Method</strong>:
<ul>
<li>Kim J, Park H. <a href="http://www.cc.gatech.edu/~hpark/papers/SISC_082117RR_Kim_Park.pdf" rel="nofollow">Fast nonnegative matrix factorization: an active-set-like method and comparisons</a>. SIAM Journal on Scientific Computing 33.6 (2011): 3261-3281.</li>
</ul>
</li>
</ul>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation:</h3>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>NonNegLeastSquares<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>NonNegLeastSquares<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Simple Example:</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> NonNegLeastSquares

A <span class="pl-k">=</span> [ <span class="pl-k">-</span><span class="pl-c1">0.24</span>  <span class="pl-k">-</span><span class="pl-c1">0.82</span>   <span class="pl-c1">1.35</span>   <span class="pl-c1">0.36</span>   <span class="pl-c1">0.35</span>
      <span class="pl-k">-</span><span class="pl-c1">0.53</span>  <span class="pl-k">-</span><span class="pl-c1">0.20</span>  <span class="pl-k">-</span><span class="pl-c1">0.76</span>   <span class="pl-c1">0.98</span>  <span class="pl-k">-</span><span class="pl-c1">0.54</span>
       <span class="pl-c1">0.22</span>   <span class="pl-c1">1.25</span>  <span class="pl-k">-</span><span class="pl-c1">1.60</span>  <span class="pl-k">-</span><span class="pl-c1">1.37</span>  <span class="pl-k">-</span><span class="pl-c1">1.94</span>
      <span class="pl-k">-</span><span class="pl-c1">0.51</span>  <span class="pl-k">-</span><span class="pl-c1">0.56</span>  <span class="pl-k">-</span><span class="pl-c1">0.08</span>   <span class="pl-c1">0.96</span>   <span class="pl-c1">0.46</span>
       <span class="pl-c1">0.48</span>  <span class="pl-k">-</span><span class="pl-c1">2.25</span>   <span class="pl-c1">0.38</span>   <span class="pl-c1">0.06</span>  <span class="pl-k">-</span><span class="pl-c1">1.29</span> ];

b <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">1.6</span>,  <span class="pl-c1">0.19</span>,  <span class="pl-c1">0.17</span>,  <span class="pl-c1">0.31</span>, <span class="pl-k">-</span><span class="pl-c1">1.27</span>];

x <span class="pl-k">=</span> <span class="pl-c1">nonneg_lsq</span>(A,b)</pre></div>
<p>Produces:</p>
<pre><code>5-element Array{Float64,1}:
 2.20104
 1.1901 
 0.0    
 1.55001
 0.0  
</code></pre>
<h3><a id="user-content-speed-comparisons" class="anchor" aria-hidden="true" href="#speed-comparisons"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Speed Comparisons:</h3>
<p>Run the <code>examples/performance_check.jl</code> script to compare the various algorithms that have been implemented on some synthetic data. Note that the variants <code>:cache</code> and <code>:comb</code> of the pivot method improve performance substantially when the inner dimension, <code>k</code>, is small. For example, when <code>m = 5000</code> and <code>n = 5000</code> and <code>k=3</code>:</p>
<pre><code>Comparing pivot:none to pivot:comb with A = randn(5000,3) and B = randn(5000,5000)
-------------------------------------------------------------------------------------
PIVOT:none →   2.337322 seconds (1.09 M allocations: 4.098 GB, 22.74% gc time)
PIVOT:comb →   0.096450 seconds (586.76 k allocations: 23.569 MB, 3.01% gc time)
</code></pre>
<h3><a id="user-content-algorithims-that-need-implementing" class="anchor" aria-hidden="true" href="#algorithims-that-need-implementing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Algorithims That Need Implementing:</h3>
<p>Pull requests are more than welcome, whether it is improving existing algorithms, or implementing new ones.</p>
<ul>
<li>ftp://net9.cs.utexas.edu/pub/techreports/tr06-54.pdf</li>
<li>Sra Suvrit Kim Dongmin and Inderjit S. Dhillon. A non-monotonic method for large-scale non-negative least squares. Optimization Methods and Software, 28(5):1012–1039, 2013.</li>
</ul>
</article></div>