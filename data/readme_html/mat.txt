<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-support-for-reading-and-writing-matlab-files-in-julia" class="anchor" aria-hidden="true" href="#support-for-reading-and-writing-matlab-files-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Support for reading and writing MATLAB files in Julia.</h1>
<p><a href="https://travis-ci.org/JuliaIO/MAT.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2c399ee321d15fed6c49a870561f0837b1462520/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961494f2f4d41542e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaIO/MAT.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This library can read MATLAB <code>.mat</code> files, both in the older v5/v6/v7 format, as well as the newer v7.3 format.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>This is installed using the standard tools of the <a href="https://julialang.github.io/Pkg.jl/v1/getting-started/" rel="nofollow">package manager</a>:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add MAT</pre></div>
<p>where you get the <code>pkg&gt;</code> prompt by hitting <code>]</code> as the first character of the line. (Exit <code>pkg</code> mode by hitting backspace or Ctrl-C as the first character of the line.)</p>
<p>See also the requirements for the <a href="https://github.com/timholy/HDF5.jl/">HDF5</a> module, used for "v7.3" files and for writing *.mat files.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>To load the module:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> MAT</pre></div>
<p>To read a single variable from a MAT file (compressed files are detected and handled automatically):</p>
<div class="highlight highlight-source-julia"><pre>file <span class="pl-k">=</span> <span class="pl-c1">matopen</span>(<span class="pl-s"><span class="pl-pds">"</span>matfile.mat<span class="pl-pds">"</span></span>)
<span class="pl-c1">read</span>(file, <span class="pl-s"><span class="pl-pds">"</span>varname<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> note that this does NOT introduce a variable ``varname`` into scope</span>
<span class="pl-c1">close</span>(file)</pre></div>
<p>To write a variable to a MAT file:</p>
<div class="highlight highlight-source-julia"><pre>file <span class="pl-k">=</span> <span class="pl-c1">matopen</span>(<span class="pl-s"><span class="pl-pds">"</span>matfile.mat<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>)
<span class="pl-c1">write</span>(file, <span class="pl-s"><span class="pl-pds">"</span>varname<span class="pl-pds">"</span></span>, variable)
<span class="pl-c1">close</span>(file)</pre></div>
<p>To read all variables from a MAT file as a Dict:</p>
<div class="highlight highlight-source-julia"><pre>vars <span class="pl-k">=</span> <span class="pl-c1">matread</span>(<span class="pl-s"><span class="pl-pds">"</span>matfile.mat<span class="pl-pds">"</span></span>)</pre></div>
<p>To write a Dict to a MAT file, using its keys as variable names.
The <code>compress</code> argument is optional, and compression is off by default:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">matwrite</span>(<span class="pl-s"><span class="pl-pds">"</span>matfile.mat<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(
	<span class="pl-s"><span class="pl-pds">"</span>myvar1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>,
	<span class="pl-s"><span class="pl-pds">"</span>myvar2<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
); compress <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p>To get a list of variable names in a MAT file:</p>
<div class="highlight highlight-source-julia"><pre>file <span class="pl-k">=</span> <span class="pl-c1">matopen</span>(<span class="pl-s"><span class="pl-pds">"</span>matfile.mat<span class="pl-pds">"</span></span>)
varnames <span class="pl-k">=</span> <span class="pl-c1">names</span>(file)
<span class="pl-c1">close</span>(file)</pre></div>
<p>To check for the presence of a variable name in a MAT file:</p>
<div class="highlight highlight-source-julia"><pre>file <span class="pl-k">=</span> <span class="pl-c1">matopen</span>(<span class="pl-s"><span class="pl-pds">"</span>matfile.mat<span class="pl-pds">"</span></span>)
<span class="pl-k">if</span> <span class="pl-c1">exists</span>(file, <span class="pl-s"><span class="pl-pds">"</span>variable<span class="pl-pds">"</span></span>)
    <span class="pl-c"><span class="pl-c">#</span> something</span>
<span class="pl-k">end</span>
<span class="pl-c1">close</span>(file)</pre></div>
<h2><a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Caveats</h2>
<ul>
<li>All files are written in MATLAB v7.3 format.</li>
<li>MATLAB v4 files are not currently supported.</li>
</ul>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Credits</h2>
<p>The MAT_HDF5 module, which provides read/write support for MATLAB v7.3 files, was written primarily by <a href="https://github.com/timholy/">Tim Holy</a>. The MAT_v5 module, which provides read support for MATLAB v5/v6/v7 files, was written primarily by <a href="https://github.com/simonster/">Simon Kornblith</a>.</p>
</article></div>