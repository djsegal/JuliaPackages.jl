<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-hermetic" class="anchor" aria-hidden="true" href="#hermetic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Hermetic</h1>
<p><a href="https://travis-ci.org/gragusa/Hermetic.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/157dce26179a19051c8a77458e6253c86947d17b/68747470733a2f2f7472617669732d63692e6f72672f677261677573612f4865726d657469632e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/gragusa/Hermetic.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/gragusa/Hermetic.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9f8d65dc9911ab8fb22f85cdf3e14a59fca3465a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f677261677573612f4865726d657469632e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/gragusa/Hermetic.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/gragusa/Hermetic.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ac0f5a80ab179867fbdd2c801472b41e12c7ec0f/687474703a2f2f636f6465636f762e696f2f6769746875622f677261677573612f4865726d657469632e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/gragusa/Hermetic.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/images/productpoly.png"><img src="docs/images/productpoly.png" alt="Product polynomia" style="max-width:100%;"></a></p>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Description</h2>
<p><code>Hermetic</code> is a package for working with multivariate standard and Hermitian polynomials.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h2>
<p>The package is not at the moment registered on <code>Metadata</code> (although will soon be). It can however be installed by cloning the github repository:</p>
<pre><code>Pkg.clone("https://github.com/gragusa/Hermetic.jl.git")
</code></pre>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic usage</h2>
<p>There is a basic type: <code>ProductPoly{T}</code> where the parameter <code>T</code> is either <code>Standard</code> or <code>Hermitian</code>.</p>
<h3><a id="user-content-standard-multivariate-polynomials" class="anchor" aria-hidden="true" href="#standard-multivariate-polynomials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Standard multivariate polynomials</h3>
<p>A fourth order polynomial of dimension 2 (that is, two variables) is instantiated by:</p>
<pre><code>p = ProductPoly(2, 4)
</code></pre>
<pre><code>ProductPoly{Standard} - Dimension: 2 - Order: 4
P(z) =
    + 1.0 z^(0,0)
    + 0.0 z^(0,1)
    + 0.0 z^(1,0)
    + 0.0 z^(0,2)
    + 0.0 z^(1,1)
    + 0.0 z^(2,0)
    + 0.0 z^(0,3)
    + 0.0 z^(1,2)
    + 0.0 z^(2,1)
    + 0.0 z^(3,0)
    + 0.0 z^(0,4)
    + 0.0 z^(1,3)
    + 0.0 z^(2,2)
    + 0.0 z^(3,1)
    + 0.0 z^(4,0)
</code></pre>
<p>The default constructor set all the coefficients equal to zero except the coefficient on <code>z^(0,0)</code>. Notice that the constructor leaves the polynomial uncompressed, that is, the constructor retains coefficients equal to zero.</p>
<p>Sometimes it can be useful only to consider terms whose exponents sum to an integer less than a given value. This is done using the <code>Iz</code> keyword. For instance,</p>
<pre><code>q = ProductPoly(2, 4, Iz = 2)
</code></pre>
<p>In this case, the all the terms <code>z^(i,j)</code> with <code>i + j &gt; Iz</code> are droppped from the poluynomial.</p>
<p>The coefficients of the polynomial are set using <code>setcoef!</code></p>
<pre><code>setcoef!(p, [1, .1, .2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4])
</code></pre>
<pre><code>ProductPoly{Standard} - Dimension: 2 - Order: 4
P(z) =
    + 1.0 z^(0,0)
    + 0.1 z^(0,1)
    + 0.2 z^(1,0)
    + 0.3 z^(0,2)
    + 0.4 z^(1,1)
    + 0.5 z^(2,0)
    + 0.6 z^(0,3)
    + 0.7 z^(1,2)
    + 0.8 z^(2,1)
    + 0.9 z^(3,0)
    + 1.0 z^(0,4)
    + 1.1 z^(1,3)
    + 1.2 z^(2,2)
    + 1.3 z^(3,1)
    + 1.4 z^(4,0)
</code></pre>
<h4><a id="user-content-operations" class="anchor" aria-hidden="true" href="#operations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Operations</h4>
<p>The following operation are defined for <code>Standard</code> polynomials:</p>
<ul>
<li>addition <code>p + q</code></li>
<li>multiplication <code>p * q</code></li>
<li>scale <code>scale!(p, a)</code></li>
<li>broadcasting <code>broadcast(*, ::Real, p) == scale!(copy(p), ::Real)</code></li>
</ul>
<p>These operations do compress the polynomial, that is they remove terms premultiplied by a zero coefficient.</p>
<pre><code>q = ProductPoly(2, 4)
setcoef!(q, [1, .0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.])
p * q
</code></pre>
<pre><code>ProductPoly{Standard} - Dimension: 2 - Order: 4
P(z) =
    + 1.0 z^(0,0)
    + 0.1 z^(0,1)
    + 0.2 z^(1,0)
    + 0.3 z^(0,2)
    + 0.4 z^(1,1)
    + 0.5 z^(2,0)
    + 0.6 z^(0,3)
    + 0.7 z^(1,2)
    + 0.8 z^(2,1)
    + 0.9 z^(3,0)
    + 1.0 z^(0,4)
    + 1.1 z^(1,3)
    + 1.2 z^(2,2)
    + 1.3 z^(3,1)
    + 1.4 z^(4,0)
</code></pre>
<h3><a id="user-content-evaluating-a-polynomial" class="anchor" aria-hidden="true" href="#evaluating-a-polynomial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Evaluating a polynomial</h3>
<p>The polynomial can be evaluate by</p>
<pre><code>polyval(p, x::Array{Float64, 2})
</code></pre>
<p>For instance, to evaluate <code>p</code> at point <code>z = [1 2]</code></p>
<pre><code>polyval(p, [1 2])
</code></pre>
<p>To evaluate the polynomial at different points</p>
<pre><code>polyval(p, [1 2; -.3 .3])
</code></pre>
<h2><a id="user-content-hermite-polynomials" class="anchor" aria-hidden="true" href="#hermite-polynomials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Hermite polynomials</h2>
<p>A multivariate Hermite polynomial is defined as a standard polynomial, but the terms are themselves Hermite polynomials.</p>
<pre><code>q = ProductPoly(Hermite, 2, 4)
</code></pre>
<pre><code>ProductPoly{Hermite} - Dimension: 2 - Order: 4
P(z) =
    + 1.0 Hen(0,0)
    + 0.0 Hen(0,1)
    + 0.0 Hen(1,0)
    + 0.0 Hen(0,2)
    + 0.0 Hen(1,1)
    + 0.0 Hen(2,0)
    + 0.0 Hen(0,3)
    + 0.0 Hen(1,2)
    + 0.0 Hen(2,1)
    + 0.0 Hen(3,0)
    + 0.0 Hen(0,4)
    + 0.0 Hen(1,3)
    + 0.0 Hen(2,2)
    + 0.0 Hen(3,1)
    + 0.0 Hen(4,0)
</code></pre>
<p><code>Hen(j,i) = Hen(j)*Hen(i)</code> and <code>Hen(j)</code> is the (probabilistic) Hermite polynomial of order <code>j</code>.</p>
<p>A <code>ProductPoly{Hermite}</code> can be converted to a standard one by <code>convert(ProductPoly{Standard}, q::ProductPoly{Hermite})</code>.</p>
<p>The same operations defined for <code>Standard</code> polynomials apply to <code>Hermite</code> polynomials, but the return type of these operations is <code>ProductPoly{Standard}</code>.</p>
<h2><a id="user-content-license-and-credits" class="anchor" aria-hidden="true" href="#license-and-credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License and credits</h2>
<p>The <code>Hermite</code> polynomial is under the LGPL license.</p>
<p>Most of the credit for this package should go to <a href="http://people.sc.fsu.edu/~jburkardt/" rel="nofollow">John Burkardt</a> and his code <a href="http://people.sc.fsu.edu/~jburkardt/c_src/hermite_product_polynomial/hermite_product_polynomial.html" rel="nofollow">multivariate polynomials</a>.</p>
<p>Of course, I will shoulder most of the blame for errors and omissions.</p>
</article></div>