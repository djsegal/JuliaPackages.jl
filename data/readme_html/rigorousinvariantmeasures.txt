<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rigorousinvariantmeasures" class="anchor" aria-hidden="true" href="#rigorousinvariantmeasures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RigorousInvariantMeasures</h1>
<p dir="auto"><a href="https://juliadynamics.github.io/RigorousInvariantMeasures.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliadynamics.github.io/RigorousInvariantMeasures.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaDynamics/RigorousInvariantMeasures.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/JuliaDynamics/RigorousInvariantMeasures.jl/actions/workflows/CI.yml/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaDynamics/RigorousInvariantMeasures.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e7b38c1222ca679057f28ec1c4bd67e05bcbd38bdfb5928986c7b37259bb796f/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696144796e616d6963732f5269676f726f7573496e76617269616e744d656173757265732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaDynamics/RigorousInvariantMeasures.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This Package provides methods for the rigorous approximation of Absolutely Continuous Invariant Measures for one dimensional dynamical systems,
using the results in <a href="#2">[2]</a> and subsequent <a href="#1">[1]</a>.</p>
<h2 dir="auto"><a id="user-content-mathematical-background" class="anchor" aria-hidden="true" href="#mathematical-background"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mathematical background</h2>
<p dir="auto">By Birkhoff Ergodic Theorem we know that if a dynamical system T admits an ergodic invariant measure μ, for μ-almost every point x the frequence of the visits to a set E corresponds to the measure of the set with respect to μ.</p>
<p dir="auto">Therefore, being able to approximate invariant measures with a large basin is interesting to investigate the statistical properties of the dynamical system T. <a href="#4">[5]</a></p>
<p dir="auto">The existence of absolutely continuous invariant measures for one dimensional maps is a delicate topic; with this package we present approximation schemes for the invariant measures of system that satisfy a Lasota-Yorke inequality through the use of a coarse-fine scheme and a posteriori estimates on the mixing time, i.e., this means that the mixing time is estimated by our algorithm and we do not need an a priori estimate, which is usually difficult to obtain.</p>
<p dir="auto">The Ulam approximation schemes works under relatively weak hypothesis on the dynamics and was used in <a href="#4">[4]</a> to approximate the invariant measure for the geometric Lorenz 1-dimensional map.</p>
<p dir="auto">We are currently working on the implementation of the Ulam scheme for system with additive uniform noise, as the one used in
<a href="#2">[2]</a></p>
<h2 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Usage</h2>
<p dir="auto">Examples of usage are present in the directory examples.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using InvariantMeasures
D = Mod1Dynamic(x -&gt; 4x + 0.01InvariantMeasures.sinpi(8x))
B = Ulam(1024)
Q = DiscretizedOperator(B, D)"><pre><span class="pl-k">using</span> InvariantMeasures
D <span class="pl-k">=</span> <span class="pl-c1">Mod1Dynamic</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">4</span>x <span class="pl-k">+</span> <span class="pl-c1">0.01</span>InvariantMeasures<span class="pl-k">.</span><span class="pl-c1">sinpi</span>(<span class="pl-c1">8</span>x))
B <span class="pl-k">=</span> <span class="pl-c1">Ulam</span>(<span class="pl-c1">1024</span>)
Q <span class="pl-k">=</span> <span class="pl-c1">DiscretizedOperator</span>(B, D)</pre></div>
<p dir="auto">The code snippet above defines a dynamic obtained by reducing f(x) = 4x+0.01 sin(8πx) modulo 1, a basis B associated to the Ulam discretization on a partition of 1024 homogenous intervals, and computes the discretized operator Q, a Markov chain whose entries are P[T(x)∈ Iᵢ | x ∈ Iⱼ].</p>
<p dir="auto">Note the usage of <code>InvariantMeasures.sinpi(8*x)</code> rather than <code>Base.sinpi</code> or <code>Base.sin(8\pi*x)</code>. This detail is required to ensure that f(1) == 4 exactly.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="norms = norms = powernormbounds(B, D; Q=Q)"><pre>norms <span class="pl-k">=</span> norms <span class="pl-k">=</span> <span class="pl-c1">powernormbounds</span>(B, D; Q<span class="pl-k">=</span>Q)</pre></div>
<p dir="auto">This function computes the L¹ norm of Q^k, for k = 1,2,...,k_max (up to a sufficiently large number of powers to observe decay) when restricted to the space U of average-0 vectors. This gives us the a posteriori estimate for the mixing time of the Markov chain and is used in our rigorous estimate.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="w = invariant_vector(B, Q)
distance_from_invariant(B, D, Q, w, norms)"><pre>w <span class="pl-k">=</span> <span class="pl-c1">invariant_vector</span>(B, Q)
<span class="pl-c1">distance_from_invariant</span>(B, D, Q, w, norms)</pre></div>
<p dir="auto">This computes a (non-rigorous) approximation of the invariant measure of D; then  <code>distance_from_invariant</code> computes an upper bound for the L¹ distance between w and the density of the absolutely continuous invariant measure of the system.</p>
<p dir="auto">Inside the examples it is showed how to use the coarse-fine scheme to obtain better L¹ bounds and reduce the computational time.</p>
<h3 dir="auto"><a id="user-content-caveat" class="anchor" aria-hidden="true" href="#caveat"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Caveat</h3>
<p dir="auto">The function <code>sinpi</code> in the interval arithmetic package that we are using relies on the <code>CRlibm.jl</code> package, which currently works only under Linux. So the examples that use trigonometric functions only work on this OS.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto"><a id="user-content-1">[1]</a> Galatolo S., Monge M., Nisoli I., Poloni F. A general framework for the rigorous computation of invariant densities and the coarse-fine strategy
<a href="https://doi.org/10.48550/arXiv.2212.05017" rel="nofollow">https://doi.org/10.48550/arXiv.2212.05017</a></p>
<p dir="auto"><a id="user-content-2">[2]</a>
Galatolo S., Monge M., Nisoli I., Existence of noise induced order, a computer aided proof Nonlinearity 33 (9), 4237 (2020)</p>
<p dir="auto"><a id="user-content-3">[3]</a>
Galatolo S., Nisoli I., An elementary approach to rigorous approximation of invariant
measures SIAM J. Appl Dyn Sys.13 pp. 958-985 (2014)</p>
<p dir="auto"><a id="user-content-4">[4]</a> Galatolo S., Nisoli I. Rigorous computation of invariant measures and fractal dimension for maps with contracting fibers: 2D Lorenz-like maps<br>
Ergodic Theory and Dynamical Systems 36 (6), 1865-1891 (2016)</p>
<p dir="auto"><a id="user-content-5">[5]</a> Viana M., Olivera K. Foundations of Ergodic Theory
Cambridge studies in advanced mathematics, Cambridge University Press 2016</p>
</article></div>