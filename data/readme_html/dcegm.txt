<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dcegmjl" class="anchor" aria-hidden="true" href="#dcegmjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DCEGM.jl</h1>
<p>GitHub Actions Tests : <a href="https://github.com/floswald/DCEGM.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/floswald/DCEGM.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p><em>This implements the code for <a href="http://onlinelibrary.wiley.com/doi/10.3982/QE643/full" rel="nofollow">The endogenous grid method for discrete‚Äêcontinuous dynamic choice models with (or without) taste shocks</a>, published in Quantitative Economics (2017) by Fedor Iskhakov, Thomas H. J√∏rgensen, John Rust and Bertel Schjerning</em></p>
<p>This julia package is based on the matlab code accompanying the published paper, available at <a href="https://github.com/fediskhakov/dcegm">https://github.com/fediskhakov/dcegm</a>.</p>
<p><strong>tl;dr</strong></p>
<ol>
<li>This runs <code>12.5x</code> faster than the published matlab version. <a href="#performance-x125">Details</a></li>
<li>The solution is checked for numerical equivalence with the matlab version.</li>
<li>I provide a  state-dependent extensions to their version.</li>
<li>I provide interactive apps that make it easy to study model behavior as the user varies model parameters.</li>
</ol>
<h2><a id="user-content-how-to-use-this" class="anchor" aria-hidden="true" href="#how-to-use-this"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to Use this</h2>
<p><em>This package is not (yet) officially registered, you so follow instructions below for installation</em></p>
<ol>
<li><a href="https://julialang.org/downloads/" rel="nofollow">Download latest julia</a></li>
<li>start julia. you see something like this:
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="‚ûú  julia
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type &quot;?&quot; for help, &quot;]?&quot; for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.1.0 (2019-01-21)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

julia&gt;
"><pre><code>‚ûú  julia
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.1.0 (2019-01-21)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

julia&gt;
</code></pre></div>
</li>
<li>Hit the <code>]</code> key to switch to package manager mode. the prompt switches to
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(v1.1) pkg&gt;
"><pre><code>(v1.1) pkg&gt;
</code></pre></div>
</li>
<li>Download this package by pasting this into the <code>(v1.1) pkg&gt;</code> prompt and hitting enter.
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="dev https://github.com/floswald/DCEGM.jl.git
"><pre>dev https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>floswald<span class="pl-k">/</span>DCEGM<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
</li>
<li>After this is done, hit backspace or <code>ctrl-c</code> to go back to standard <code>julia&gt;</code> prompt.
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; cd(joinpath(DEPOT_PATH[1],&quot;dev&quot;,&quot;DCEGM&quot;))  # go to the location of DCEGM on your computer
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">cd</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">DEPOT_PATH</span>[<span class="pl-c1">1</span>],<span class="pl-s"><span class="pl-pds">"</span>dev<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>DCEGM<span class="pl-pds">"</span></span>))  <span class="pl-c"><span class="pl-c">#</span> go to the location of DCEGM on your computer</span></pre></div>
</li>
<li>Go back to package mode by typing <code>]</code>. then:
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.1) pkg&gt; activate .     # tell pkg manager to modify current directory
(DCEGM) pkg&gt; instantiate    # download all dependencies
(DCEGM) pkg&gt; precompile     # precompile package
"><pre>(v1.<span class="pl-c1">1</span>) pkg<span class="pl-k">&gt;</span> activate .     <span class="pl-c"><span class="pl-c">#</span> tell pkg manager to modify current directory</span>
(DCEGM) pkg<span class="pl-k">&gt;</span> instantiate    <span class="pl-c"><span class="pl-c">#</span> download all dependencies</span>
(DCEGM) pkg<span class="pl-k">&gt;</span> precompile     <span class="pl-c"><span class="pl-c">#</span> precompile package</span></pre></div>
</li>
<li>Done! <g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png">üéâ</g-emoji> Now try it out. Go back to command mode with <code>ctrl-c</code>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using DCEGM

julia&gt; @time DCEGM.runf();   # run @fedishakov's version of the model
   0.012842 seconds (13.53 k allocations: 16.122 MiB)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DCEGM

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> DCEGM<span class="pl-k">.</span><span class="pl-c1">runf</span>();   <span class="pl-c"><span class="pl-c">#</span> run @fedishakov's version of the model</span>
   <span class="pl-c1">0.012842</span> seconds (<span class="pl-c1">13.53</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">16.122</span> MiB)</pre></div>
</li>
</ol>
<h2><a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Testing</h2>
<p>The package is thoroughly unit tested. Please run <code>] test</code> while in the activated project. The main test concerns the file <code>test/F_test.jl</code>, where we test the output of this version against the one obtained from @fediskhakov s matlab version up to numerical accuracy. That is, first we save the value and policy functions from the matlab code to ASCII format on disk, then we compute the julia model, then we compare each computed value and policy function. There are many more tests, though.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# hit ]
(@v1.4) pkg&gt; activate .
(DCEGM) pkg&gt; test
"><pre><span class="pl-c"><span class="pl-c">#</span> hit ]</span>
(<span class="pl-c1">@v1</span>.<span class="pl-c1">4</span>) pkg<span class="pl-k">&gt;</span> activate .
(DCEGM) pkg<span class="pl-k">&gt;</span> test</pre></div>
<h2><a id="user-content-interaction" class="anchor" aria-hidden="true" href="#interaction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Interaction</h2>
<p>The core of the package functionality can be tried out in an interactive dashboard powered by <a href="https://github.com/JuliaGizmos/Interact.jl"><code>Interact.jl</code></a>. The relevant code is in <a href="src/interact.jl">interact.jl</a>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; DCEGM.iminimal()   # interact with the minimal model
julia&gt; DCEGM.iminimalb()   # interact with the minimal model with bequest
julia&gt; DCEGM.ifedor()  # interact with fedors model
julia&gt; DCEGM.igmodel()  # interact with the general model
"><pre>julia<span class="pl-k">&gt;</span> DCEGM<span class="pl-k">.</span><span class="pl-c1">iminimal</span>()   <span class="pl-c"><span class="pl-c">#</span> interact with the minimal model</span>
julia<span class="pl-k">&gt;</span> DCEGM<span class="pl-k">.</span><span class="pl-c1">iminimalb</span>()   <span class="pl-c"><span class="pl-c">#</span> interact with the minimal model with bequest</span>
julia<span class="pl-k">&gt;</span> DCEGM<span class="pl-k">.</span><span class="pl-c1">ifedor</span>()  <span class="pl-c"><span class="pl-c">#</span> interact with fedors model</span>
julia<span class="pl-k">&gt;</span> DCEGM<span class="pl-k">.</span><span class="pl-c1">igmodel</span>()  <span class="pl-c"><span class="pl-c">#</span> interact with the general model</span></pre></div>
<p>in each instance, you'll see a new window like that one:</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/interact.png"><img src="images/interact.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demos</h2>
<p>A quick demonstration of how the <code>upper_env</code> method works. Given an array of <code>MLine</code>s (my version of a <em>line</em>, i.e. an array of <code>x-y</code> pairs representing a <code>Point</code>), this constructs the upper envelope over the lines. Particular attention must be paid to <em>intersections</em> between lines.</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/demo.png"><img src="images/demo.png" alt="" style="max-width:100%;"></a></p>
<p>Also, points where 2 lines intersect on the initial grid of both lines are <em>not</em> intersections.</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/demo2.png"><img src="images/demo2.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-performance-x125" class="anchor" aria-hidden="true" href="#performance-x125"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performance: <code>x12.5</code></h2>
<p>This is the output of function <code>bm()</code> which is <a href="src/bench.jl">here</a>. Matlab time is taken only for model solution, no setup or disk write operation. Please check the source code for questions.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; DCEGM.bm()
Hi! This is Matlab version 9.7.0.1261785 (R2019b) Update 3 running on my laptop
t: 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1
Retirement model solved with
500 asset points
25 periods at
0.0000020 lambda  
0.350 sigma
in  1.509s
wrote policy and value function to ascii in output/ . exiting matlab.
julia timing:

BenchmarkTools.Trial: 
  memory estimate:  117.82 MiB
  allocs estimate:  179885
  --------------
  minimum time:     121.571 ms (16.45% GC)
  median time:      125.947 ms (18.26% GC)
  mean time:        129.230 ms (20.44% GC)
  maximum time:     149.955 ms (31.12% GC)
  --------------
  samples:          39
  evals/sample:     1
"><pre>julia<span class="pl-k">&gt;</span> DCEGM<span class="pl-k">.</span><span class="pl-c1">bm</span>()
Hi! This is Matlab version <span class="pl-c1">9.7</span>.<span class="pl-c1">0.1261785</span> (R2019b) Update <span class="pl-c1">3</span> running on my laptop
t<span class="pl-k">:</span> <span class="pl-c1">25</span> <span class="pl-c1">24</span> <span class="pl-c1">23</span> <span class="pl-c1">22</span> <span class="pl-c1">21</span> <span class="pl-c1">20</span> <span class="pl-c1">19</span> <span class="pl-c1">18</span> <span class="pl-c1">17</span> <span class="pl-c1">16</span> <span class="pl-c1">15</span> <span class="pl-c1">14</span> <span class="pl-c1">13</span> <span class="pl-c1">12</span> <span class="pl-c1">11</span> <span class="pl-c1">10</span> <span class="pl-c1">9</span> <span class="pl-c1">8</span> <span class="pl-c1">7</span> <span class="pl-c1">6</span> <span class="pl-c1">5</span> <span class="pl-c1">4</span> <span class="pl-c1">3</span> <span class="pl-c1">2</span> <span class="pl-c1">1</span>
Retirement model solved with
<span class="pl-c1">500</span> asset points
<span class="pl-c1">25</span> periods at
<span class="pl-c1">0.0000020</span> lambda  
<span class="pl-c1">0.350</span> sigma
in  <span class="pl-c1">1.509</span>s
wrote policy and value <span class="pl-k">function</span> to ascii <span class="pl-k">in</span> output<span class="pl-k">/</span> . exiting matlab.
julia timing<span class="pl-k">:</span>

BenchmarkTools<span class="pl-k">.</span>Trial<span class="pl-k">:</span> 
  memory estimate<span class="pl-k">:</span>  <span class="pl-c1">117.82</span> MiB
  allocs estimate<span class="pl-k">:</span>  <span class="pl-c1">179885</span>
  <span class="pl-k">--------------</span>
  minimum time<span class="pl-k">:</span>     <span class="pl-c1">121.571</span> ms (<span class="pl-c1">16.45</span><span class="pl-k">%</span> GC)
  median time<span class="pl-k">:</span>      <span class="pl-c1">125.947</span> ms (<span class="pl-c1">18.26</span><span class="pl-k">%</span> GC)
  mean time<span class="pl-k">:</span>        <span class="pl-c1">129.230</span> ms (<span class="pl-c1">20.44</span><span class="pl-k">%</span> GC)
  maximum time<span class="pl-k">:</span>     <span class="pl-c1">149.955</span> ms (<span class="pl-c1">31.12</span><span class="pl-k">%</span> GC)
  <span class="pl-k">--------------</span>
  samples<span class="pl-k">:</span>          <span class="pl-c1">39</span>
  evals<span class="pl-k">/</span>sample<span class="pl-k">:</span>     <span class="pl-c1">1</span></pre></div>
<p>The julia version runs 12.5 times faster than the matlab version.</p>
</article></div>