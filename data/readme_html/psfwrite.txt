<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-psfwritejl" class="anchor" aria-hidden="true" href="#psfwritejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PSFWrite.jl</h1>
<p><a href="https://travis-ci.org/ma-laforge/PSFWrite.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b85cee0be6aec0b2fcd9523f323f4b0a3f72ac1cc2269e9481af7a126eccda71/68747470733a2f2f7472617669732d63692e6f72672f6d612d6c61666f7267652f50534657726974652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ma-laforge/PSFWrite.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>The PSFWrite.jl module provides a pure-Julia .psf writer.</p>
<h2><a id="user-content-sample-usage" class="anchor" aria-hidden="true" href="#sample-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sample Usage</h2>
<p>Let us consider the case of writing time-domain data to a file.  The following lines be used to generate results of a "simulation" performed at a frequency of <code>freq = 1e9</code>:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="t = collect(0:.01e-9:10e-9) #collect(): API does not yet work with Julia ranges.
y1 = sin.(t*(2pi*freq))
y2 = cos.(t*(2pi*freq))
"><pre><code>t = collect(0:.01e-9:10e-9) #collect(): API does not yet work with Julia ranges.
y1 = sin.(t*(2pi*freq))
y2 = cos.(t*(2pi*freq))
</code></pre></div>
<p>One would then assemble this data into a <code>PSFWrite.dataset</code> structure, after which everything can be written to file:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using PSFWrite

#Collect data in a special &quot;dataset&quot; structure:
data = PSFWrite.dataset(t, &quot;time&quot;) #Init with &quot;x-axis&quot; data (independent variable)
push!(data, y1, &quot;y1&quot;) #Add &quot;simulation&quot; results
push!(data, y2, &quot;y2&quot;) #Add more &quot;simulation&quot; results

#Write out data to file:
PSFWrite._open(&quot;outputfile.psf&quot;) do writer
	write(writer, data)
end
"><pre><code>using PSFWrite

#Collect data in a special "dataset" structure:
data = PSFWrite.dataset(t, "time") #Init with "x-axis" data (independent variable)
push!(data, y1, "y1") #Add "simulation" results
push!(data, y2, "y2") #Add more "simulation" results

#Write out data to file:
PSFWrite._open("outputfile.psf") do writer
	write(writer, data)
end
</code></pre></div>
<p>Please note that the <code>_open-do</code> syntax shown above will automatically call the <code>close()</code> function for the <code>PSFWriter</code> object named <code>writer</code>.</p>
<p><a name="user-content-installation"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; Pkg.add(&quot;PSFWrite&quot;)
"><pre><code>julia&gt; Pkg.add("PSFWrite")
</code></pre></div>
<h2><a id="user-content-known-limitations" class="anchor" aria-hidden="true" href="#known-limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Known Limitations</h2>
<p>PSFWrite.jl was mostly validated against <a href="https://github.com/ma-laforge/LibPSF.jl">LibPSF.jl</a>: the pure-Julia implementation of Henrik Johansson's <a href="https://github.com/henjo/libpsf">libpsf</a> library.  It might not be fully compliant with the PSF format.</p>
<h3><a id="user-content-missing-features" class="anchor" aria-hidden="true" href="#missing-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Missing Features</h3>
<p>PSFWrite.jl does not currently support all .psf file capabilities.</p>
<ul>
<li>Only supports writing swept data in a windowed format.</li>
</ul>
<h3><a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Compatibility</h3>
<p>Extensive compatibility testing of PSFWrite.jl has not been performed.  The module has been tested using the following environment(s):</p>
<ul>
<li>Linux / Julia-1.1.1 (64-bit) / Ubuntu</li>
</ul>
</article></div>