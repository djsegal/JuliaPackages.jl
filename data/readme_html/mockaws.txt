<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mockawsjl" class="anchor" aria-hidden="true" href="#mockawsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MockAWS.jl</h1>
<p>Mocking Framework for AWS.jl</p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview</h2>
<p>This package generates patch functions for all AWS services which define them in the <a href="https://github.com/aws/aws-sdk-js/tree/master/apis">aws-sdk-js</a> repository.
It is meant to provide means of testing AWS service functionality without needing to actually generate resources.</p>
<h2><a id="user-content-usages" class="anchor" aria-hidden="true" href="#usages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usages</h2>
<p>Patches are only available to <a href="https://github.com/JuliaCloud/AWS.jl/tree/master/src/services">high-level</a> AWS.jl definitions, and are limited to only services which AWS themselves have defined example outputs.</p>
<p>To use this package you must first define the high-level AWS service, then attach the patches to the module.
<strong>NOTE:</strong> When applying patches, you must use the same name you used when defining the AWS.jl high-level service module.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AWS
using MockAWS
using Mocking

Mocking.activate()

@service S3
@patches S3

apply(S3.get_object_1_patch) do
  @mock S3.get_object(&quot;bucket&quot;, &quot;key&quot;)
end

Dict{String,Any} with 8 entries:
  &quot;ETag&quot;          =&gt; &quot;\&quot;6805f2cfc46c0f04559748bb039d69ae\&quot;&quot;
  &quot;LastModified&quot;  =&gt; &quot;Thu, 15 Dec 2016 01:19:41 GMT&quot;
  &quot;ContentLength&quot; =&gt; &quot;3191&quot;
  &quot;Metadata&quot;      =&gt; Dict{String,Any}()
  &quot;AcceptRanges&quot;  =&gt; &quot;bytes&quot;
  &quot;VersionId&quot;     =&gt; &quot;null&quot;
  &quot;ContentType&quot;   =&gt; &quot;image/jpeg&quot;
  &quot;TagCount&quot;      =&gt; 2
"><pre><span class="pl-k">using</span> AWS
<span class="pl-k">using</span> MockAWS
<span class="pl-k">using</span> Mocking

Mocking<span class="pl-k">.</span><span class="pl-c1">activate</span>()

<span class="pl-c1">@service</span> S3
<span class="pl-c1">@patches</span> S3

<span class="pl-c1">apply</span>(S3<span class="pl-k">.</span>get_object_1_patch) <span class="pl-k">do</span>
  <span class="pl-c1">@mock</span> S3<span class="pl-k">.</span><span class="pl-c1">get_object</span>(<span class="pl-s"><span class="pl-pds">"</span>bucket<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

Dict{String,Any} with <span class="pl-c1">8</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>ETag<span class="pl-pds">"</span></span>          <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\"</span>6805f2cfc46c0f04559748bb039d69ae<span class="pl-cce">\"</span><span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>LastModified<span class="pl-pds">"</span></span>  <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Thu, 15 Dec 2016 01:19:41 GMT<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>ContentLength<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>3191<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>Metadata<span class="pl-pds">"</span></span>      <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String,Any}</span>()
  <span class="pl-s"><span class="pl-pds">"</span>AcceptRanges<span class="pl-pds">"</span></span>  <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>bytes<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>VersionId<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>null<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>ContentType<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>image/jpeg<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>TagCount<span class="pl-pds">"</span></span>      <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span></pre></div>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>Patches are updated manually by GitHubActions, however if you need to create them manually:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using MockAWS
generate_patches()
"><pre><span class="pl-k">using</span> MockAWS
<span class="pl-c1">generate_patches</span>()</pre></div>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p><a href="LICENSE">MIT</a></p>
</article></div>