<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-odeinterfacediffeq" class="anchor" aria-hidden="true" href="#odeinterfacediffeq"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ODEInterfaceDiffEq</h1>
<p><a href="https://gitter.im/JuliaDiffEq/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" rel="nofollow"><img src="https://camo.githubusercontent.com/833b89353967086ef3bf7e1d470c469fd93cc80696ae173ffc5fbcf401d2f5af/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c69614469666645712f4c6f6262792e737667" alt="Join the chat at https://gitter.im/JuliaDiffEq/Lobby" data-canonical-src="https://badges.gitter.im/JuliaDiffEq/Lobby.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/ODEInterfaceDiffEq.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/ODEInterfaceDiffEq.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/SciML/ODEInterfaceDiffEq.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/415c80b7559f31bc3b7148b0ea1af4664a137ac5789b235184976cb7a6e454fe/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f5363694d4c2f4f4445496e746572666163654469666645712e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/SciML/ODEInterfaceDiffEq.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/SciML/ODEInterfaceDiffEq.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ad7fb8074d56f2fdc1978d8ae2e95e1cf195501740b2d52d22670a7deba758ca/687474703a2f2f636f6465636f762e696f2f6769746875622f5363694d4c2f4f4445496e746572666163654469666645712e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/SciML/ODEInterfaceDiffEq.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package contains bindings for ODEInterface.jl to allow it to be used with the
JuliaDiffEq common interface. For more information on using the solvers from this
package, see the <a href="https://juliadiffeq.github.io/DiffEqDocs.jl/dev/" rel="nofollow">DifferentialEquations.jl documentation</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>A standard installation on MacOSX and Linux should work. On Windows, you need to install mingw32 compilers and add them to the path. <a href="https://sourceforge.net/projects/mingw-w64/" rel="nofollow">MingW32 can be found here</a>. Then add the path to your environment variables. An example path is:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="C:\Program Files\mingw-w64\x86_64-6.1.0-posix-seh-rt_v5-rev0\mingw64\bin
"><pre><code>C:\Program Files\mingw-w64\x86_64-6.1.0-posix-seh-rt_v5-rev0\mingw64\bin
</code></pre></div>
<p>Note that it is required that you add ODEInterface.jl as well;</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="]add ODEInterface
"><pre>]add ODEInterface</pre></div>
<p>Otherwise you may have issues instantiating the solvers.</p>
<h2><a id="user-content-common-api-usage" class="anchor" aria-hidden="true" href="#common-api-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Common API Usage</h2>
<p>This library adds the common interface to ODEInterface.jl's solvers. <a href="http://docs.juliadiffeq.org/dev/index.html" rel="nofollow">See the DifferentialEquations.jl documentation for details on the interface</a>. Following the Lorenz example from <a href="http://docs.juliadiffeq.org/dev/dev/ode_example.html" rel="nofollow">the ODE tutorial</a>, we can solve this using <code>dopri5</code> via the following:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ODEInterface, ODEInterfaceDiffEq
function lorenz(du,u,p,t)
 du[1] = 10.0(u[2]-u[1])
 du[2] = u[1]*(28.0-u[3]) - u[2]
 du[3] = u[1]*u[2] - (8/3)*u[3]
end
u0 = [1.0;0.0;0.0]
tspan = (0.0,100.0)
prob = ODEProblem(lorenz,u0,tspan)
sol = solve(prob,dopri5(),abstol=1e-4)
using Plots; plot(sol,vars=(1,2,3))
"><pre><span class="pl-k">using</span> ODEInterface, ODEInterfaceDiffEq
<span class="pl-k">function</span> <span class="pl-en">lorenz</span>(du,u,p,t)
 du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">10.0</span>(u[<span class="pl-c1">2</span>]<span class="pl-k">-</span>u[<span class="pl-c1">1</span>])
 du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> u[<span class="pl-c1">1</span>]<span class="pl-k">*</span>(<span class="pl-c1">28.0</span><span class="pl-k">-</span>u[<span class="pl-c1">3</span>]) <span class="pl-k">-</span> u[<span class="pl-c1">2</span>]
 du[<span class="pl-c1">3</span>] <span class="pl-k">=</span> u[<span class="pl-c1">1</span>]<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-k">-</span> (<span class="pl-c1">8</span><span class="pl-k">/</span><span class="pl-c1">3</span>)<span class="pl-k">*</span>u[<span class="pl-c1">3</span>]
<span class="pl-k">end</span>
u0 <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>;<span class="pl-c1">0.0</span>;<span class="pl-c1">0.0</span>]
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">100.0</span>)
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(lorenz,u0,tspan)
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">dopri5</span>(),abstol<span class="pl-k">=</span><span class="pl-c1">1e-4</span>)
<span class="pl-k">using</span> Plots; <span class="pl-c1">plot</span>(sol,vars<span class="pl-k">=</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>))</pre></div>
<p>The options available in <code>solve</code> are documented <a href="http://docs.juliadiffeq.org/dev/basics/common_solver_opts.html" rel="nofollow">at the common solver options page</a>. The available methods are documented <a href="http://docs.juliadiffeq.org/dev/solvers/ode_solve.html#ODEInterface.jl-1" rel="nofollow">at the ODE solvers page</a>.</p>
</article></div>