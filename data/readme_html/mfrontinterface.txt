<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mfrontinterface" class="anchor" aria-hidden="true" href="#mfrontinterface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MFrontInterface</h1>
<p><a href="https://travis-ci.com/JuliaFEM/MFrontInterface.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7597d6985b86e09c6bd34854b8ad042b345f55a49e76a86e1d28b8de86fff225/68747470733a2f2f7472617669732d63692e636f6d2f4a756c696146454d2f4d46726f6e74496e746572666163652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaFEM/MFrontInterface.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaFEM/MFrontInterface.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a00fd90aedd3d5750748d87aff4e40bfa59c054d8df97270bd4923135aa1b4f6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696146454d2f4d46726f6e74496e746572666163652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/JuliaFEM/MFrontInterface.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliafem.github.io/MFrontInterface.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://juliafem.github.io/MFrontInterface.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citation</h2>
<p>If you like our package, please consider citing with the infromation in <a href="https://github.com/JuliaFEM/MFrontInterface.jl/blob/master/CITATION.bib">CITATION.bib</a>:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@inproceedings{frondelius2019mfrontinterface,
    title={MFrontInterface.jl: MFront material models in Julia{FEM}},
    author={Tero Frondelius and Thomas Helfer and Ivan Yashchuk and Joona Vaara  and Anssi Laukkanen},
    editor={H. Koivurova and A. H. Niemi},
    booktitle={Proceedings of the 32nd Nordic Seminar on Computational Mechanics},
    year={2019},
    place={Oulu}
}
"><pre><code>@inproceedings{frondelius2019mfrontinterface,
    title={MFrontInterface.jl: MFront material models in Julia{FEM}},
    author={Tero Frondelius and Thomas Helfer and Ivan Yashchuk and Joona Vaara  and Anssi Laukkanen},
    editor={H. Koivurova and A. H. Niemi},
    booktitle={Proceedings of the 32nd Nordic Seminar on Computational Mechanics},
    year={2019},
    place={Oulu}
}
</code></pre></div>
<h2><a id="user-content-example-of-usage" class="anchor" aria-hidden="true" href="#example-of-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example of usage</h2>
<p>First we load the needed package and define the MFront model. As an example we use
the Norton viscoplasticity.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton-equation.png"><img src="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton-equation.png" alt="Norton Stress-Strain Curve" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using MFrontInterface, Materials, Plots

norton = raw&quot;&quot;&quot;
@DSL Implicit;
@Author Thomas Helfer;
@Date 3 / 08 / 2018;
@Behaviour NortonTest;
@Description {
  &quot;This file implements the Norton law &quot;
  &quot;using the StandardElastoViscoplasticity brick&quot;
}

@ModellingHypotheses{&quot;.+&quot;};
@Epsilon 1.e-16;

@Brick StandardElastoViscoPlasticity{
  stress_potential : &quot;Hooke&quot; {young_modulus : 200e3, poisson_ratio : 0.3},
  inelastic_flow : &quot;Norton&quot; {criterion : &quot;Mises&quot;, A : 1.0e-5, n : 3.0, K : 100}
};
&quot;&quot;&quot;;
"><pre><span class="pl-k">using</span> MFrontInterface, Materials, Plots

norton <span class="pl-k">=</span> <span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"""</span></span>
<span class="pl-s">@DSL Implicit;</span>
<span class="pl-s">@Author Thomas Helfer;</span>
<span class="pl-s">@Date 3 / 08 / 2018;</span>
<span class="pl-s">@Behaviour NortonTest;</span>
<span class="pl-s">@Description {</span>
<span class="pl-s">  "This file implements the Norton law "</span>
<span class="pl-s">  "using the StandardElastoViscoplasticity brick"</span>
<span class="pl-s">}</span>
<span class="pl-s"></span>
<span class="pl-s">@ModellingHypotheses{".+"};</span>
<span class="pl-s">@Epsilon 1.e-16;</span>
<span class="pl-s"></span>
<span class="pl-s">@Brick StandardElastoViscoPlasticity{</span>
<span class="pl-s">  stress_potential : "Hooke" {young_modulus : 200e3, poisson_ratio : 0.3},</span>
<span class="pl-s">  inelastic_flow : "Norton" {criterion : "Mises", A : 1.0e-5, n : 3.0, K : 100}</span>
<span class="pl-s">};</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>;</pre></div>
<p><code>mfront</code> helper function writes string to file and calls <code>mfront</code> executable to
compile shared library. It also returns the path to the compiled library in <code>tmp</code> folder.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="path = mfront(norton)
mat = MFrontMaterialModel(lib_path=path, behaviour_name=&quot;NortonTest&quot;)
"><pre>path <span class="pl-k">=</span> <span class="pl-c1">mfront</span>(norton)
mat <span class="pl-k">=</span> <span class="pl-c1">MFrontMaterialModel</span>(lib_path<span class="pl-k">=</span>path, behaviour_name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>NortonTest<span class="pl-pds">"</span></span>)</pre></div>
<p>Let's use <code>uniaxial_increment!</code> function from <code>Materials.jl</code>. The first loading
block defines the tension phase and the second the relaxation phase.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="s11 = [0.]; e11 = [0.]; tim = [0.]
for i=1:200
    dstran = 1e-5
    uniaxial_increment!(mat, dstran, 1.0)
    update_material!(mat)
    push!(e11, mat.drivers.strain[1])
    push!(tim, mat.drivers.time)
    push!(s11, mat.variables.stress[1])
end

for i=1:500
    dstran = 0.0
    uniaxial_increment!(mat, dstran, 1.0)
    update_material!(mat)
    push!(e11, mat.drivers.strain[1])
    push!(tim, mat.drivers.time)
    push!(s11, mat.variables.stress[1])
end
"><pre>s11 <span class="pl-k">=</span> [<span class="pl-c1">0.</span>]; e11 <span class="pl-k">=</span> [<span class="pl-c1">0.</span>]; tim <span class="pl-k">=</span> [<span class="pl-c1">0.</span>]
<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">200</span>
    dstran <span class="pl-k">=</span> <span class="pl-c1">1e-5</span>
    <span class="pl-c1">uniaxial_increment!</span>(mat, dstran, <span class="pl-c1">1.0</span>)
    <span class="pl-c1">update_material!</span>(mat)
    <span class="pl-c1">push!</span>(e11, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>strain[<span class="pl-c1">1</span>])
    <span class="pl-c1">push!</span>(tim, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>time)
    <span class="pl-c1">push!</span>(s11, mat<span class="pl-k">.</span>variables<span class="pl-k">.</span>stress[<span class="pl-c1">1</span>])
<span class="pl-k">end</span>

<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">500</span>
    dstran <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
    <span class="pl-c1">uniaxial_increment!</span>(mat, dstran, <span class="pl-c1">1.0</span>)
    <span class="pl-c1">update_material!</span>(mat)
    <span class="pl-c1">push!</span>(e11, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>strain[<span class="pl-c1">1</span>])
    <span class="pl-c1">push!</span>(tim, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>time)
    <span class="pl-c1">push!</span>(s11, mat<span class="pl-k">.</span>variables<span class="pl-k">.</span>stress[<span class="pl-c1">1</span>])
<span class="pl-k">end</span></pre></div>
<p>Finally let's plot the stress-strain behaviour.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="p1 = plot(tim,s11,xlabel=&quot;Time&quot;,ylabel=&quot;Stress&quot;,legend=false)
p2 = plot(e11,s11,xlabel=&quot;Strain&quot;,ylabel=&quot;Stress&quot;,legend=false)
plot(p1, p2, layout=2)
savefig(&quot;Norton.png&quot;)
"><pre>p1 <span class="pl-k">=</span> <span class="pl-c1">plot</span>(tim,s11,xlabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Time<span class="pl-pds">"</span></span>,ylabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Stress<span class="pl-pds">"</span></span>,legend<span class="pl-k">=</span><span class="pl-c1">false</span>)
p2 <span class="pl-k">=</span> <span class="pl-c1">plot</span>(e11,s11,xlabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Strain<span class="pl-pds">"</span></span>,ylabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Stress<span class="pl-pds">"</span></span>,legend<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">plot</span>(p1, p2, layout<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">savefig</span>(<span class="pl-s"><span class="pl-pds">"</span>Norton.png<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton.png"><img src="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton.png" alt="Norton Stress-Strain Curve" style="max-width:100%;"></a></p>
</article></div>