<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-mfrontinterface" class="anchor" aria-hidden="true" href="#mfrontinterface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MFrontInterface</h1>
<p><a href="https://travis-ci.com/JuliaFEM/MFrontInterface.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dff359d34627dc8aca6db185a553dd1634ee0d20/68747470733a2f2f7472617669732d63692e636f6d2f4a756c696146454d2f4d46726f6e74496e746572666163652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaFEM/MFrontInterface.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaFEM/MFrontInterface.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ff40f82c6ab52d99751e87a7d1dab857cf757e79/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696146454d2f4d46726f6e74496e746572666163652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/JuliaFEM/MFrontInterface.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliafem.github.io/MFrontInterface.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://juliafem.github.io/MFrontInterface.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Citation</h2>
<p>If you like our package, please consider citing with the infromation in <a href="https://github.com/JuliaFEM/MFrontInterface.jl/blob/master/CITATION.bib">CITATION.bib</a>:</p>
<pre><code>@inproceedings{frondelius2019mfrontinterface,
    title={MFrontInterface.jl: MFront material models in Julia{FEM}},
    author={Tero Frondelius and Thomas Helfer and Ivan Yashchuk and Joona Vaara  and Anssi Laukkanen},
    editor={H. Koivurova and A. H. Niemi},
    booktitle={Proceedings of the 32nd Nordic Seminar on Computational Mechanics},
    year={2019},
    place={Oulu}
}
</code></pre>
<h2><a id="user-content-example-of-usage" class="anchor" aria-hidden="true" href="#example-of-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example of usage</h2>
<p>First we load the needed package and define the MFront model. As an example we use
the Norton viscoplasticity.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton-equation.png"><img src="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton-equation.png" alt="Norton Stress-Strain Curve" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> MFrontInterface, Materials, Plots

norton <span class="pl-k">=</span> <span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"""</span></span>
<span class="pl-s">@DSL Implicit;</span>
<span class="pl-s">@Author Thomas Helfer;</span>
<span class="pl-s">@Date 3 / 08 / 2018;</span>
<span class="pl-s">@Behaviour NortonTest;</span>
<span class="pl-s">@Description {</span>
<span class="pl-s">  "This file implements the Norton law "</span>
<span class="pl-s">  "using the StandardElastoViscoplasticity brick"</span>
<span class="pl-s">}</span>
<span class="pl-s"></span>
<span class="pl-s">@ModellingHypotheses{".+"};</span>
<span class="pl-s">@Epsilon 1.e-16;</span>
<span class="pl-s"></span>
<span class="pl-s">@Brick StandardElastoViscoPlasticity{</span>
<span class="pl-s">  stress_potential : "Hooke" {young_modulus : 200e3, poisson_ratio : 0.3},</span>
<span class="pl-s">  inelastic_flow : "Norton" {criterion : "Mises", A : 1.0e-5, n : 3.0, K : 100}</span>
<span class="pl-s">};</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>;</pre></div>
<p><code>mfront</code> helper function writes string to file and calls <code>mfront</code> executable to
compile shared library. It also returns the path to the compiled library in <code>tmp</code> folder.</p>
<div class="highlight highlight-source-julia"><pre>path <span class="pl-k">=</span> <span class="pl-c1">mfront</span>(norton)
mat <span class="pl-k">=</span> <span class="pl-c1">MFrontMaterialModel</span>(lib_path<span class="pl-k">=</span>path, behaviour_name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>NortonTest<span class="pl-pds">"</span></span>)</pre></div>
<p>Let's use <code>uniaxial_increment!</code> function from <code>Materials.jl</code>. The first loading
block defines the tension phase and the second the relaxation phase.</p>
<div class="highlight highlight-source-julia"><pre>s11 <span class="pl-k">=</span> [<span class="pl-c1">0.</span>]; e11 <span class="pl-k">=</span> [<span class="pl-c1">0.</span>]; tim <span class="pl-k">=</span> [<span class="pl-c1">0.</span>]
<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">200</span>
    dstran <span class="pl-k">=</span> <span class="pl-c1">1e-5</span>
    <span class="pl-c1">uniaxial_increment!</span>(mat, dstran, <span class="pl-c1">1.0</span>)
    <span class="pl-c1">update_material!</span>(mat)
    <span class="pl-c1">push!</span>(e11, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>strain[<span class="pl-c1">1</span>])
    <span class="pl-c1">push!</span>(tim, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>time)
    <span class="pl-c1">push!</span>(s11, mat<span class="pl-k">.</span>variables<span class="pl-k">.</span>stress[<span class="pl-c1">1</span>])
<span class="pl-k">end</span>

<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">500</span>
    dstran <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
    <span class="pl-c1">uniaxial_increment!</span>(mat, dstran, <span class="pl-c1">1.0</span>)
    <span class="pl-c1">update_material!</span>(mat)
    <span class="pl-c1">push!</span>(e11, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>strain[<span class="pl-c1">1</span>])
    <span class="pl-c1">push!</span>(tim, mat<span class="pl-k">.</span>drivers<span class="pl-k">.</span>time)
    <span class="pl-c1">push!</span>(s11, mat<span class="pl-k">.</span>variables<span class="pl-k">.</span>stress[<span class="pl-c1">1</span>])
<span class="pl-k">end</span></pre></div>
<p>Finally let's plot the stress-strain behaviour.</p>
<div class="highlight highlight-source-julia"><pre>p1 <span class="pl-k">=</span> <span class="pl-c1">plot</span>(tim,s11,xlabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Time<span class="pl-pds">"</span></span>,ylabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Stress<span class="pl-pds">"</span></span>,legend<span class="pl-k">=</span><span class="pl-c1">false</span>)
p2 <span class="pl-k">=</span> <span class="pl-c1">plot</span>(e11,s11,xlabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Strain<span class="pl-pds">"</span></span>,ylabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Stress<span class="pl-pds">"</span></span>,legend<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">plot</span>(p1, p2, layout<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">savefig</span>(<span class="pl-s"><span class="pl-pds">"</span>Norton.png<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton.png"><img src="https://raw.githubusercontent.com/JuliaFEM/MFrontInterface.jl/master/docs/src/Norton.png" alt="Norton Stress-Strain Curve" style="max-width:100%;"></a></p>
</article></div>