<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dottestsets" class="anchor" aria-hidden="true" href="#dottestsets"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DotTestSets</h1>
<p>The <code>DotTestSets</code> module provides the <a href="https://docs.julialang.org/en/v1/stdlib/Test/index.html#Creating-Custom-AbstractTestSet-Types-1" rel="nofollow">custom test
set</a>
type <code>DotTestSet</code>, which (to some extent) emulates the behavior of Python's
<code>unittest</code> (in non-verbose mode), with line-wrapping. For example, the
following test suite …</p>
<pre><code>using Test, DotTestSets, Primes

@testset DotTestSet begin
    for i = 1:100
        @test i ≠ 39
    end
end
</code></pre>
<p>… produces the following output:</p>
<pre lang="text"><code>......................................F...............................
..............................
----------------------------------------------------------------------
Test Failed at /Users/mlh/Dropbox/DotTestSets.jl/test/runtests.jl:5
  Expression: i ≠ 39
   Evaluated: 39 ≠ 39
----------------------------------------------------------------------
Ran 100 tests in 0.947 s

FAILED (failures=1)
</code></pre>
<p>Nesting <code>DotTestSet</code>s yield just a single stream of dots. Errors are marked
with <code>E</code>:</p>
<pre><code>using Test, DotTestSets

@testset DotTestSet begin

    @test error()

end
</code></pre>
<p>This yields the following output:</p>
<pre lang="text"><code>E
----------------------------------------------------------------------
Error During Test at ...
  Test threw exception
  Expression: error()

  Stacktrace:
   [1] error() at ./error.jl:42
   ...
----------------------------------------------------------------------
Ran 1 tests in 1.277 s

FAILED (errors=1)
</code></pre>
</article></div>