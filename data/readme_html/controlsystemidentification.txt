<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-controlsystemidentification" class="anchor" aria-hidden="true" href="#controlsystemidentification"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ControlSystemIdentification</h1>
<p dir="auto"><a href="https://github.com/baggepinnen/ControlSystemIdentification.jl/actions"><img src="https://github.com/baggepinnen/ControlSystemIdentification.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/baggepinnen/ControlSystemIdentification.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/47dcf9b0587562d36a275cab476be61400387cb811c58b6e5359f3326f325373/68747470733a2f2f636f6465636f762e696f2f67682f626167676570696e6e656e2f436f6e74726f6c53797374656d4964656e74696669636174696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/baggepinnen/ControlSystemIdentification.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://baggepinnen.github.io/ControlSystemIdentification.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation, stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://baggepinnen.github.io/ControlSystemIdentification.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Documentation, latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">System identification for <a href="https://github.com/JuliaControl/ControlSystems.jl/">ControlSystems.jl</a>, implemented in Julia.</p>
<p dir="auto">This package estimates linear <a href="https://en.wikipedia.org/wiki/State-space_representation" rel="nofollow">statespace models</a> with inputs on the form</p>
<math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="66f05df3db1432d1b870cd73aded1b47">$$\begin{aligned}
x^+ &amp;= Ax + Bu + Ke\\\
y &amp;= Cx + Du + e
\end{aligned}$$</math-renderer>
<p dir="auto">using methods such as N4SID or the prediction-error method,
or <a href="https://en.wikipedia.org/wiki/Transfer_function" rel="nofollow">transfer functions</a> on the form</p>
<math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="66f05df3db1432d1b870cd73aded1b47">$$G(z) = \dfrac{B(z)}{A(z)} = \dfrac{b_m z^m + \dots + b_0}{z^n + a_{n-1} z^{n-1} + \dots + a_0}$$</math-renderer>
<p dir="auto">See the <a href="https://baggepinnen.github.io/ControlSystemIdentification.jl/stable" rel="nofollow">documentation</a> for help.</p>
<p dir="auto">Examples in the form of jupyter notebooks are provided <a href="https://github.com/JuliaControl/ControlExamples.jl?files=1">here</a>.</p>
<h2 dir="auto">
<a id="user-content-quick-example" class="anchor" aria-hidden="true" href="#quick-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick example:</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ControlSystemIdentification, ControlSystemsBase
Ts = 0.1
G  = c2d(DemoSystems.resonant(), Ts) # A true system to generate data from
u  = randn(1,1000)                   # A random input
y  = lsim(G,u).y                     # Simulated output
y .+= 0.01 .* randn.()               # add measurement noise
d  = iddata(y, u, Ts)                # package data in iddata object
sys = subspaceid(d, :auto)           # estimate state-space model using subspace-based identification
bodeplot([G, sys.sys], lab=[&quot;True&quot; &quot;&quot; &quot;n4sid&quot; &quot;&quot;])"><pre><span class="pl-k">using</span> ControlSystemIdentification, ControlSystemsBase
Ts <span class="pl-k">=</span> <span class="pl-c1">0.1</span>
G  <span class="pl-k">=</span> <span class="pl-c1">c2d</span>(DemoSystems<span class="pl-k">.</span><span class="pl-c1">resonant</span>(), Ts) <span class="pl-c"><span class="pl-c">#</span> A true system to generate data from</span>
u  <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1000</span>)                   <span class="pl-c"><span class="pl-c">#</span> A random input</span>
y  <span class="pl-k">=</span> <span class="pl-c1">lsim</span>(G,u)<span class="pl-k">.</span>y                     <span class="pl-c"><span class="pl-c">#</span> Simulated output</span>
y <span class="pl-k">.+</span><span class="pl-k">=</span> <span class="pl-c1">0.01</span> <span class="pl-k">.*</span> <span class="pl-c1">randn</span>.()               <span class="pl-c"><span class="pl-c">#</span> add measurement noise</span>
d  <span class="pl-k">=</span> <span class="pl-c1">iddata</span>(y, u, Ts)                <span class="pl-c"><span class="pl-c">#</span> package data in iddata object</span>
sys <span class="pl-k">=</span> <span class="pl-c1">subspaceid</span>(d, <span class="pl-c1">:auto</span>)           <span class="pl-c"><span class="pl-c">#</span> estimate state-space model using subspace-based identification</span>
<span class="pl-c1">bodeplot</span>([G, sys<span class="pl-k">.</span>sys], lab<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>True<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>n4sid<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>])</pre></div>
</article></div>