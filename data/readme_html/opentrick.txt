<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-opentrick" class="anchor" aria-hidden="true" href="#opentrick"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OpenTrick</h1>
<ul>
<li><a href="#examples">Examples</a></li>
<li><a href="#supported-interfaces-in-base">Supported Interfaces in Base</a></li>
<li><a href="#opentrickjl-documentation">OpenTrick.jl Documentation</a></li>
</ul>
<p>There are some <code>open</code> methods which only support the <code>open() do io ... end</code> conventions. This module provides a trick to enable keeping <code>io</code> for later usage. This is convenient for interactive programming.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>using WebSockets as an example.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using OpenTrick
using WebSockets

io = opentrick(WebSockets.open, &quot;ws://echo.websocket.org&quot;);
write(io, &quot;Hello&quot;);
println(String(read(io)));

close(io)  # you can close io manually
io = nothing; # or leave it to GC
unsafe_clear() # or you can clear all ios opened by opentrick manually
"><pre><span class="pl-k">using</span> OpenTrick
<span class="pl-k">using</span> WebSockets

io <span class="pl-k">=</span> <span class="pl-c1">opentrick</span>(WebSockets<span class="pl-k">.</span>open, <span class="pl-s"><span class="pl-pds">"</span>ws://echo.websocket.org<span class="pl-pds">"</span></span>);
<span class="pl-c1">write</span>(io, <span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>);
<span class="pl-c1">println</span>(<span class="pl-c1">String</span>(<span class="pl-c1">read</span>(io)));

<span class="pl-c1">close</span>(io)  <span class="pl-c"><span class="pl-c">#</span> you can close io manually</span>
io <span class="pl-k">=</span> <span class="pl-c1">nothing</span>; <span class="pl-c"><span class="pl-c">#</span> or leave it to GC</span>
<span class="pl-c1">unsafe_clear</span>() <span class="pl-c"><span class="pl-c">#</span> or you can clear all ios opened by opentrick manually</span></pre></div>
<h2><a id="user-content-supported-interfaces-in-base" class="anchor" aria-hidden="true" href="#supported-interfaces-in-base"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Supported Interfaces in Base</h2>
<ul>
<li>read, read!, readbytes!, unsafe_read, readavailable,    readline, readlines, eachline, readchomp, readuntil, bytesavailable</li>
<li>write, unsafe_write, truncate, flush,    print, println, printstyled, showerror</li>
<li>seek, seekstart, seekend, skip, skipchars, position</li>
<li>mark, unmark, reset, ismarked</li>
<li>isreadonly, iswritable, isreadable, isopen, eof</li>
<li>countlines, displaysize</li>
</ul>
<p><a id="user-content-opentrick.jl-documentation-1"></a></p>
<h2><a id="user-content-opentrickjl-documentation" class="anchor" aria-hidden="true" href="#opentrickjl-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OpenTrick.jl Documentation</h2>
<p><a id="user-content-opentrick.opentrick" href="#OpenTrick.opentrick">#</a>
<strong><code>OpenTrick.opentrick</code></strong> — <em>Function</em>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="opentrick(openfn[, args... [; &lt;keyword arguments&gt;]])
"><pre><code>opentrick(openfn[, args... [; &lt;keyword arguments&gt;]])
</code></pre></div>
<p>Call <code>openfn</code> with <code>(handlefn, args... ,kwargs ...)</code> as arguments, return an <code>IOWrapper</code> instance. (NB:<code>handlefn</code> is provided by <code>opentrick</code>.)</p>
<p><strong>Arguments</strong></p>
<ul>
<li><code>openfn::Function</code> function actually called to obtain a <code>IO</code> instance. <code>openfn</code> must take a <code>Function(::IO)</code> instance as its first argument</li>
<li><code>args</code> optional arguments that will be passed to <code>openfn</code></li>
<li><code>kwargs</code> optional keyword arguments that will be passed to <code>openfn</code></li>
</ul>
<p><strong>Examples</strong></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using OpenTrick

julia&gt; filename = tempname();

julia&gt; io = opentrick(open, filename, &quot;w+&quot;);

julia&gt; write(io, &quot;hello world!&quot;)
12

julia&gt; seek(io, 0);

julia&gt; readline(io)
&quot;hello world!&quot;

"><pre lang="julia-repl"><code>julia&gt; using OpenTrick

julia&gt; filename = tempname();

julia&gt; io = opentrick(open, filename, "w+");

julia&gt; write(io, "hello world!")
12

julia&gt; seek(io, 0);

julia&gt; readline(io)
"hello world!"

</code></pre></div>
<p><a href="https://github.com/zhanglix/OpenTrick.jl/blob/aaa229d239668168f255f4c518a45d1c6ddc1e8a/src/OpenTrick.jl#L18-L47">source</a><br></p>
<p><a id="user-content-opentrick.rawio" href="#OpenTrick.rawio">#</a>
<strong><code>OpenTrick.rawio</code></strong> — <em>Function</em>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="rawio(io)
"><pre><code>rawio(io)
</code></pre></div>
<p>Return the actual <code>io</code> instance</p>
<p><a href="https://github.com/zhanglix/OpenTrick.jl/blob/aaa229d239668168f255f4c518a45d1c6ddc1e8a/src/OpenTrick.jl#L100-L104">source</a><br></p>
<p><a id="user-content-opentrick.blockingtask" href="#OpenTrick.blockingtask">#</a>
<strong><code>OpenTrick.blockingtask</code></strong> — <em>Function</em>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="blockingtask(io)
"><pre><code>blockingtask(io)
</code></pre></div>
<p>Return the task blocking which prevents the <code>handlefn</code> passed to <code>openfn</code> from returning</p>
<p><a href="https://github.com/zhanglix/OpenTrick.jl/blob/aaa229d239668168f255f4c518a45d1c6ddc1e8a/src/OpenTrick.jl#L107-L111">source</a><br></p>
<p><a id="user-content-opentrick.unsafe_clear" href="#OpenTrick.unsafe_clear">#</a>
<strong><code>OpenTrick.unsafe_clear</code></strong> — <em>Function</em>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="unsafe_clear()
"><pre><code>unsafe_clear()
</code></pre></div>
<p>Unblock all blocking tasks. All <code>io</code>s returned by <code>opentrick</code> will be closed as a consequence.</p>
<p><a href="https://github.com/zhanglix/OpenTrick.jl/blob/aaa229d239668168f255f4c518a45d1c6ddc1e8a/src/OpenTrick.jl#L87-L92">source</a><br></p>
</article></div>