<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pdenlpmodels" class="anchor" aria-hidden="true" href="#pdenlpmodels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PDENLPModels</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>CI</strong></th>
<th align="center"><strong>Coverage</strong></th>
<th align="center"><strong>Release</strong></th>
<th align="center"><strong>DOI</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://JuliaSmoothOptimizers.github.io/PDENLPModels.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://JuliaSmoothOptimizers.github.io/PDENLPModels.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/ef2963f072da1a61a3df68686ccef86709fad9d7007c9ae6d734e85ef0a6ba7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d707572706c652e737667" alt="docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-purple.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaSmoothOptimizers/PDENLPModels.jl/actions"><img src="https://github.com/JuliaSmoothOptimizers/PDENLPModels.jl/workflows/CI/badge.svg?branch=main" alt="build-ci" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaSmoothOptimizers/PDENLPModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/16460490737d497be74808eb8d06b04e788f5f84d751367952a56a1a18908e22/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961536d6f6f74684f7074696d697a6572732f5044454e4c504d6f64656c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSmoothOptimizers/PDENLPModels.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaSmoothOptimizers/PDENLPModels.jl/releases"><img src="https://camo.githubusercontent.com/d60b53b93f5582714818bfe619e6e3b52283f3424ca92e3c2f1978ab14d15f0a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f4a756c6961536d6f6f74684f7074696d697a6572732f5044454e4c504d6f64656c732e6a6c2e7376673f7374796c653d666c61742d737175617265" alt="release" data-canonical-src="https://img.shields.io/github/v/release/JuliaSmoothOptimizers/PDENLPModels.jl.svg?style=flat-square" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://doi.org/10.21105/joss.04736" rel="nofollow"><img src="https://camo.githubusercontent.com/f700b9893ae29402dd09fc7c0bf4f1082f29e1da14b1a2f0fd180d1179b898d3/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30343733362f7374617475732e737667" alt="doi" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.04736/status.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">PDENLPModels specializes the <a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl">NLPModel API</a> to optimization problems with partial differential equations in the constraints. The package relies on <a href="https://github.com/gridap/Gridap.jl">Gridap.jl</a> for the modeling and the computation of the derivatives. Find tutorials for using Gridap <a href="https://github.com/gridap/Tutorials">here</a>.</p>
<p dir="auto">We consider optimization problems of the form: Find functions <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$(y,u): Y \times U \rightarrow ℜⁿ \times ℜⁿ$</math-renderer> and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$κ \in ℜⁿ$</math-renderer> satisfying</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$$
\begin{equation}
\begin{array}{cl}
\min_{\kappa,y,u} &amp; \int_\Omega f(\kappa,y,u) d\Omega \\
\text{ s.t. } &amp; y \text{ solution of a } PDE(\kappa,u)=0, \\
&amp; lcon \leq c(\kappa,y,u) \leq ucon, \\
&amp; lvar \leq (\kappa,y,u) \leq uvar,\\
\end{array}
\end{equation}
$$</math-renderer></p>
<p dir="auto">We refer to the the repository <a href="https://github.com/tmigot/PDEOptimizationProblems">PDEOptimizationProblems</a> for examples of problems of different types: calculus of variations, optimal control problem, PDE-constrained problems, and mixed PDE-contrained problems with both function and algebraic unknowns.</p>
<h2 dir="auto">
<a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add PDENLPModels"><pre class="notranslate"><code>] add PDENLPModels
</code></pre></div>
<p dir="auto">The current version of PDENLPModels relies on Gridap v0.15.5.</p>
<h2 dir="auto">
<a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$$
\begin{equation}
\min_{y \in H^1_0,u \in H^1} \frac{1}{2} \int_{\Omega} |y(x) - y_d(x)|^2dx + \frac{\alpha}{2} \int_{\Omega} |u|^2 \quad \text{ s.t. } -\Delta y = u + h,   \text{ for }    x \in \Omega, y = 0 \text{ for } x \in \partial \Omega,
\end{equation}
$$</math-renderer></p>
<p dir="auto">where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$y_d(x) = -x_1^2$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$h(x) = 1$</math-renderer> and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6d89b6f5191c9ed3be54a974a317273d">$\alpha = 10^{-2}$</math-renderer>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Gridap, PDENLPModels

  # Definition of the domain
  n = 100
  domain = (-1, 1, -1, 1)
  partition = (n, n)
  model = CartesianDiscreteModel(domain, partition)

  # Definition of the spaces:
  valuetype = Float64
  reffe = ReferenceFE(lagrangian, valuetype, 2)
  Xpde = TestFESpace(model, reffe; conformity = :H1, dirichlet_tags = &quot;boundary&quot;)
  y0(x) = 0.0
  Ypde = TrialFESpace(Xpde, y0)

  reffe_con = ReferenceFE(lagrangian, valuetype, 1)
  Xcon = TestFESpace(model, reffe_con; conformity = :H1)
  Ycon = TrialFESpace(Xcon)

  # Integration machinery
  trian = Triangulation(model)
  degree = 1
  dΩ = Measure(trian, degree)

  # Objective function:
  yd(x) = -x[1]^2
  α = 1e-2
  function f(y, u)
    ∫(0.5 * (yd - y) * (yd - y) + 0.5 * α * u * u) * dΩ
  end

  # Definition of the constraint operator
  ω = π - 1 / 8
  h(x) = -sin(ω * x[1]) * sin(ω * x[2])
  function res(y, u, v)
    ∫(∇(v) ⊙ ∇(y) - v * u - v * h) * dΩ
  end

  # initial guess
  npde = num_free_dofs(Ypde)
  ncon = num_free_dofs(Ycon)
  xin = zeros(npde + ncon)

  nlp = GridapPDENLPModel(xin, f, trian, Ypde, Ycon, Xpde, Xcon, res, name = &quot;Control elastic membrane&quot;)"><pre><span class="pl-k">using</span> Gridap, PDENLPModels

  <span class="pl-c"><span class="pl-c">#</span> Definition of the domain</span>
  n <span class="pl-k">=</span> <span class="pl-c1">100</span>
  domain <span class="pl-k">=</span> (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>)
  partition <span class="pl-k">=</span> (n, n)
  model <span class="pl-k">=</span> <span class="pl-c1">CartesianDiscreteModel</span>(domain, partition)

  <span class="pl-c"><span class="pl-c">#</span> Definition of the spaces:</span>
  valuetype <span class="pl-k">=</span> Float64
  reffe <span class="pl-k">=</span> <span class="pl-c1">ReferenceFE</span>(lagrangian, valuetype, <span class="pl-c1">2</span>)
  Xpde <span class="pl-k">=</span> <span class="pl-c1">TestFESpace</span>(model, reffe; conformity <span class="pl-k">=</span> <span class="pl-c1">:H1</span>, dirichlet_tags <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>boundary<span class="pl-pds">"</span></span>)
  <span class="pl-en">y0</span>(x) <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
  Ypde <span class="pl-k">=</span> <span class="pl-c1">TrialFESpace</span>(Xpde, y0)

  reffe_con <span class="pl-k">=</span> <span class="pl-c1">ReferenceFE</span>(lagrangian, valuetype, <span class="pl-c1">1</span>)
  Xcon <span class="pl-k">=</span> <span class="pl-c1">TestFESpace</span>(model, reffe_con; conformity <span class="pl-k">=</span> <span class="pl-c1">:H1</span>)
  Ycon <span class="pl-k">=</span> <span class="pl-c1">TrialFESpace</span>(Xcon)

  <span class="pl-c"><span class="pl-c">#</span> Integration machinery</span>
  trian <span class="pl-k">=</span> <span class="pl-c1">Triangulation</span>(model)
  degree <span class="pl-k">=</span> <span class="pl-c1">1</span>
  dΩ <span class="pl-k">=</span> <span class="pl-c1">Measure</span>(trian, degree)

  <span class="pl-c"><span class="pl-c">#</span> Objective function:</span>
  <span class="pl-en">yd</span>(x) <span class="pl-k">=</span> <span class="pl-k">-</span>x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>
  α <span class="pl-k">=</span> <span class="pl-c1">1e-2</span>
  <span class="pl-k">function</span> <span class="pl-en">f</span>(y, u)
    <span class="pl-c1">∫</span>(<span class="pl-c1">0.5</span> <span class="pl-k">*</span> (yd <span class="pl-k">-</span> y) <span class="pl-k">*</span> (yd <span class="pl-k">-</span> y) <span class="pl-k">+</span> <span class="pl-c1">0.5</span> <span class="pl-k">*</span> α <span class="pl-k">*</span> u <span class="pl-k">*</span> u) <span class="pl-k">*</span> dΩ
  <span class="pl-k">end</span>

  <span class="pl-c"><span class="pl-c">#</span> Definition of the constraint operator</span>
  ω <span class="pl-k">=</span> π <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">8</span>
  <span class="pl-en">h</span>(x) <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">sin</span>(ω <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> <span class="pl-c1">sin</span>(ω <span class="pl-k">*</span> x[<span class="pl-c1">2</span>])
  <span class="pl-k">function</span> <span class="pl-en">res</span>(y, u, v)
    <span class="pl-c1">∫</span>(<span class="pl-c1">∇</span>(v) ⊙ <span class="pl-c1">∇</span>(y) <span class="pl-k">-</span> v <span class="pl-k">*</span> u <span class="pl-k">-</span> v <span class="pl-k">*</span> h) <span class="pl-k">*</span> dΩ
  <span class="pl-k">end</span>

  <span class="pl-c"><span class="pl-c">#</span> initial guess</span>
  npde <span class="pl-k">=</span> <span class="pl-c1">num_free_dofs</span>(Ypde)
  ncon <span class="pl-k">=</span> <span class="pl-c1">num_free_dofs</span>(Ycon)
  xin <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(npde <span class="pl-k">+</span> ncon)

  nlp <span class="pl-k">=</span> <span class="pl-c1">GridapPDENLPModel</span>(xin, f, trian, Ypde, Ycon, Xpde, Xcon, res, name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Control elastic membrane<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto">
<a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<blockquote>
<p dir="auto">Migot, T., Orban D., &amp; Siqueira A. S.
PDENLPModels.jl: A NLPModel API for optimization problems with PDE-constraints
Journal of Open Source Software 7(80), 4736 (2022).
<a href="https://doi.org/10.21105/joss.04736" rel="nofollow">10.21105/joss.04736</a></p>
<p dir="auto">Badia, S., &amp; Verdugo, F.
Gridap: An extensible Finite Element toolbox in Julia.
Journal of Open Source Software, 5(52), 2520 (2020).
<a href="https://doi.org/10.21105/joss.02520" rel="nofollow">10.21105/joss.02520</a></p>
</blockquote>
<h2 dir="auto">
<a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to Cite</h2>
<p dir="auto">If you use PDENLPModels.jl in your work, please cite using the format given in <a href="https://github.com/JuliaSmoothOptimizers/PDENLPModels.jl/blob/main/CITATION.cff">CITATION.cff</a>.</p>
<h1 dir="auto">
<a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h1>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/PDENLPModels.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a>, so questions about any of our packages are welcome.</p>
</article></div>