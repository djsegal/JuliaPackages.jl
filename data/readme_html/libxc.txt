<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-libxcjl" class="anchor" aria-hidden="true" href="#libxcjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Libxc.jl</h1>
<table>
<thead>
<tr>
<th align="left"><strong>Build Status</strong></th>
<th align="left"><strong>License</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><a href="https://travis-ci.com/JuliaMolSim/Libxc.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0f8022c6aca817f64ebbe34ac7ebe365613ae40f/68747470733a2f2f7472617669732d63692e636f6d2f4a756c69614d6f6c53696d2f4c696278632e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.com/JuliaMolSim/Libxc.jl.svg?branch=master" style="max-width:100%;"></a> <a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaMolSim/Libxc.jl/workflows/Windows%20tests/badge.svg"><img src="https://github.com/JuliaMolSim/Libxc.jl/workflows/Windows%20tests/badge.svg" alt="" style="max-width:100%;"></a> <a href="https://coveralls.io/github/JuliaMolSim/Libxc.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fa618c682599dcbef2c932d0b4e678b2f1c9546f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614d6f6c53696d2f4c696278632e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="" data-canonical-src="https://coveralls.io/repos/JuliaMolSim/Libxc.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></td>
<td align="left"><a href="https://github.com/JuliaMolSim/Libxc.jl/blob/master/LICENSE"><img src="https://camo.githubusercontent.com/acab14c61a3e00f683b90132f663ab4582a65f3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4a756c69614d6f6c53696d2f4c696278632e6a6c2e7376673f6d61784167653d32353932303030" alt="" data-canonical-src="https://img.shields.io/github/license/JuliaMolSim/Libxc.jl.svg?maxAge=2592000" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>This package provides Julia bindings to the
<a href="https://tddft.org/programs/libxc/" rel="nofollow">libxc</a> library
for common exchange-correlation functionals in density-functional theory.</p>
<h2><a id="user-content-usage-high-level-interface" class="anchor" aria-hidden="true" href="#usage-high-level-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage (High-level interface)</h2>
<p>Install the library from Julia as usual:</p>
<div class="highlight highlight-source-shell"><pre>] add Libxc</pre></div>
<p>and then for example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Libxc

rho <span class="pl-k">=</span> [<span class="pl-c1">0.1</span>, <span class="pl-c1">0.2</span>, <span class="pl-c1">0.3</span>, <span class="pl-c1">0.4</span>, <span class="pl-c1">0.5</span>]
sigma <span class="pl-k">=</span> [<span class="pl-c1">0.2</span>, <span class="pl-c1">0.3</span>, <span class="pl-c1">0.4</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.6</span>]

<span class="pl-c"><span class="pl-c">#</span> LDA exchange</span>
lda_x <span class="pl-k">=</span> <span class="pl-c1">Functional</span>(<span class="pl-c1">:lda_x</span>)
result <span class="pl-k">=</span> <span class="pl-c1">evaluate</span>(lda_x, rho<span class="pl-k">=</span>rho)
<span class="pl-c1">@show</span> result
<span class="pl-c"><span class="pl-c">#</span> result = (vrho = [-0.457078 -0.575882 -0.659220 -0.725566 -0.781592],</span>
<span class="pl-c"><span class="pl-c">#</span>           zk = [-0.342808, -0.43191, -0.49441, -0.544174, -0.586194])</span>

<span class="pl-c"><span class="pl-c">#</span> GGA exchange</span>
gga_x <span class="pl-k">=</span> <span class="pl-c1">Functional</span>(<span class="pl-c1">:gga_x_pbe</span>, n_spin<span class="pl-k">=</span><span class="pl-c1">1</span>)
result <span class="pl-k">=</span> <span class="pl-c1">evaluate</span>(gga_x, rho<span class="pl-k">=</span>rho, sigma<span class="pl-k">=</span>sigma, derivative<span class="pl-k">=</span><span class="pl-c1">0</span>)
<span class="pl-c1">@show</span> result
<span class="pl-c"><span class="pl-c">#</span> result = (zk = [-0.452597, -0.478877, -0.520674, -0.561427, -0.598661],)</span></pre></div>
<h3><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h3>
<p>Full support for evaluating LDA, GGA and meta-GGA functionals
as shown above. No support for hybrid or range-separated
functionals yet. For those you need to talk to libxc directly
using the low-level interface.</p>
<h2><a id="user-content-low-level-interface" class="anchor" aria-hidden="true" href="#low-level-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Low-level interface</h2>
<p>All functions from libxc are available in Julia in a C-like interface
automatically generated from the libxc source code. See the file
<a href="src/gen/libxc.jl">src/gen/libxc.jl</a> for the full list.</p>
</article></div>