<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-itensorsvisualization" class="anchor" aria-hidden="true" href="#itensorsvisualization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ITensorsVisualization</h1>
<p>This is a package for visualizing tensor networks. The main purpose is to use it with the <a href="https://github.com/ITensor/ITensors.jl">ITensors.jl</a> package to view and debug tensor network contractions, for example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ITensors
using ITensorsVisualization

i = Index(2, &quot;index_i&quot;)
j = Index(10, &quot;index_j&quot;)
k = Index(40, &quot;index_k&quot;)
l = Index(40, &quot;index_l&quot;)
m = Index(40, &quot;index_m&quot;)
A = randomITensor(i, j, k)
B = randomITensor(i, j, l, m)
C = randomITensor(k, l)
# Contract the tensors over the common indices
# and visualize the results
ABC = @visualize A * B * C
"><pre><span class="pl-k">using</span> ITensors
<span class="pl-k">using</span> ITensorsVisualization

i <span class="pl-k">=</span> <span class="pl-c1">Index</span>(<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">"</span>index_i<span class="pl-pds">"</span></span>)
j <span class="pl-k">=</span> <span class="pl-c1">Index</span>(<span class="pl-c1">10</span>, <span class="pl-s"><span class="pl-pds">"</span>index_j<span class="pl-pds">"</span></span>)
k <span class="pl-k">=</span> <span class="pl-c1">Index</span>(<span class="pl-c1">40</span>, <span class="pl-s"><span class="pl-pds">"</span>index_k<span class="pl-pds">"</span></span>)
l <span class="pl-k">=</span> <span class="pl-c1">Index</span>(<span class="pl-c1">40</span>, <span class="pl-s"><span class="pl-pds">"</span>index_l<span class="pl-pds">"</span></span>)
m <span class="pl-k">=</span> <span class="pl-c1">Index</span>(<span class="pl-c1">40</span>, <span class="pl-s"><span class="pl-pds">"</span>index_m<span class="pl-pds">"</span></span>)
A <span class="pl-k">=</span> <span class="pl-c1">randomITensor</span>(i, j, k)
B <span class="pl-k">=</span> <span class="pl-c1">randomITensor</span>(i, j, l, m)
C <span class="pl-k">=</span> <span class="pl-c1">randomITensor</span>(k, l)
<span class="pl-c"><span class="pl-c">#</span> Contract the tensors over the common indices</span>
<span class="pl-c"><span class="pl-c">#</span> and visualize the results</span>
ABC <span class="pl-k">=</span> <span class="pl-c1">@visualize</span> A <span class="pl-k">*</span> B <span class="pl-k">*</span> C</pre></div>
<p>A window like the following should appear:</p>
<p><a target="_blank" rel="noopener noreferrer" href="assets/ITensorsVisualization_A_B_C.png"><img src="assets/ITensorsVisualization_A_B_C.png" alt="alt text" style="max-width:100%;"></a></p>
<p>The visualization makes an initial guess for the locations of the tensors (using <a href="https://github.com/JuliaGraphs/NetworkLayout.jl">NetworkLayout.jl</a>), and then allows users to interactively move the tensors to better locations. You can move the tensors and external indices (the square and circle nodes of the network) by left clicking on a node and dragging it to a new location.  You can also right click and drag to translate the entire diagram, and scroll to zoom in and out.</p>
<p>In addition, you can pause the execution between contractions to analyze intermediate results:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; AB = @visualize A * B pause = true; ABC = @visualize AB * C;
Press C/c and then Enter to continue:
c

"><pre>julia<span class="pl-k">&gt;</span> AB <span class="pl-k">=</span> <span class="pl-c1">@visualize</span> A <span class="pl-k">*</span> B pause <span class="pl-k">=</span> <span class="pl-c1">true</span>; ABC <span class="pl-k">=</span> <span class="pl-c1">@visualize</span> AB <span class="pl-k">*</span> C;
Press C<span class="pl-k">/</span>c and then Enter to <span class="pl-k">continue</span><span class="pl-k">:</span>
c
</pre></div>
<p>This will first visualize the contraction <code>A * B</code>, wait for the user to respond, and then perform the contraction and continue to visualize and perform contraction <code>AB * C</code>. This is helpful for viewing and debugging multistep contractions.</p>
<p><a target="_blank" rel="noopener noreferrer" href="assets/ITensorsVisualization_A_B.png"><img src="assets/ITensorsVisualization_A_B.png" alt="alt text" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="assets/ITensorsVisualization_AB_C.png"><img src="assets/ITensorsVisualization_AB_C.png" alt="alt text" style="max-width:100%;"></a></p>
</article></div>