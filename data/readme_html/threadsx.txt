<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-threads-parallelized-base-functions" class="anchor" aria-hidden="true" href="#threads-parallelized-base-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Threadsâ¨‰: Parallelized <code>Base</code> functions</h1>
<p dir="auto"><a href="https://tkf.github.io/ThreadsX.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/tkf/ThreadsX.jl/actions?query=workflow%3A%22Run+tests%22"><img src="https://github.com/tkf/ThreadsX.jl/workflows/Run%20tests/badge.svg" alt="GitHub Actions" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-tldr" class="anchor" aria-hidden="true" href="#tldr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>tl;dr</h2>
<p dir="auto">Add prefix <code>ThreadsX.</code> to functions from <code>Base</code> to get some speedup,
if supported.  Example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ThreadsX

julia&gt; ThreadsX.sum(gcd(42, i) == 1 for i in 1:10_000)
2857"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ThreadsX

julia<span class="pl-k">&gt;</span> ThreadsX<span class="pl-k">.</span><span class="pl-c1">sum</span>(<span class="pl-c1">gcd</span>(<span class="pl-c1">42</span>, i) <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000</span>)
<span class="pl-c1">2857</span></pre></div>
<p dir="auto">To find out functions supported by ThreadsX.jl, just type
<code>ThreadsX.</code> + <kbd>TAB</kbd> in the REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ThreadsX.
MergeSort       any             findfirst       map!            reduce
QuickSort       collect         findlast        mapreduce       sort
Set             count           foreach         maximum         sort!
StableQuickSort extrema         issorted        minimum         sum
all             findall         map             prod            unique"><pre>julia<span class="pl-k">&gt;</span> ThreadsX.
MergeSort       any             findfirst       map!            reduce
QuickSort       collect         findlast        mapreduce       sort
Set             count           foreach         maximum         sort!
StableQuickSort extrema         issorted        minimum         sum
all             findall         map             prod            unique</pre></div>
<h2 dir="auto"><a id="user-content-interoperability" class="anchor" aria-hidden="true" href="#interoperability"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Interoperability</h2>
<h3 dir="auto"><a id="user-content-rich-collection-support" class="anchor" aria-hidden="true" href="#rich-collection-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Rich collection support</h3>
<p dir="auto">The <code>reduce</code>-based functions support any collections that implement
<a href="https://github.com/JuliaFolds/SplittablesBase.jl"><code>SplittablesBase.jl</code></a>
interface including arrays, <code>Dict</code>, <code>Set</code>, and iterator
transformations.  In particular, these functions support iterator
comprehension:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ThreadsX.sum(y for x in 1:10 if isodd(x) for y in 1:x^2)
4917"><pre>julia<span class="pl-k">&gt;</span> ThreadsX<span class="pl-k">.</span><span class="pl-c1">sum</span>(y <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">if</span> <span class="pl-c1">isodd</span>(x) <span class="pl-k">for</span> y <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>x<span class="pl-k">^</span><span class="pl-c1">2</span>)
<span class="pl-c1">4917</span></pre></div>
<p dir="auto">For advanced usage, they also support
<a href="https://juliafolds.github.io/Transducers.jl/dev/manual/#Transducers.eduction" rel="nofollow"><code>Transducers.eduction</code></a>
constructed with parallelizable transducers.</p>
<h3 dir="auto"><a id="user-content-onlinestatsjl" class="anchor" aria-hidden="true" href="#onlinestatsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OnlineStats.jl</h3>
<p dir="auto"><code>ThreadsX.reduce</code> supports an <code>OnlineStat</code> from
<a href="https://github.com/joshday/OnlineStats.jl">OnlineStats.jl</a> as the
first argument as long as it implements the
<a href="https://github.com/joshday/OnlineStatsBase.jl#interface">merging interface</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using OnlineStats: Mean

julia&gt; ThreadsX.reduce(Mean(), 1:10)
Mean: n=10 | value=5.5"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> OnlineStats<span class="pl-k">:</span> Mean

julia<span class="pl-k">&gt;</span> ThreadsX<span class="pl-k">.</span><span class="pl-c1">reduce</span>(<span class="pl-c1">Mean</span>(), <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>)
Mean<span class="pl-k">:</span> n<span class="pl-k">=</span><span class="pl-c1">10</span> <span class="pl-k">|</span> value<span class="pl-k">=</span><span class="pl-c1">5.5</span></pre></div>
<h2 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h2>
<p dir="auto">ThreadsX.jl is aiming at providing API compatible with <code>Base</code>
functions to easily parallelize Julia programs.</p>
<p dir="auto">All functions that exist directly under <code>ThreadsX</code> namespace are
public API and they implement a subset of API provided by <code>Base</code>.
Everything inside <code>ThreadsX.Implementations</code> is implementation detail.
The public API functions of <code>ThreadsX</code> expect that the data structure
and function(s) passed as argument are "thread-friendly" in the sense
that operating on <em>distinct</em> elements in the given container from
multiple tasks in parallel is safe. For example, <code>ThreadsX.sum(f, array)</code> assumes that executing <code>f(::eltype(array))</code> and accessing
elements as in <code>array[i]</code> from multiple threads is safe.  In
particular, this is the case if <code>array</code> is a <code>Vector</code> of immutable
objects and <code>f</code> is a pure function in the sense it does not mutate any
global objects.  Note that it is not required and <em>not recommended</em> to
use "thread-safe" array that protects accessing <code>array[i]</code> by a lock.</p>
<p dir="auto">In addition to the <code>Base</code> API, all functions accept keyword argument
<code>basesize::Integer</code> to configure the number of elements processed by
each thread.  A large value is useful for minimizing the overhead of
using multiple threads.  A small value is useful for load balancing
when the time to process single item varies a lot from item to item.
The default value of <code>basesize</code> for each function is currently an
implementation detail.</p>
<p dir="auto">ThreadsX.jl API is deterministic in the sense that the same input
produces the same output, independent of how <code>julia</code>'s task scheduler
decide to execute the tasks.  However, note that <code>basesize</code> is a part
of the input which may be set based on <code>Threads.nthreads()</code>.  To make
the result of the computation independent of <code>Threads.nthreads()</code>
value, <code>basesize</code> must be specified explicitly.</p>
<h2 dir="auto"><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitations</h2>
<ul dir="auto">
<li>Keyword argument <code>dims</code> is not supported yet.</li>
<li>(There are probably more.)</li>
</ul>
<h2 dir="auto"><a id="user-content-implementations" class="anchor" aria-hidden="true" href="#implementations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implementations</h2>
<p dir="auto">Most of <code>reduce</code>-based functions are implemented as thin wrappers of
<a href="https://github.com/JuliaFolds/Transducers.jl"><code>Transducers.jl</code></a>.</p>
<p dir="auto">Custom collections can support ThreadsX.jl API by implementing
<a href="https://github.com/JuliaFolds/SplittablesBase.jl"><code>SplittablesBase.jl</code></a>
interface.</p>
</article></div>