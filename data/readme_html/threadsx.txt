<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-threads-parallelized-base-functions" class="anchor" aria-hidden="true" href="#threads-parallelized-base-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Threadsâ¨‰: Parallelized <code>Base</code> functions</h1>
<p><a href="https://tkf.github.io/ThreadsX.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/tkf/ThreadsX.jl/actions?query=workflow%3A%22Run+tests%22"><img src="https://github.com/tkf/ThreadsX.jl/workflows/Run%20tests/badge.svg" alt="GitHub Actions" style="max-width:100%;"></a>
<a href="https://github.com/tkf/Aqua.jl"><img src="https://camo.githubusercontent.com/6100188045368e759fea6ce8c4df2e322ea75b3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417175612e6a6c2d2546302539462538432541322d617175612e737667" alt="Aqua QA" data-canonical-src="https://img.shields.io/badge/Aqua.jl-%F0%9F%8C%A2-aqua.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-tldr" class="anchor" aria-hidden="true" href="#tldr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>tl;dr</h2>
<p>Add prefix <code>ThreadsX.</code> to functions from <code>Base</code> to get some speedup,
if supported.  Example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ThreadsX
ThreadsX<span class="pl-k">.</span><span class="pl-c1">sum</span>(sin, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000</span>)</pre></div>
<p>To find out functions supported by ThreadsX.jl, just type
<code>ThreadsX.</code> + <kbd>TAB</kbd> in the REPL:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ThreadsX

julia<span class="pl-k">&gt;</span> ThreadsX.
MergeSort       any             findlast        mapreduce       sort
QuickSort       count           foreach         maximum         sort!
Set             extrema         issorted        minimum         sum
StableQuickSort findall         map             prod            unique
all             findfirst       map!            reduce</pre></div>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h2>
<p>ThreadsX.jl is aiming at providing API compatible with <code>Base</code>
functions to easily parallelize Julia programs.</p>
<p>All functions that exist directly under <code>ThreadsX</code> namespace are
public API and they implement a subset of API provided by <code>Base</code>.
Everything inside <code>ThreadsX.Implementations</code> is implementation detail.
The public API functions of <code>ThreadsX</code> expect that the data structure
and function(s) passed as argument are "thread-friendly" in the sense
that operating on <em>distinct</em> elements in the given container from
multiple tasks in parallel is safe. For example, <code>ThreadsX.sum(f, array)</code> assumes that executing <code>f(::eltype(array))</code> and accessing
elements as in <code>array[i]</code> from multiple threads is safe.  In
particular, this is the case if <code>array</code> is a <code>Vector</code> of immutable
objects and <code>f</code> is a pure function in the sense it does not mutate any
global objects.  Note that it is not required and <em>not recommended</em> to
use "thread-safe" array that protects accessing <code>array[i]</code> by a lock.</p>
<p>In addition to the <code>Base</code> API, all functions accept keyword argument
<code>basesize::Integer</code> to configure the number of elements processed by
each thread.  A large value is useful for minimizing the overhead of
using multiple threads.  A small value is useful for load balancing
when the time to process single item varies a lot from item to item.
The default value of <code>basesize</code> for each function is currently an
implementation detail.</p>
<p>ThreadsX.jl API is deterministic in the sense that the same input
produces the same output, independent of how <code>julia</code>'s task scheduler
decide to execute the tasks.  However, note that <code>basesize</code> is a part
of the input which may be set based on <code>Threads.nthreads()</code>.  To make
the result of the computation independent of <code>Threads.nthreads()</code>
value, <code>basesize</code> must be specified explicitly.</p>
<h2><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Limitations</h2>
<ul>
<li>Keyword argument <code>dims</code> is not supported yet.</li>
<li>(There are probably more.)</li>
</ul>
<h2><a id="user-content-implementations" class="anchor" aria-hidden="true" href="#implementations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Implementations</h2>
<p>Most of <code>reduce</code>-based functions are implemented as thin wrappers of
<a href="https://github.com/tkf/Transducers.jl"><code>Transducers.jl</code></a>.</p>
<p>Custom collections can support ThreadsX.jl API by implementing
<a href="https://github.com/tkf/SplittablesBase.jl"><code>SplittablesBase.jl</code></a>
interface.</p>
</article></div>