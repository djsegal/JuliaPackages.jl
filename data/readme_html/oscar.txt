<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-oscarjl" class="anchor" aria-hidden="true" href="#oscarjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Oscar.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://docs.oscar-system.org/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://docs.oscar-system.org/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/oscar-system/Oscar.jl/actions?query=workflow%3A%22Run+tests%22"><img src="https://github.com/oscar-system/Oscar.jl/workflows/Run%20tests/badge.svg" alt="" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/oscar-system/Oscar.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ac112c79456a91f6a26b14baeed845c1db2fdaf4e740a43ee34a2957f81ab12d/68747470733a2f2f636f6465636f762e696f2f67682f6f736361722d73797374656d2f4f736361722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://codecov.io/gh/oscar-system/Oscar.jl/branch/master/graph/badge.svg?branch=master" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Welcome to the OSCAR project, a visionary new computer algebra system
which combines the capabilities of four cornerstone systems: GAP,
Polymake, Antic and Singular.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">OSCAR requires Julia 1.6 or newer. In principle it can be installed and used
like any other Julia package; doing so will take a couple of minutes:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;Oscar&quot;)
julia&gt; using Oscar"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Oscar<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Oscar</pre></div>
<p dir="auto">However, some of OSCAR's components have additional requirements.
For more detailed information, please consult the <a href="https://www.oscar-system.org/install/" rel="nofollow">installation
instructions</a> on our website.</p>
<h2 dir="auto"><a id="user-content-contributing-to-oscar" class="anchor" aria-hidden="true" href="#contributing-to-oscar"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing to OSCAR</h2>
<p dir="auto">Please read the <a href="https://docs.oscar-system.org/dev/DeveloperDocumentation/new_developers/" rel="nofollow">introduction for new developers</a>
in the OSCAR manual to learn more on how to contribute to OSCAR.</p>
<h2 dir="auto"><a id="user-content-examples-of-usage" class="anchor" aria-hidden="true" href="#examples-of-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples of usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Oscar
 -----    -----    -----      -      -----
|     |  |     |  |     |    | |    |     |
|     |  |        |         |   |   |     |
|     |   -----   |        |     |  |-----
|     |        |  |        |-----|  |   |
|     |  |     |  |     |  |     |  |    |
 -----    -----    -----   -     -  -     -

...combining (and extending) ANTIC, GAP, Polymake and Singular
Version 0.12.1-DEV ...
... which comes with absolutely no warranty whatsoever
Type: '?Oscar' for more information
(c) 2019-2023 by The OSCAR Development Team

julia&gt; k, a = quadratic_field(-5)
(Imaginary quadratic field defined by x^2 + 5, sqrt(-5))

julia&gt; zk = maximal_order(k)
Maximal order of Imaginary quadratic field defined by x^2 + 5
with basis nf_elem[1, sqrt(-5)]

julia&gt; factorisations(zk(6))
2-element Vector{Fac{NfOrdElem}}:
 -1 * (sqrt(-5) + 1) * (sqrt(-5) - 1)
 -1 * 2 * -3

julia&gt; Qx, x = polynomial_ring(QQ, [:x1,:x2])
(Multivariate Polynomial Ring in x1, x2 over Rational Field, QQMPolyRingElem[x1, x2])

julia&gt; R = grade(Qx, [1,2])[1]
Multivariate Polynomial Ring in x1, x2 over Rational Field graded by
  x1 -&gt; [1]
  x2 -&gt; [2]

julia&gt; f = R(x[1]^2+x[2])
x1^2 + x2

julia&gt; degree(f)
graded by [2]

julia&gt; F = free_module(R, 1)
Free module of rank 1 over R

julia&gt; s = sub(F, [f*F[1]])
Submodule with 1 generator
1 -&gt; (x1^2 + x2)*e[1]
represented as subquotient with no relations.

julia&gt; H, mH = hom(s, quo(F, s))
(hom of (s, Subquotient of Submodule with 1 generator
1 -&gt; e[1]
by Submodule with 1 generator
1 -&gt; (x1^2 + x2)*e[1]), Map from
H to Set of all homomorphisms from Submodule with 1 generator
1 -&gt; (x1^2 + x2)*e[1]
represented as subquotient with no relations. to Subquotient of Submodule with 1 generator
1 -&gt; e[1]
by Submodule with 1 generator
1 -&gt; (x1^2 + x2)*e[1] defined by a julia-function with inverse)

julia&gt; mH(H[1])
Map with following data
Domain:
=======
s
Codomain:
=========
Subquotient of Submodule with 1 generator
1 -&gt; e[1]
by Submodule with 1 generator
1 -&gt; (x1^2 + x2)*e[1]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Oscar
 <span class="pl-k">-----</span>    <span class="pl-k">-----</span>    <span class="pl-k">-----</span>      <span class="pl-k">-</span>      <span class="pl-k">-----</span>
<span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>     <span class="pl-k">|</span>    <span class="pl-k">|</span> <span class="pl-k">|</span>    <span class="pl-k">|</span>     <span class="pl-k">|</span>
<span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>        <span class="pl-k">|</span>         <span class="pl-k">|</span>   <span class="pl-k">|</span>   <span class="pl-k">|</span>     <span class="pl-k">|</span>
<span class="pl-k">|</span>     <span class="pl-k">|</span>   <span class="pl-k">-----</span>   <span class="pl-k">|</span>        <span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span><span class="pl-k">-----</span>
<span class="pl-k">|</span>     <span class="pl-k">|</span>        <span class="pl-k">|</span>  <span class="pl-k">|</span>        <span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span>  <span class="pl-k">|</span>   <span class="pl-k">|</span>
<span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>     <span class="pl-k">|</span>  <span class="pl-k">|</span>    <span class="pl-k">|</span>
 <span class="pl-k">-----</span>    <span class="pl-k">-----</span>    <span class="pl-k">-----</span>   <span class="pl-k">-</span>     <span class="pl-k">-</span>  <span class="pl-k">-</span>     <span class="pl-k">-</span>

<span class="pl-k">...</span>combining (and extending) ANTIC, GAP, Polymake and Singular
Version <span class="pl-c1">0.12</span>.<span class="pl-c1">1</span><span class="pl-k">-</span>DEV <span class="pl-k">...</span>
<span class="pl-k">...</span> which comes with absolutely no warranty whatsoever
Type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>?Oscar<span class="pl-pds">'</span></span> <span class="pl-k">for</span> more information
(c) <span class="pl-c1">2019</span><span class="pl-k">-</span><span class="pl-c1">2023</span> by The OSCAR Development Team

julia<span class="pl-k">&gt;</span> k, a <span class="pl-k">=</span> <span class="pl-c1">quadratic_field</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>)
(Imaginary quadratic field defined by x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">5</span>, <span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>))

julia<span class="pl-k">&gt;</span> zk <span class="pl-k">=</span> <span class="pl-c1">maximal_order</span>(k)
Maximal order of Imaginary quadratic field defined by x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">5</span>
with basis nf_elem[<span class="pl-c1">1</span>, <span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>)]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">factorisations</span>(<span class="pl-c1">zk</span>(<span class="pl-c1">6</span>))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Fac{NfOrdElem}}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>) <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> (<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>)
 <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-k">-</span><span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> Qx, x <span class="pl-k">=</span> <span class="pl-c1">polynomial_ring</span>(QQ, [<span class="pl-c1">:x1</span>,<span class="pl-c1">:x2</span>])
(Multivariate Polynomial Ring <span class="pl-k">in</span> x1, x2 over Rational Field, QQMPolyRingElem[x1, x2])

julia<span class="pl-k">&gt;</span> R <span class="pl-k">=</span> <span class="pl-c1">grade</span>(Qx, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>])[<span class="pl-c1">1</span>]
Multivariate Polynomial Ring <span class="pl-k">in</span> x1, x2 over Rational Field graded by
  x1 <span class="pl-k">-&gt;</span> [<span class="pl-c1">1</span>]
  x2 <span class="pl-k">-&gt;</span> [<span class="pl-c1">2</span>]

julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> <span class="pl-c1">R</span>(x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">+</span>x[<span class="pl-c1">2</span>])
x1<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x2

julia<span class="pl-k">&gt;</span> <span class="pl-c1">degree</span>(f)
graded by [<span class="pl-c1">2</span>]

julia<span class="pl-k">&gt;</span> F <span class="pl-k">=</span> <span class="pl-c1">free_module</span>(R, <span class="pl-c1">1</span>)
Free <span class="pl-k">module</span> of rank <span class="pl-c1">1</span> over R

julia<span class="pl-k">&gt;</span> s <span class="pl-k">=</span> <span class="pl-c1">sub</span>(F, [f<span class="pl-k">*</span>F[<span class="pl-c1">1</span>]])
Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> (x1<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x2)<span class="pl-k">*</span>e[<span class="pl-c1">1</span>]
represented <span class="pl-k">as</span> subquotient with no relations.

julia<span class="pl-k">&gt;</span> H, mH <span class="pl-k">=</span> <span class="pl-c1">hom</span>(s, <span class="pl-c1">quo</span>(F, s))
(hom of (s, Subquotient of Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> e[<span class="pl-c1">1</span>]
by Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> (x1<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x2)<span class="pl-k">*</span>e[<span class="pl-c1">1</span>]), Map from
H to Set of all homomorphisms from Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> (x1<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x2)<span class="pl-k">*</span>e[<span class="pl-c1">1</span>]
represented <span class="pl-k">as</span> subquotient with no relations. to Subquotient of Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> e[<span class="pl-c1">1</span>]
by Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> (x1<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x2)<span class="pl-k">*</span>e[<span class="pl-c1">1</span>] defined by a julia<span class="pl-k">-</span><span class="pl-k">function</span> with inverse)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mH</span>(H[<span class="pl-c1">1</span>])
Map with following data
Domain<span class="pl-k">:</span>
<span class="pl-k">======</span><span class="pl-k">=</span>
s
Codomain<span class="pl-k">:</span>
<span class="pl-k">=========</span>
Subquotient of Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> e[<span class="pl-c1">1</span>]
by Submodule with <span class="pl-c1">1</span> generator
<span class="pl-c1">1</span> <span class="pl-k">-&gt;</span> (x1<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x2)<span class="pl-k">*</span>e[<span class="pl-c1">1</span>]</pre></div>
<p dir="auto">Of course, the cornerstones are also available directly:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; C = Polymake.polytope.cube(3);

julia&gt; C.F_VECTOR
pm::Vector&lt;pm::Integer&gt;
8 12 6

julia&gt; RP2 = Polymake.topaz.real_projective_plane();

julia&gt; RP2.HOMOLOGY
PropertyValue wrapping pm::Array&lt;polymake::topaz::HomologyGroup&lt;pm::Integer&gt;&gt;
({} 0)
({(2 1)} 0)
({} 0)"><pre>julia<span class="pl-k">&gt;</span> C <span class="pl-k">=</span> Polymake<span class="pl-k">.</span>polytope<span class="pl-k">.</span><span class="pl-c1">cube</span>(<span class="pl-c1">3</span>);

julia<span class="pl-k">&gt;</span> C<span class="pl-k">.</span>F_VECTOR
pm<span class="pl-k">::</span><span class="pl-c1">Vector</span><span class="pl-k">&lt;</span>pm<span class="pl-k">::</span><span class="pl-c1">Integer</span><span class="pl-k">&gt;</span>
<span class="pl-c1">8</span> <span class="pl-c1">12</span> <span class="pl-c1">6</span>

julia<span class="pl-k">&gt;</span> RP2 <span class="pl-k">=</span> Polymake<span class="pl-k">.</span>topaz<span class="pl-k">.</span><span class="pl-c1">real_projective_plane</span>();

julia<span class="pl-k">&gt;</span> RP2<span class="pl-k">.</span>HOMOLOGY
PropertyValue wrapping pm<span class="pl-k">::</span><span class="pl-c1">Array</span><span class="pl-k">&lt;</span>polymake<span class="pl-k">::</span><span class="pl-c1">topaz</span><span class="pl-k">::</span><span class="pl-c1">HomologyGroup</span><span class="pl-k">&lt;</span>pm<span class="pl-k">::</span><span class="pl-c1">Integer</span><span class="pl-k">&gt;&gt;</span>
({} <span class="pl-c1">0</span>)
({(<span class="pl-c1">2</span> <span class="pl-c1">1</span>)} <span class="pl-c1">0</span>)
({} <span class="pl-c1">0</span>)</pre></div>
<h2 dir="auto"><a id="user-content-citing-oscar" class="anchor" aria-hidden="true" href="#citing-oscar"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing OSCAR</h2>
<p dir="auto">If you have used OSCAR in the preparation of a paper please cite it as described below:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="[OSCAR]
    OSCAR -- Open Source Computer Algebra Research system, Version 0.12.1-DEV, The OSCAR Team, 2023. (https://www.oscar-system.org)
[OSCAR-book]
    Wolfram Decker, Christian Eder, Claus Fieker, Max Horn, Michael Joswig, The OSCAR book, 2024."><pre class="notranslate"><code>[OSCAR]
    OSCAR -- Open Source Computer Algebra Research system, Version 0.12.1-DEV, The OSCAR Team, 2023. (https://www.oscar-system.org)
[OSCAR-book]
    Wolfram Decker, Christian Eder, Claus Fieker, Max Horn, Michael Joswig, The OSCAR book, 2024.
</code></pre></div>
<p dir="auto">If you are using BibTeX, you can use the following BibTeX entries:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@misc{OSCAR,
  key          = {OSCAR},
  organization = {The OSCAR Team},
  title        = {OSCAR -- Open Source Computer Algebra Research system,
                  Version 0.12.1-DEV},
  year         = {2023},
  url          = {https://www.oscar-system.org},
  }

@Book{OSCAR-book,
  editor = {Decker, Wolfram and Eder, Christian and Fieker, Claus and Horn, Max and Joswig, Michael},
  title = {The OSCAR book},
  year = {2024},
}"><pre class="notranslate"><code>@misc{OSCAR,
  key          = {OSCAR},
  organization = {The OSCAR Team},
  title        = {OSCAR -- Open Source Computer Algebra Research system,
                  Version 0.12.1-DEV},
  year         = {2023},
  url          = {https://www.oscar-system.org},
  }

@Book{OSCAR-book,
  editor = {Decker, Wolfram and Eder, Christian and Fieker, Claus and Horn, Max and Joswig, Michael},
  title = {The OSCAR book},
  year = {2024},
}
</code></pre></div>
<h2 dir="auto"><a id="user-content-funding" class="anchor" aria-hidden="true" href="#funding"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Funding</h2>
<p dir="auto">The development of this Julia package is supported by the Deutsche
Forschungsgemeinschaft DFG within the
<a href="https://www.computeralgebra.de/sfb/" rel="nofollow">Collaborative Research Center TRR 195</a>.</p>
</article></div>