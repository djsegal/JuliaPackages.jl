<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.org/JuliaGNSS/ViterbiDecoder.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c1050506ce0a72afbb62163fcbf35560499f652347ca216b16885cda619ea73c/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961474e53532f566974657262694465636f6465722e6a6c2e7376673f6272616e63683d6d61696e" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGNSS/ViterbiDecoder.jl.svg?branch=main" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-viterbidecoder" class="anchor" aria-hidden="true" href="#viterbidecoder"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ViterbiDecoder</h1>
<p dir="auto">This package provides a Viterbi decoder as well as a convolutional encoder.</p>
<p dir="auto">The first argument is the constraint, the second argument are the polynomials and the third
argument are the bits provided as a String.</p>
<h1 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="viterbi_decode(3, [7, 5], &quot;0011100001100111111000101100111011&quot;) == &quot;010111001010001&quot;
# With one error bit
viterbi_decode(3, [7, 5], &quot;0011100001100111110000101100111011&quot;) == &quot;010111001010001&quot;

viterbi_decode(3, [6, 5], &quot;011011011101101011&quot;) == &quot;1001101&quot;
# With two error bits
viterbi_decode(3, [6, 5], &quot;111011011100101011&quot;) == &quot;1001101&quot;

viterbi_decode(7, [91, 117, 121], &quot;1110101100011110111100011011&quot;) == &quot;10110111&quot;

convolutional_encode(3, [7, 5], &quot;010111001010001&quot;) == &quot;0011100001100111111000101100111011&quot;"><pre><span class="pl-c1">viterbi_decode</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">7</span>, <span class="pl-c1">5</span>], <span class="pl-s"><span class="pl-pds">"</span>0011100001100111111000101100111011<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>010111001010001<span class="pl-pds">"</span></span>
<span class="pl-c"><span class="pl-c">#</span> With one error bit</span>
<span class="pl-c1">viterbi_decode</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">7</span>, <span class="pl-c1">5</span>], <span class="pl-s"><span class="pl-pds">"</span>0011100001100111110000101100111011<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>010111001010001<span class="pl-pds">"</span></span>

<span class="pl-c1">viterbi_decode</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">6</span>, <span class="pl-c1">5</span>], <span class="pl-s"><span class="pl-pds">"</span>011011011101101011<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>1001101<span class="pl-pds">"</span></span>
<span class="pl-c"><span class="pl-c">#</span> With two error bits</span>
<span class="pl-c1">viterbi_decode</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">6</span>, <span class="pl-c1">5</span>], <span class="pl-s"><span class="pl-pds">"</span>111011011100101011<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>1001101<span class="pl-pds">"</span></span>

<span class="pl-c1">viterbi_decode</span>(<span class="pl-c1">7</span>, [<span class="pl-c1">91</span>, <span class="pl-c1">117</span>, <span class="pl-c1">121</span>], <span class="pl-s"><span class="pl-pds">"</span>1110101100011110111100011011<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>10110111<span class="pl-pds">"</span></span>

<span class="pl-c1">convolutional_encode</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">7</span>, <span class="pl-c1">5</span>], <span class="pl-s"><span class="pl-pds">"</span>010111001010001<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>0011100001100111111000101100111011<span class="pl-pds">"</span></span></pre></div>
</article></div>