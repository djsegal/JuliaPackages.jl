<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-codetransformation" class="anchor" aria-hidden="true" href="#codetransformation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CodeTransformation</h1>
<p><a href="https://travis-ci.com/perrutquist/CodeTransformation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0b17786871c3f3dc23130244f0ac83b7cd05e651/68747470733a2f2f7472617669732d63692e636f6d2f70657272757471756973742f436f64655472616e73666f726d6174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/perrutquist/CodeTransformation.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/perrutquist/CodeTransformation-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6729ae8494f5e3772b276560d07c8ac2d0e45070/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f70657272757471756973742f436f64655472616e73666f726d6174696f6e2e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/perrutquist/CodeTransformation.jl?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/perrutquist/CodeTransformation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e5760863025882ac9e56707819a7a7c0375fd839/68747470733a2f2f636f6465636f762e696f2f67682f70657272757471756973742f436f64655472616e73666f726d6174696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/perrutquist/CodeTransformation.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Note: This package is currently not under active development. You might want to have a look at <a href="https://github.com/MikeInnes/IRTools.jl">IRTools</a> instead.</p>
<p>This is an experimental package for working with the <a href="https://pkg.julialang.org/docs/julia/THl1k/1.1.1/devdocs/ast.html#CodeInfo-1" rel="nofollow"><code>CodeInfo</code></a>
objects that are containded in the vectors that Julia's <code>code_lowered</code> and <code>code_typed</code> functions return.</p>
<p>These objects can be modified and then turned back into functions (technically methods),
making it possible to apply code transformations to functions defined in other packages,
or in Julia itself.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>
<p>Copy a method from one function to another via a <code>CodeInfo</code> object.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CodeTransformation
<span class="pl-en">g</span>(x) <span class="pl-k">=</span> x <span class="pl-k">+</span> <span class="pl-c1">13</span>
ci <span class="pl-k">=</span> <span class="pl-c1">code_lowered</span>(g)[<span class="pl-c1">1</span>] <span class="pl-c"><span class="pl-c">#</span> get the CodeInfo from g's first (and only) method</span>
<span class="pl-k">function</span> f <span class="pl-k">end</span> <span class="pl-c"><span class="pl-c">#</span> create an empty function that we can add a method to</span>
<span class="pl-c1">addmethod!</span>(Tuple{<span class="pl-c1">typeof</span>(f), Any}, ci)
<span class="pl-c1">f</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> returns 14</span></pre></div>
<p>Search-and-replace in the function <code>g</code> from the previous example. (Applies to all
methods, but <code>g</code> only has one.)</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> e <span class="pl-k">end</span>
<span class="pl-c1">codetransform!</span>(g <span class="pl-k">=&gt;</span> e) <span class="pl-k">do</span> ci
    <span class="pl-k">for</span> ex <span class="pl-k">in</span> ci<span class="pl-k">.</span>code
        <span class="pl-k">if</span> ex <span class="pl-k">isa</span> Expr
            <span class="pl-c1">map!</span>(x <span class="pl-k">-&gt;</span> x <span class="pl-k">===</span> <span class="pl-c1">13</span> ? <span class="pl-c1">7</span> : x, ex<span class="pl-k">.</span>args, ex<span class="pl-k">.</span>args)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    ci
<span class="pl-k">end</span>
<span class="pl-c1">e</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> returns 8</span>
<span class="pl-c1">g</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> still returns 14</span></pre></div>
<p>Note: The syntax may change in the next minor release of this package.</p>
</article></div>