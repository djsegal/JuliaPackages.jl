<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-multiobjectiveproximalbundle" class="anchor" aria-hidden="true" href="#multiobjectiveproximalbundle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MultiobjectiveProximalBundle</h1>
<p dir="auto">This an implementation of the Multiobjective Proximal Bundle Method presented in <sup><a href="#user-content-fn-1-110d193228c4f725f672cb8d9f99ece8" id="user-content-fnref-1-110d193228c4f725f672cb8d9f99ece8" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>.
Many important details can be found in <sup><a href="#user-content-fn-2-110d193228c4f725f672cb8d9f99ece8" id="user-content-fnref-2-110d193228c4f725f672cb8d9f99ece8" data-footnote-ref="" aria-describedby="footnote-label">2</a></sup>.
I used this for personal testing purposes only and cannot promise to keep this repository up to date.</p>
<p dir="auto">Features:</p>
<ul dir="auto">
<li>Subgradient aggregation to save memory.</li>
<li>Support for multiple non-smooth objective and constraint functions.</li>
<li>Pure Julia implementation, no wrapper of Fortran code.</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package is not yet registered.
You have to do</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(;url=&quot;https://github.com/manuelbb-upb/MultiobjectiveProximalBundle.jl.git&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(;url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/manuelbb-upb/MultiobjectiveProximalBundle.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Importing the module via</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MultiobjectiveProximalBundle"><pre><span class="pl-k">using</span> MultiobjectiveProximalBundle</pre></div>
<p dir="auto">provides <code>MPBOptions</code> (see docstring) and <code>mpb_optimize</code>.
The latter has the following siganture:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="x, fx = mpb_optimize(
    x0, objective_funcs, constraint_funcs,
    gammas_objectives=nothing, gammas_constraints=nothing;
    options = MPBOptions()
)"><pre class="notranslate"><code>x, fx = mpb_optimize(
    x0, objective_funcs, constraint_funcs,
    gammas_objectives=nothing, gammas_constraints=nothing;
    options = MPBOptions()
)
</code></pre></div>
<p dir="auto">Here, <code>x0</code> is the initial <strong>feasible</strong> start vector and
<code>objective_funcs</code> is a vector of functions.
Each function must return a tuple of its scalar primal value
and its gradient. Likewise for the constraints.
<code>gammas_objectives</code> are constants to compensate non-convexity.
The default value of <code>nothing</code> results in <code>0.5</code> being used.</p>
<h3 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MultiobjectiveProximalBundle
using LinearAlgebra: norm

function f1(x)
    __x = norm(x)
    _x = __x + 2
    y = sqrt(_x)
    dy = if __x == 0
        zeros(length(x))
    else
        1/(2 * __x * y) .* x
    end
    return y, dy
end

function f2(x)
    _f21 = -sum(x)
    _f22 = _f21 + sum(x.^2) - 1
    _df21 = -ones(length(x))
    y, dy = if _f22 &gt;= _f21
        _df22 = _df21 .+ 2 .* x
        if _f22==_f21
            _f22, 0.5 .* (_df21 .+ _df22)
        else
            _f22, _df22
        end
    else
        _f21, _df21
    end
    return y, dy
end

function g(x)
    _g1 = sum(x.^2) - 10.0
    _g2 = 3 * x[1] + sum(x[2:end]) + 1.5

    _dg1 = 2 .* x
    y, dy = if _g2 &gt;= _g1
        _dg2 = ones(length(x))
        _dg2[1] = 3
        if _g2 == _g1
            _g2, 0.5 .* (_dg1 .+ _dg2)
        else
            _g2, _dg2
        end
    else
        _g1, _dg1
    end
    return y, dy
end

x0 = fill(-0.5, 2)

x, fx = mpb_optimize(x0, [f1, f2], [g])"><pre><span class="pl-k">using</span> MultiobjectiveProximalBundle
<span class="pl-k">using</span> LinearAlgebra<span class="pl-k">:</span> norm

<span class="pl-k">function</span> <span class="pl-en">f1</span>(x)
    __x <span class="pl-k">=</span> <span class="pl-c1">norm</span>(x)
    _x <span class="pl-k">=</span> __x <span class="pl-k">+</span> <span class="pl-c1">2</span>
    y <span class="pl-k">=</span> <span class="pl-c1">sqrt</span>(_x)
    dy <span class="pl-k">=</span> <span class="pl-k">if</span> __x <span class="pl-k">==</span> <span class="pl-c1">0</span>
        <span class="pl-c1">zeros</span>(<span class="pl-c1">length</span>(x))
    <span class="pl-k">else</span>
        <span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-c1">2</span> <span class="pl-k">*</span> __x <span class="pl-k">*</span> y) <span class="pl-k">.*</span> x
    <span class="pl-k">end</span>
    <span class="pl-k">return</span> y, dy
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">f2</span>(x)
    _f21 <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">sum</span>(x)
    _f22 <span class="pl-k">=</span> _f21 <span class="pl-k">+</span> <span class="pl-c1">sum</span>(x<span class="pl-k">.^</span><span class="pl-c1">2</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>
    _df21 <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">ones</span>(<span class="pl-c1">length</span>(x))
    y, dy <span class="pl-k">=</span> <span class="pl-k">if</span> _f22 <span class="pl-k">&gt;=</span> _f21
        _df22 <span class="pl-k">=</span> _df21 <span class="pl-k">.+</span> <span class="pl-c1">2</span> <span class="pl-k">.*</span> x
        <span class="pl-k">if</span> _f22<span class="pl-k">==</span>_f21
            _f22, <span class="pl-c1">0.5</span> <span class="pl-k">.*</span> (_df21 <span class="pl-k">.+</span> _df22)
        <span class="pl-k">else</span>
            _f22, _df22
        <span class="pl-k">end</span>
    <span class="pl-k">else</span>
        _f21, _df21
    <span class="pl-k">end</span>
    <span class="pl-k">return</span> y, dy
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">g</span>(x)
    _g1 <span class="pl-k">=</span> <span class="pl-c1">sum</span>(x<span class="pl-k">.^</span><span class="pl-c1">2</span>) <span class="pl-k">-</span> <span class="pl-c1">10.0</span>
    _g2 <span class="pl-k">=</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">sum</span>(x[<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">end</span>]) <span class="pl-k">+</span> <span class="pl-c1">1.5</span>

    _dg1 <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">.*</span> x
    y, dy <span class="pl-k">=</span> <span class="pl-k">if</span> _g2 <span class="pl-k">&gt;=</span> _g1
        _dg2 <span class="pl-k">=</span> <span class="pl-c1">ones</span>(<span class="pl-c1">length</span>(x))
        _dg2[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">3</span>
        <span class="pl-k">if</span> _g2 <span class="pl-k">==</span> _g1
            _g2, <span class="pl-c1">0.5</span> <span class="pl-k">.*</span> (_dg1 <span class="pl-k">.+</span> _dg2)
        <span class="pl-k">else</span>
            _g2, _dg2
        <span class="pl-k">end</span>
    <span class="pl-k">else</span>
        _g1, _dg1
    <span class="pl-k">end</span>
    <span class="pl-k">return</span> y, dy
<span class="pl-k">end</span>

x0 <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">2</span>)

x, fx <span class="pl-k">=</span> <span class="pl-c1">mpb_optimize</span>(x0, [f1, f2], [g])</pre></div>
<h2 dir="auto"><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notes</h2>
<p dir="auto">ToDo's:</p>
<ul dir="auto">
<li>Support linear constraints.</li>
<li>Remove unnecessary arrays.</li>
<li><del>“Pre-allocate” model of sub-problem via parametrization.</del><br>
(I have tested this on another branch and it was slower.)</li>
<li>Enable choice of sub-problem solver.</li>
<li>More verbosity, informative return codes.</li>
</ul>
<section data-footnotes="" class="footnotes"><h2 id="footnote-label" class="sr-only" dir="auto">Footnotes</h2>
<ol dir="auto">
<li id="user-content-fn-1-110d193228c4f725f672cb8d9f99ece8">
<p dir="auto">M. M. Mäkelä, N. Karmitsa, and O. Wilppu, “Proximal Bundle Method for Nonsmooth and Nonconvex Multiobjective Optimization,” in Mathematical Modeling and Optimization of Complex Structures, vol. 40, P. Neittaanmäki, S. Repin, and T. Tuovinen, Eds. Cham: Springer International Publishing, 2016, pp. 191–204. doi: 10.1007/978-3-319-23564-6_12. <a href="#user-content-fnref-1-110d193228c4f725f672cb8d9f99ece8" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref"><g-emoji class="g-emoji" alias="leftwards_arrow_with_hook" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/21a9.png">↩</g-emoji></a></p>
</li>
<li id="user-content-fn-2-110d193228c4f725f672cb8d9f99ece8">
<p dir="auto">M. M. Mäkelä, “Nonsmooth Optimization” <a href="#user-content-fnref-2-110d193228c4f725f672cb8d9f99ece8" data-footnote-backref="" aria-label="Back to reference 2" class="data-footnote-backref"><g-emoji class="g-emoji" alias="leftwards_arrow_with_hook" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/21a9.png">↩</g-emoji></a></p>
</li>
</ol>
</section>
</article></div>