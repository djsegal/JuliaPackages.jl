<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-statsdiscretizations" class="anchor" aria-hidden="true" href="#statsdiscretizations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StatsDiscretizations</h1>
<p dir="auto"><a href="https://github.com/nignatiadis/StatsDiscretizations.jl/actions"><img src="https://github.com/nignatiadis/StatsDiscretizations.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/nignatiadis/StatsDiscretizations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/89bb7282732b1755080d570e2d322dbd47c72467c0264d0ec7905509dd9e804a/68747470733a2f2f636f6465636f762e696f2f67682f6e69676e617469616469732f537461747344697363726574697a6174696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/nignatiadis/StatsDiscretizations.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Julia package to simplify discretization operations that are routine in statistical tasks. The key idea of the package is that a lot of statistical operations
can be simplified by giving first class support to Intervals from the <a href="https://github.com/JuliaMath/IntervalSets.jl">IntervalSets.jl</a> package.</p>
<h2 dir="auto"><a id="user-content-discretizers" class="anchor" aria-hidden="true" href="#discretizers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Discretizers</h2>
<p dir="auto">Let ℐ the set of all intervals on ℝ. The key idea is that a <code>discretizer</code> acts as a function from ( subset of ) ℝ ∪ ℐ ↦ ℐ with the following properties:</p>
<ul dir="auto">
<li>Callable as <code>discretizer(z)</code> and broadcastable <code>discretizer.(zs)</code>.</li>
<li>Returns intervals: <code>typeof(discretizer(z)) &lt;: AbstractInterval</code>.</li>
<li>Idempotent: <code>discretizer(discretizer(z)) == discretizer(z)</code>.</li>
</ul>
<p dir="auto">The discretizers that are currently implemented are the following</p>
<h3 dir="auto"><a id="user-content-reallinediscretizeropenclosedgrid-reallinediscretizerclosedopengrid" class="anchor" aria-hidden="true" href="#reallinediscretizeropenclosedgrid-reallinediscretizerclosedopengrid"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>RealLineDiscretizer{:open,:closed}(grid), RealLineDiscretizer{:closed,:open}(grid)</code></h3>
<p dir="auto">This is a discretizer that partitions the whole real line into intervals with breakpoints at <code>grid</code>. For example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using StatsDiscretizations
julia&gt; discr = RealLineDiscretizer{:open,:closed}(-2:0.1:2)

julia&gt; discr(-5)
-Inf..-2.0 (open–closed)

julia&gt; discr(0.05)
0.0..0.1 (open–closed)

julia&gt; discr(0.00)
-0.1..0.0 (open–closed)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StatsDiscretizations
julia<span class="pl-k">&gt;</span> discr <span class="pl-k">=</span> <span class="pl-c1">RealLineDiscretizer</span><span class="pl-c1">{:open,:closed}</span>(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">discr</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>)
<span class="pl-k">-</span><span class="pl-c1">Inf</span><span class="pl-k">..</span><span class="pl-k">-</span><span class="pl-c1">2.0</span> (open–closed)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">discr</span>(<span class="pl-c1">0.05</span>)
<span class="pl-c1">0.0</span><span class="pl-k">..</span><span class="pl-c1">0.1</span> (open–closed)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">discr</span>(<span class="pl-c1">0.00</span>)
<span class="pl-k">-</span><span class="pl-c1">0.1</span><span class="pl-k">..</span><span class="pl-c1">0.0</span> (open–closed)</pre></div>
<h2 dir="auto"><a id="user-content-warning" class="anchor" aria-hidden="true" href="#warning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Warning</h2>
<p dir="auto">The package commits ''light'' type piracy, e.g., by implementing <code>Distributions.pdf(dbn, int::AbstractInterval)</code>.</p>
</article></div>