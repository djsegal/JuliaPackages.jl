<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bencodejl" class="anchor" aria-hidden="true" href="#bencodejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BEncode.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/joshuamiller/BEncode.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a7c6b0cfac3ec581863c7180ea9ee185a6fdf4f922ae6eb85f9c329ed98ba131/68747470733a2f2f7472617669732d63692e6f72672f6a6f736875616d696c6c65722f42456e636f64652e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/joshuamiller/BEncode.jl.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia library for <a href="http://en.wikipedia.org/wiki/Bencode" rel="nofollow">BEncode</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BEncode

bencode(Dic(&quot;Dict&quot; =&gt; [1, &quot;two&quot;]))
# &quot;d4:Dictli1e3:twoee&quot;

bdecode(&quot;d4:Dictli1e3:twoee&quot;)
# Dict{Any,Any} with 1 entry:
#   &quot;Dict&quot; =&gt; Union{Int64, String, Dict, Array}[1, &quot;two&quot;]"><pre><span class="pl-k">using</span> BEncode

<span class="pl-c1">bencode</span>(<span class="pl-c1">Dic</span>(<span class="pl-s"><span class="pl-pds">"</span>Dict<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>two<span class="pl-pds">"</span></span>]))
<span class="pl-c"><span class="pl-c">#</span> "d4:Dictli1e3:twoee"</span>

<span class="pl-c1">bdecode</span>(<span class="pl-s"><span class="pl-pds">"</span>d4:Dictli1e3:twoee<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> Dict{Any,Any} with 1 entry:</span>
<span class="pl-c"><span class="pl-c">#</span>   "Dict" =&gt; Union{Int64, String, Dict, Array}[1, "two"]</span></pre></div>
</article></div>