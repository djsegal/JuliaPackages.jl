<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-treesitter" class="anchor" aria-hidden="true" href="#treesitter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TreeSitter</h1>
<p dir="auto"><em>Julia bindings for <a href="https://github.com/tree-sitter/tree-sitter">tree-sitter</a> â€”
"An incremental parsing system for programming tools."</em></p>
<p dir="auto"><a href="https://travis-ci.org/MichaelHatherly/TreeSitter.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e82875d69505b7d068815df8ca049fd6d290fd36b9d10bc2714728fd389920f3/68747470733a2f2f7472617669732d63692e6f72672f4d69636861656c4861746865726c792f547265655369747465722e6a6c2e7376673f6272616e63683d312e34" alt="Build Status" data-canonical-src="https://travis-ci.org/MichaelHatherly/TreeSitter.jl.svg?branch=1.4" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/MichaelHatherly/TreeSitter.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0171b2835c5b1ed10d1d19cb6e4398b28e2172a06abcfdb382b66392d450fd6e/68747470733a2f2f636f6465636f762e696f2f67682f4d69636861656c4861746865726c792f547265655369747465722e6a6c2f6272616e63682f312e342f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/MichaelHatherly/TreeSitter.jl/branch/1.4/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is not registered yet and so can be installed using:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/MichaelHatherly/TreeSitter.jl"><pre class="notranslate"><code>pkg&gt; add https://github.com/MichaelHatherly/TreeSitter.jl
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using TreeSitter

julia&gt; c = Parser(:c)
Parser(Language(:c))

julia&gt; ast = parse(c, &quot;int x;&quot;)
(translation_unit (declaration type: (primitive_type) declarator: (identifier)))

julia&gt; json = Parser(:json)
Parser(Language(:json))

julia&gt; ast = parse(json, &quot;{1: [2]}&quot;)
(document (object (pair key: (number) value: (array (number)))))

julia&gt; traverse(ast) do node, enter
           if enter
               @show node
           end
       end
node = (document (object (pair key: (number) value: (array (number)))))
node = (object (pair key: (number) value: (array (number))))
node = (&quot;{&quot;)
node = (pair key: (number) value: (array (number)))
node = (number)
node = (&quot;:&quot;)
node = (array (number))
node = (&quot;[&quot;)
node = (number)
node = (&quot;]&quot;)
node = (&quot;}&quot;)

julia&gt; julia = Parser(:julia)
Parser(Language(:julia))

julia&gt; ast = parse(julia, &quot;f(x)&quot;)
(source_file (call_expression (identifier) (argument_list (identifier))))

julia&gt; traverse(ast, named_children) do node, enter
           if !enter
               @show node
           end
       end
node = (identifier)
node = (identifier)
node = (argument_list (identifier))
node = (call_expression (identifier) (argument_list (identifier)))
node = (source_file (call_expression (identifier) (argument_list (identifier))))"><pre class="notranslate"><code>julia&gt; using TreeSitter

julia&gt; c = Parser(:c)
Parser(Language(:c))

julia&gt; ast = parse(c, "int x;")
(translation_unit (declaration type: (primitive_type) declarator: (identifier)))

julia&gt; json = Parser(:json)
Parser(Language(:json))

julia&gt; ast = parse(json, "{1: [2]}")
(document (object (pair key: (number) value: (array (number)))))

julia&gt; traverse(ast) do node, enter
           if enter
               @show node
           end
       end
node = (document (object (pair key: (number) value: (array (number)))))
node = (object (pair key: (number) value: (array (number))))
node = ("{")
node = (pair key: (number) value: (array (number)))
node = (number)
node = (":")
node = (array (number))
node = ("[")
node = (number)
node = ("]")
node = ("}")

julia&gt; julia = Parser(:julia)
Parser(Language(:julia))

julia&gt; ast = parse(julia, "f(x)")
(source_file (call_expression (identifier) (argument_list (identifier))))

julia&gt; traverse(ast, named_children) do node, enter
           if !enter
               @show node
           end
       end
node = (identifier)
node = (identifier)
node = (argument_list (identifier))
node = (call_expression (identifier) (argument_list (identifier)))
node = (source_file (call_expression (identifier) (argument_list (identifier))))
</code></pre></div>
<h2 dir="auto"><a id="user-content-languages" class="anchor" aria-hidden="true" href="#languages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Languages</h2>
<ul dir="auto">
<li><code>:bash</code></li>
<li><code>:c</code></li>
<li><code>:cpp</code></li>
<li><code>:go</code></li>
<li><code>:html</code></li>
<li><code>:java</code></li>
<li><code>:javascript</code></li>
<li><code>:json</code></li>
<li><code>:julia</code></li>
<li><code>:php</code></li>
<li><code>:python</code></li>
<li><code>:ruby</code></li>
<li><code>:rust</code></li>
<li><code>:typescript</code></li>
</ul>
<p dir="auto">Additional languages can be added by writing new <code>jll</code> packages to wrap the
upstream parsers: see <a href="https://github.com/JuliaPackaging/Yggdrasil">Yggdrasil</a>
for details.</p>
</article></div>