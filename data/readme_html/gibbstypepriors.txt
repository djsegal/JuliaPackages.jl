<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><table>
  <thead>
  <tr>
  <th>title</th>
  </tr>
  </thead>
  <tbody>
  <tr>
  <td><div dir="auto">GibbsTypePriors.jl</div></td>
  </tr>
  </tbody>
</table>

<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width: 100%;"></a></p>

<p dir="auto"><a href="https://travis-ci.org/konkam/GibbsTypePriors" rel="nofollow"><img src="https://camo.githubusercontent.com/3305942dbc77fc5d476ce2bcf7f75756ebc4bf3b7dc20c7a1797084bb4851dab/68747470733a2f2f7472617669732d63692e6f72672f6b6f6e6b616d2f4769626273547970655072696f72732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/konkam/GibbsTypePriors.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/konkam/GibbsTypePriors" rel="nofollow"><img src="https://camo.githubusercontent.com/55a001a0788e06cf9e84894895eba4e4b2c92883d012db99e8a1a8daa7d4a44a/68747470733a2f2f636f6465636f762e696f2f67682f6b6f6e6b616d2f4769626273547970655072696f72732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/konkam/GibbsTypePriors/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/konkam/GibbsTypePriors?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7f7095eb9592b7d6de0ba025d7a9c613c7db98bbd40a54bfecf996c493391905/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6f6e6b616d2f4769626273547970655072696f72732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/konkam/GibbsTypePriors/badge.svg?branch=master" style="max-width: 100%;"></a></p>

<p dir="auto">Computing clusters prior distribution for Gibbs-type processes.</p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">The following reference gives an overview of Gibbs-type priors and their importance for Bayesian Nonparametrics:</p>
<p dir="auto">De Blasi, Pierpaolo, Stefano Favaro, Antonio Lijoi, Ramsés H. Mena, Igor Prünster, and Matteo Ruggiero. “Are Gibbs-Type Priors the Most Natural Generalization of the Dirichlet Process?” IEEE Transactions on Pattern Analysis and Machine Intelligence 37, no. 2 (2015): 212–29. <a href="https://doi.org/10.1109/TPAMI.2013.217" rel="nofollow">https://doi.org/10.1109/TPAMI.2013.217</a>.</p>
<p dir="auto">An application of the functions implemented in this package was presented here:</p>
<p dir="auto">Bystrova, D., Arbel, J., Kon Kam King, G., Deslandes, F. (2021) Approximating the clusters' prior distribution in Bayesian nonparametric models, Third Symposium on Advances in Approximate Bayesian Inference, <a href="https://openreview.net/forum?id=J0SSW5XeWUY" rel="nofollow">https://openreview.net/forum?id=J0SSW5XeWUY</a></p>
<p dir="auto">Please cite it as a reference if you use the package.</p>
<h2 dir="auto"><a id="user-content-how-to-install-the-package" class="anchor" aria-hidden="true" href="#how-to-install-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to install the package</h2>
<p dir="auto">The package is developed for Julia 1.5. Much of its functionality rests on the 'Arb' package[1], via its interface in <code>Nemo.jl</code>.</p>
<p dir="auto">Press <code>]</code> in the Julia interpreter to enter the Pkg mode and input:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/konkam/GibbsTypePriors"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>konkam<span class="pl-k">/</span>GibbsTypePriors</pre></div>
<p dir="auto">Alternatively, you may run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(url = &quot;https://github.com/konkam/GibbsTypePriors&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>https://github.com/konkam/GibbsTypePriors<span class="pl-pds">"</span></span>)</pre></div>
<h1 dir="auto"><a id="user-content-how-to-use-the-package" class="anchor" aria-hidden="true" href="#how-to-use-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use the package</h1>
<p dir="auto">To compute the prior density at clusters of size k=10 for a Normalized Generalised Gamma process of parameters σ=0.8, β = 1.2 and n = 500 data points, use:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GibbsTypePriors
Pkn_NGG(10, 500, 1.2, 0.8)"><pre><span class="pl-k">using</span> GibbsTypePriors
<span class="pl-c1">Pkn_NGG</span>(<span class="pl-c1">10</span>, <span class="pl-c1">500</span>, <span class="pl-c1">1.2</span>, <span class="pl-c1">0.8</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="8.984618037609138e-11"><pre class="notranslate"><code>8.984618037609138e-11
</code></pre></div>
<p dir="auto">The same may be done for the 2-parameter Poisson Dirichlet, also named the Pitman-Yor process:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkn_PY(10, 500, 1.2, 0.8)"><pre><span class="pl-c1">Pkn_PY</span>(<span class="pl-c1">10</span>, <span class="pl-c1">500</span>, <span class="pl-c1">1.2</span>, <span class="pl-c1">0.8</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="2.562372640654159e-5"><pre class="notranslate"><code>2.562372640654159e-5
</code></pre></div>
<p dir="auto">We also provide the same function for the Dirichlet process:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkn_Dirichlet(10, 500, 1.2)"><pre><span class="pl-c1">Pkn_Dirichlet</span>(<span class="pl-c1">10</span>, <span class="pl-c1">500</span>, <span class="pl-c1">1.2</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="0.09844487393917364"><pre class="notranslate"><code>0.09844487393917364
</code></pre></div>
<h1 dir="auto"><a id="user-content-illustration-of-the-various-priors" class="anchor" aria-hidden="true" href="#illustration-of-the-various-priors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Illustration of the various priors:</h1>
<p dir="auto">The following figure shows a comparison of the priors distribution on the number of clusters induced by a Dirichlet process, a 2-parameter Poisson-Dirichlet process and a Normalised Inverse Gamma process.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GibbsTypePriors, DataFrames, DataFramesMeta, RCall
R&quot;library(tidyverse)&quot;

R&quot;p = ggplot(data.frame(x = 1:50,
                        Pkn_NGG = $(Pkn_NGG.(1:50, 50, 48.4185, 0.25)),
                        Pkn_NGG2 = $(Pkn_NGG.(1:50, 50, 1., 0.7353)),
                        Pkn_Dirichlet = $(Pkn_Dirichlet.(1:50, 50, 19.233)),
                        Pkn_2PD = $(Pkn_2PD.(1:50, 50, 12.2157, 0.25)),
                        Pkn_2PD2 = $(Pkn_2PD.(1:50, 50, 1., 0.73001))
                    ) %&gt;%
            gather(Process_type, density, Pkn_NGG:Pkn_2PD2),
    aes(x=x, y = density, colour = Process_type)) +
geom_line() +
ggthemes::scale_colour_ptol() +
theme_minimal()&quot;
R&quot;png('Illustration.png')
plot(p)
dev.off()&quot;"><pre><span class="pl-k">using</span> GibbsTypePriors, DataFrames, DataFramesMeta, RCall
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">R</span>"</span>library(tidyverse)<span class="pl-pds">"</span></span>

<span class="pl-s"><span class="pl-pds"><span class="pl-c1">R</span>"</span>p = ggplot(data.frame(x = 1:50,</span>
<span class="pl-s">                        Pkn_NGG = $(Pkn_NGG.(1:50, 50, 48.4185, 0.25)),</span>
<span class="pl-s">                        Pkn_NGG2 = $(Pkn_NGG.(1:50, 50, 1., 0.7353)),</span>
<span class="pl-s">                        Pkn_Dirichlet = $(Pkn_Dirichlet.(1:50, 50, 19.233)),</span>
<span class="pl-s">                        Pkn_2PD = $(Pkn_2PD.(1:50, 50, 12.2157, 0.25)),</span>
<span class="pl-s">                        Pkn_2PD2 = $(Pkn_2PD.(1:50, 50, 1., 0.73001))</span>
<span class="pl-s">                    ) %&gt;%</span>
<span class="pl-s">            gather(Process_type, density, Pkn_NGG:Pkn_2PD2),</span>
<span class="pl-s">    aes(x=x, y = density, colour = Process_type)) +</span>
<span class="pl-s">geom_line() +</span>
<span class="pl-s">ggthemes::scale_colour_ptol() +</span>
<span class="pl-s">theme_minimal()<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">R</span>"</span>png('Illustration.png')</span>
<span class="pl-s">plot(p)</span>
<span class="pl-s">dev.off()<span class="pl-pds">"</span></span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="Illustration.png"><img src="Illustration.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">References:
[1] Johansson, F. (2017).  Arb:  efficient arbitrary-precision midpoint-radius interval arithmetic.IEEE Transactions on Computers, 66:1281–1292.</p>
<h1 dir="auto"><a id="user-content-appendix" class="anchor" aria-hidden="true" href="#appendix"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Appendix</h1>
<h2 dir="auto"><a id="user-content-varying-the-precision-of-the-calculation" class="anchor" aria-hidden="true" href="#varying-the-precision-of-the-calculation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Varying the precision of the calculation</h2>
<p dir="auto">For experimental purposes or if you happen to reach the limits of numerical accuracy with the default precision of the package (5000 bits), we provide special functions allowing to change the number of bits used for the computation:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Nemo
GibbsTypePriors.Cnk(6, 5, 0.5) |&gt; Nemo.accuracy_bits"><pre><span class="pl-k">using</span> Nemo
GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Cnk</span>(<span class="pl-c1">6</span>, <span class="pl-c1">5</span>, <span class="pl-c1">0.5</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="4997"><pre class="notranslate"><code>4997
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GibbsTypePriors.Cnk(6, 5, 0.5, 200) |&gt; Nemo.accuracy_bits"><pre>GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Cnk</span>(<span class="pl-c1">6</span>, <span class="pl-c1">5</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">200</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="197"><pre class="notranslate"><code>197
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GibbsTypePriors.Vnk_NGG(100,50, 0.5, 0.2) |&gt; Nemo.accuracy_bits"><pre>GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Vnk_NGG</span>(<span class="pl-c1">100</span>,<span class="pl-c1">50</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.2</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="4992"><pre class="notranslate"><code>4992
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GibbsTypePriors.Vnk_NGG(100,50, 0.5, 0.2, 200) |&gt; Nemo.accuracy_bits"><pre>GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Vnk_NGG</span>(<span class="pl-c1">100</span>,<span class="pl-c1">50</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.2</span>, <span class="pl-c1">200</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="192"><pre class="notranslate"><code>192
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GibbsTypePriors.Pkn_NGG_arb(50, 100, 0.5, 0.2) |&gt; Nemo.accuracy_bits"><pre>GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Pkn_NGG_arb</span>(<span class="pl-c1">50</span>, <span class="pl-c1">100</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.2</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="4913"><pre class="notranslate"><code>4913
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GibbsTypePriors.Pkn_NGG_arb(50, 100, 0.5, 0.2, 200) |&gt; Nemo.accuracy_bits"><pre>GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Pkn_NGG_arb</span>(<span class="pl-c1">50</span>, <span class="pl-c1">100</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.2</span>, <span class="pl-c1">200</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="112"><pre class="notranslate"><code>112
</code></pre></div>
<h2 dir="auto">
<a id="user-content-instability-of-the-v_nk" class="anchor" aria-hidden="true" href="#instability-of-the-v_nk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Instability of the <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6b2f7a99ac05cebec9b9a1f81e1ad0d3">$V_{n,k}$</math-renderer>
</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GibbsTypePriors, Nemo, DataFrames, DataFramesMeta, RCall
β = 0.5
σ = 0.2
to_plot = [[(n,k) for k in 1:2:n]  for n in 1:2:100] |&gt;
  l -&gt; vcat(l...) |&gt;
  ar -&gt; [DataFrame(n = val[1], k = val[2], acc = GibbsTypePriors.Vnk_NGG(val[1], val[2], β, σ, 200) |&gt; Nemo.accuracy_bits) for val in ar] |&gt;
  l -&gt; vcat(l...)

R&quot;library(tidyverse)&quot;
p = R&quot;$to_plot %&gt;%
    as_tibble %&gt;%
    mutate(Acceptable = factor(acc &lt; 64, levels = c(TRUE, FALSE))) %&gt;%
    ggplot(aes(x = n, y = k, fill = acc, alpha = Acceptable)) + 
      geom_tile(colour = 'white') + 
      theme_bw() + 
      scale_fill_gradient(name = 'Accuracy') + 
      ggtitle('Vnk')&quot;
R&quot;png('figures/Vnk_instability.png')
  plot($p)
  dev.off()&quot;"><pre><span class="pl-k">using</span> GibbsTypePriors, Nemo, DataFrames, DataFramesMeta, RCall
β <span class="pl-k">=</span> <span class="pl-c1">0.5</span>
σ <span class="pl-k">=</span> <span class="pl-c1">0.2</span>
to_plot <span class="pl-k">=</span> [[(n,k) <span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span>n]  <span class="pl-k">for</span> n <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">100</span>] <span class="pl-k">|&gt;</span>
  l <span class="pl-k">-&gt;</span> <span class="pl-c1">vcat</span>(l<span class="pl-k">...</span>) <span class="pl-k">|&gt;</span>
  ar <span class="pl-k">-&gt;</span> [<span class="pl-c1">DataFrame</span>(n <span class="pl-k">=</span> val[<span class="pl-c1">1</span>], k <span class="pl-k">=</span> val[<span class="pl-c1">2</span>], acc <span class="pl-k">=</span> GibbsTypePriors<span class="pl-k">.</span><span class="pl-c1">Vnk_NGG</span>(val[<span class="pl-c1">1</span>], val[<span class="pl-c1">2</span>], β, σ, <span class="pl-c1">200</span>) <span class="pl-k">|&gt;</span> Nemo<span class="pl-k">.</span>accuracy_bits) <span class="pl-k">for</span> val <span class="pl-k">in</span> ar] <span class="pl-k">|&gt;</span>
  l <span class="pl-k">-&gt;</span> <span class="pl-c1">vcat</span>(l<span class="pl-k">...</span>)

<span class="pl-s"><span class="pl-pds"><span class="pl-c1">R</span>"</span>library(tidyverse)<span class="pl-pds">"</span></span>
p <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">R</span>"</span>$to_plot %&gt;%</span>
<span class="pl-s">    as_tibble %&gt;%</span>
<span class="pl-s">    mutate(Acceptable = factor(acc &lt; 64, levels = c(TRUE, FALSE))) %&gt;%</span>
<span class="pl-s">    ggplot(aes(x = n, y = k, fill = acc, alpha = Acceptable)) + </span>
<span class="pl-s">      geom_tile(colour = 'white') + </span>
<span class="pl-s">      theme_bw() + </span>
<span class="pl-s">      scale_fill_gradient(name = 'Accuracy') + </span>
<span class="pl-s">      ggtitle('Vnk')<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">R</span>"</span>png('figures/Vnk_instability.png')</span>
<span class="pl-s">  plot($p)</span>
<span class="pl-s">  dev.off()<span class="pl-pds">"</span></span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="figures/Vnk_instability.png"><img src="figures/Vnk_instability.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">Accuracy (bits) of the computed <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6b2f7a99ac05cebec9b9a1f81e1ad0d3">$V_{n,k}$</math-renderer> as a function of <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6b2f7a99ac05cebec9b9a1f81e1ad0d3">$n$</math-renderer> and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="6b2f7a99ac05cebec9b9a1f81e1ad0d3">$k$</math-renderer>. The computations are carried out using 200 bits of precision. Light coloured areas correspond to where the precision decreases below 64 bits.</p>
</article></div>