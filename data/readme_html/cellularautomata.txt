<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cellular-automata" class="anchor" aria-hidden="true" href="#cellular-automata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cellular Automata</h1>
<blockquote>
<p>A cellular automaton is a collection of "colored" cells on a grid of specified shape that evolves through a number of discrete time steps according to a set of rules based on the states of neighboring cells.
The rules are then applied iteratively for as many time steps as desired.</p>
</blockquote>
<p><a href="http://mathworld.wolfram.com/CellularAutomaton.html" rel="nofollow">mathworld.wolfram.com/CellularAutomaton</a></p>
<h2><a id="user-content-elementary-ca" class="anchor" aria-hidden="true" href="#elementary-ca"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Elementary CA</h2>
<p>To generate an elementary cellular automaton, use</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ca = CellularAutomaton(rule, init, gen)
"><pre>ca <span class="pl-k">=</span> <span class="pl-c1">CellularAutomaton</span>(rule, init, gen)</pre></div>
<p>where <code>rule</code> is the Wolfram code (integer), <code>init</code> is a vector containing the initial starting condition and <code>gen</code> is the number of generations to be computed.
For a single starting cell in the middle just omit the <code>init</code> vector.</p>
<p>To generate 15 generations of elementary cellular automaton of rule 90 use</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using CellularAutomata

ca90 = CellularAutomaton(90, 16)
"><pre><span class="pl-k">using</span> CellularAutomata

ca90 <span class="pl-k">=</span> <span class="pl-c1">CellularAutomaton</span>(<span class="pl-c1">90</span>, <span class="pl-c1">16</span>)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="                            #                                    
                           # #                                   
                          #   #                                  
                         # # # #                                 
                        #       #                                
                       # #     # #                               
                      #   #   #   #                              
                     # # # # # # # #                             
                    #               #                            
                   # #             # #                           
                  #   #           #   #                          
                 # # # #         # # # #                         
                #       #       #       #                        
               # #     # #     # #     # #                       
              #   #   #   #   #   #   #   #                      
             # # # # # # # # # # # # # # # #                     
"><pre><code>                            #                                    
                           # #                                   
                          #   #                                  
                         # # # #                                 
                        #       #                                
                       # #     # #                               
                      #   #   #   #                              
                     # # # # # # # #                             
                    #               #                            
                   # #             # #                           
                  #   #           #   #                          
                 # # # #         # # # #                         
                #       #       #       #                        
               # #     # #     # #     # #                       
              #   #   #   #   #   #   #   #                      
             # # # # # # # # # # # # # # # #                     
</code></pre></div>
<h2><a id="user-content-totalistic-ca" class="anchor" aria-hidden="true" href="#totalistic-ca"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Totalistic CA</h2>
<p>For a more complex cellular automaton you can change the number of states <code>k</code> the cell can be and the radius <code>r</code> of neighbors that can influence the states.
If <code>k</code> is changed to be larger than 2, a totalistic CA is computed where only the average value of all neighbors count.
This can be done like this</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ca = CellularAutomaton(993, 15, k=3)
"><pre>ca <span class="pl-k">=</span> <span class="pl-c1">CellularAutomaton</span>(<span class="pl-c1">993</span>, <span class="pl-c1">15</span>, k<span class="pl-k">=</span><span class="pl-c1">3</span>)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="                        X                         
                       XXX                        
                      X# #X                       
                     X     X                      
                    XXX   XXX                     
                   X# #X X# #X                    
                  X     #     X                   
                 XXX   ###   XXX                  
                X# #X # X # X# #X                 
               X      # X #      X                
              XXX    ## X ##    XXX               
             X# #X  #   X   #  X# #X              
            X     X### XXX ###X     X             
           XXX   X XX  # #  XX X   XXX            
          X# #X XX###X## ##X###XX X# #X           
"><pre><code>                        X                         
                       XXX                        
                      X# #X                       
                     X     X                      
                    XXX   XXX                     
                   X# #X X# #X                    
                  X     #     X                   
                 XXX   ###   XXX                  
                X# #X # X # X# #X                 
               X      # X #      X                
              XXX    ## X ##    XXX               
             X# #X  #   X   #  X# #X              
            X     X### XXX ###X     X             
           XXX   X XX  # #  XX X   XXX            
          X# #X XX###X## ##X###XX X# #X           
</code></pre></div>
<h2><a id="user-content-2-dimensional-cas" class="anchor" aria-hidden="true" href="#2-dimensional-cas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2 dimensional CAs</h2>
<p>Two dimensional cellular automaton (like Conway's Game of Life) can be created by</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ca = CA2d(B, S, init, gen)
"><pre>ca <span class="pl-k">=</span> <span class="pl-c1">CA2d</span>(B, S, init, gen)</pre></div>
<p>where <code>B</code> and <code>S</code> are vectors that have the numbers of neighboring cells that define when cell is born or survives, <code>init</code> (matrix) is the initial starting condition and <code>gen</code> is the number of generations the CA is to be computed.</p>
<p>Game of life is then run for 9 generations for e.g. a turbine pattern by typing</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ca = CA2d([3], [2, 3], init, 9)
"><pre>ca <span class="pl-k">=</span> <span class="pl-c1">CA2d</span>([<span class="pl-c1">3</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>], init, <span class="pl-c1">9</span>)</pre></div>
<p>1st step</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="   ###### ##        
   ###### ##        
          ##        
   ##     ##        
   ##     ##        
   ##     ##        
   ##               
   ## ######        
   ## ######        
"><pre><code>   ###### ##        
   ###### ##        
          ##        
   ##     ##        
   ##     ##        
   ##     ##        
   ##               
   ## ######        
   ## ######        
</code></pre></div>
<p>2nd</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="    ####            
   #    # ##        
   #    #   #       
      ##    #       
   ##    #  #       
  #  #   #  #       
  #  #    ##        
  #    ##           
  #   #    #        
   ## #    #        
       ####         
"><pre><code>    ####            
   #    # ##        
   #    #   #       
      ##    #       
   ##    #  #       
  #  #   #  #       
  #  #    ##        
  #    ##           
  #   #    #        
   ## #    #        
       ####         
</code></pre></div>
<p>3rd</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="     ##             
    ####            
   # ## ## #        
        ##  #       
   ##  ##  ###      
   #### #  ###      
  #  #   #  #       
 ###  # ####        
 ###  ##  ##        
  #  ##             
   # ## ## #        
       ####         
        ##          
"><pre><code>     ##             
    ####            
   # ## ## #        
        ##  #       
   ##  ##  ###      
   #### #  ###      
  #  #   #  #       
 ###  # ####        
 ###  ##  ##        
  #  ##             
   # ## ## #        
       ####         
        ##          
</code></pre></div>
<p>4th</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="    #  #            
        #           
         ##         
   # ##      #      
   #  #   #         
  #   # ###         
 #           #      
    ### #   #       
    #   #  #        
 #      ## #        
    ##              
      #             
       #  #         
"><pre><code>    #  #            
        #           
         ##         
   # ##      #      
   #  #   #         
  #   # ###         
 #           #      
    ### #   #       
    #   #  #        
 #      ## #        
    ##              
      #             
       #  #         
</code></pre></div>
<p>5th</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="        ##          
         #          
    ###  ##         
  ### #   #         
  #    # ##         
      # #           
    ## #    #       
    #   # ###       
    ##  ###         
     #              
     ##             
"><pre><code>        ##          
         #          
    ###  ##         
  ### #   #         
  #    # ##         
      # #           
    ## #    #       
    #   # ###       
    ##  ###         
     #              
     ##             
</code></pre></div>
<p>6th</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="        ##          
     #              
    # #  ##         
  # # ###  #        
  #  ######         
     ## ##          
    ######  #       
   #  ### # #       
    ##  # #         
         #          
     ##             
"><pre><code>        ##          
     #              
    # #  ##         
  # # ###  #        
  #  ######         
     ## ##          
    ######  #       
   #  ### # #       
    ##  # #         
         #          
     ##             
</code></pre></div>
<p>7th</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="     #  # #         
   ## # ###         
    #      #        
   ##     #         
                    
    #     ##        
   #      #         
    ### # ##        
    # #  #          
"><pre><code>     #  # #         
   ## # ###         
    #      #        
   ##     #         
                    
    #     ##        
   #      #         
    ### # ##        
    # #  #          
</code></pre></div>
<p>8th</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="    ## ## #         
   ##  ## ##        
           #        
   ##               
   ##     ##        
          ##        
   #                
   ## ##  ##        
    # ## ##         
"><pre><code>    ## ## #         
   ##  ## ##        
           #        
   ##               
   ##     ##        
          ##        
   #                
   ## ##  ##        
    # ## ##         
</code></pre></div>
<p>9th</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="   ###### ##        
   ###### ##        
          ##        
   ##     ##        
   ##     ##        
   ##     ##        
   ##               
   ## ######        
   ## ######        
"><pre><code>   ###### ##        
   ###### ##        
          ##        
   ##     ##        
   ##     ##        
   ##     ##        
   ##               
   ## ######        
   ## ######        
</code></pre></div>
<h2><a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running Tests</h2>
<p>To run tests, execute the following command from the root folder of the repository:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia tests/run_tests.jl
"><pre>julia tests<span class="pl-k">/</span>run_tests<span class="pl-k">.</span>jl</pre></div>
</article></div>