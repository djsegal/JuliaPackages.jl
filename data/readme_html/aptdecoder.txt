<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-decoder-for-the-automatic-picture-transmission-protocol" class="anchor" aria-hidden="true" href="#decoder-for-the-automatic-picture-transmission-protocol"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Decoder for the Automatic Picture Transmission protocol</h1>
<p><a href="https://github.com/Alexander-Barth/APTDecoder.jl/actions"><img src="https://github.com/Alexander-Barth/APTDecoder.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/Alexander-Barth/aptdecoder-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7993641b1da14d95d980fbe62f269753975714490d797f2d6e67cbba316826bb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f416c6578616e6465722d42617274682f4150544465636f6465722e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Build Status Windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/Alexander-Barth/APTDecoder.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/Alexander-Barth/APTDecoder.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/377e5ba09a1c00b3cb064b2ac2d95756f3163bb5a1c1a334df0c0b02156a84d1/687474703a2f2f636f6465636f762e696f2f6769746875622f416c6578616e6465722d42617274682f4150544465636f6465722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/Alexander-Barth/APTDecoder.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://alexander-barth.github.io/APTDecoder.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="documentation latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>All you need is a (relatively inexpensive) software-defined radio and antenna for 137 MHz (following for example these <a href="https://www.instructables.com/id/NOAA-Satellite-Signals-with-a-PVC-QFH-Antenna-and-/" rel="nofollow">instructions</a>) to receive data from the NOAA weather satellites NOAA 15, NOAA 18 and NOAA 19.
The data is first recorded using a software like GQRX (<a href="https://noaa-apt.mbernardi.com.ar/guide.html" rel="nofollow">https://noaa-apt.mbernardi.com.ar/guide.html</a>).</p>
<h2><a id="user-content-installation-of-apddecoderjl" class="anchor" aria-hidden="true" href="#installation-of-apddecoderjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation of APDDecoder.jl</h2>
<ul>
<li>Install <a href="https://julialang.org/downloads/" rel="nofollow">julia</a></li>
<li>Launch julia and run to following commands to install <code>APTDecoder</code>:</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import Pkg
Pkg.develop(PackageSpec(url=&quot;https://github.com/Alexander-Barth/APTDecoder.jl&quot;))
"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">develop</span>(<span class="pl-c1">PackageSpec</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/Alexander-Barth/APTDecoder.jl<span class="pl-pds">"</span></span>))</pre></div>
<ul>
<li>Make plots of a decoded and georefenced data stream with the following Julia command:</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import APTDecoder
APTDecoder.makeplots(&quot;gqrx_20190825_182745_137620000.wav&quot;,&quot;NOAA 15&quot;)
"><pre><span class="pl-k">import</span> APTDecoder
APTDecoder<span class="pl-k">.</span><span class="pl-c1">makeplots</span>(<span class="pl-s"><span class="pl-pds">"</span>gqrx_20190825_182745_137620000.wav<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>NOAA 15<span class="pl-pds">"</span></span>)</pre></div>
<p>The first argument of <code>APTDecoder.makeplots</code> is the wav file which should include the date and time in UTC (which is the default for GQRX) and the name of the satellite, e.g. "NOAA 15", "NOAA 18" or "NOAA 19".</p>
<p>This produces the following images:</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/gqrx_20190825_182745_137620000_raw.png"><img src="examples/gqrx_20190825_182745_137620000_raw.png" alt="raw" title="raw" style="max-width:100%;"></a></p>
<p>This is the raw data. Channel a is on the right and channel b on the left. Note that channel b is just switching the wave-length during the capture. In part of Europe the sun went already down.</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/gqrx_20190825_182745_137620000_channel_a.png"><img src="examples/gqrx_20190825_182745_137620000_channel_a.png" alt="channel A" title="A" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/gqrx_20190825_182745_137620000_channel_b.png"><img src="examples/gqrx_20190825_182745_137620000_channel_b.png" alt="channel B" title="B" style="max-width:100%;"></a></p>
<h1><a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Alternatives</h1>
<ul>
<li><a href="https://github.com/martinber/noaa-apt">NOAA-APT</a> with some <a href="https://noaa-apt.mbernardi.com.ar/guide.html" rel="nofollow">excellent documentation</a></li>
<li><a href="https://github.com/zacstewart/apt-decoder">apt-decoder</a></li>
<li><a href="https://github.com/csete/aptdec">aptdec</a></li>
<li><a href="https://github.com/aerospaceresearch/DirectDemod">DirectDemod</a></li>
<li><a href="https://github.com/pietern/apt137">apt137</a></li>
<li><a href="https://github.com/ThatcherC/APT3000">APT3000</a></li>
<li>...</li>
</ul>
<h1><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Credits</h1>
<p>Many thanks to the authors of the <a href="https://github.com/JuliaSpace/SatelliteToolbox.jl">SatelliteToolbox.jl</a> and the <a href="https://github.com/JuliaDSP/DSP.jl">DSP.jl</a>. These packages are used to predict the satellite orbit and to extract the APT signal.</p>
</article></div>