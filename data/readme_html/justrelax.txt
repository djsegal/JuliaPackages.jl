<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-justrelaxjl" class="anchor" aria-hidden="true" href="#justrelaxjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>JustRelax.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/PTSolvers/JustRelax.jl/actions/workflows/ci.yml/badge.svg"><img src="https://github.com/PTSolvers/JustRelax.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">Need to solve a very large multi-physics problem on a GPU cluster? Just Relax!</p>
<p dir="auto">Pseudo-transient accelerated iterative solvers, ready for extreme-scale, multi-GPU computation.</p>
<p dir="auto">JustRelax.jl is a collection of pseudo-transient relaxation solvers
for multi-physics problems on regular, staggered, parallel grids,
using MPI and multiple CPU or GPU backends.
It relies on <a href="https://github.com/omlins/ImplicitGlobalGrid.jl">ImplicitGlobalGrid.jl</a>
and <a href="https://github.com/omlins/ParallelStencil.jl">ParallelStencil.jl</a>.
It's part of the <a href="https://ptsolvers.github.io" rel="nofollow">PTSolvers project</a> and
the <a href="https://www.pasc-ch.org/projects/2021-2024/gpu4geo/" rel="nofollow">GPU4GEO project</a>.</p>
<p dir="auto">The package serves several purposes:</p>
<ul dir="auto">
<li>
<p dir="auto">It reduces code duplication between several applications, e.g. <a href="https://github.com/PTsolvers/PseudoTransientStokes.jl">PseudoTransientStokes.jl</a>
and <a href="https://github.com/PTsolvers/PseudoTransientAdjoint.jl">PseudoTransientAdjoint.jl</a></p>
</li>
<li>
<p dir="auto">It provides a collection of solvers to be used in quickly developing new applications</p>
</li>
<li>
<p dir="auto">It provides some standardization so that application codes can</p>
<ul dir="auto">
<li>more easily "add more physics"</li>
<li>more easily switch between a psuedo-transient solver and another solver (e.g. a direct solve or a multigrid method)</li>
</ul>
</li>
<li>
<p dir="auto">It provides a natural place to describe performance benchmarks for the solver routines</p>
</li>
<li>
<p dir="auto">It defines useful solvers to be encapsulated and used from non-Julia applications</p>
</li>
<li>
<p dir="auto">It provides a natural location for contributions of new solvers for use by the larger community</p>
</li>
</ul>
<p dir="auto">We include several miniapps, each designed to solve a well-specified benchmark problem, in order to provide</p>
<ul dir="auto">
<li>examples of high-performance usage,</li>
<li>bases on which to build more full-featured application codes</li>
<li>cases for reference and performance tests</li>
<li>JustRelax.jl's entries in "bake offs"</li>
<li>tests and examples of interfaces with other packages applications might use, in particular
<ul dir="auto">
<li>CompGrids.jl</li>
<li>PETSc.jl</li>
</ul>
</li>
</ul>
<p dir="auto">JustRelax.jl is used in the following applications:</p>
<ul dir="auto">
<li>TODO link to all applications using the package here (crucial for early development)</li>
</ul>
</article></div>