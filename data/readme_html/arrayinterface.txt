<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-arrayinterfacejl" class="anchor" aria-hidden="true" href="#arrayinterfacejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ArrayInterface.jl</h1>
<p dir="auto"><a href="https://docs.sciml.ai/ArrayInterface/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaArrays/ArrayInterface.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaArrays/ArrayInterface.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaArrays/ArrayInterface.jl/actions?query=workflow%3A%22CI+%28Julia+nightly%29%22"><img src="https://github.com/JuliaArrays/ArrayInterface.jl/workflows/CI%20(Julia%20nightly)/badge.svg" alt="CI (Julia nightly)" style="max-width: 100%;"></a>
<a href="https://buildkite.com/julialang/arrayinterface-dot-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/42406036ebd5d57e93f8eb9eca827f1df3b4fc52529cc1386717f6e9592295ae/68747470733a2f2f62616467652e6275696c646b6974652e636f6d2f61326462323532643932343738653164373139366565373435343030346566646662366162353934393663626163393161322e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://badge.buildkite.com/a2db252d92478e1d7196ee7454004efdfb6ab59496cbac91a2.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaArrays/ArrayInterface.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b330d8ac6953dec7b493dfc8c7073df41eb782259230de2e7122c35c3cb6adc4/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614172726179732f4172726179496e746572666163652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaArrays/ArrayInterface.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">The AbstractArray interface in Base Julia is still relatively young.
The purpose of this library is to solidify extensions to the current
AbstractArray interface, which are put to use in package ecosystems like
DifferentialEquations.jl. Since these libraries are live, this package will
serve as a staging ground for ideas before they are merged into Base Julia. For this
reason, no functionality is exported so that if such functions are added
and exported in a future Base Julia, there will be no issues with the upgrade.</p>
<h1 dir="auto"><a id="user-content-list-of-things-to-add" class="anchor" aria-hidden="true" href="#list-of-things-to-add"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>List of things to add</h1>
<ul dir="auto">
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="233477495" data-permission-text="Title is private" data-url="https://github.com/JuliaLang/julia/issues/22216" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/22216/hovercard" href="https://github.com/JuliaLang/julia/issues/22216">JuliaLang/julia#22216</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="233490531" data-permission-text="Title is private" data-url="https://github.com/JuliaLang/julia/issues/22218" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/22218/hovercard" href="https://github.com/JuliaLang/julia/issues/22218">JuliaLang/julia#22218</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="239634605" data-permission-text="Title is private" data-url="https://github.com/JuliaLang/julia/issues/22622" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/22622/hovercard" href="https://github.com/JuliaLang/julia/issues/22622">JuliaLang/julia#22622</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="291892903" data-permission-text="Title is private" data-url="https://github.com/JuliaLang/julia/issues/25760" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/25760/hovercard" href="https://github.com/JuliaLang/julia/issues/25760">JuliaLang/julia#25760</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="282424096" data-permission-text="Title is private" data-url="https://github.com/JuliaLang/julia/issues/25107" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/25107/hovercard" href="https://github.com/JuliaLang/julia/issues/25107">JuliaLang/julia#25107</a></li>
</ul>
<h1 dir="auto"><a id="user-content-array-types-to-handle" class="anchor" aria-hidden="true" href="#array-types-to-handle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Array Types to Handle</h1>
<p dir="auto">The following common array types are being understood and tested as part of this
development.</p>
<ul dir="auto">
<li>Array</li>
<li>Various versions of sparse arrays</li>
<li>SArray</li>
<li>MArray</li>
<li>FieldVector</li>
<li>ArrayPartition</li>
<li>VectorOfArray</li>
<li>DistributedArrays</li>
<li>GPUArrays (CLArrays and CuArrays)</li>
<li>AFArrays</li>
<li>MultiScaleArrays</li>
<li>LabelledArrays</li>
</ul>
<h2 dir="auto"><a id="user-content-staticarrayinterfacejl" class="anchor" aria-hidden="true" href="#staticarrayinterfacejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StaticArrayInterface.jl</h2>
<p dir="auto">If one is looking for an interface which includes functionality for statically-computed values, see <a href="https://github.com/JuliaArrays/StaticArrayInterface.jl">StaticArrayInterface.jl</a>.
This was separated from ArrayInterface.jl because it includes a lot of functionality that does not give substantive improvements
to the interface, and is likely to be deprecated in the near future as the compiler matures to automate a lot of its optimizations.</p>
<h2 dir="auto"><a id="user-content-breaking-release-notes" class="anchor" aria-hidden="true" href="#breaking-release-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Breaking Release Notes</h2>
<p dir="auto">7.0: Setup to use the new v1.9 package extensions. All static interface functions were moved to
<a href="https://github.com/JuliaArrays/StaticArrayInterface.jl">StaticArrayInterface.jl</a>. All packages
using one of the subpackages (ArrayInterfaceCore, ArrayInterfaceStaticArrays, etc.) should
update to v7 by simply depending on ArrayInterface.jl, unless static interface functions
were used in which case a dependency on StaticArrayInterface.jl is also necessary.</p>
<p dir="auto">6.0: ArrayInterface.jl completely removed all usage of Requires.jl and conditional dependencies
due to compile time impact. All of the Requires.jl support changed to subpackages within the
repository which are registered in the General registry. These subpackages are required by
any packages which seek to use the additional functionality.</p>
<p dir="auto">2.0: Changed the default of <code>ismutable(array::AbstractArray) = true</code>. We previously defaulted to
<code>Base.@pure ismutable(array::AbstractArray) = typeof(array).mutable</code>, but there are a lot of cases
where this tends to not work out in a way one would expect. For example, if you put a normal array
into an immutable struct that adds more information to it, this is considered immutable, even if
all of the <code>setindex!</code> methods work (by forwarding to the mutable array). Thus, it seems safer to just
always assume mutability is standard for an array, and allow arrays to opt-out.</p>
</article></div>