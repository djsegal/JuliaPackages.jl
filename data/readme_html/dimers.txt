<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-dimers" class="anchor" aria-hidden="true" href="#dimers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dimers</h1>
<p><code>Dimers</code> is a package for simulating the
<a href="http://en.wikipedia.org/wiki/Domino_tiling" rel="nofollow">dimer model</a> on a 2D
rectangular grid, using
<a href="http://arxiv.org/pdf/math/9903025v2.pdf" rel="nofollow">an algorithm of Kenyon, Propp, and Wilson</a>. <code>Dimers</code>
also provides support for loop erased random walks and Wilson's algorithm
on an arbitrary graph.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">showgraphics</span>(<span class="pl-c1">drawgraph</span>(<span class="pl-c1">dimersample</span>(<span class="pl-c1">20</span>)))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/sswatson/Dimers.jl/blob/master/images/dimersample.png"><img src="https://github.com/sswatson/Dimers.jl/raw/master/images/dimersample.png" alt="Dimer sample" style="max-width:100%;"></a></p>
<p>We can also compute the height function associated with the dimer sample:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">dimerheight</span>(<span class="pl-c1">dimersample</span>(<span class="pl-c1">20</span>))</pre></div>
<pre><code>11x11 Array{Int64,2}:
  0   1   0   1   0  1   0   1   0   1   0
 -1  -2  -1  -2  -1  2  -1  -2  -1  -2  -1
  0  -3  -4  -3   0  1   0   1   0  -3   0
 -1  -2  -1  -2  -1  2  -1  -2  -1  -2  -1
  0  -3   0   1   0  1   0   1   0   1   0
 -1  -2  -1   2  -1  2  -1  -2  -1   2  -1
  0   1   0   1   0  1   0   1   0   1   0
 -1  -2  -1   2  -1  2   3   2  -1  -2  -1
  0   1   0   1   0  1   0   1   0   1   0
 -1   2   3   2   3  2   3   2   3   2  -1
  0   1   0   1   0  1   0   1   0   1   0
</code></pre>
<p><code>Wilson</code> takes a graph as its first argument and an array of <code>true</code>/<code>false</code>
values specifying the roots.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">showgraphics</span>(<span class="pl-c1">drawgraph</span>(<span class="pl-c1">Wilson</span>(G,[[<span class="pl-c1">true</span>];[<span class="pl-c1">false</span> <span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">length</span>(G<span class="pl-k">.</span>vertices)<span class="pl-k">-</span><span class="pl-c1">1</span>]])))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/sswatson/Dimers.jl/blob/master/images/USTsample.png"><img src="https://github.com/sswatson/Dimers.jl/raw/master/images/USTsample.png" alt="UST sample" style="max-width:100%;"></a></p>
<p><code>LERW(G,v0,roots)</code> samples a loop-erased random walk on the graph <code>G</code>
starting from the vertex whose index in <code>G.vertices</code> is <code>v0</code> stopped upon
hitting one of the vertices <code>v</code> for which <code>roots[v]</code> is <code>true</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">import</span> Graphs
n <span class="pl-k">=</span> <span class="pl-c1">100</span>
G <span class="pl-k">=</span> Graphs<span class="pl-k">.</span><span class="pl-c1">adjlist</span>((Int64,Int64),is_directed<span class="pl-k">=</span><span class="pl-c1">false</span>)

<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>n
    <span class="pl-k">for</span> j<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>n
        Graphs<span class="pl-k">.</span><span class="pl-c1">add_vertex!</span>(G,(i,j))
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

roots <span class="pl-k">=</span> Bool[v[<span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">||</span> v[<span class="pl-c1">1</span>] <span class="pl-k">==</span> n <span class="pl-k">||</span> v[<span class="pl-c1">2</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">||</span> v[<span class="pl-c1">2</span>] <span class="pl-k">==</span> n  <span class="pl-k">for</span> v <span class="pl-k">in</span>
G<span class="pl-k">.</span>vertices];

v0 <span class="pl-k">=</span> <span class="pl-c1">find</span>(x<span class="pl-k">-&gt;</span>x<span class="pl-k">==</span>(<span class="pl-c1">div</span>(n,<span class="pl-c1">2</span>),<span class="pl-c1">div</span>(n,<span class="pl-c1">2</span>)),G<span class="pl-k">.</span>vertices)[<span class="pl-c1">1</span>]

lerw <span class="pl-k">=</span> <span class="pl-c1">LERW</span>(<span class="pl-c1">gridgraph</span>(n),v0,roots)
<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">length</span>(lerw)<span class="pl-k">-</span><span class="pl-c1">1</span>
    <span class="pl-c1">add_edge!</span>(G,lerw[i],lerw[i<span class="pl-k">+</span><span class="pl-c1">1</span>])
<span class="pl-k">end</span>

<span class="pl-c1">showgraphics</span>(<span class="pl-c1">drawgraph</span>(G))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/sswatson/Dimers.jl/blob/master/images/lerwsample.png"><img src="https://github.com/sswatson/Dimers.jl/raw/master/images/lerwsample.png" alt="Loop-erased random walk sample" style="max-width:100%;"></a></p>
<p><a href="https://travis-ci.org/sswatson/Dimers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fe95a49f6fbc2fac9561fd9a296686a0e24366f4/68747470733a2f2f7472617669732d63692e6f72672f7373776174736f6e2f44696d6572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sswatson/Dimers.jl.svg?branch=master" style="max-width:100%;"></a></p>
</article></div>