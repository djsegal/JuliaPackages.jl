<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-color" class="anchor" aria-hidden="true" href="#color"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Color</h1>
<p><a href="https://travis-ci.org/JuliaLang/Color.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/183cd142d8a5b0c87920659dd070bbc8d82f08019598b597097c095d801e28cd/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614c616e672f436f6c6f722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaLang/Color.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaLang/Color.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e565831e1004f969318f0518d6c0e7ad10ccfda08701a2226f28efd110b63373/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614c616e672f436f6c6f722e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaLang/Color.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Color&amp;ver=0.3" rel="nofollow"><img src="https://camo.githubusercontent.com/500de14f6b8e8acebbe58fe91471b3c8789ecdbdf3281a8e6adb8aa2cbd22cfd/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f6c6f725f302e332e737667" alt="Color" data-canonical-src="http://pkg.julialang.org/badges/Color_0.3.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Color&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/dabdb35dae02fe0f8f2175bcffc061fe636f69960a9c171088c0ce4d8b5afb54/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f6c6f725f302e342e737667" alt="Color" data-canonical-src="http://pkg.julialang.org/badges/Color_0.4.svg" style="max-width:100%;"></a></p>
<p>This library provides a wide array of functions for dealing with color. This
includes conversion between colorspaces, measuring distance between colors,
simulating color blindness, and generating color scales for graphics, among
other things.</p>
<h1><a id="user-content-this-package-is-deprecated---use-colorsjl-instead" class="anchor" aria-hidden="true" href="#this-package-is-deprecated---use-colorsjl-instead"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>This package is deprecated---use Colors.jl instead</h1>
<p>This package was the original Julia package for handling colors, but several backwardly-incompatible changes were necessary, and a new package <a href="https://github.com/JuliaGraphics/Colors.jl">Colors.jl</a> was forked from this one. This package will not be installable on future versions of julia, so all users should migrate to Colors.jl.</p>
<h2><a id="user-content-colorspaces" class="anchor" aria-hidden="true" href="#colorspaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Colorspaces</h2>
<p>What follows is a synopsis of every colorspace implemented in Color.jl. Any
color value can be converted to a similar value in any other colorspace using
the <code>convert</code> function.</p>
<p>E.g.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="convert(RGB, HSL(270, 0.5, 0.5))
"><pre><span class="pl-c1">convert</span>(RGB, <span class="pl-c1">HSL</span>(<span class="pl-c1">270</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>))</pre></div>
<p>Depending on the source and destination colorspace, this may not be perfectly
lossless.</p>
<h3><a id="user-content-rgb" class="anchor" aria-hidden="true" href="#rgb"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RGB</h3>
<p>The sRGB colorspace.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable RGB{T} &lt;: ColorValue
    r::T # Red in [0,1]
    g::T # Green in [0,1]
    b::T # Blue in [0,1]
end
"><pre>immutable RGB{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    r<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Red in [0,1]</span>
    g<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Green in [0,1]</span>
    b<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Blue in [0,1]</span>
<span class="pl-k">end</span></pre></div>
<p>RGBs may be defined with two broad number types: <code>FloatingPoint</code> and <code>FixedPoint</code>.
<code>FixedPoint</code> come from the <a href="https://github.com/JeffBezanson/FixedPointNumbers.jl"><code>FixedPointNumbers</code></a> package,
and represent fractional
numbers (between 0 and 1, inclusive) internally using integers.
For example, <code>0xffuf8</code> creates a <code>Ufixed8</code> number with value equal to <code>1.0</code> but
which internally is represented as <code>0xff</code>.
This strategy ensures that <code>1</code> always means "saturated color", regardless of how that value is represented.
Ordinary integers should not be used, although the convenience constructor <code>RGB(1,0,0)</code> will create
a value <code>RGB{Float64}(1.0, 0.0, 0.0)</code>.</p>
<p>The parametric representation of colors facilitates interfacing with external libraries that may
require a specific representation. It's also worth nothing that this package defines an
<code>AbstractRGB{T}</code> type, from which you can define your own variants of RGB. For example, if you
need a <code>BGR{Ufixed8}&lt;:AbstractRGB{Ufixed8}</code> type to interface with a C library, you can
define this easily. See an example of this in the <a href="test/layout.jl"><code>test/layout.jl</code> file</a>.</p>
<p>If you do define your own <code>AbstractRGB</code>, note that the constructor <strong>must initialize the values
in the order <code>(r,g,b)</code> regardless of how they are arranged internally in memory</strong>.</p>
<h3><a id="user-content-hsv" class="anchor" aria-hidden="true" href="#hsv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HSV</h3>
<p>Hue-Saturation-Value. A common projection of RGB to cylindrical coordinates.
This is also sometimes called "HSB" for Hue-Saturation-Brightness.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable HSV{T} &lt;: ColorValue
    h::T # Hue in [0,360]
    s::T # Saturation in [0,1]
    v::T # Value in [0,1]
end
"><pre>immutable HSV{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    h<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Hue in [0,360]</span>
    s<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Saturation in [0,1]</span>
    v<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Value in [0,1]</span>
<span class="pl-k">end</span></pre></div>
<p><code>T</code> must be of <code>FloatingPoint</code> type, since the values range beyond what can be represented with most <code>FixedPoint</code> types.</p>
<h3><a id="user-content-hsl" class="anchor" aria-hidden="true" href="#hsl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HSL</h3>
<p>Hue-Saturation-Lightness. Another common projection of RGB to cylindrical
coordinates.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable HSL{T} &lt;: ColorValue
    h::T # Hue in [0,360]
    s::T # Saturation in [0,1]
    l::T # Lightness in [0,1]
end
"><pre>immutable HSL{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    h<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Hue in [0,360]</span>
    s<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Saturation in [0,1]</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Lightness in [0,1]</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-xyz" class="anchor" aria-hidden="true" href="#xyz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>XYZ</h3>
<p>The XYZ colorspace standardized by the CIE in 1931, based on experimental
measurements of color perception culminating in the CIE standard observer (see
<code>cie_color_match</code>)</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable XYZ{T} &lt;: ColorValue
    x::T
    y::T
    z::T
end
"><pre>immutable XYZ{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    x<span class="pl-k">::</span><span class="pl-c1">T</span>
    y<span class="pl-k">::</span><span class="pl-c1">T</span>
    z<span class="pl-k">::</span><span class="pl-c1">T</span>
<span class="pl-k">end</span></pre></div>
<p>Currently, XYZ is the only type other than RGB supporting <code>FixedPoint</code>.</p>
<h3><a id="user-content-xyy" class="anchor" aria-hidden="true" href="#xyy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>xyY</h3>
<p>The xyY colorspace is another CIE standardized color space, based directly off of a transformation from XYZ. It was developed specifically because the xy chromaticity space is invariant to the lightness of the patch.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable xyY{T} &lt;: ColorValue
    x::T
    y::T
    Y::T
end
"><pre>immutable xyY{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    x<span class="pl-k">::</span><span class="pl-c1">T</span>
    y<span class="pl-k">::</span><span class="pl-c1">T</span>
    Y<span class="pl-k">::</span><span class="pl-c1">T</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-lab" class="anchor" aria-hidden="true" href="#lab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LAB</h3>
<p>A perceptually uniform colorpsace standardized by the CIE in 1976. See also LUV,
the associated colorspace standardized the same year.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable LAB{T} &lt;: ColorValue
    l::T # Luminance in approximately [0,100]
    a::T # Red/Green
    b::T # Blue/Yellow
end
"><pre>immutable LAB{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Luminance in approximately [0,100]</span>
    a<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Red/Green</span>
    b<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Blue/Yellow</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-luv" class="anchor" aria-hidden="true" href="#luv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LUV</h3>
<p>A perceptually uniform colorpsace standardized by the CIE in 1976. See also LAB,
a similar colorspace standardized the same year.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable LUV{T} &lt;: ColorValue
    l::T # Luminance
    u::T # Red/Green
    v::T # Blue/Yellow
end
"><pre>immutable LUV{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Luminance</span>
    u<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Red/Green</span>
    v<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Blue/Yellow</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-lchab" class="anchor" aria-hidden="true" href="#lchab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LCHab</h3>
<p>The LAB colorspace reparameterized using cylindrical coordinates.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable LCHab{T} &lt;: ColorValue
    l::T # Luminance in [0,100]
    c::T # Chroma
    h::T # Hue in [0,360]
end
"><pre>immutable LCHab{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Luminance in [0,100]</span>
    c<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Chroma</span>
    h<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Hue in [0,360]</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-lchuv" class="anchor" aria-hidden="true" href="#lchuv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LCHuv</h3>
<p>The LUV colorspace reparameterized using cylindrical coordinates.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable LCHuv{T} &lt;: ColorValue
    l::T # Luminance
    c::T # Chroma
    h::T # Hue
end
"><pre>immutable LCHuv{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Luminance</span>
    c<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Chroma</span>
    h<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> Hue</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-din99" class="anchor" aria-hidden="true" href="#din99"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DIN99</h3>
<p>The DIN99 uniform colorspace as described in the DIN 6176 specification.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable DIN99{T} &lt;: ColorValue
    l::T # L99 (Lightness)
    a::T # a99 (Red/Green)
    b::T # b99 (Blue/Yellow)
end
"><pre>immutable DIN99{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> L99 (Lightness)</span>
    a<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> a99 (Red/Green)</span>
    b<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> b99 (Blue/Yellow)</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-din99d" class="anchor" aria-hidden="true" href="#din99d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DIN99d</h3>
<p>The DIN99d uniform colorspace is an improvement on the DIN99 color space that adds a correction to the X tristimulus value in order to emulate the rotation term present in the DeltaE2000 equation.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable DIN99d{T} &lt;: ColorValue
    l::T # L99d (Lightness)
    a::T # a99d (Reddish/Greenish)
    b::T # b99d (Bluish/Yellowish)
end
"><pre>immutable DIN99d{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> L99d (Lightness)</span>
    a<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> a99d (Reddish/Greenish)</span>
    b<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> b99d (Bluish/Yellowish)</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-din99o" class="anchor" aria-hidden="true" href="#din99o"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DIN99o</h3>
<p>Revised version of the DIN99 uniform colorspace with modified coefficients for an improved metric.
Similar to DIN99d X correction and the DeltaE2000 rotation term, DIN99o achieves comparable results by optimized <code>a*/b*</code> rotation and chroma compression terms.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable DIN99o{T} &lt;: ColorValue
    l::T # L99o (Lightness)
    a::T # a99o (Red/Green)
    b::T # b99o (Blue/Yellow)
end
"><pre>immutable DIN99o{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    l<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> L99o (Lightness)</span>
    a<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> a99o (Red/Green)</span>
    b<span class="pl-k">::</span><span class="pl-c1">T</span> <span class="pl-c"><span class="pl-c">#</span> b99o (Blue/Yellow)</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-lms" class="anchor" aria-hidden="true" href="#lms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LMS</h3>
<p>Long-Medium-Short cone response values. Multiple methods of converting to LMS
space have been defined. Here the <a href="https://en.wikipedia.org/wiki/CIECAM02#CAT02" rel="nofollow">CAT02</a> chromatic adaptation matrix is used.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="immutable LMS{T} &lt;: ColorValue
    l::T # Long
    m::T # Medium
    s::T # Short
end
"><pre><code>immutable LMS{T} &lt;: ColorValue
    l::T # Long
    m::T # Medium
    s::T # Short
end
</code></pre></div>
<h3><a id="user-content-rgb24" class="anchor" aria-hidden="true" href="#rgb24"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RGB24</h3>
<p>An RGB color represented as 8-bit values packed into a 32-bit integer.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="immutable RGB24 &lt;: ColorValue
    color::Uint32
end
"><pre>immutable RGB24 <span class="pl-k">&lt;:</span> <span class="pl-c1">ColorValue</span>
    color<span class="pl-k">::</span><span class="pl-c1">Uint32</span>
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-transparency-alpha-values" class="anchor" aria-hidden="true" href="#transparency-alpha-values"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Transparency (alpha values)</h2>
<p>This package also allows you to define types that store a transparency with the <code>AlphaColorValue</code> type:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="faintred = AlphaColorValue(RGB(1,0,0),0.25)
"><pre>faintred <span class="pl-k">=</span> <span class="pl-c1">AlphaColorValue</span>(<span class="pl-c1">RGB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-c1">0.25</span>)</pre></div>
<h2><a id="user-content-color-parsing" class="anchor" aria-hidden="true" href="#color-parsing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Color Parsing</h2>
<p><code>color(desc::String)</code></p>
<p>Parse a <a href="https://developer.mozilla.org/en-US/docs/CSS/color" rel="nofollow">CSS color specification</a>. It will
parse any CSS color syntax with the exception of <code>transparent</code>, <code>rgba()</code>,
<code>hsla()</code> (since this library has no notion of transparency), and <code>currentColor</code>.</p>
<p>All CSS/SVG named colors are supported, in addition to X11 named colors, when
their definitions do not clash with SVG.</p>
<p>A <code>RGB</code> color is returned, except when the <code>hsl()</code> syntax is used, which returns
a <code>HSL</code> value.</p>
<h2><a id="user-content-cie-standard-observer" class="anchor" aria-hidden="true" href="#cie-standard-observer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CIE Standard Observer</h2>
<p><code>cie_color_match(wavelen::Real)</code></p>
<p>The CIE defines a standard observer, defining typical frequency response curve
for each of the three human cones. This function returns an XYZ color
corresponding to a wavelength specified in nanometers.</p>
<h2><a id="user-content-chromatic-adaptation-white-balance" class="anchor" aria-hidden="true" href="#chromatic-adaptation-white-balance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Chromatic Adaptation (white balance)</h2>
<p><code>whitebalance{T &lt;: ColorValue}(c::T, src_white::ColorValue, ref_white::ColorValue)</code></p>
<p>Convert a color <code>c</code> viewed under conditions with a given source whitepoint
<code>src_whitepoint</code>, to appear the same under a different conditions specified by a
reference whitepoint <code>ref_white</code>.</p>
<h2><a id="user-content-color-difference" class="anchor" aria-hidden="true" href="#color-difference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Color Difference</h2>
<p><code>colordiff(a::ColorValue, b::ColorValue)</code></p>
<p>Evaluate the
<a href="http://en.wikipedia.org/wiki/Color_difference#CIEDE2000" rel="nofollow">CIEDE2000</a> color
difference formula. This gives an approximate measure of the perceptual
difference between two colors to a typical viewer. A large number is returned
for increasingly distinguishable colors.</p>
<p><code>colordiff(a::ColorValue, b::ColorValue, m::DifferenceMetric)</code></p>
<p>Evaluate the color difference formula specified by the supplied <code>DifferenceMetric</code>. Options are as follows:</p>
<p><code>DE_2000(kl::Float64, kc::Float64, kh::Float64)</code>
<code>DE_2000()</code></p>
<p>Specify the color difference using the recommended CIEDE2000 equation, with weighting parameters <code>kl</code>, <code>kc</code>, and <code>kh</code> as provided for in the recommendation. When not provided, these parameters default to 1.</p>
<p><code>DE_94(kl::Float64, kc::Float64, kh::Float64)</code>
<code>DE_94()</code></p>
<p>Specify the color difference using the recommended CIEDE94 equation, with weighting parameters <code>kl</code>, <code>kc</code>, and <code>kh</code> as provided for in the recommendation. When not provided, these parameters default to 1.</p>
<p><code>DE_JPC79()</code></p>
<p>Specify McDonald's "JP Coates Thread Company" color difference formula.</p>
<p><code>DE_CMC(kl::Float64, kc::Float64)</code>
<code>DE_CMC()</code></p>
<p>Specify the color difference using the CMC equation, with weighting parameters <code>kl</code> and <code>kc</code>. When not provided, these parameters default to 1.</p>
<p><code>DE_BFD(wp::XYZ, kl::Float64, kc::Float64)</code>
<code>DE_BFD(kl::Float64, kc::Float64)</code>
<code>DE_BFD()</code></p>
<p>Specify the color difference using the BFD equation, with weighting parameters <code>kl</code> and <code>kc</code>. Additionally, a white point can be specified, because the BFD equation must convert between <code>XYZ</code> and <code>LAB</code> during the computation. When not specified, the constants default to 1, and the white point defaults to CIE D65.</p>
<p><code>DE_AB()</code></p>
<p>Specify the original, Euclidean color difference equation.</p>
<p><code>DE_DIN99()</code></p>
<p>Specify the Euclidean color difference equation applied in the <code>DIN99</code> uniform color space.</p>
<p><code>DE_DIN99d()</code></p>
<p>Specify the Euclidean color difference equation applied in the <code>DIN99</code> uniform color space.</p>
<p><code>DE_DIN99o()</code></p>
<p>Specify the Euclidean color difference equation applied in the <code>DIN99</code> uniform color space.</p>
<h2><a id="user-content-simulation-of-color-deficiency-color-blindness" class="anchor" aria-hidden="true" href="#simulation-of-color-deficiency-color-blindness"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Simulation of color deficiency ("color blindness")</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="protanopic(c::ColorValue)
deuteranopic(c::ColorValue)
tritanopic(c::ColorValue)
"><pre><span class="pl-c1">protanopic</span>(c<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>)
<span class="pl-c1">deuteranopic</span>(c<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>)
<span class="pl-c1">tritanopic</span>(c<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>)</pre></div>
<p>Three functions are provided that map colors to a reduced gamut to simulate
different types of dichromacy, the loss one the three types of human
photopigments. Protanopia, deuteranopia, and tritanopia are the loss of long,
middle, and short wavelength photopigment, respectively.</p>
<p>These functions take a color and return a new, altered color is the same
colorspace .</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="protanopic(c::ColorValue, p::Float64)
deuteranopic(c::ColorValue, p::Float64)
tritanopic(c::ColorValue, p::Float64)
"><pre><span class="pl-c1">protanopic</span>(c<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>, p<span class="pl-k">::</span><span class="pl-c1">Float64</span>)
<span class="pl-c1">deuteranopic</span>(c<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>, p<span class="pl-k">::</span><span class="pl-c1">Float64</span>)
<span class="pl-c1">tritanopic</span>(c<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>, p<span class="pl-k">::</span><span class="pl-c1">Float64</span>)</pre></div>
<p>Also provided are versions of these functions with an extra parameter <code>p</code> in
<code>[0,1]</code>, giving the degree of photopigment loss. Where 1.0 is a complete loss,
and 0.0 is no loss at all.</p>
<h2><a id="user-content-color-scales" class="anchor" aria-hidden="true" href="#color-scales"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Color Scales</h2>
<p><code>distinguishable_colors(n::Integer)</code></p>
<p>Generate <code>n</code> maximally distinguishable colors in LCHab space.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="distinguishable_colors(n::Integer,seed::ColorValue)
distinguishable_colors{T&lt;:ColorValue}(n::Integer,seed::AbstractVector{T})
"><pre><span class="pl-c1">distinguishable_colors</span>(n<span class="pl-k">::</span><span class="pl-c1">Integer</span>,seed<span class="pl-k">::</span><span class="pl-c1">ColorValue</span>)
<span class="pl-c1">distinguishable_colors</span><span class="pl-c1">{T&lt;:ColorValue}</span>(n<span class="pl-k">::</span><span class="pl-c1">Integer</span>,seed<span class="pl-k">::</span><span class="pl-c1">AbstractVector{T}</span>)</pre></div>
<p>A seed color or array of seed colors may be provided to <code>distinguishable_colors</code>, and the remaining colors will be chosen to be maximally distinguishable from the seed colors and each other.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="distinguishable_colors{T&lt;:ColorValue}(n::Integer, seed::AbstractVector{T};
    transform::Function = identity,
    lchoices::AbstractVector = linspace(0, 100, 15),
    cchoices::AbstractVector = linspace(0, 100, 15),
    hchoices::AbstractVector = linspace(0, 340, 20)
)
"><pre><span class="pl-c1">distinguishable_colors</span><span class="pl-c1">{T&lt;:ColorValue}</span>(n<span class="pl-k">::</span><span class="pl-c1">Integer</span>, seed<span class="pl-k">::</span><span class="pl-c1">AbstractVector{T}</span>;
    transform<span class="pl-k">::</span><span class="pl-c1">Function</span> <span class="pl-k">=</span> identity,
    lchoices<span class="pl-k">::</span><span class="pl-c1">AbstractVector</span> <span class="pl-k">=</span> <span class="pl-c1">linspace</span>(<span class="pl-c1">0</span>, <span class="pl-c1">100</span>, <span class="pl-c1">15</span>),
    cchoices<span class="pl-k">::</span><span class="pl-c1">AbstractVector</span> <span class="pl-k">=</span> <span class="pl-c1">linspace</span>(<span class="pl-c1">0</span>, <span class="pl-c1">100</span>, <span class="pl-c1">15</span>),
    hchoices<span class="pl-k">::</span><span class="pl-c1">AbstractVector</span> <span class="pl-k">=</span> <span class="pl-c1">linspace</span>(<span class="pl-c1">0</span>, <span class="pl-c1">340</span>, <span class="pl-c1">20</span>)
)</pre></div>
<p>By default, <code>distinguishable_colors</code> chooses maximally distinguishable colors from the outer product of lightness, chroma and hue values specified by <code>lchoices = linspace(0, 100, 15)</code>, <code>cchoices = linspace(0, 100, 15)</code>, and <code>hchoices = linspace(0, 340, 20)</code>. The set of colors that <code>distinguishable_colors</code> chooses from may be specified by passing different choices as keyword arguments.</p>
<p>Distinguishability is maximized with respect to the CIEDE2000 color difference formula (see <code>colordiff</code>). If a <code>transform</code> function is specified, color difference is instead maximized between colors <code>a</code> and <code>b</code> according to
<code>colordiff(transform(a), transform(b))</code>.</p>
<p><code>linspace(c1::ColorValue, c2::ColorValue, n=100)</code></p>
<p>Generates <code>n</code> colors in a linearly interpolated ramp from <code>c1</code> to
<code>c2</code>, inclusive, returning an <code>Array</code> of colors</p>
<p><code>weighted_color_mean(w1::Real, c1::ColorValue, c2::ColorValue)</code></p>
<p>Returns a color that is the weighted mean of <code>c1</code> and <code>c2</code>, where <code>c1</code>
has a weight 0 ≤ <code>w1</code> ≤ 1.</p>
<p><code>MSC(h)</code></p>
<p>Returns the most saturated color for a given hue <code>h</code> (defined in LCHuv space, i.e. in range [0, 360]). Optionally the lightness <code>l</code> can also be given like <code>MSC(h, l)</code>. The color is found by finding the edge of the LCHuv space for a given angle (hue).</p>
<h2><a id="user-content-colormaps" class="anchor" aria-hidden="true" href="#colormaps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Colormaps</h2>
<p><code>colormap(cname::String [, N::Int=100; mid=0.5, logscale=false, kvs...])</code></p>
<p>Returns a predefined sequential or diverging colormap computed using the algorithm by Wijffelaars, M., et al. (2008).
Optional arguments are the number of colors <code>N</code>, position of the middle point <code>mid</code> and possibility to switch to log scaling with <code>logscale</code> keyword.</p>
<p>Colormaps computed by this algorithm are ensured to have an increasing perceived depth or saturation making them ideal for data visualization. This also means that they are (in most cases) colorblind friendly and suitable for black-and-white printing.</p>
<p>Currently supported colormap names are:</p>
<h4><a id="user-content-sequential" class="anchor" aria-hidden="true" href="#sequential"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sequential</h4>
<table>
<thead>
<tr>
<th>Name</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>Blues</td>
<td><a target="_blank" rel="noopener noreferrer" href="images/Blues.png"><img src="images/Blues.png" alt="Blues" title="Blues" style="max-width:100%;"></a></td>
</tr>
<tr>
<td>Greens</td>
<td><a target="_blank" rel="noopener noreferrer" href="images/Greens.png"><img src="images/Greens.png" alt="Greens" title="Greens" style="max-width:100%;"></a></td>
</tr>
<tr>
<td>Grays</td>
<td></td>
</tr>
<tr>
<td>Oranges</td>
<td><a target="_blank" rel="noopener noreferrer" href="images/Oranges.png"><img src="images/Oranges.png" alt="Oranges" title="Oranges" style="max-width:100%;"></a></td>
</tr>
<tr>
<td>Purples</td>
<td><a target="_blank" rel="noopener noreferrer" href="images/Purples.png"><img src="images/Purples.png" alt="Purples" title="Purples" style="max-width:100%;"></a></td>
</tr>
<tr>
<td>Reds</td>
<td><a target="_blank" rel="noopener noreferrer" href="images/Reds.png"><img src="images/Reds.png" alt="Reds" title="Reds" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h4><a id="user-content-diverging" class="anchor" aria-hidden="true" href="#diverging"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Diverging</h4>
<table>
<thead>
<tr>
<th>Name</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>RdBu (from red to blue)</td>
<td><a target="_blank" rel="noopener noreferrer" href="images/RdBu.png"><img src="images/RdBu.png" alt="RdBu" title="RdBu" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>It is also possible to create your own colormaps by using the
<code>sequential_palette(h, [N::Int=100; c=0.88, s=0.6, b=0.75, w=0.15, d=0.0, wcolor=RGB(1,1,0), dcolor=RGB(0,0,1), logscale=false])</code></p>
<p>function that creates a sequential map for a hue <code>h</code> (defined in LCHuv space). Other possible parameters that you can fine-tune are:</p>
<ul>
<li><code>N</code> - number of colors</li>
<li><code>c</code> - the overall lightness contrast [0,1]</li>
<li><code>s</code> - saturation [0,1]</li>
<li><code>b</code> - brightness [0,1]</li>
<li><code>w</code> - cold/warm parameter, i.e. the strength of the starting color [0,1]</li>
<li><code>d</code> - depth of the ending color [0,1]</li>
<li><code>wcolor</code> - starting color (usually defined to be yellow)</li>
<li><code>dcolor</code> - ending color (depth)</li>
<li><code>logscale</code> - true/false for toggling logspacing</li>
</ul>
<p>Two sequential maps can also be combined into a diverging colormap by using the</p>
<p><code>diverging_palette(h1, h2 [, N::Int=100; mid=0.5,c=0.88, s=0.6, b=0.75, w=0.15, d1=0.0, d2=0.0, wcolor=RGB(1,1,0), dcolor1=RGB(1,0,0), dcolor2=RGB(0,0,1), logscale=false])</code></p>
<p>where the arguments are</p>
<ul>
<li><code>h1</code> - the main hue of the left side [0,360]</li>
<li><code>h2</code> - the main hue of the right side [0,360]</li>
</ul>
<p>and optional arguments</p>
<ul>
<li><code>N</code> - number of colors</li>
<li><code>c</code> - the overall lightness contrast [0,1]</li>
<li><code>s</code> - saturation [0,1]</li>
<li><code>b</code> - brightness [0,1]</li>
<li><code>w</code> - cold/warm parameter, i.e. the strength of the middle color [0,1]</li>
<li><code>d1</code> - depth of the ending color in the left side [0,1]</li>
<li><code>d2</code> - depth of the ending color in the right side [0,1]</li>
<li><code>wcolor</code> - starting color i.e. the middle color (warmness, usually defined to be yellow)</li>
<li><code>dcolor1</code> - ending color of the left side (depth)</li>
<li><code>dcolor2</code> - ending color of the right side (depth)</li>
<li><code>logscale</code> - true/false for toggling logspacing</li>
</ul>
<h1><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h1>
<p>What perceptually uniform colorspaces are and why you should be using them:</p>
<ul>
<li>Ihaka, R. (2003).
<a href="http://www.stat.auckland.ac.nz/~ihaka/downloads/DSC-Color.pdf" rel="nofollow">Colour for Presentation Graphics</a>.
In K Hornik, F Leisch, A Zeileis (eds.),
Proceedings of the 3rd International Workshop on Distributed Statistical Computing,
Vienna, Austria. ISSN 1609-395X</li>
<li>Zeileis, A., Hornik, K., and Murrell, P. (2009).
<a href="http://epub.wu.ac.at/1692/1/document.pdf" rel="nofollow">Escaping RGBland: Selecting colors for statistical graphics</a>.
Computational Statistics and Data Analysis,
53(9), 3259–3270. doi:10.1016/j.csda.2008.11.033</li>
</ul>
<p>Functions in this library were mostly implemented according to:</p>
<ul>
<li>Schanda, J., ed.
<a href="http://books.google.pt/books?id=uZadszSGe9MC" rel="nofollow">Colorimetry: Understanding the CIE system</a>.
Wiley-Interscience, 2007.</li>
<li>Sharma, G., Wu, W., and Dalal, E. N. (2005).
<a href="http://www.ece.rochester.edu/~gsharma/ciede2000/ciede2000noteCRNA.pdf" rel="nofollow">The CIEDE2000 color‐difference formula</a>:
Implementation notes, supplementary test data, and mathematical observations.
Color Research &amp; Application, 30(1), 21–30. doi:10.1002/col</li>
<li>Ihaka, R., Murrel, P., Hornik, K., Fisher, J. C., and Zeileis, A. (2013).
<a href="http://CRAN.R-project.org/package=colorspace" rel="nofollow">colorspace: Color Space Manipulation</a>.
R package version 1.2-1.</li>
<li>Lindbloom, B. (2013).
<a href="http://www.brucelindbloom.com/index.html?ColorCalculator.html" rel="nofollow">Useful Color Equations</a></li>
<li>Wijffelaars, M., Vliegen, R., van Wijk, J., van der Linden, E-J. (2008). <a href="http://magnaview.nl/documents/MagnaView-M_Wijffelaars-Generating_color_palettes_using_intuitive_parameters.pdf" rel="nofollow">Generating Color Palettes using Intuitive Parameters</a></li>
<li>Georg A. Klein
<a href="http://http://books.google.de/books?id=WsKOAVCrLnwC" rel="nofollow">Industrial Color Physics</a>.
Springer Series in Optical Sciences, 2010. ISSN 0342-4111, ISBN 978-1-4419-1197-1.</li>
</ul>
</article></div>