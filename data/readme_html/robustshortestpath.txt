<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-robustshortestpathjl" class="anchor" aria-hidden="true" href="#robustshortestpathjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RobustShortestPath.jl</h1>
<p><a href="https://travis-ci.org/chkwon/RobustShortestPath.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/95f0bf1eb29b552f83f4dff57a0421253faff8b6/68747470733a2f2f7472617669732d63692e6f72672f63686b776f6e2f526f6275737453686f7274657374506174682e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/chkwon/RobustShortestPath.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/chkwon/RobustShortestPath.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d796972c544223bc230010646d0f016f8e75c428/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f63686b776f6e2f526f6275737453686f7274657374506174682e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/chkwon/RobustShortestPath.jl/badge.svg" style="max-width:100%;"></a></p>
<p>Robust Shortest Path Finder for <a href="http://julialang.org" rel="nofollow">the Julia Language</a>.</p>
<p>This package provides functions to find robust shortest paths. Please see the reference papers below.</p>

<h1><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install</h1>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>RobustShortestPath<span class="pl-pds">"</span></span>)</pre></div>
<p>This will also install <a href="https://github.com/JuliaGraphs/LightGraphs.jl">LightGraphs.jl</a>, if you don't have it installed in your Julia system already.</p>
<p>To check if works</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>RobustShortestPath<span class="pl-pds">"</span></span>)</pre></div>
<h1><a id="user-content-get_robust_path" class="anchor" aria-hidden="true" href="#get_robust_path"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>get_robust_path</h1>
<p>This function solves the robust shortest path problem proposed by Bertsimas and Sim (2003) and integrates the idea of Lee and Kwon (2014).</p>
<ul>
<li>
<p><a href="http://link.springer.com/article/10.1007/s10107-003-0396-4" rel="nofollow">Bertsimas, D., &amp; Sim, M. (2003). Robust discrete optimization and network flows. Mathematical programming, 98(1-3), 49-71.</a></p>
</li>
<li>
<p><a href="http://link.springer.com/article/10.1007/s10288-014-0270-7" rel="nofollow">Lee, T., &amp; Kwon, C. (2014). A short note on the robust combinatorial optimization problems with cardinality constrained uncertainty. 4OR, 12(4), 373-378.</a></p>
</li>
</ul>
<h1><a id="user-content-get_robust_path_two" class="anchor" aria-hidden="true" href="#get_robust_path_two"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>get_robust_path_two</h1>
<p>This function solves the robust shortest path problem with two multiplicative uncertain cost coefficients proposed by Kwon et al. (2013).</p>
<ul>
<li><a href="http://onlinelibrary.wiley.com/doi/10.1002/nav.21540/full" rel="nofollow">Kwon, C., Lee, T., &amp; Berglund, P. (2013). Robust shortest path problems with two uncertain multiplicative cost coefficients. Naval Research Logistics (NRL), 60(5), 375-394.</a></li>
</ul>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h1>
<p>Example network and data from <a href="http://onlinelibrary.wiley.com/doi/10.1002/nav.21540/full" rel="nofollow">Kwon et al. (2013)</a>:</p>
<p><a target="_blank" rel="noopener noreferrer" href="network.png"><img src="network.png" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="data.png"><img src="data.png" style="max-width:100%;"></a></p>
<p>The above network data should be prepared in the column vector form as follows:</p>
<div class="highlight highlight-source-julia"><pre>data <span class="pl-k">=</span> [
 <span class="pl-c1">1</span>   <span class="pl-c1">4</span>  <span class="pl-c1">79</span>   <span class="pl-c1">31</span>  <span class="pl-c1">66</span>  <span class="pl-c1">28</span>;
 <span class="pl-c1">1</span>   <span class="pl-c1">2</span>  <span class="pl-c1">59</span>   <span class="pl-c1">97</span>  <span class="pl-c1">41</span>  <span class="pl-c1">93</span>;
 <span class="pl-c1">2</span>   <span class="pl-c1">4</span>  <span class="pl-c1">31</span>   <span class="pl-c1">21</span>  <span class="pl-c1">50</span>  <span class="pl-c1">40</span>;
 <span class="pl-c1">2</span>   <span class="pl-c1">3</span>  <span class="pl-c1">90</span>   <span class="pl-c1">52</span>  <span class="pl-c1">95</span>  <span class="pl-c1">38</span>;
 <span class="pl-c1">2</span>   <span class="pl-c1">5</span>   <span class="pl-c1">9</span>   <span class="pl-c1">23</span>  <span class="pl-c1">95</span>  <span class="pl-c1">59</span>;
 <span class="pl-c1">2</span>   <span class="pl-c1">6</span>  <span class="pl-c1">32</span>   <span class="pl-c1">57</span>  <span class="pl-c1">73</span>   <span class="pl-c1">7</span>;
 <span class="pl-c1">3</span>   <span class="pl-c1">9</span>  <span class="pl-c1">89</span>  <span class="pl-c1">100</span>  <span class="pl-c1">38</span>  <span class="pl-c1">21</span>;
 <span class="pl-c1">3</span>   <span class="pl-c1">8</span>  <span class="pl-c1">66</span>   <span class="pl-c1">13</span>   <span class="pl-c1">4</span>  <span class="pl-c1">72</span>;
 <span class="pl-c1">3</span>   <span class="pl-c1">6</span>  <span class="pl-c1">68</span>   <span class="pl-c1">95</span>  <span class="pl-c1">58</span>  <span class="pl-c1">58</span>;
 <span class="pl-c1">3</span>   <span class="pl-c1">7</span>  <span class="pl-c1">47</span>   <span class="pl-c1">12</span>  <span class="pl-c1">56</span>  <span class="pl-c1">20</span>;
 <span class="pl-c1">4</span>   <span class="pl-c1">3</span>  <span class="pl-c1">14</span>   <span class="pl-c1">19</span>  <span class="pl-c1">36</span>  <span class="pl-c1">84</span>;
 <span class="pl-c1">4</span>   <span class="pl-c1">9</span>  <span class="pl-c1">95</span>   <span class="pl-c1">65</span>  <span class="pl-c1">88</span>  <span class="pl-c1">42</span>;
 <span class="pl-c1">4</span>   <span class="pl-c1">8</span>  <span class="pl-c1">88</span>   <span class="pl-c1">13</span>  <span class="pl-c1">62</span>  <span class="pl-c1">54</span>;
 <span class="pl-c1">5</span>   <span class="pl-c1">3</span>  <span class="pl-c1">44</span>    <span class="pl-c1">8</span>  <span class="pl-c1">62</span>  <span class="pl-c1">53</span>;
 <span class="pl-c1">5</span>   <span class="pl-c1">6</span>  <span class="pl-c1">83</span>   <span class="pl-c1">66</span>  <span class="pl-c1">30</span>  <span class="pl-c1">19</span>;
 <span class="pl-c1">6</span>   <span class="pl-c1">7</span>  <span class="pl-c1">33</span>    <span class="pl-c1">3</span>   <span class="pl-c1">7</span>   <span class="pl-c1">8</span>;
 <span class="pl-c1">6</span>   <span class="pl-c1">8</span>  <span class="pl-c1">37</span>   <span class="pl-c1">99</span>  <span class="pl-c1">29</span>  <span class="pl-c1">46</span>;
 <span class="pl-c1">7</span>  <span class="pl-c1">11</span>  <span class="pl-c1">79</span>   <span class="pl-c1">54</span>  <span class="pl-c1">23</span>   <span class="pl-c1">3</span>;
 <span class="pl-c1">7</span>  <span class="pl-c1">12</span>  <span class="pl-c1">10</span>   <span class="pl-c1">37</span>  <span class="pl-c1">35</span>  <span class="pl-c1">43</span>;
 <span class="pl-c1">8</span>   <span class="pl-c1">7</span>  <span class="pl-c1">95</span>   <span class="pl-c1">71</span>  <span class="pl-c1">85</span>  <span class="pl-c1">56</span>;
 <span class="pl-c1">8</span>  <span class="pl-c1">10</span>   <span class="pl-c1">0</span>   <span class="pl-c1">95</span>  <span class="pl-c1">16</span>  <span class="pl-c1">64</span>;
 <span class="pl-c1">8</span>  <span class="pl-c1">12</span>  <span class="pl-c1">30</span>   <span class="pl-c1">38</span>  <span class="pl-c1">16</span>   <span class="pl-c1">3</span>;
 <span class="pl-c1">9</span>  <span class="pl-c1">10</span>   <span class="pl-c1">5</span>   <span class="pl-c1">69</span>  <span class="pl-c1">51</span>  <span class="pl-c1">71</span>;
 <span class="pl-c1">9</span>  <span class="pl-c1">11</span>  <span class="pl-c1">44</span>   <span class="pl-c1">60</span>  <span class="pl-c1">60</span>  <span class="pl-c1">17</span>;
<span class="pl-c1">10</span>  <span class="pl-c1">13</span>  <span class="pl-c1">79</span>   <span class="pl-c1">78</span>  <span class="pl-c1">16</span>  <span class="pl-c1">59</span>;
<span class="pl-c1">10</span>  <span class="pl-c1">14</span>  <span class="pl-c1">91</span>   <span class="pl-c1">59</span>  <span class="pl-c1">64</span>  <span class="pl-c1">61</span>;
<span class="pl-c1">11</span>  <span class="pl-c1">14</span>  <span class="pl-c1">53</span>   <span class="pl-c1">38</span>  <span class="pl-c1">84</span>  <span class="pl-c1">77</span>;
<span class="pl-c1">11</span>  <span class="pl-c1">15</span>  <span class="pl-c1">80</span>   <span class="pl-c1">85</span>  <span class="pl-c1">78</span>   <span class="pl-c1">6</span>;
<span class="pl-c1">11</span>  <span class="pl-c1">13</span>  <span class="pl-c1">56</span>   <span class="pl-c1">23</span>  <span class="pl-c1">26</span>  <span class="pl-c1">85</span>;
<span class="pl-c1">12</span>  <span class="pl-c1">15</span>  <span class="pl-c1">75</span>   <span class="pl-c1">80</span>  <span class="pl-c1">31</span>  <span class="pl-c1">38</span>;
<span class="pl-c1">12</span>  <span class="pl-c1">14</span>   <span class="pl-c1">1</span>  <span class="pl-c1">100</span>  <span class="pl-c1">18</span>  <span class="pl-c1">40</span>;
<span class="pl-c1">13</span>  <span class="pl-c1">14</span>  <span class="pl-c1">48</span>   <span class="pl-c1">28</span>  <span class="pl-c1">45</span>  <span class="pl-c1">33</span>;
<span class="pl-c1">14</span>  <span class="pl-c1">15</span>  <span class="pl-c1">25</span>   <span class="pl-c1">71</span>  <span class="pl-c1">33</span>  <span class="pl-c1">56</span>;
]

start_node <span class="pl-k">=</span> data[:,<span class="pl-c1">1</span>] <span class="pl-c"><span class="pl-c">#</span>first column of data</span>
end_node <span class="pl-k">=</span> data[:,<span class="pl-c1">2</span>] <span class="pl-c"><span class="pl-c">#</span>second column of data</span>
p <span class="pl-k">=</span> data[:,<span class="pl-c1">3</span>] <span class="pl-c"><span class="pl-c">#</span>third</span>
q <span class="pl-k">=</span> data[:,<span class="pl-c1">4</span>] <span class="pl-c"><span class="pl-c">#</span>fourth</span>
c <span class="pl-k">=</span> data[:,<span class="pl-c1">5</span>] <span class="pl-c"><span class="pl-c">#</span>fifth</span>
d <span class="pl-k">=</span> data[:,<span class="pl-c1">6</span>] <span class="pl-c"><span class="pl-c">#</span>sixth</span></pre></div>
<p>For a single-coefficient case as in <a href="http://link.springer.com/article/10.1007/s10107-003-0396-4" rel="nofollow">Bertsimas and Sim (2003)</a>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RobustShortestPath
Gamma<span class="pl-k">=</span><span class="pl-c1">3</span>
origin<span class="pl-k">=</span><span class="pl-c1">1</span>
destination<span class="pl-k">=</span><span class="pl-c1">15</span>
robust_path, robust_x, worst_case_cost <span class="pl-k">=</span> <span class="pl-c1">get_robust_path</span>(start_node, end_node, c, d, Gamma, origin, destination)</pre></div>
<p>The result will look like:</p>
<div class="highlight highlight-source-julia"><pre>([<span class="pl-c1">1</span>,<span class="pl-c1">4</span>,<span class="pl-c1">8</span>,<span class="pl-c1">12</span>,<span class="pl-c1">15</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>  …  <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],<span class="pl-c1">295</span>)</pre></div>
<p>For a two-coefficient case as in <a href="http://onlinelibrary.wiley.com/doi/10.1002/nav.21540/full" rel="nofollow">Kwon et al. (2013)</a>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RobustShortestPath
Gamma_u<span class="pl-k">=</span><span class="pl-c1">2</span>
Gamma_v<span class="pl-k">=</span><span class="pl-c1">3</span>
origin<span class="pl-k">=</span><span class="pl-c1">1</span>
destination<span class="pl-k">=</span><span class="pl-c1">15</span>
robust_path, robust_x, worst_case_cost <span class="pl-k">=</span> <span class="pl-c1">get_robust_path_two</span>(start_node, end_node, p, q, c, d, Gamma_u, Gamma_v, origin, destination)</pre></div>
<p>The result should look like:</p>
<div class="highlight highlight-source-julia"><pre>([<span class="pl-c1">1</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>,<span class="pl-c1">7</span>,<span class="pl-c1">12</span>,<span class="pl-c1">14</span>,<span class="pl-c1">15</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>  …  <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],<span class="pl-c1">25314.0</span>)</pre></div>
<p>See <a href="https://github.com/chkwon/RobustShortestPath.jl/blob/master/test/runtests.jl">runtest.jl</a> for more information.</p>
<h1><a id="user-content-get_shortest_path" class="anchor" aria-hidden="true" href="#get_shortest_path"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>get_shortest_path</h1>
<p>This package also provides an interface to <code>dijkstra_shortest_paths</code> of <code>LightGraphs.jl</code>.</p>
<div class="highlight highlight-source-julia"><pre>path, x <span class="pl-k">=</span> <span class="pl-c1">get_shortest_path</span>(start_node, end_node, link_length, origin, destination)</pre></div>
<h1><a id="user-content-contributor" class="anchor" aria-hidden="true" href="#contributor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributor</h1>
<p>This package is written and maintained by <a href="http://www.chkwon.net" rel="nofollow">Changhyun Kwon</a>.</p>
</article></div>