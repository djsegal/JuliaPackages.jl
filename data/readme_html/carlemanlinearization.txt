<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-carlemanlinearizationjl" class="anchor" aria-hidden="true" href="#carlemanlinearizationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CarlemanLinearization.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Status</strong></th>
<th align="center"><strong>Community</strong></th>
<th align="center"><strong>License</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://juliareach.github.io/CarlemanLinearization.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs-dev" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaReach/CarlemanLinearization.jl/actions/workflows/ci.yml"><img src="https://github.com/JuliaReach/CarlemanLinearization.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a> <a href="https://app.codecov.io/github/JuliaReach/CarlemanLinearization.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8b293541f8d730845e7a0458ef7522c5ad51fab20a26ed9a2bc616c2426dec12/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c696152656163682f4361726c656d616e4c696e656172697a6174696f6e2e6a6c2f636f7665726167652e737667" alt="codecov" data-canonical-src="https://codecov.io/github/JuliaReach/CarlemanLinearization.jl/coverage.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://julialang.zulipchat.com/#narrow/stream/278609-juliareach" rel="nofollow"><img src="https://camo.githubusercontent.com/11e6556bfe778e7cf7331cac9c44bd0616062722036cc0d9bb0b7909aaae8779/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e737667" alt="gitter" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaReach/CarlemanLinearization.jl/blob/master/LICENSE"><img src="https://camo.githubusercontent.com/2ff6a06f2f6e08b17783133ca7ebc23ce1f8ac4415eee8e835647b57048a8f0d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667" alt="license" data-canonical-src="https://img.shields.io/github/license/mashape/apistatus.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This package implements the Carleman linearization transformation of polynomial
differential equations in Julia.</p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<p dir="auto">The following methods are available:</p>
<ul dir="auto">
<li>Construction of the Carleman embedding using sparse matrices</li>
<li>Explicit error bounds [FP17]</li>
<li>Improved error bounds for dissipative systems [L20]</li>
</ul>
<h2 dir="auto"><a id="user-content-related-libraries" class="anchor" aria-hidden="true" href="#related-libraries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related libraries</h2>
<ul dir="auto">
<li><a href="https://github.com/mforets/carlin">carlin</a>: Python library with similar functionality.</li>
<li><a href="https://github.com/hermankolden/CarlemanBurgers">CarlemanBurgers</a>: MATLAB implementation of the classical Carleman solution of the viscous Burgers equation, used in <a href="https://arxiv.org/abs/2011.03185" rel="nofollow">https://arxiv.org/abs/2011.03185</a>.</li>
</ul>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://arxiv.org/abs/1711.02552" rel="nofollow">[FP17] Forets, Marcelo, and Amaury Pouly. Explicit error bounds for carleman linearization. arXiv preprint arXiv:1711.02552 (2017).</a></p>
</li>
<li>
<p dir="auto"><a href="https://arxiv.org/abs/2011.03185" rel="nofollow">[L20] Liu JP, Kolden HÃ˜, Krovi HK, Loureiro NF, Trivisa K, Childs AM. Efficient quantum algorithm for dissipative nonlinear differential equations. arXiv preprint arXiv:2011.03185. 2020 Nov 6.</a></p>
</li>
</ul>
</article></div>