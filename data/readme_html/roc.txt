<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-roc" class="anchor" aria-hidden="true" href="#roc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ROC</h1>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/ROC.jpg"><img src="docs/src/assets/ROC.jpg" alt="Roc destroying Sindbad's ship from The Book of Knowledge, The Grolier Society, 1911" style="max-width:100%;"></a></p>
<p>Linux, OSX: <a href="https://travis-ci.org/diegozea/ROC.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/efe2e26cae46382fbb096f81982848fdae4640a0e5333de590faafef9b51c20f/68747470733a2f2f7472617669732d63692e6f72672f646965676f7a65612f524f432e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/diegozea/ROC.jl.svg" style="max-width:100%;"></a><br>
Windows: <a href="https://ci.appveyor.com/project/diegozea/roc-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/6b7e3a6184d31714f8ee3ca751edb4f083520a8419b0e1bcbca438064303e5bd/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f307639666e713273337732786e67676a2f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/0v9fnq2s3w2xnggj/branch/master?svg=true" style="max-width:100%;"></a><br>
Code Coverage: <a href="https://coveralls.io/github/diegozea/ROC.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1c2b9585b7e70fa1cabdb29cdd94bbdc46f6b01bbaf475c93243a1952ea5b60f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f646965676f7a65612f524f432e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/diegozea/ROC.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a> <a href="http://codecov.io/github/diegozea/ROC.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9df44b6faa75058141ed06baf00ac40ad13021b51ca14108e6cd7fb812f78562/687474703a2f2f636f6465636f762e696f2f6769746875622f646965676f7a65612f524f432e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/diegozea/ROC.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>An implementation of <a href="http://en.wikipedia.org/wiki/Receiver_operating_characteristic" rel="nofollow">ROC (Receiver Operating Characteristic) curves</a> for <a href="http://julialang.org/" rel="nofollow">Julia</a>.</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/rocs.png"><img src="docs/src/assets/rocs.png" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="] add https://github.com/diegozea/ROC.jl
"><pre><code>] add https://github.com/diegozea/ROC.jl
</code></pre></div>
<h3><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="roc(scores::AbstractVector{T}, labels::AbstractVector{U}, truelabel::L; distances::Bool=false)
"><pre><span class="pl-c1">roc</span>(scores<span class="pl-k">::</span><span class="pl-c1">AbstractVector{T}</span>, labels<span class="pl-k">::</span><span class="pl-c1">AbstractVector{U}</span>, truelabel<span class="pl-k">::</span><span class="pl-c1">L</span>; distances<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p>Here <code>T</code> is <code>R</code> or <code>Union{R,Missing}</code> for some type <code>R&lt;:Real</code> and <code>U</code>
is <code>L</code> or <code>Union{L,Missing}</code> for some type <code>L&lt;:Any</code>. The <code>labels</code>
vector must take exactly two non-<code>missing</code> values.</p>
<p><code>distances</code> defines whether the <code>scores</code> values are distance-scored, i.e. a
higher score value means a worse match. The default is <code>false</code> indicating the
more typical opposite case where a higher score value means a better match</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="roc(scores::AbstractVector{R}, labels::BitVector{Bool}; distances::Bool=false)
"><pre><span class="pl-c1">roc</span>(scores<span class="pl-k">::</span><span class="pl-c1">AbstractVector{R}</span>, labels<span class="pl-k">::</span><span class="pl-c1">BitVector{Bool}</span>; distances<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p>Alternative method for optimal performance (no <code>missing</code> values allowed).</p>
<p>The methods above return a <code>ROCData</code> object, whose fields <code>FPR</code> and
<code>TPR</code> are the vectors of true and false positive rates,
respectively.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="AUC(curve::ROCData)
"><pre><span class="pl-c1">AUC</span>(curve<span class="pl-k">::</span><span class="pl-c1">ROCData</span>)</pre></div>
<p>Area under the curve.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="PPV(curve::ROCData)
"><pre><span class="pl-c1">PPV</span>(curve<span class="pl-k">::</span><span class="pl-c1">ROCData</span>)</pre></div>
<p>Positive predictive value.</p>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<p>Generate synthetic data:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; function noisy(label; λ=0.0)
           if label
               return 1 - λ*rand()
           else
               return λ*rand()
           end
       end

julia&gt; labels = rand(Bool, 200);

julia&gt; scores(λ) = map(labels) do label
           noisy(label, λ=λ)
       end
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> <span class="pl-en">noisy</span>(label; λ<span class="pl-k">=</span><span class="pl-c1">0.0</span>)
           <span class="pl-k">if</span> label
               <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> λ<span class="pl-k">*</span><span class="pl-c1">rand</span>()
           <span class="pl-k">else</span>
               <span class="pl-k">return</span> λ<span class="pl-k">*</span><span class="pl-c1">rand</span>()
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> labels <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Bool, <span class="pl-c1">200</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-en">scores</span>(λ) <span class="pl-k">=</span> <span class="pl-c1">map</span>(labels) <span class="pl-k">do</span> label
           <span class="pl-c1">noisy</span>(label, λ<span class="pl-k">=</span>λ)
       <span class="pl-k">end</span></pre></div>
<p>Compare area under ROC curves:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using ROC

julia&gt; roc_good = roc(scores(0.6), labels, true);
julia&gt; roc_bad = roc(scores(1.0), labels, true);

julia&gt; area_good = AUC(roc_good)
0.9436237564063913

julia&gt; area_bad =  AUC(roc_bad)
0.5014571399859311
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ROC

julia<span class="pl-k">&gt;</span> roc_good <span class="pl-k">=</span> <span class="pl-c1">roc</span>(<span class="pl-c1">scores</span>(<span class="pl-c1">0.6</span>), labels, <span class="pl-c1">true</span>);
julia<span class="pl-k">&gt;</span> roc_bad <span class="pl-k">=</span> <span class="pl-c1">roc</span>(<span class="pl-c1">scores</span>(<span class="pl-c1">1.0</span>), labels, <span class="pl-c1">true</span>);

julia<span class="pl-k">&gt;</span> area_good <span class="pl-k">=</span> <span class="pl-c1">AUC</span>(roc_good)
<span class="pl-c1">0.9436237564063913</span>

julia<span class="pl-k">&gt;</span> area_bad <span class="pl-k">=</span>  <span class="pl-c1">AUC</span>(roc_bad)
<span class="pl-c1">0.5014571399859311</span></pre></div>
<p>Use <code>Plots.jl</code> to plot the receiver operator characteristics:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Plots

julia&gt; plot(roc_good, label=&quot;good&quot;);
julia&gt; plot!(roc_bad, label=&quot;bad&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Plots

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(roc_good, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>good<span class="pl-pds">"</span></span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot!</span>(roc_bad, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>bad<span class="pl-pds">"</span></span>)</pre></div>
<p>This generates the plot appearing at the top of the page.</p>
</article></div>