<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-prettyprintingjl" class="anchor" aria-hidden="true" href="#prettyprintingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PrettyPrinting.jl</h1>
<p><em>PrettyPrinting is a Julia library for optimal formatting of composite data
structures on a fixed-width terminal.</em></p>
<p><a href="https://travis-ci.org/rbt-lang/PrettyPrinting.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f417790de63751245ffb2091f96dd8bccd9c9925/68747470733a2f2f7472617669732d63692e6f72672f7262742d6c616e672f5072657474795072696e74696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Linux/OSX Build Status" data-canonical-src="https://travis-ci.org/rbt-lang/PrettyPrinting.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/rbt-lang/prettyprinting-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/146da4cd3724bcabd3aa6ded71de6164e8d90c83/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7262742d6c616e672f5072657474795072696e74696e672e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/rbt-lang/PrettyPrinting.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/rbt-lang/PrettyPrinting.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/19fbd1cebba1e0e0116ec722bd9f2f56dd0cbaca/68747470733a2f2f636f6465636f762e696f2f67682f7262742d6c616e672f5072657474795072696e74696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage Status" data-canonical-src="https://codecov.io/gh/rbt-lang/PrettyPrinting.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://github.com/rbt-lang/PrettyPrinting.jl/issues"><img src="https://camo.githubusercontent.com/ce52abb7c04d1f353e8d91ef79d0322573cf48df/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7262742d6c616e672f5072657474795072696e74696e672e6a6c2e737667" alt="Open Issues" data-canonical-src="https://img.shields.io/github/issues/rbt-lang/PrettyPrinting.jl.svg" style="max-width:100%;"></a>
<a href="https://rbt-lang.github.io/PrettyPrinting.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/3999e8a2448d2bf4b84d94c5c0899650d95d9f38/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d6465762d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/doc-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://raw.githubusercontent.com/rbt-lang/PrettyPrinting.jl/master/LICENSE.md" rel="nofollow"><img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<p>Install the package using the Julia package manager:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PrettyPrinting<span class="pl-pds">"</span></span>)</pre></div>
<p>To start using the package, import it:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PrettyPrinting</pre></div>
<p>Use function <code>pprint()</code> to display complex data structures.  For example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE<span class="pl-pds">"</span></span>,
                employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>JEFFERY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SERGEANT<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">101442</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>),
                             (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NANCY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE OFFICER<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">80016</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>)]),
               (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OEMC<span class="pl-pds">"</span></span>,
                employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>LAKENYA A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">17.68</span>),
                             (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DORIS A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">19.38</span>)])]
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{NamedTuple{(<span class="pl-c1">:name</span>, <span class="pl-c1">:employees</span>),T} <span class="pl-k">where</span> T<span class="pl-k">&lt;:</span><span class="pl-c1">Tuple</span>,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE<span class="pl-pds">"</span></span>, employees <span class="pl-k">=</span> NamedTuple{(<span class="pl-c1">:name</span>, <span class="pl-c1">:position</span>, <span class="pl-c1">:salary</span>, <span class="pl-c1">:rate</span>),Tuple{String,String,Int64,Missing}}[(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>JEFFERY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SERGEANT<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">101442</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>), (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NANCY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE OFFICER<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">80016</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>)])
 (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OEMC<span class="pl-pds">"</span></span>, employees <span class="pl-k">=</span> NamedTuple{(<span class="pl-c1">:name</span>, <span class="pl-c1">:position</span>, <span class="pl-c1">:salary</span>, <span class="pl-c1">:rate</span>),Tuple{String,String,Missing,Float64}}[(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>LAKENYA A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">17.68</span>), (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DORIS A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">19.38</span>)])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">pprint</span>(data)
[(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE<span class="pl-pds">"</span></span>,
  employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>JEFFERY A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SERGEANT<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">101442</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>),
               (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NANCY A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE OFFICER<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">80016</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>)]),
 (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OEMC<span class="pl-pds">"</span></span>,
  employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>LAKENYA A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">17.68</span>),
               (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DORIS A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">19.38</span>)])]</pre></div>
<p>PrettyPrinting knows how to format tuples, vectors, and dictionaries.  Other
data types should implement the function <code>tile()</code> as described in the
<a href="https://rbt-lang.github.io/PrettyPrinting.jl/dev/" rel="nofollow"><strong>Documentation</strong></a>.</p>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h2>
<p>The algorithm for finding the optimal layout is based upon
<a href="https://ai.google/research/pubs/pub44667" rel="nofollow">Phillip Yelland, A New Approach to Optimal Code Formatting, 2016</a>.</p>
</article></div>