<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-prettyprintingjl" class="anchor" aria-hidden="true" href="#prettyprintingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PrettyPrinting.jl</h1>
<p><a href="https://github.com/MechanicalRabbit/PrettyPrinting.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/MechanicalRabbit/PrettyPrinting.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/MechanicalRabbit/PrettyPrinting.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cac5c2d4959bc6105523cc27fde92ce414e825cafca8b6fb7ba26fc5737baae7/68747470733a2f2f636f6465636f762e696f2f67682f4d656368616e6963616c5261626269742f5072657474795072696e74696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage Status" data-canonical-src="https://codecov.io/gh/MechanicalRabbit/PrettyPrinting.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://github.com/MechanicalRabbit/PrettyPrinting.jl/issues"><img src="https://camo.githubusercontent.com/981f33ff11a7fb4e2e6f215b83df0f75e598424cee5ac799d23845480a3655d9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d656368616e6963616c5261626269742f5072657474795072696e74696e672e6a6c2e737667" alt="Open Issues" data-canonical-src="https://img.shields.io/github/issues/MechanicalRabbit/PrettyPrinting.jl.svg" style="max-width:100%;"></a>
<a href="https://mechanicalrabbit.github.io/PrettyPrinting.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/32fb2e33b4404f7bd512344842f473e2e5b78adc1f0897d176c658d57471c39f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/doc-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://raw.githubusercontent.com/MechanicalRabbit/PrettyPrinting.jl/master/LICENSE.md" rel="nofollow"><img src="https://camo.githubusercontent.com/83d3746e5881c1867665223424263d8e604df233d0a11aae0813e0414d433943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"></a></p>
<p><em>PrettyPrinting</em> is a Julia library for optimal formatting of composite data
structures.  It works by generating all possible layouts of the data, and then
selecting the best layout that fits the screen width.  The algorithm for
finding the optimal layout is based upon <a href="https://ai.google/research/pubs/pub44667" rel="nofollow">Phillip Yelland, A New Approach to
Optimal Code Formatting, 2016</a>.</p>
<p>Out of the box, PrettyPrinting can format Julia code and standard Julia
containers.  It can be easily extended to format custom data structures.</p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<p>If you work with nested data structures in Julia REPL, you may find the way
they are displayed unsatisfactory.  For example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; data = [(name = &quot;POLICE&quot;,
                employees = [(name = &quot;JEFFERY A&quot;, position = &quot;SERGEANT&quot;, salary = 101442, rate = missing),
                             (name = &quot;NANCY A&quot;, position = &quot;POLICE OFFICER&quot;, salary = 80016, rate = missing)]),
               (name = &quot;OEMC&quot;,
                employees = [(name = &quot;LAKENYA A&quot;, position = &quot;CROSSING GUARD&quot;, salary = missing, rate = 17.68),
                             (name = &quot;DORIS A&quot;, position = &quot;CROSSING GUARD&quot;, salary = missing, rate = 19.38)])]
2-element Vector{NamedTuple{(:name, :employees), T} where T&lt;:Tuple}:
 (name = &quot;POLICE&quot;, employees = NamedTuple{(:name, :position, :salary, :rate), Tuple{String, String, Int64, Missing}}[(name = &quot;JEFFERY A&quot;, position = &quot;SERGEANT&quot;, salary = 101442, rate = missing), (name = &quot;NANCY A&quot;, position = &quot;POLICE OFFICER&quot;, salary = 80016, rate = missing)])
 (name = &quot;OEMC&quot;, employees = NamedTuple{(:name, :position, :salary, :rate), Tuple{String, String, Missing, Float64}}[(name = &quot;LAKENYA A&quot;, position = &quot;CROSSING GUARD&quot;, salary = missing, rate = 17.68), (name = &quot;DORIS A&quot;, position = &quot;CROSSING GUARD&quot;, salary = missing, rate = 19.38)])
"><pre>julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE<span class="pl-pds">"</span></span>,
                employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>JEFFERY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SERGEANT<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">101442</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>),
                             (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NANCY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE OFFICER<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">80016</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>)]),
               (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OEMC<span class="pl-pds">"</span></span>,
                employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>LAKENYA A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">17.68</span>),
                             (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DORIS A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">19.38</span>)])]
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{NamedTuple{(<span class="pl-c1">:name</span>, <span class="pl-c1">:employees</span>), T} <span class="pl-k">where</span> T<span class="pl-k">&lt;:</span><span class="pl-c1">Tuple</span>}<span class="pl-k">:</span>
 (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE<span class="pl-pds">"</span></span>, employees <span class="pl-k">=</span> NamedTuple{(<span class="pl-c1">:name</span>, <span class="pl-c1">:position</span>, <span class="pl-c1">:salary</span>, <span class="pl-c1">:rate</span>), Tuple{String, String, Int64, Missing}}[(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>JEFFERY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SERGEANT<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">101442</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>), (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NANCY A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE OFFICER<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">80016</span>, rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>)])
 (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OEMC<span class="pl-pds">"</span></span>, employees <span class="pl-k">=</span> NamedTuple{(<span class="pl-c1">:name</span>, <span class="pl-c1">:position</span>, <span class="pl-c1">:salary</span>, <span class="pl-c1">:rate</span>), Tuple{String, String, Missing, Float64}}[(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>LAKENYA A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">17.68</span>), (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DORIS A<span class="pl-pds">"</span></span>, position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>, salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>, rate <span class="pl-k">=</span> <span class="pl-c1">19.38</span>)])</pre></div>
<p>If this is the case, consider using PrettyPrinting.  First, install it with the
Julia package manager:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;PrettyPrinting&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PrettyPrinting<span class="pl-pds">"</span></span>)</pre></div>
<p>Import the package:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using PrettyPrinting
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PrettyPrinting</pre></div>
<p>Now you can use <code>pprint()</code> to display your complex data.  For example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; pprint(data)
[(name = &quot;POLICE&quot;,
  employees = [(name = &quot;JEFFERY A&quot;,
                position = &quot;SERGEANT&quot;,
                salary = 101442,
                rate = missing),
               (name = &quot;NANCY A&quot;,
                position = &quot;POLICE OFFICER&quot;,
                salary = 80016,
                rate = missing)]),
 (name = &quot;OEMC&quot;,
  employees = [(name = &quot;LAKENYA A&quot;,
                position = &quot;CROSSING GUARD&quot;,
                salary = missing,
                rate = 17.68),
               (name = &quot;DORIS A&quot;,
                position = &quot;CROSSING GUARD&quot;,
                salary = missing,
                rate = 19.38)])]
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">pprint</span>(data)
[(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE<span class="pl-pds">"</span></span>,
  employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>JEFFERY A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SERGEANT<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">101442</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>),
               (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NANCY A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>POLICE OFFICER<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">80016</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">missing</span>)]),
 (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OEMC<span class="pl-pds">"</span></span>,
  employees <span class="pl-k">=</span> [(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>LAKENYA A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">17.68</span>),
               (name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DORIS A<span class="pl-pds">"</span></span>,
                position <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CROSSING GUARD<span class="pl-pds">"</span></span>,
                salary <span class="pl-k">=</span> <span class="pl-c1">missing</span>,
                rate <span class="pl-k">=</span> <span class="pl-c1">19.38</span>)])]</pre></div>
<p>PrettyPrinting knows how to format tuples, named tuples, vectors, sets, and
dictionaries.  It can also format Julia code represented as an <code>Expr</code> object.
To format custom data types, implement either <code>PrettyPrinting.quoteof()</code> or
<code>PrettyPrinting.tile()</code>, as described in the <a href="https://mechanicalrabbit.github.io/PrettyPrinting.jl/stable/" rel="nofollow"><strong>Documentation</strong></a>.</p>
</article></div>