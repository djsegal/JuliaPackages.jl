<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bgzfstreams" class="anchor" aria-hidden="true" href="#bgzfstreams"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BGZFStreams</h1>
<p dir="auto"><a href="https://github.com/BioJulia/BGZFStreams.jl/actions/workflows/UnitTests.yml"><img src="https://github.com/BioJulia/BGZFStreams.jl/actions/workflows/UnitTests.yml/badge.svg?branch=master" alt="Unit Tests" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/BioJulia/BGZFStreams.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/63635be0c20ef82321e34eb47832094dc401d0660f8d38aac586dee9488719fb/687474703a2f2f636f6465636f762e696f2f6769746875622f42696f4a756c69612f42475a4653747265616d732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/BioJulia/BGZFStreams.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://github.com/BioJulia/BGZFStreams.jl/actions/workflows/Downstream.yml"><img src="https://github.com/BioJulia/BGZFStreams.jl/actions/workflows/Downstream.yml/badge.svg" alt="Downstream" style="max-width: 100%;"></a></p>
<p dir="auto">BGZF is a compression format that supports random access using <em>virtual file offsets</em>.</p>
<p dir="auto">See the SAM/BAM file format specs for the details of BGZF: <a href="https://samtools.github.io/hts-specs/SAMv1.pdf" rel="nofollow">https://samtools.github.io/hts-specs/SAMv1.pdf</a>.</p>
<h2 dir="auto"><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synopsis</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BGZFStreams

# The first argument is a filename or an IO object (e.g. IOStream).
stream = BGZFStream(&quot;data.bgz&quot;)

# BGZFStream is a subtype of IO and works like a usual IO object.
while !eof(stream)
    byte = read(stream, UInt8)
    # do something...
end

# BGZFStream is also seekable with a VirtualOffset.
seek(stream, VirtualOffset(0, 2))

# The current virtual file offset is available.
virtualoffset(stream)

close(stream)"><pre><span class="pl-k">using</span> BGZFStreams

<span class="pl-c"><span class="pl-c">#</span> The first argument is a filename or an IO object (e.g. IOStream).</span>
stream <span class="pl-k">=</span> <span class="pl-c1">BGZFStream</span>(<span class="pl-s"><span class="pl-pds">"</span>data.bgz<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> BGZFStream is a subtype of IO and works like a usual IO object.</span>
<span class="pl-k">while</span> <span class="pl-k">!</span><span class="pl-c1">eof</span>(stream)
    byte <span class="pl-k">=</span> <span class="pl-c1">read</span>(stream, UInt8)
    <span class="pl-c"><span class="pl-c">#</span> do something...</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> BGZFStream is also seekable with a VirtualOffset.</span>
<span class="pl-c1">seek</span>(stream, <span class="pl-c1">VirtualOffset</span>(<span class="pl-c1">0</span>, <span class="pl-c1">2</span>))

<span class="pl-c"><span class="pl-c">#</span> The current virtual file offset is available.</span>
<span class="pl-c1">virtualoffset</span>(stream)

<span class="pl-c1">close</span>(stream)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The BGZFStreams.jl package exports three types and a function to the package user:</p>
<ul dir="auto">
<li>Types:
<ul dir="auto">
<li><code>BGZFStream</code>: an <code>IO</code> stream of the BGZF file format</li>
<li><code>VirtualOffset</code>: data offset in a BGZF file</li>
<li><code>BGZFDataError</code>: an error type thrown when reading a malformed byte stream</li>
</ul>
</li>
<li>Function:
<ul dir="auto">
<li><code>virtualoffset(stream)</code>: returns the current virtual file offset of <code>stream</code></li>
</ul>
</li>
</ul>
<p dir="auto">The <code>BGZFStream</code> type wraps an underlying <code>IO</code> object and transparently inflate
(for reading) or deflate (for writing) data. Since it is a subtype of <code>IO</code>, an
instance of it behaves like other <code>IO</code> objects, but the <code>seek</code> method takes a
virtual offset instead of a normal file offset as its second argument.</p>
<p dir="auto">The <code>VirtualOffset</code> type represents a 64-bit virtual file offset as described in
the specification of the SAM file format. That is, the most significant 48-bit
integer of a virtual offset is a byte offset to the BGZF file to the beginning
position of a BGZF block and the least significant 16-bit integer is a byte
offset to the uncompressed byte(s).</p>
<p dir="auto">The <code>BGZFDataError</code> type is a subtype of <code>Exception</code> and used to throw an
exception when invalid data are read.</p>
<p dir="auto">The <code>virtualoffset(stream::BGZFStream)</code> returns the current virtual file offset.
More specifically, it returns the virtual offset of the next reading byte while
reading and the next writing byte while writing.</p>
<h2 dir="auto"><a id="user-content-parallel-processing" class="anchor" aria-hidden="true" href="#parallel-processing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parallel Processing</h2>
<p dir="auto">A major bottleneck of processing a BGZF file is the inflation and deflation
process. The throughput of reading data is ~100 MiB/s, which is quite slower
than that of raw reading from a file. In order to alleviate this problem, this
package supports parallelized inflation when reading compressed data. This
requires the support of multi-threading introduced in Julia 0.5. The
<code>JULIA_NUM_THREADS</code> environmental variable sets the number of threads used for
processing.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="bash-3.2$ JULIA_NUM_THREADS=2 julia -q
julia&gt; using Base.Threads

julia&gt; nthreads()
2"><pre class="notranslate"><code>bash-3.2$ JULIA_NUM_THREADS=2 julia -q
julia&gt; using Base.Threads

julia&gt; nthreads()
2
</code></pre></div>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">We appreciate <a href="https://github.com/BioJulia/BGZFStreams.jl/graphs/contributors">contributions</a> from users including reporting bugs, fixing issues, improving performance and adding new features.</p>
<p dir="auto">Take a look at the <a href="https://github.com/BioJulia/Contributing">contributing files</a> detailed contributor and maintainer guidelines, and code of conduct.</p>
<h3 dir="auto"><a id="user-content-financial-contributions" class="anchor" aria-hidden="true" href="#financial-contributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Financial contributions</h3>
<p dir="auto">We also welcome financial contributions in full transparency on our <a href="https://opencollective.com/biojulia" rel="nofollow">open collective</a>.
Anyone can file an expense.
If the expense makes sense for the development the core contributors and the person who filed the expense will be reimbursed.</p>
<h2 dir="auto"><a id="user-content-backers--sponsors" class="anchor" aria-hidden="true" href="#backers--sponsors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Backers &amp; Sponsors</h2>
<p dir="auto">Thank you to all our backers and sponsors!</p>
<p dir="auto">Love our work and community? <a href="https://opencollective.com/biojulia#backer" rel="nofollow">Become a backer</a>.</p>
<p dir="auto"><a href="https://opencollective.com/biojulia#backers" rel="nofollow"><img src="https://camo.githubusercontent.com/4dcaf7b950c3bb3b1791da0c2d9f018726d5442e4b3da8887c31acca9f6f7ea7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f6261636b6572732e7376673f77696474683d383930" alt="backers" data-canonical-src="https://opencollective.com/biojulia/backers.svg?width=890" style="max-width: 100%;"></a></p>
<p dir="auto">Does your company use BioJulia?
Help keep BioJulia feature rich and healthy by <a href="https://opencollective.com/biojulia#sponsor" rel="nofollow">sponsoring the project</a>.
Your logo will show up here with a link to your website.</p>
<p dir="auto"><a href="https://opencollective.com/biojulia/sponsor/0/website" rel="nofollow"><img src="https://camo.githubusercontent.com/3f62a6b32833c89cfc3430604ef39a18474889c64ba6aa54a48528c59860dcc5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f302f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/0/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/1/website" rel="nofollow"><img src="https://camo.githubusercontent.com/ff6260cf6d377052a615cbcd8b27942bf1602ad394a52274028bdd2bd1cf8218/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f312f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/1/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/2/website" rel="nofollow"><img src="https://camo.githubusercontent.com/a4777b0bff6ae887aee2b9cb8e1c4429f46567eca6cfafc3f2ae186dc2c93f34/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f322f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/2/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/3/website" rel="nofollow"><img src="https://camo.githubusercontent.com/9d247e7c54971ecadab918b5eb3350bfab260fc4eb3b691a44bd32df8f2cb0d5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f332f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/3/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/4/website" rel="nofollow"><img src="https://camo.githubusercontent.com/0380cd29aa9290ff4ac9409f3661a1d45d5230124bc92fb0ae68f5260dde7c28/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f342f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/4/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/5/website" rel="nofollow"><img src="https://camo.githubusercontent.com/05891a6cf78f2ce88f22600e62bfe92d5c3f62354fd04a212a5d9dcfd0123af1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f352f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/5/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/6/website" rel="nofollow"><img src="https://camo.githubusercontent.com/f73b15c5eb51996b25c0d237786e54661f4cfedd2fdff4ff433d1f65b189c43f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f362f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/6/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/7/website" rel="nofollow"><img src="https://camo.githubusercontent.com/50aa20de7e5611653cdee1ae7b1898769d57d5c04488655f75ef668188434cef/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f372f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/7/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/8/website" rel="nofollow"><img src="https://camo.githubusercontent.com/b8c5596327dd1477f2a95ae61329d75fb3b4b3e82136873b822a2f46cc247642/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f382f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/8/avatar.svg" style="max-width: 100%;"></a>
<a href="https://opencollective.com/biojulia/sponsor/9/website" rel="nofollow"><img src="https://camo.githubusercontent.com/0e9952d935249dcf948c19b71e7e35ed7bf6d61880c65a9e103a8a4b1ab31762/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f62696f6a756c69612f73706f6e736f722f392f6176617461722e737667" alt="" data-canonical-src="https://opencollective.com/biojulia/sponsor/9/avatar.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Questions?</h2>
<p dir="auto">If you have a question about contributing or using BioJulia software, come on over and chat to us on <a href="https://julialang.org/slack/" rel="nofollow">the Julia Slack workspace</a>, or you can try the <a href="https://discourse.julialang.org/c/domain/bio" rel="nofollow">Bio category of the Julia discourse site</a>.</p>
</article></div>