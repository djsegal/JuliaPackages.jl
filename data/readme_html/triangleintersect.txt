<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/JuliaGeometry/TriangleIntersect.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/598bbb023b601047106a02ce65f612b2f597d542/68747470733a2f2f7472617669732d63692e6f72672f4a756c696147656f6d657472792f547269616e676c65496e746572736563742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGeometry/TriangleIntersect.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/JuliaGeometry/TriangleIntersect.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1b09b83a228148e1784c9c25c4bfc21a04b50d48/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c696147656f6d657472792f547269616e676c65496e746572736563742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaGeometry/TriangleIntersect.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-triangleintersect" class="anchor" aria-hidden="true" href="#triangleintersect"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TriangleIntersect</h1>
<p>Find if and where a light ray intersects a triangle (in 3D of course). This is optimized for speed. See nice general explanation <a href="http://geomalgorithms.com/a06-_intersect-2.html" rel="nofollow">here</a></p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>git://github.com/JuliaGeometry/TriangleIntersect.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<p>#Usage
Import and create some points:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> TriangleIntersect
a <span class="pl-k">=</span> <span class="pl-c1">Point</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)
b <span class="pl-k">=</span> <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)
c <span class="pl-k">=</span> <span class="pl-c1">Point</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)</pre></div>
<p>Create a triangle</p>
<div class="highlight highlight-source-julia"><pre>t <span class="pl-k">=</span> <span class="pl-c1">Triangle</span>(b,a,c)</pre></div>
<p>Cast a ray:</p>
<div class="highlight highlight-source-julia"><pre>r <span class="pl-k">=</span> <span class="pl-c1">Ray</span>(<span class="pl-c1">Point</span>(<span class="pl-c1">0.1</span>,<span class="pl-c1">0.1</span>,<span class="pl-c1">1</span>), <span class="pl-c1">Point</span>(<span class="pl-c1">0.1</span>,<span class="pl-c1">0.1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>))</pre></div>
<p>Check the intersection:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">intersect</span>(r, t) <span class="pl-c"><span class="pl-c">#</span> -&gt; Intersection(Point(0.2,0.2,0.0),1.02,true)</span></pre></div>
<p>The <code>Intersection</code> type is simply defined as:</p>
<div class="highlight highlight-source-julia"><pre>immutable Intersection
    ip<span class="pl-k">::</span><span class="pl-c1">Point</span> <span class="pl-c"><span class="pl-c">#</span> intersecting point</span>
    id<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-c"><span class="pl-c">#</span> intersecting distance</span>
    is_intersection<span class="pl-k">::</span><span class="pl-c1">Bool</span>
<span class="pl-k">end</span></pre></div>
</article></div>