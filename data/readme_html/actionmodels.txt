<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-actionmodels" class="anchor" aria-hidden="true" href="#actionmodels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ActionModels</h1>
<p dir="auto"><a href="https://ilabcode.github.io/ActionModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/ilabcode/ActionModels.jl/actions/workflows/CI_full.yml?query=branch%3Amain"><img src="https://github.com/ilabcode/ActionModels.jl/actions/workflows/CI_full.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ilabcode/ActionModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6253c66443a4385f3338b019856a171ea9054de8078499b3f2fb2a9d0b07241c/68747470733a2f2f636f6465636f762e696f2f67682f696c6162636f64652f416374696f6e4d6f64656c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d4e564669695079644641" alt="Coverage" data-canonical-src="https://codecov.io/gh/ilabcode/ActionModels.jl/branch/main/graph/badge.svg?token=NVFiiPydFA" style="max-width: 100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width: 100%;"></a>
<a href="https://www.gnu.org/licenses/" rel="nofollow"><img src="https://camo.githubusercontent.com/478f359f175bfa2d4f7a49b820f0db6f4ac617fb05402c01c5ed946538d11c54/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d474e552d79656c6c6f77" alt="License: GNU" data-canonical-src="https://img.shields.io/badge/License-GNU-yellow" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-welcome-to-the-actionmodelsjl-package" class="anchor" aria-hidden="true" href="#welcome-to-the-actionmodelsjl-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Welcome to the ActionModels.jl package!</h2>
<p dir="auto">ActionModels.jl is a powerfull and novel package for computational modelling of behavior and cognition. The package is developed with a intention to make computaitonal modelling intuitive, fast and easily adaptive to your experimental and simulation needs.</p>
<p dir="auto">With ActionModels.jl you can define a fully customizable behavioral model and easily fit them to experimental data and used for computational modelling.</p>
<p dir="auto">we provide a consice introduction to this framework for computational modelling of behvior and cognition and its accompanying terminology.</p>
<p dir="auto">After this introduction, you will be presented with a detailed step-by-step guide on how to use ActionModels.jl to make your computational model runway-ready.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<p dir="auto">Defning a premade agent</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using ActionModels"><pre lang="@example" class="notranslate"><code>using ActionModels
</code></pre></div>
<p dir="auto">Find premade agent, and define agent with default parameters</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="premade_agent(&quot;help&quot;)

agent = premade_agent(&quot;premade_binary_rw_softmax&quot;)"><pre lang="@example" class="notranslate"><code>premade_agent("help")

agent = premade_agent("premade_binary_rw_softmax")
</code></pre></div>
<p dir="auto">Set inputs and give inputs to agent</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="inputs = [1,0,0,0,1,1,1,1,0,1,0,1,0,1,1]
actions = give_inputs!(agent,inputs)

using StatsPlots
plot_trajectory(agent, &quot;action_probability&quot;)"><pre lang="@example" class="notranslate"><code>inputs = [1,0,0,0,1,1,1,1,0,1,0,1,0,1,1]
actions = give_inputs!(agent,inputs)

using StatsPlots
plot_trajectory(agent, "action_probability")
</code></pre></div>
<p dir="auto">Fit learning rate. Start by setting prior</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Distributions
priors = Dict(&quot;learning_rate&quot; =&gt; Normal(0.5, 0.5))"><pre lang="@example" class="notranslate"><code>using Distributions
priors = Dict("learning_rate" =&gt; Normal(0.5, 0.5))
</code></pre></div>
<p dir="auto">Run model</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="chains = fit_model(agent, priors, inputs, actions, n_chains = 1, n_iterations = 10)"><pre lang="@example" class="notranslate"><code>chains = fit_model(agent, priors, inputs, actions, n_chains = 1, n_iterations = 10)
</code></pre></div>
<p dir="auto">Plot prior and posterior</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="plot_parameter_distribution(chains,priors)"><pre lang="@example" class="notranslate"><code>plot_parameter_distribution(chains,priors)
</code></pre></div>
<p dir="auto">Get posteriors from chains</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="get_posteriors(chains)"><pre lang="@example" class="notranslate"><code>get_posteriors(chains)
</code></pre></div>
</article></div>