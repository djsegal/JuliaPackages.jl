<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-randommatrixdistributionsjl" class="anchor" aria-hidden="true" href="#randommatrixdistributionsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RandomMatrixDistributions.jl</h1>
<p dir="auto"><a href="https://damian-t-p.github.io/RandomMatrixDistributions.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/damian-t-p/RandomMatrixDistributions.jl/actions?query=workflow"><img src="https://github.com/damian-t-p/RandomMatrixDistributions.jl/actions/workflows/ci.yml/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/damian-t-p/RandomMatrixDistributions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4c82105f29984b230b5909e9c2572c26a2f14e26f493683bfd3040c760ec3930/68747470733a2f2f636f6465636f762e696f2f67682f64616d69616e2d742d702f52616e646f6d4d6174726978446973747269627574696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/damian-t-p/RandomMatrixDistributions.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia package containing <code>Distributions.jl</code>-type specifications for various distributions arising from random matrix theory.</p>
<h1 dir="auto"><a id="user-content-currently-implemented-distributions" class="anchor" aria-hidden="true" href="#currently-implemented-distributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Currently implemented distributions</h1>
<h2 dir="auto"><a id="user-content-matrix-distributions" class="anchor" aria-hidden="true" href="#matrix-distributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Matrix distributions</h2>
<ul dir="auto">
<li>
<p dir="auto"><code>SpikedWigner(beta, n, spikes; scaled=false)</code>: Wigner distribution with an added spike matrix.</p>
<p dir="auto"><code>spikes</code> is an array <code>[s1, ..., sr]</code> such that the diagonal matrix with diagonal sqrt(n)(<em>s</em><sub>1</sub>, ... , <em>s</em><sub>r</sub>, 0, ..., 0) is added to a white Wigner matrix.</p>
</li>
<li>
<p dir="auto"><code>SpikedWishart(beta, n, p, spikes; scaled=false)</code>: Wishart distribution with spiked covariance [1].</p>
<p dir="auto"><code>spikes</code> is an array <code>[s1, ..., sr]</code> such that the Wishart covariance is diagonal with entries  (1 + <em>s</em><sub>1</sub>, ... , 1 + <em>s</em><sub>r</sub>, 1, ..., 1).</p>
</li>
<li>
<p dir="auto"><code>Jacobi(beta, n1, n2, p)</code>: Random matrices of the form <em>E</em>(<em>E</em>+<em>H</em>)<sup>-1</sup>. Here <em>E</em> and <em>H</em> are (<em>n</em><sub>1</sub>, <em>p</em>) and (<em>n</em><sub>2</sub>, <em>p</em>) white Wisharts respectively. [2]</p>
</li>
</ul>
<p dir="auto">Specifying <code>scaled=true</code> in <code>SpikedWigner</code> and <code>SpikedWishart</code> scales the matrices by an appropriate function of <em>n</em> so that the corresponding bulks converge to the semicircle and Marchenko-Pastur laws respectively.
Due to the inverse in the definition of the Jacobi ensemble, no scaling is necessary for <code>Jacobi</code>,</p>
<p dir="auto">Normal entries in Gaussian ensembles are scaled to have variance 1.</p>
<h2 dir="auto"><a id="user-content-limiting-eigenvalue-distributions" class="anchor" aria-hidden="true" href="#limiting-eigenvalue-distributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limiting eigenvalue distributions</h2>
<p dir="auto">The package implements the following types:</p>
<ul dir="auto">
<li><code>MarchenkoPastur(gamma)</code>: Limiting empirical spectral density of a real white Wishart matrix with <em>p</em>/<em>n</em> -&gt; <em>gamma</em> as long as 0 &lt; <em>gamma</em> &lt; 1.</li>
<li><code>TracyWidom(beta)</code>: Limiting distribution of the maximum eigenvalue of many random matrix ensembles with Dyson parameter beta [3].</li>
<li><code>Wachter(gamma1, gamma2)</code>: Limiting empirical spectral density of <em>S</em><sub>1</sub> <em>S</em><sub>2</sub><sup>-1</sup>. Here <em>S</em><sub>1</sub> and <em>S</em><sub>2</sub> are sample covariance matrices with <em>n</em><sub>1</sub>/<em>p</em> -&gt; <em>gamma</em><sub>1</sub> and <em>n</em><sub>2</sub>/<em>p</em> -&gt; <em>gamma</em><sub>2</sub>.</li>
</ul>
<p dir="auto">It also implements the following functions for computing eigenvalue distributions:</p>
<ul dir="auto">
<li><code>supercrit_dist(E)</code>: Approximate distribution of the supercritical eigenvalues of a matrix drawn from the ensemble E.
Currently implemented for Wishart with beta = 1 [4], beta = 2 [5] and Wigner with beta = 1 [6], beta = 2 [7]</li>
</ul>
<h1 dir="auto"><a id="user-content-efficient-samplers" class="anchor" aria-hidden="true" href="#efficient-samplers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Efficient samplers</h1>
<p dir="auto">The function <code>randeigvals</code> efficiently samples from the distribution of eigenvalues of the implemented random matrix distributions. It does this by generating a tridiagonal or banded matrix with eigenvalue equal in distribution to the specified model.</p>
<h1 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h1>
<p dir="auto">See the documentation.</p>
<h1 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h1>
<p dir="auto">[1] Dumitriu &amp; Edelman, "Matrix Models for beta ensembles," Journal of Mathematical Physics, 11 (2002).</p>
<p dir="auto">[2] Killip &amp; Nenciu, "Matrix Models for Circular Ensembles," International Mathematics Research Notices, 50 (2004).</p>
<p dir="auto">[3] Bornemann, "On the numerical evaluation of distributions in random matrix theory: a review," (2010).</p>
<p dir="auto">[4] Baik, Ben Arous &amp; Peche, "Phase transition of the largest eigenvalue for nonnull complex sample covariance matrices," The Annals of Probability, 33 (2005).</p>
<p dir="auto">[5] Paul, "Asymptotics of sample eigenstructure for a large dimensional spiked covariance model," Statistica Sinica, 17 (2007).</p>
<p dir="auto">[6] Feral, Peche, "The largest eigenvalue of rank one deformation of large wigner matrices," Commun. Math. Phys., 272 (2007).</p>
<p dir="auto">[7] Peche, "The largest eigenvalue of small rank perturbations of Hermitian random matrices," Probability Theory and Related Fields, 134 (2006).</p>
</article></div>