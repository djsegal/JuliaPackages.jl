<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-indirectimports" class="anchor" aria-hidden="true" href="#indirectimports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IndirectImports</h1>
<p dir="auto"><a href="https://tkf.github.io/IndirectImports.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://tkf.github.io/IndirectImports.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/74e3841d36c989edacfe24bf1cd75607bbf4d6ee591e1886d8550400224f8793/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f746b662f496e646972656374496d706f7274732e6a6c2f76302e312e322e737667"><img src="https://camo.githubusercontent.com/74e3841d36c989edacfe24bf1cd75607bbf4d6ee591e1886d8550400224f8793/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f746b662f496e646972656374496d706f7274732e6a6c2f76302e312e322e737667" alt="GitHub commits since tagged version" data-canonical-src="https://img.shields.io/github/commits-since/tkf/IndirectImports.jl/v0.1.2.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.com/tkf/IndirectImports.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/098b9a991a14ddf6d7e7aa8372b4cb0bdf3b322ad2a9ca8c6255e6cb279917ec/68747470733a2f2f7472617669732d63692e636f6d2f746b662f496e646972656374496d706f7274732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/tkf/IndirectImports.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/tkf/IndirectImports.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/380c392f8672a4621d7af1d1a3736ec1c20b4b43bcfa8e9d47cb0aa52e8db8f2/68747470733a2f2f636f6465636f762e696f2f67682f746b662f496e646972656374496d706f7274732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/tkf/IndirectImports.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/tkf/IndirectImports.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c5c63a9f5d35f97d2935eb6b4b5f0e432ecc273e591044ddcb1680ddec5144ab/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f746b662f496e646972656374496d706f7274732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/tkf/IndirectImports.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">IndirectImports.jl lets Julia packages call and extend (a special type
of) functions without importing the package defining them.  This is
useful for managing optional dependencies.</p>
<ul dir="auto">
<li>
<p dir="auto">Compared to Requires.jl, IndirectImports.jl's approach is more
static and there is no run-time <code>eval</code> hence more compiler friendly.
However, unlike Requires.jl, both upstream and downstream packages
need to rely on IndirectImports.jl API.</p>
</li>
<li>
<p dir="auto">Compared to "XBase.jl" approach, IndirectImports.jl is more flexible
in the sense that you don't need to create an extra package and keep
it in sync with the "implementation" package(s).  However, unlike
"XBase.jl" approach, IndirectImports.jl is usable only for
functions, not for types.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# MyPlot/src/MyPlot.jl
module MyPlot
    using IndirectImports

    @indirect function plot end  # declare an &quot;indirect function&quot;

    @indirect function plot(x)  # optional
        # generic implementation
    end
end

# MyDataFrames/src/MyDataFrames.jl
module MyDataFrames
    using IndirectImports

    @indirect import MyPlot  # this does not actually load MyPlot.jl

    # you can extend indirect functions
    @indirect function MyPlot.plot(df::MyDataFrame)
        # you can call indirect functions
        MyPlot.plot(df.columns)
    end
end"><pre><span class="pl-c"><span class="pl-c">#</span> MyPlot/src/MyPlot.jl</span>
<span class="pl-k">module</span> MyPlot
    <span class="pl-k">using</span> IndirectImports

    <span class="pl-c1">@indirect</span> <span class="pl-k">function</span> plot <span class="pl-k">end</span>  <span class="pl-c"><span class="pl-c">#</span> declare an "indirect function"</span>

    <span class="pl-c1">@indirect</span> <span class="pl-k">function</span> <span class="pl-en">plot</span>(x)  <span class="pl-c"><span class="pl-c">#</span> optional</span>
        <span class="pl-c"><span class="pl-c">#</span> generic implementation</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> MyDataFrames/src/MyDataFrames.jl</span>
<span class="pl-k">module</span> MyDataFrames
    <span class="pl-k">using</span> IndirectImports

    <span class="pl-c1">@indirect</span> <span class="pl-k">import</span> MyPlot  <span class="pl-c"><span class="pl-c">#</span> this does not actually load MyPlot.jl</span>

    <span class="pl-c"><span class="pl-c">#</span> you can extend indirect functions</span>
    <span class="pl-c1">@indirect</span> <span class="pl-k">function</span> MyPlot<span class="pl-k">.</span><span class="pl-en">plot</span>(df<span class="pl-k">::</span><span class="pl-c1">MyDataFrame</span>)
        <span class="pl-c"><span class="pl-c">#</span> you can call indirect functions</span>
        MyPlot<span class="pl-k">.</span><span class="pl-c1">plot</span>(df<span class="pl-k">.</span>columns)
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">You can install it with <code>]add IndirectImports</code>.  See more details in
the <a href="https://tkf.github.io/IndirectImports.jl/dev/" rel="nofollow">documentation</a>.</p>
</article></div>