<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cthybjl-continous-time-hybridization-expansion-quantum-monte-carlo-in-julia" class="anchor" aria-hidden="true" href="#cthybjl-continous-time-hybridization-expansion-quantum-monte-carlo-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>cthyb.jl</code> Continous time hybridization expansion quantum Monte Carlo in Julia</h1>
<p dir="auto">The continous time hybridization expansion quantum Monte Carlo method [1] is a corner stone algorithm for solving quantum impurity problems.</p>
<p dir="auto">This repository contains a minimal implementation of the algorithm implemented in the Julia programming language [2]</p>
<p dir="auto">[1] <a href="http://dx.doi.org/10.1103/RevModPhys.83.349" rel="nofollow">http://dx.doi.org/10.1103/RevModPhys.83.349</a></p>
<p dir="auto">[2] <a href="https://julialang.org/" rel="nofollow">https://julialang.org/</a></p>
</article></div>