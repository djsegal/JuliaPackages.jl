<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2 dir="auto"><a id="user-content-tspsubgradient" class="anchor" aria-hidden="true" href="#tspsubgradient"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TSPSubgradient</h2>
<p dir="auto">This repository contains code to calculate a one-tree approximation to the TSP.</p>
<h3 dir="auto"><a id="user-content-results" class="anchor" aria-hidden="true" href="#results"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Results</h3>
<h4 dir="auto"><a id="user-content-cost" class="anchor" aria-hidden="true" href="#cost"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cost</h4>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./costs.png"><img src="./costs.png" alt="cost" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-lagrange-multipliers" class="anchor" aria-hidden="true" href="#lagrange-multipliers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lagrange multipliers</h4>
<p dir="auto">History of the training parameters:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./lagrange_multipliers.png"><img src="./lagrange_multipliers.png" alt="lagrange multipliers" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-final-graph" class="anchor" aria-hidden="true" href="#final-graph"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Final graph</h4>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./ot290.svg"><img src="./ot290.svg" alt="Iteration 290" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-code" class="anchor" aria-hidden="true" href="#code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Code</h3>
<p dir="auto">This is the current example for evalution (german_cities.jl):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TSPSubgradient, LightGraphs, GraphLayout, Plots

# distance matrix between cities (symmetric, undirected)
distmx = Float64[
    0   91  80  259 70  121;
    91  0   77  175 27  84;
    80  77  0   232 47  29;
    259 175 232 0   189 236;
    70  27  47  189 0   55;
    121 84  29  236 55  0;
]


N = size(distmx)[1]

root = 6

g = Graph(N)

for i in 1:N
    for j in 1:N
        if i!=j
            add_edge!(g, i, j)
        end
    end
end

ot = one_tree(g, distmx, 6)

iters = 300

costs, ots, lambdas = tsp_subgradient(g, distmx, iters, 6, tau=0.5)


# plot one tree
for k in 10:10:iters-1
    am = full(adjacency_matrix(ots[k]))
    loc_x, loc_y = layout_spring_adj(am)
    draw_layout_adj(am, loc_x, loc_y, labels=Array(1:6), filename=string(&quot;ot&quot;,k,&quot;.svg&quot;))
end


using Plots
plotly()

plot(costs, linewidth=2,title=&quot;Cost&quot;)

plot(lambdas,linewidth=2,title=&quot;Lagrange multipliers&quot;)

"><pre><span class="pl-k">using</span> TSPSubgradient, LightGraphs, GraphLayout, Plots

<span class="pl-c"><span class="pl-c">#</span> distance matrix between cities (symmetric, undirected)</span>
distmx <span class="pl-k">=</span> Float64[
    <span class="pl-c1">0</span>   <span class="pl-c1">91</span>  <span class="pl-c1">80</span>  <span class="pl-c1">259</span> <span class="pl-c1">70</span>  <span class="pl-c1">121</span>;
    <span class="pl-c1">91</span>  <span class="pl-c1">0</span>   <span class="pl-c1">77</span>  <span class="pl-c1">175</span> <span class="pl-c1">27</span>  <span class="pl-c1">84</span>;
    <span class="pl-c1">80</span>  <span class="pl-c1">77</span>  <span class="pl-c1">0</span>   <span class="pl-c1">232</span> <span class="pl-c1">47</span>  <span class="pl-c1">29</span>;
    <span class="pl-c1">259</span> <span class="pl-c1">175</span> <span class="pl-c1">232</span> <span class="pl-c1">0</span>   <span class="pl-c1">189</span> <span class="pl-c1">236</span>;
    <span class="pl-c1">70</span>  <span class="pl-c1">27</span>  <span class="pl-c1">47</span>  <span class="pl-c1">189</span> <span class="pl-c1">0</span>   <span class="pl-c1">55</span>;
    <span class="pl-c1">121</span> <span class="pl-c1">84</span>  <span class="pl-c1">29</span>  <span class="pl-c1">236</span> <span class="pl-c1">55</span>  <span class="pl-c1">0</span>;
]


N <span class="pl-k">=</span> <span class="pl-c1">size</span>(distmx)[<span class="pl-c1">1</span>]

root <span class="pl-k">=</span> <span class="pl-c1">6</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(N)

<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>N
    <span class="pl-k">for</span> j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>N
        <span class="pl-k">if</span> i<span class="pl-k">!=</span>j
            <span class="pl-c1">add_edge!</span>(g, i, j)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

ot <span class="pl-k">=</span> <span class="pl-c1">one_tree</span>(g, distmx, <span class="pl-c1">6</span>)

iters <span class="pl-k">=</span> <span class="pl-c1">300</span>

costs, ots, lambdas <span class="pl-k">=</span> <span class="pl-c1">tsp_subgradient</span>(g, distmx, iters, <span class="pl-c1">6</span>, tau<span class="pl-k">=</span><span class="pl-c1">0.5</span>)


<span class="pl-c"><span class="pl-c">#</span> plot one tree</span>
<span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span>iters<span class="pl-k">-</span><span class="pl-c1">1</span>
    am <span class="pl-k">=</span> <span class="pl-c1">full</span>(<span class="pl-c1">adjacency_matrix</span>(ots[k]))
    loc_x, loc_y <span class="pl-k">=</span> <span class="pl-c1">layout_spring_adj</span>(am)
    <span class="pl-c1">draw_layout_adj</span>(am, loc_x, loc_y, labels<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">6</span>), filename<span class="pl-k">=</span><span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span>ot<span class="pl-pds">"</span></span>,k,<span class="pl-s"><span class="pl-pds">"</span>.svg<span class="pl-pds">"</span></span>))
<span class="pl-k">end</span>


<span class="pl-k">using</span> Plots
<span class="pl-c1">plotly</span>()

<span class="pl-c1">plot</span>(costs, linewidth<span class="pl-k">=</span><span class="pl-c1">2</span>,title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Cost<span class="pl-pds">"</span></span>)

<span class="pl-c1">plot</span>(lambdas,linewidth<span class="pl-k">=</span><span class="pl-c1">2</span>,title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Lagrange multipliers<span class="pl-pds">"</span></span>)

</pre></div>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">Copyright (C) 2016 Christian Weilbach. Distributed under the MIT License.</p>
</article></div>