<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lightosmjl" class="anchor" aria-hidden="true" href="#lightosmjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LightOSM.jl</h1>
<p><strong><a href="https://github.com/DeloitteDigitalAPAC/LightOSM.jl"><code>LightOSM.jl</code></a></strong> is <strong><a href="https://julialang.org/" rel="nofollow">Julia</a></strong> package for downloading and analysing geospatial data from <strong><a href="https://wiki.openstreetmap.org/wiki/Main_Page" rel="nofollow">OpenStreetMap</a></strong> APIs (<strong><a href="https://nominatim.openstreetmap.org/ui/search.html" rel="nofollow">Nominatim</a></strong> and <strong><a href="https://overpass-api.de" rel="nofollow">Overpass</a></strong>), such as nodes, ways, relations and building polygons.</p>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h2>
<p><strong><a href="https://github.com/DeloitteDigitalAPAC/LightOSM.jl"><code>LightOSM.jl</code></a></strong> is inspired by the Python package <strong><a href="https://github.com/gboeing/osmnx">OSMnx</a></strong> for its interface and Overpass query logic. Graph analysis algorithms (connected components and shortest path) are based on <strong><a href="https://github.com/JuliaGraphs/LightGraphs.jl">LightGraphs.jl</a></strong> implementation, but adapted to account for turn restrictions and improve runtime performance.</p>
<p>Another honourable mention goes to an existing Julia package <strong><a href="https://github.com/pszufe/OpenStreetMapX.jl">OpenStreetMapX.jl</a></strong> as many learnings were taken to improve parsing of raw OpenStreetMap data.</p>
<h2><a id="user-content-key-features" class="anchor" aria-hidden="true" href="#key-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Key Features</h2>
<ul>
<li><code>Search</code>, <code>download</code> and <code>save</code> OpenSteetMap data in .osm, .xml or .json, using a place name, centroid point or bounding box</li>
<li>Parse OpenStreetMap <code>transport network</code> data such as motorway, cycleway or walkway</li>
<li>Parse OpenStreetMap <code>buildings</code> data into a format consistent with the <strong><a href="https://tools.ietf.org/html/rfc7946" rel="nofollow">GeoJSON</a></strong> standard, allowing for visualisation with libraries such as <strong><a href="https://github.com/visgl/deck.gl">deck.gl</a></strong></li>
<li>Calculate <code>shortest path</code> between two nodes using the Dijkstra or A* algorithm (based on LightGraphs.jl, but adapted for better performance and use cases such as <code>turn resrictions</code>)</li>
<li>Find <code>nearest nodes</code> from a query point using a K-D Tree data structure (implemented using <strong><a href="https://github.com/KristofferC/NearestNeighbors.jl">NearestNeighbors.jl</a></strong>)</li>
</ul>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>Documentation for the API can be found <strong><a href="https://deloittedigitalapac.github.io/LightOSM.jl/docs" rel="nofollow">here</a></strong>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>A comprehensive tutorial can be found found <strong><a href="https://deloittedigitalapac.github.io/LightOSM.jl/notebooks/tutorial" rel="nofollow">here</a></strong>.</p>
<h2><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarks</h2>
<p>Benchmark comparison for shortest path algorithms can be found <strong><a href="https://deloittedigitalapac.github.io/LightOSM.jl/notebooks/benchmarks" rel="nofollow">here</a></strong>.</p>
</article></div>