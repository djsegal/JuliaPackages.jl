<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-antsregistration" class="anchor" aria-hidden="true" href="#antsregistration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ANTsRegistration</h1>
<p><a href="https://travis-ci.org/timholy/ANTSRegistration.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/603241f95993a798b433c1e27edfd98ee854f327/68747470733a2f2f7472617669732d63692e6f72672f74696d686f6c792f414e5453526567697374726174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/timholy/ANTSRegistration.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/timholy/ANTSRegistration.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6fb98d82ea3465ec9fbee81cbbc5fa60e126538c/687474703a2f2f636f6465636f762e696f2f6769746875622f74696d686f6c792f414e5453526567697374726174696f6e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/timholy/ANTSRegistration.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This provides a Julia wrapper around the
<a href="https://stnava.github.io/ANTs/" rel="nofollow">Advanced Normalization Tools</a> image
registration and motion correction suite.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>timholy<span class="pl-k">/</span>ANTsRegistration<span class="pl-k">.</span>jl</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-image-data-and-file-format" class="anchor" aria-hidden="true" href="#image-data-and-file-format"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Image data and file format</h3>
<p>If you are passing the data via filenames, ensure that you have stored
your images in an ITK-readable
format. <a href="https://github.com/JuliaIO/NRRD.jl">NRRD</a> is recommended. For
those performing acquisition with Imagine, you can write out an
<a href="https://github.com/timholy/ImagineFormat.jl#converting-to-nrrd">NRRD header</a>.</p>
<p>Unfortunately, <a href="http://teem.sourceforge.net/nrrd/format.html" rel="nofollow">the NRRD format</a>
lacks a file-validator, and a few aspects of the standard description seem
to leave room for interpretation. If you encounter bugs, it is possible that
Julia and ITK differ with respect to the implementation of the NRRD header.
Try copying the command and running it the shell prompt, then report the error
<a href="https://github.com/JuliaIO/NRRD.jl/issues/new">here</a>.</p>
<h3><a id="user-content-performing-registration" class="anchor" aria-hidden="true" href="#performing-registration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performing registration</h3>
<h4><a id="user-content-stages" class="anchor" aria-hidden="true" href="#stages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Stages</h4>
<p>The process of registering images can be broken down into stages, and multiple stages can be cascaded together. A stage is specified as follows:</p>
<div class="highlight highlight-source-julia"><pre>stage <span class="pl-k">=</span> <span class="pl-c1">Stage</span>(fixedimg, transform, metric<span class="pl-k">=</span><span class="pl-c1">MI</span>(), shrink<span class="pl-k">=</span>(<span class="pl-c1">8</span>,<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>), smooth<span class="pl-k">=</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>), iterations<span class="pl-k">=</span>(<span class="pl-c1">1000</span>,<span class="pl-c1">500</span>,<span class="pl-c1">250</span>,<span class="pl-c1">5</span>))</pre></div>
<p>The transform might be one of the following:</p>
<div class="highlight highlight-source-julia"><pre>transform <span class="pl-k">=</span> <span class="pl-c1">Global</span>(<span class="pl-s"><span class="pl-pds">"</span>Rigid<span class="pl-pds">"</span></span>)
transform <span class="pl-k">=</span> <span class="pl-c1">Global</span>(<span class="pl-s"><span class="pl-pds">"</span>Affine<span class="pl-pds">"</span></span>)
transform <span class="pl-k">=</span> <span class="pl-c1">Syn</span>()</pre></div>
<p>The last one is for a diffeomorphism (warping) registration.</p>
<p>This particular <code>stage</code> uses the <code>MI</code> metric for comparing the two
images.  <code>MI</code> is short for
<a href="https://en.wikipedia.org/wiki/Mutual_information" rel="nofollow">mutual information</a>,
a generalization of the notion of cross-correlation.  This can be a
good choice particularly when the images differ in ways other than
just a spatial transformation, for example when they may be collected
by different imaging modalities or exhibit intensity differences due
to calcium transients. (With <code>MI</code> you can optionally specify various
parameters such as the number of histogram bins.) Alternatively you
can use <code>MeanSquares</code> (where the images are compared based on their
mean-squared-difference) or <code>CC</code> (which stands for neighborhood cross
correlation).</p>
<p>Finally, the last arguments in the example above indicate that we want
to use a 4-level registration. For the first (coarsest) level, the
image will be shrunk by a factor of 8, smoothed over a 3-pixel radius,
and then aligned, allowing the parameters to be tweaked up to 1000
times when trying to minimize the metric. Choosing to shrink can
improve performance, because small image pairs require fewer pixelwise
comparisons than large images, as long as you don't shrink so much
that features useful for alignment are eliminated.  Likewise,
smoothing can help find a good minimum by increasing the size of the
"attraction basin," as long as you don't blur out sharp features that
actually aid alignment.</p>
<p>Once the rigid transformation has been found for this coarsest level,
it will be used to initialize the transformation for the next
level. The final level uses a <code>shrink</code> of 1 (meaning to use the images
at their provided size), a <code>smooth</code> of 0 (meaning no smoothing), and 5
iterations. This will ensure that the transformation doesn't miss
opportunities for sub-pixel alignment at the finest scale.</p>
<p>All parameters after <code>transform</code> have default values, so you only need
to assign them if you need to control them more precisely.</p>
<p><strong>Note on physical units</strong>: if your images have anisotropic resolution,
you should strongly consider using physical units for your smoothing.
For example,</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Unitful<span class="pl-k">:</span> Î¼m
smooth<span class="pl-k">=</span>(<span class="pl-c1">50</span>Î¼m,<span class="pl-c1">5</span>Î¼m)</pre></div>
<p>would be appropriate for a two-iteration stage.</p>
<h4><a id="user-content-top-level-api" class="anchor" aria-hidden="true" href="#top-level-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Top-level API</h4>
<p>To register the single image <code>moving</code> to the single image <code>fixed</code>, use</p>
<div class="highlight highlight-source-julia"><pre>imgw <span class="pl-k">=</span> <span class="pl-c1">register</span>(fixed, moving, pipeline; kwargs<span class="pl-k">...</span>)</pre></div>
<p>where <code>pipeline</code> is a single <code>Stage</code> or a vector of stages. For
example, you can begin with an affine registration followed by a
deformable registration:</p>
<div class="highlight highlight-source-julia"><pre>stageaff <span class="pl-k">=</span> <span class="pl-c1">Stage</span>(fixed, <span class="pl-c1">Global</span>(<span class="pl-s"><span class="pl-pds">"</span>Affine<span class="pl-pds">"</span></span>))
stagesyn <span class="pl-k">=</span> <span class="pl-c1">Stage</span>(fixed, <span class="pl-c1">Syn</span>())
imgw <span class="pl-k">=</span> <span class="pl-c1">register</span>(fixed, moving, [stageaff,stagesyn]; kwargs<span class="pl-k">...</span>)</pre></div>
<p>This choice will align the images as well as possible (given the
default parameters) using a pure-affine transformation, and then
introduce warping where needed to improve the alignment.</p>
<p>If instead you'd like to correct for motion in an image sequence, consider</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">motioncorr</span>((infofilename, warpedfilename), fixed, movingfilename, pipeline)</pre></div>
<p>Here you represent the moving image sequence via its filename. The
first argument stores the names of the files to which the data should
be written. Of course, you can alternatively call <code>register</code> iteratively
for each image in the series.</p>
<p>For more detailed information, see the help on individual types and
functions.</p>
<h3><a id="user-content-some-notes-for-working-on-windows" class="anchor" aria-hidden="true" href="#some-notes-for-working-on-windows"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Some notes for working on Windows</h3>
<p>Currently, ANTs does not actively support Windows system, officially, they suggest using Linux subsystem instead.</p>
<p>And <a href="https://github.com/ANTsX/ANTs/releases/tag/v2.1.0">the latest binaries they built and released</a> is 4 years old, and it may not work on every machine. Because of this, if you just install this package on Windows system and use the default Binary files downloaded by <code>BinaryProvider</code> in <code>deps.jl</code>, <a href="https://github.com/ANTsX/ANTs/issues/339">it's highly possible it will not work</a>.</p>
<p>However, it's tested ANTs can be built from source in Windows system. (Windows 10, VS 2017) (Although officially they suggest <a href="https://github.com/ANTsX/ANTs/wiki/Compiling-ANTs-on-Windows-10">compiling under Linux subsystem</a> ). Conceptually it's the same as compiling under MacOS / Linux. It majorly involves using <code>Cmake</code> to determine the specificities of your machine / system and automatically generate the configuration file. And then using the compilers of Windows system (e.g. Visual Studio) to build the binary files from source.</p>
<p>After building from source (usually takes hours), you get your path containing the binary files (supposing it's <code>D:\ANTs_2.1.0_Windows_new_build\bin\Release</code>). Then, we have to inform <code>ANTsRegistration.jl</code> package of the correct location of the binary files. Currently, we have to do it by manually changing <code>deps.jl</code> file generated when building this julia package.</p>
<p>For example, change the relevent lines in <code>deps.jl</code> to be</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">const</span> ants_bin_dir <span class="pl-k">=</span> <span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"</span>D:\ANTs_2.1.0_Windows_new_build\bin\Release\\<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> use this variable for outside ANTs binary</span>
<span class="pl-k">const</span> ants <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(ants_bin_dir, <span class="pl-s"><span class="pl-pds">"</span>ANTS.exe<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span>joinpath(dirname(@__FILE__), "usr\\bin\\ANTS.exe")</span>
<span class="pl-k">const</span> antsRegistration <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(ants_bin_dir, <span class="pl-s"><span class="pl-pds">"</span>antsRegistration.exe<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> joinpath(dirname(@__FILE__), "usr\\bin\\antsRegistration.exe")</span>
<span class="pl-k">const</span> antsMotionCorr <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(ants_bin_dir, <span class="pl-s"><span class="pl-pds">"</span>antsMotionCorr.exe<span class="pl-pds">"</span></span>)</pre></div>
<p>Then, hopefully, the package can pass all of the tests!</p>
<p>Note that if you rebuild the package (<code>Pkg.build("ANTsRegistration")</code>) it is likely that these customizations will be overwritten. You are advised to save a copy of the modified <code>deps.jl</code> file and/or change the permissions to prevent it from being overwritten.</p>
</article></div>