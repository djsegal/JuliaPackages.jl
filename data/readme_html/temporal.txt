<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/dysonance/Temporal.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c9a18f3f1785c22b3783a5b8048b2e61fa5b9e74/68747470733a2f2f7472617669732d63692e6f72672f6479736f6e616e63652f54656d706f72616c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dysonance/Temporal.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/dysonance/Temporal.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f9737aef4dac93035fa516050f7047ea20054a3e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6479736f6e616e63652f54656d706f72616c2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/dysonance/Temporal.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/dysonance/Temporal.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/638871a095f09147cbfa200238bbcb8251c0a405/687474703a2f2f636f6465636f762e696f2f6769746875622f6479736f6e616e63652f54656d706f72616c2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/dysonance/Temporal.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://dysonance.github.io/Temporal.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-temporal" class="anchor" aria-hidden="true" href="#temporal"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Temporal</h1>
<p>This package provides a flexible &amp; efficient time series class, <code>TS</code>, for the <a href="http://julialang.org/" rel="nofollow">Julia</a> programming language. While still early in development, the overarching goal is for the class to be able to slice &amp; dice data with the rapid prototyping speed of <a href="https://www.r-project.org/" rel="nofollow">R</a>'s <a href="https://github.com/joshuaulrich/xts"><code>xts</code></a> and <a href="https://www.python.org/" rel="nofollow">Python</a>'s <a href="http://pandas.pydata.org/" rel="nofollow"><code>pandas</code></a> packages, while retaining the performance one expects from Julia.</p>
<p><a href="http://dysonance.github.io/Temporal.jl/latest/" rel="nofollow">See the documentation</a> for a more in-depth look at the package and some of the pain points it may solve when doing technical research with time series data.</p>
<p>Below is a brief teaser with a minimal use case illustrating a small subset of features. This example also makes use of the <a href="https://github.com/dysonance/Indicators.jl">Indicators.jl</a> package, which provides a series of financial market technical analysis indicators with wrappers for the <code>Temporal.TS</code> type. Visualization is offered through the <a href="http://docs.juliaplots.org/latest/" rel="nofollow">Plots.jl</a> package, which Temporal leverages through <a href="https://github.com/JuliaPlots/RecipesBase.jl">RecipesBase.jl</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Temporal, Plots, Indicators

crude <span class="pl-k">=</span> <span class="pl-c1">quandl</span>(<span class="pl-s"><span class="pl-pds">"</span>CHRIS/CME_CL1<span class="pl-pds">"</span></span>)
gasoline <span class="pl-k">=</span> <span class="pl-c1">quandl</span>(<span class="pl-s"><span class="pl-pds">"</span>CHRIS/CME_RB1<span class="pl-pds">"</span></span>)

prices <span class="pl-k">=</span> [crude[<span class="pl-s"><span class="pl-pds">"</span>2012/2019<span class="pl-pds">"</span></span>, <span class="pl-c1">:Settle</span>] gasoline[<span class="pl-s"><span class="pl-pds">"</span>2012/2019<span class="pl-pds">"</span></span>, <span class="pl-c1">:Settle</span>]]
prices<span class="pl-k">.</span>fields <span class="pl-k">=</span> [<span class="pl-c1">:Crude</span>, <span class="pl-c1">:Gasoline</span>]
prices <span class="pl-k">=</span> <span class="pl-c1">dropnan</span>(prices)
daily_returns <span class="pl-k">=</span> <span class="pl-c1">diff</span>(<span class="pl-c1">log</span>(prices))
cumulative_returns <span class="pl-k">=</span> <span class="pl-c1">cumprod</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> daily_returns)

spread <span class="pl-k">=</span> cumulative_returns[:,<span class="pl-c1">1</span>] <span class="pl-k">-</span> cumulative_returns[:,<span class="pl-c1">2</span>]
spread <span class="pl-k">=</span> [spread <span class="pl-c1">sma</span>(spread, n<span class="pl-k">=</span><span class="pl-c1">200</span>)]
spread<span class="pl-k">.</span>fields <span class="pl-k">=</span> <span class="pl-c1">Symbol</span>.([<span class="pl-s"><span class="pl-pds">"</span>Spread<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>SMA (200)<span class="pl-pds">"</span></span>])

<span class="pl-c1">gr</span>()
ℓ <span class="pl-k">=</span> <span class="pl-c1">@layout</span>[ a{<span class="pl-c1">0.7</span>h}; b{<span class="pl-c1">0.3</span>h} ]
<span class="pl-c1">plot</span>(cumulative_returns, c<span class="pl-k">=</span>[<span class="pl-c1">:black</span> <span class="pl-c1">:purple</span>], layout<span class="pl-k">=</span>ℓ, subplot<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">plot!</span>(spread, c<span class="pl-k">=</span>[<span class="pl-c1">:blue</span> <span class="pl-c1">:orange</span>], layout<span class="pl-k">=</span>ℓ, subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/dysonance/Temporal.jl/master/examples/crack_spread.png"><img src="https://raw.githubusercontent.com/dysonance/Temporal.jl/master/examples/crack_spread.png" alt="alt text" style="max-width:100%;"></a></p>
</article></div>