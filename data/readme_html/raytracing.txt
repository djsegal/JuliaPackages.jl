<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-raytracing" class="anchor" aria-hidden="true" href="#raytracing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RayTracing</h1>
<p dir="auto"><a href="https://github.com/rvignolo/RayTracing.jl/actions"><img src="https://github.com/rvignolo/RayTracing.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">The partial integro-differential <a href="https://en.wikipedia.org/wiki/Neutron_transport#Neutron_transport_equation" rel="nofollow">neutron transport equation</a> can be casted to an ordinary differential equation over tracks that emulate neutron trajectories across a problem domain by means of the Method of Characteristics. This library addresses the cyclic ray tracing of those paths over any 2D rectangular mesh and computes quantities used to solve the transport equation in <a href="https://github.com/rvignolo/NeutronTransport.jl">NeutronTransport.jl</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed using the Julia package manager. From the Julia REPL, type <code>]</code> to enter the <code>Pkg</code> REPL mode and run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add RayTracing"><pre>pkg<span class="pl-k">&gt;</span> add RayTracing</pre></div>
<p dir="auto">Or, equivalently, via the <code>Pkg</code> API:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;RayTracing&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>RayTracing<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Create a <code>gmsh</code> mesh using any available tool of your choice (checkout <a href="https://github.com/gridap/GridapGmsh.jl">GridapGmsh.jl</a> for convenience). For example, <a href="demo/pincell-gmsh.jl">this</a> file shows the definition of a simple <em>pin-cell</em> geometry. Then, the ray tracing consists in two steps, namely, the track tracing and the segmentation of those tracks.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RayTracing
using GridapGmsh: GmshDiscreteModel

# load mesh and define a model with it
mshfile = joinpath(@__DIR__, &quot;demo&quot;, &quot;pincell.msh&quot;)
model = GmshDiscreteModel(mshfile; renumber=true)

# number of azimuthal angles
nφ = 8

# azimuthal spacing
δ = 2e-2

# initialize track generator
tg = TrackGenerator(model, nφ, δ)

# perform ray or track tracing
trace!(tg)

# proceed to segmentation
segmentize!(tg)"><pre><span class="pl-k">using</span> RayTracing
<span class="pl-k">using</span> GridapGmsh<span class="pl-k">:</span> GmshDiscreteModel

<span class="pl-c"><span class="pl-c">#</span> load mesh and define a model with it</span>
mshfile <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">@__DIR__</span>, <span class="pl-s"><span class="pl-pds">"</span>demo<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>pincell.msh<span class="pl-pds">"</span></span>)
model <span class="pl-k">=</span> <span class="pl-c1">GmshDiscreteModel</span>(mshfile; renumber<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c"><span class="pl-c">#</span> number of azimuthal angles</span>
nφ <span class="pl-k">=</span> <span class="pl-c1">8</span>

<span class="pl-c"><span class="pl-c">#</span> azimuthal spacing</span>
δ <span class="pl-k">=</span> <span class="pl-c1">2e-2</span>

<span class="pl-c"><span class="pl-c">#</span> initialize track generator</span>
tg <span class="pl-k">=</span> <span class="pl-c1">TrackGenerator</span>(model, nφ, δ)

<span class="pl-c"><span class="pl-c">#</span> perform ray or track tracing</span>
<span class="pl-c1">trace!</span>(tg)

<span class="pl-c"><span class="pl-c">#</span> proceed to segmentation</span>
<span class="pl-c1">segmentize!</span>(tg)</pre></div>
<table>
<thead>
<tr>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="demo/pincell-msh.png"><img src="demo/pincell-msh.png" alt="" style="max-width: 100%;"></a></th>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="demo/pincell-tracks.png"><img src="demo/pincell-tracks.png" alt="" style="max-width: 100%;"></a></th>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="demo/pincell-segments.png"><img src="demo/pincell-segments.png" alt="" style="max-width: 100%;"></a></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">Geometry / Mesh</td>
<td align="center">Tracks</td>
<td align="center">Segments</td>
</tr>
</tbody>
</table>
</article></div>