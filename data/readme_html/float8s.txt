<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/fbf7e69bdf5c1549e495e0b5310c617456f2b1e23e14c7f21c4c305224bdfe00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265706f5f7374617475732d6163746976652d627269676874677265656e3f7374796c653d666c61742d737175617265" alt="Project Status: Active – The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://img.shields.io/badge/repo_status-active-brightgreen?style=flat-square" style="max-width:100%;"></a>
<a href="https://travis-ci.com/milankl/Float8s.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/57c79332d16b7f044923b86ecfaf38e46cfeb3df28929888a69fc2279d90ded9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6d696c616e6b6c2f466c6f617438732e6a6c3f6c6162656c3d4c696e75782532302532362532306f7378266c6f676f3d747261766973267374796c653d666c61742d737175617265" alt="Travis" data-canonical-src="https://img.shields.io/travis/com/milankl/Float8s.jl?label=Linux%20%26%20osx&amp;logo=travis&amp;style=flat-square" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/milankl/Float8s-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b7cac59f8a071ee828c1ee500758c8716caea651e28e67a81e2e7b9e318ef7c0/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6d696c616e6b6c2f466c6f617438732d6a6c3f6c6162656c3d57696e646f7773266c6f676f3d6170707665796f72266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="AppVeyor" data-canonical-src="https://img.shields.io/appveyor/ci/milankl/Float8s-jl?label=Windows&amp;logo=appveyor&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;"></a>
<a href="https://cirrus-ci.com/github/milankl/Float8s.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ee5cb606822f1f65afc881bd48117042c91e2451b94fcd14e64aef64686e1a48/68747470733a2f2f696d672e736869656c64732e696f2f6369727275732f6769746875622f6d696c616e6b6c2f466c6f617438732e6a6c3f6c6162656c3d46726565425344266c6f676f3d6369727275732d6369266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="Cirrus CI" data-canonical-src="https://img.shields.io/cirrus/github/milankl/Float8s.jl?label=FreeBSD&amp;logo=cirrus-ci&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;"></a></p>
<h1><a id="user-content-float8sjl" class="anchor" aria-hidden="true" href="#float8sjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Float8s.jl</h1>
<p>Finally a number type that you can count with your fingers. Super Mario and Zelda would be proud.</p>
<p>Comes in two flavours: <code>Float8</code> has 3 exponent bits and 4 fraction bits, <code>Float8_4</code> has 4 exponent bits and 3 fraction bits.
Both rely on conversion to Float32 to perform any arithmetic operation, similar to <code>Float16</code>.</p>
<p>CAUTION: <code>Float8_4(::Float32)</code> currently contains a bug for subnormals.</p>
<h1><a id="user-content-example-use" class="anchor" aria-hidden="true" href="#example-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example use</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Float8s

julia&gt; a = Float8(4)
Float8(4.0)

julia&gt; b = Float8(3.14159)
Float8(3.125)

julia&gt; a+b
Float8(7.0)

julia&gt; sqrt(a)
Float8(2.0)

julia&gt; a^2
Inf8
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Float8s

julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Float8</span>(<span class="pl-c1">4</span>)
<span class="pl-c1">Float8</span>(<span class="pl-c1">4.0</span>)

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">Float8</span>(<span class="pl-c1">3.14159</span>)
<span class="pl-c1">Float8</span>(<span class="pl-c1">3.125</span>)

julia<span class="pl-k">&gt;</span> a<span class="pl-k">+</span>b
<span class="pl-c1">Float8</span>(<span class="pl-c1">7.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sqrt</span>(a)
<span class="pl-c1">Float8</span>(<span class="pl-c1">2.0</span>)

julia<span class="pl-k">&gt;</span> a<span class="pl-k">^</span><span class="pl-c1">2</span>
Inf8</pre></div>
<p>Most arithmetic operations are implemented. If you would like to have an additional feature, raise an <a href="https://github.com/milankl/Float8s.jl/issues">issue</a>.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<p><code>Float8s.jl</code> is registered, just do</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.3) pkg&gt; add Float8s
"><pre>(v1.<span class="pl-c1">3</span>) pkg<span class="pl-k">&gt;</span> add Float8s</pre></div>
<h1><a id="user-content-benchmarking" class="anchor" aria-hidden="true" href="#benchmarking"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarking</h1>
<p>Conversions from <code>Float8</code> (same for <code>Float8_4</code>) to <code>Float32</code> take about 1.5ns, about 2x faster than for conversions from <code>Float16</code> thanks to table lookups.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Float8s, BenchmarkTools
julia&gt; A = Float8.(randn(300,300));
julia&gt; B = Float16.(randn(300,300));
julia&gt; @btime Float32.($A);
  133.060 μs (2 allocations: 351.64 KiB)
julia&gt; @btime Float32.($B);
  232.701 μs (2 allocations: 351.64 KiB)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Float8s, BenchmarkTools
julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">Float8</span>.(<span class="pl-c1">randn</span>(<span class="pl-c1">300</span>,<span class="pl-c1">300</span>));
julia<span class="pl-k">&gt;</span> B <span class="pl-k">=</span> <span class="pl-c1">Float16</span>.(<span class="pl-c1">randn</span>(<span class="pl-c1">300</span>,<span class="pl-c1">300</span>));
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">Float32</span>.(<span class="pl-k">$</span>A);
  <span class="pl-c1">133.060</span> μs (<span class="pl-c1">2</span> allocations<span class="pl-k">:</span> <span class="pl-c1">351.64</span> KiB)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">Float32</span>.(<span class="pl-k">$</span>B);
  <span class="pl-c1">232.701</span> μs (<span class="pl-c1">2</span> allocations<span class="pl-k">:</span> <span class="pl-c1">351.64</span> KiB)</pre></div>
<p>Conversions in the other direction are about 6-7x slower and slightly slower than for <code>Float16</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; C = Float32.(randn(300,300));
julia&gt; @btime Float16.($C);
  672.419 μs (2 allocations: 175.89 KiB)
julia&gt; @btime Float8.($C);
  873.585 μs (2 allocations: 88.02 KiB) 
"><pre>julia<span class="pl-k">&gt;</span> C <span class="pl-k">=</span> <span class="pl-c1">Float32</span>.(<span class="pl-c1">randn</span>(<span class="pl-c1">300</span>,<span class="pl-c1">300</span>));
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">Float16</span>.(<span class="pl-k">$</span>C);
  <span class="pl-c1">672.419</span> μs (<span class="pl-c1">2</span> allocations<span class="pl-k">:</span> <span class="pl-c1">175.89</span> KiB)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">Float8</span>.(<span class="pl-k">$</span>C);
  <span class="pl-c1">873.585</span> μs (<span class="pl-c1">2</span> allocations<span class="pl-k">:</span> <span class="pl-c1">88.02</span> KiB) </pre></div>
</article></div>