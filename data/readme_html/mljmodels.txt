<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-mljmodels" class="anchor" aria-hidden="true" href="#mljmodels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MLJModels</h1>
<p><a href="https://travis-ci.com/alan-turing-institute/MLJModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5aecaae03b167d17ba519d8f5e5494df5bfab710/68747470733a2f2f7472617669732d63692e636f6d2f616c616e2d747572696e672d696e737469747574652f4d4c4a4d6f64656c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/alan-turing-institute/MLJModels.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Repository of selected
<a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ</a> model
interfaces, and home of the MLJ model registry.</p>
<p>For instructions on integrating a new model with MLJ visit
<a href="https://alan-turing-institute.github.io/MLJ.jl/dev/adding_models_for_general_use/" rel="nofollow">here</a></p>
<h3><a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contents</h3>
<ul>
<li><a href="#who-is-this-repo-for">Who is this repo for?</a></li>
<li><a href="#what-is-provided-here">What is provided here?</a></li>
<li><a href="#instructions-for-updating-the-mlj-model-registry">Instructions for updating the MLJ model registry</a></li>
</ul>
<h2><a id="user-content-who-is-this-repo-for" class="anchor" aria-hidden="true" href="#who-is-this-repo-for"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Who is this repo for?</h2>
<p>General users of the MLJ machine learning platform should refer to
<a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ home page</a> for
usage and installation instructions. While MLJ users are required to
have MLJModels installed in their project environment, they can
otherwise ignore it.</p>
<p>This repository is for developers wishing to:</p>
<ul>
<li>
<p>add a model interface for a third party package that does not provide, or is
not willing to provide, an MLJ interface natively</p>
</li>
<li>
<p><a href="#instructions-for-updating-the-mlj-model-registry">register</a> new
MLJ interfaces, whether they be defined here or in a third party
package</p>
</li>
</ul>
<p>To list <em>all</em> model interfaces currently registered, do <code>using MLJ</code> or <code>using MLJModels</code> and run:</p>
<ul>
<li>
<p><code>localmodels()</code> to list built-in models (updated when external models are loaded with <code>@load</code>)</p>
</li>
<li>
<p><code>models()</code> to list all registered models, or see <a href="/src/registry/Models.toml">this list</a>.</p>
</li>
</ul>
<p>Recall that an interface is loaded from within MLJ, together with the
package providing the underlying algorithm, using the syntax <code>@load RidgeRegressor pkg=GLM</code>, where the <code>pkg</code> keyword is only necessary in
ambiguous cases.</p>
<h2><a id="user-content-what-is-provided-here" class="anchor" aria-hidden="true" href="#what-is-provided-here"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What is provided here?</h2>
<p>MLJModels contains:</p>
<ul>
<li>
<p>interfaces, under <a href="/src/">/src/</a>, for "essential" Julia machine
learning packages which do not yet provide, or are unlikely to
provide, native MLJ model interfaces. The bulk of these are
<a href="https://github.com/cstjean/ScikitLearn.jl">ScikitLearn.jl</a> models.</p>
</li>
<li>
<p>a few models that are pre-loaded into MLJ, located at
<a href="/src/builtins">/src/builtins</a>, such as <code>OneHotEncoder</code>
and <code>ConstantClassifier</code>.</p>
</li>
<li>
<p>the MLJ <a href="src/registry/Metadata.toml">model registry</a>, listing all
models that can be called from MLJ using <code>@load</code>. Package developers
can register new models by implementing the MLJ interface in their
package and following <a href="https://alan-turing-institute.github.io/MLJ.jl/dev/adding_models_for_general_use/" rel="nofollow">these
instructions</a>.</p>
</li>
</ul>
<h2><a id="user-content-instructions-for-updating-the-mlj-model-registry" class="anchor" aria-hidden="true" href="#instructions-for-updating-the-mlj-model-registry"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Instructions for updating the MLJ model registry</h2>
<p>Generally model registration is performed by administrators. If you
have an interface you would like registered, open an issue
<a href="https://github.com/alan-turing-institute/MLJ.jl/issues">here</a>.</p>
<p>To register all the models in GreatNewPackage with MLJ:</p>
<ul>
<li>
<p>In the dev branch of a clone of the dev branch of MLJModels, change
to the <code>/src/registry/</code> directory and, in Julia, activate the
environment specified by the Project.toml there, after checking the
[compat] conditions there are up to date. <strong>Do not use</strong> <code>Revise</code>.</p>
</li>
<li>
<p>Add <code>GreatNewPackage</code> to the environment.</p>
</li>
<li>
<p>In some environment to which your MLJModels clone has been added
(using <code>Pkg.dev</code>) execute <code>using MLJModels; @update</code>. This updates
<code>src/registry/Metadata.toml</code> and <code>src/registry/Models.toml</code> (the
latter is generated for convenience and not used by MLJ).</p>
</li>
<li>
<p>Test that interfaces load with <code>MLJModels.check_registry()</code></p>
</li>
<li>
<p>Quit your REPL session, whose namespace is now polluted.</p>
</li>
<li>
<p><em>Note.</em> that your local MLJModels will not immediately adopt the
updated registry because that requires pre-compilation; for
technical reasons the registry is not loaded in <code>__init__</code>()`.</p>
</li>
<li>
<p>Push your changes to an appropriate branch of MLJModels to make
the updated metadata available to users of the next MLJModels tagged
release.</p>
</li>
</ul>
</article></div>