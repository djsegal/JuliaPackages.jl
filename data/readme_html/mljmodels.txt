<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mljmodels" class="anchor" aria-hidden="true" href="#mljmodels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MLJModels</h1>
<p><a href="https://github.com/alan-turing-institute/MLJModels.jl/actions"><img src="https://github.com/alan-turing-institute/MLJModels.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p>Repository of selected models for use in the
<a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ</a> MLJ machine
learning framework, without the need to import third party packages; and the
home of the MLJ model registry.</p>
<p>For instructions on integrating a new model with MLJ visit
<a href="https://alan-turing-institute.github.io/MLJ.jl/dev/adding_models_for_general_use/" rel="nofollow">here</a></p>
<h3><a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contents</h3>
<ul>
<li><a href="#who-is-this-repo-for">Who is this repo for?</a></li>
<li><a href="#what-is-provided-here">What is provided here?</a></li>
<li><a href="#instructions-for-updating-the-mlj-model-registry">Instructions for updating the MLJ model registry</a></li>
</ul>
<h2><a id="user-content-who-is-this-repo-for" class="anchor" aria-hidden="true" href="#who-is-this-repo-for"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Who is this repo for?</h2>
<p>General users of the MLJ machine learning platform should refer to
<a href="https://alan-turing-institute.github.io/MLJ.jl/dev/" rel="nofollow">MLJ home page</a>
for usage and installation instructions. MLJModels is a dependency of
MLJ that the general user can ignore.</p>
<p>This repository is for developers wishing to
<a href="#instructions-for-updating-the-mlj-model-registry">register</a> new MLJ
model interfaces, whether they be:</p>
<ul>
<li>
<p>implemented <strong>natively</strong> in a
package providing the core machine learning algorithm, as in
<a href="https://github.com/Evovest/EvoTrees.jl/blob/master/src/MLJ.jl"><code>EvoTrees.jl</code></a>; or</p>
</li>
<li>
<p>implemented in a separate <strong>interface package</strong>, such as
<a href="https://github.com/alan-turing-institute/MLJDecisionTreeInterface.jl">MLJDecisionTreeInterface.jl</a>.</p>
</li>
</ul>
<p>It also a place for developers to add models (mostly transformers)
such as <code>OneHotEncoder</code>, that are exported for "built-in" use in
MLJ. (In the future these models may live in a separate package.)</p>
<p>To list <em>all</em> model interfaces currently registered, do <code>using MLJ</code> or
<code>using MLJModels</code> and run:</p>
<ul>
<li>
<p><code>localmodels()</code> to list built-in models (updated when external models are loaded with <code>@load</code>)</p>
</li>
<li>
<p><code>models()</code> to list all registered models, or see <a href="/src/registry/Models.toml">this list</a>.</p>
</li>
</ul>
<p>Recall that an interface is loaded from within MLJ, together with the
package providing the underlying algorithm, using the syntax <code>@load RidgeRegressor pkg=GLM</code>, where the <code>pkg</code> keyword is only necessary in
ambiguous cases.</p>
<h2><a id="user-content-what-is-provided-here" class="anchor" aria-hidden="true" href="#what-is-provided-here"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What is provided here?</h2>
<p>MLJModels contains:</p>
<ul>
<li>
<p>transformers to be pre-loaded into MLJ, located at
<a href="/src/builtins">/src/builtins</a>, such as <code>OneHotEncoder</code>
and <code>ConstantClassifier</code>.</p>
</li>
<li>
<p>the MLJ <a href="src/registry/Metadata.toml">model registry</a>, listing all
models that can be called from MLJ using <code>@load</code>. Package developers
can register new models by implementing the MLJ interface in their
package and following <a href="https://alan-turing-institute.github.io/MLJ.jl/dev/adding_models_for_general_use/" rel="nofollow">these
instructions</a>.</p>
</li>
</ul>
<h2><a id="user-content-instructions-for-updating-the-mlj-model-registry" class="anchor" aria-hidden="true" href="#instructions-for-updating-the-mlj-model-registry"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Instructions for updating the MLJ model registry</h2>
<p>Generally model registration is performed by administrators. If you
have an interface you would like registered, open an issue
<a href="https://github.com/alan-turing-institute/MLJ.jl/issues">here</a>.</p>
<p><strong>Administrator instructions.</strong> To register all the models in
GreatNewPackage with MLJ:</p>
<ul>
<li>
<p>In the dev branch of a clone of the dev branch of MLJModels, change
to the <code>/src/registry/</code> directory and, in the latest version of julia, activate the
environment specified by the Project.toml there, after checking the
[compat] conditions there are up to date. <strong>Do not use</strong>
<code>Revise</code>.</p>
</li>
<li>
<p>Add <code>GreatNewPackage</code> to the environment.</p>
</li>
<li>
<p>In some environment to which your MLJModels clone has been added
(using <code>Pkg.dev</code>) execute <code>using MLJModels; MLJModels.@update</code>. This updates
<code>src/registry/Metadata.toml</code> and <code>src/registry/Models.toml</code> (the
latter is generated for convenience and not used by MLJ).</p>
</li>
<li>
<p>Quit your REPL session and make a trivial commit to your MLJModels
branch to force pre-compilation in a new julia session when you run
<code>using MLJModels</code>. (For technical reasons the registry is not loaded
in <code>__init__</code>()`, so without pre-compiliation the registry is not
available.)</p>
</li>
<li>
<p>Test that the interfaces load properly with
<code>MLJModels.check_registry()</code>. (CI will now fail on dev -&gt; master if
this test fails.)</p>
</li>
<li>
<p>Push your changes to an appropriate branch of MLJModels to make
the updated metadata available to users of the next MLJModels tagged
release.</p>
</li>
</ul>
</article></div>