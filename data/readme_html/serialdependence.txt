<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-serialdependencejl" class="anchor" aria-hidden="true" href="#serialdependencejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SerialDependence.jl</h1>
<p dir="auto">When dealing with <strong>categorical data</strong>, things like autocorrelation function are not defined. This is what this module is for : computing <strong>categorical serial dependences</strong>.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Travis</strong></th>
<th align="center"><strong>Appveyor</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.com/johncwok/SerialDependence.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9b781e32eb29f849eff2ea3bc76f1fab1113eae8469c226192cc9163b8881e43/68747470733a2f2f7472617669732d63692e636f6d2f6a6f686e63776f6b2f53657269616c446570656e64656e63652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/johncwok/SerialDependence.jl.svg?branch=master" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://ci.appveyor.com/project/johncwok/serialdependence-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1e5e5943b82a44caf994365ecb9abc0c6a9eb47ea57ee76a5ffb0ea166c7062b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f316564696272763734727973343972753f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/1edibrv74rys49ru?svg=true" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">The module mostly implements the methods described in C. Weiss's book <em>"An Introduction to Discrete-Valued
Time Series"</em> (2018) [1], with some extras. It contains three main functions :</p>
<h2 dir="auto"><a id="user-content-main-functions" class="anchor" aria-hidden="true" href="#main-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Main functions</h2>
<p dir="auto">All the module's functions require a <code>'lag's</code> input :  <code>'lags'</code> can be an <code>Int</code>, or an <code>Array{Int,1}</code> if you want to do a serial dependence plot. The function then returns a <code>Float64</code> or an <code>Array{Float64,1}</code> depending on <code>'lags'</code> being an <code>Int</code> or <code>Array{Int,1}</code>. <br></p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>cramer_coefficient(series, lags)</code></strong>: measures average <strong>association</strong> between elements of <code>'series'</code> at time <code>t</code> and time <code>t + lags</code>.
Cramer's k is an <em>unsigned</em> measurement : its values lies in [0,1], 0 being perfect independence and 1 perfect dependence. k can be bias, for more infos, refer to [1].</p>
</li>
<li>
<p dir="auto"><strong><code>cohen_coefficient(series, lags)</code></strong>: measures average <strong>agreement</strong> between elements of <code>'series'</code> at time <code>t</code> and time <code>t + lags</code>. <br>
Cohen's k is a <em>signed</em> measurement : its  values lie in [-pe/(1 -pe), 1], with positive (negative) values indicating positive (negative) serial dependence at 'lags'. pe is probability of agreement by chance.</p>
</li>
<li>
<p dir="auto"><strong><code>theils_u(series, lags)</code></strong>: measures average portion of <strong>information</strong> known about <code>'series'</code> at <code>t + lags</code> given that <code>'series'</code> is known at time <code>t</code>. U is an <em>unsigned</em> measurement: its values lies in [0,1], 0 meaning no information shared and 1 complete knowledge (determinism).</p>
</li>
</ul>
<h3 dir="auto"><a id="user-content-usefull-extras" class="anchor" aria-hidden="true" href="#usefull-extras"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usefull extras</h3>
<ul dir="auto">
<li><strong><code>bootstrap_CI(Series, lags, coef_func, n_iter = 1000)</code></strong>: Returns top and bottom limit for a 95% confidence interval at values of 'lags'.
<ul dir="auto">
<li><code>'coef_func'</code> is the <strong>function</strong> for which the CI needs to be computed. Possible values : 'cramer_coefficient, cohen_coefficient, theils_u'.</li>
<li><code>'n_iter'</code> controls how many iterations are run during the bootstrap process. Large <code>'n_iter'</code>, means more precision but also more compute time.</li>
</ul>
</li>
<li><strong><code>rate_evolution(Series)</code></strong>: This is a visual test of "stationarity" : if it varies linearly, then the time-series can be considered as stationary. Returns an <code>array</code> of <code>array</code>. Each of the internal array represents one of the categories in <code>'Series'</code>and describes it's evolution rate.</li>
</ul>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Using the pewee birdsong data (1943) one can do a serial dependence plot using Cohen's cofficient as follow :</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DelimitedFiles
using SerialDependence
using Plots
#reading 'pewee' time-series test folder.
series = readdlm(&quot;test\\pewee.txt&quot;,',')[1,:] 
lags = collect(1:25)
v = cohen_coefficient(series, lags)
t, b = bootstrap_CI(series, cramer_coefficient, lags)
a = plot(lags, v, xlabel = &quot;Lags&quot;, ylabel = &quot;K&quot;, label = &quot;Cramer's k&quot;)
plot!(a, lags, t, color = &quot;red&quot;, label = &quot;Limits of 95% CI&quot;); plot!(a, lags, b, color = &quot;red&quot;, label = &quot;&quot;)"><pre><span class="pl-k">using</span> DelimitedFiles
<span class="pl-k">using</span> SerialDependence
<span class="pl-k">using</span> Plots
<span class="pl-c"><span class="pl-c">#</span>reading 'pewee' time-series test folder.</span>
series <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(<span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-cce">\\</span>pewee.txt<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">'</span>,<span class="pl-pds">'</span></span>)[<span class="pl-c1">1</span>,:] 
lags <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">25</span>)
v <span class="pl-k">=</span> <span class="pl-c1">cohen_coefficient</span>(series, lags)
t, b <span class="pl-k">=</span> <span class="pl-c1">bootstrap_CI</span>(series, cramer_coefficient, lags)
a <span class="pl-k">=</span> <span class="pl-c1">plot</span>(lags, v, xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Lags<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>K<span class="pl-pds">"</span></span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Cramer's k<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot!</span>(a, lags, t, color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Limits of 95% CI<span class="pl-pds">"</span></span>); <span class="pl-c1">plot!</span>(a, lags, b, color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/34754896/90892617-de87fe80-e3bd-11ea-8f0e-f2e4d77959f2.PNG"><img src="https://user-images.githubusercontent.com/34754896/90892617-de87fe80-e3bd-11ea-8f0e-f2e4d77959f2.PNG" width="600" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-to-do" class="anchor" aria-hidden="true" href="#to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TO-DO</h2>
<p dir="auto">[] Implement bias correction for cramer's v</p>
<p dir="auto">[1] DOI : 10.1002/9781119097013</p>
</article></div>