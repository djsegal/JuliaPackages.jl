<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/aicenter/IPMeasures.jl/workflows/Run%20tests/badge.svg"><img src="https://github.com/aicenter/IPMeasures.jl/workflows/Run%20tests/badge.svg" alt="Run tests" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/aicenter/IPMeasures.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dd53f5b8bbd98a4cc4972f0937929eddc530f4979753ce95e9c5f925741a109d/68747470733a2f2f636f6465636f762e696f2f67682f616963656e7465722f49504d656173757265732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/aicenter/IPMeasures.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-ipmeasuresjl" class="anchor" aria-hidden="true" href="#ipmeasuresjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IPMeasures.jl</h1>
<p dir="auto">Implements Integral Probability Measures, such as Maximum Mean Discrepancy
(MMD) with Gaussian, RQ, and IPM kernels, as well as the KL divergence of
conditional Gaussians (based on
<a href="https://github.com/aicenter/ConditionalDists.jl">ConditionalDists.jl</a>). The
package is compatible with Flux.jl and uses the Distances.jl interface.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Maximum Mean Discrepancy between <code>x</code> and <code>y</code> using gaussian kernel of bandwidth <code>γ</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using IPMeasures: mmd, GaussianKernel

x = randn(2,100)
y = randn(2,100)
γ = 1.0
mmd(GaussianKernel(γ),x,y)
0.012"><pre><span class="pl-k">using</span> IPMeasures<span class="pl-k">:</span> mmd, GaussianKernel

x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">100</span>)
y <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">100</span>)
γ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
<span class="pl-c1">mmd</span>(<span class="pl-c1">GaussianKernel</span>(γ),x,y)
<span class="pl-c1">0.012</span></pre></div>
<p dir="auto"><code>IMQKernel(c)</code> inverse multi-quadratic kernel <code>k(d) = C/(C+d)</code> with <code>d</code> being a
distance as used in [Tolstikhin, Ilya, et al. "Wasserstein
Auto-Encoders." (2017)](arXiv preprint arXiv:1711.01558)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using IPMeasures
import IPMeasures: mmd, IMQKernel
mmd(IMQKernel(1.0),randn(2,100),randn(2,100))
0.026"><pre><span class="pl-k">using</span> IPMeasures
<span class="pl-k">import</span> IPMeasures<span class="pl-k">:</span> mmd, IMQKernel
<span class="pl-c1">mmd</span>(<span class="pl-c1">IMQKernel</span>(<span class="pl-c1">1.0</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">100</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">100</span>))
<span class="pl-c1">0.026</span></pre></div>
<p dir="auto"><code>RQKernel(α)</code> Maximum Mean Discrepancy between <code>x</code> and <code>y</code>  rq kernel from
Bińkowski, Mikołaj, et al. "Demystifying MMD GANs." (2018).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using IPMeasures
import IPMeasures: mmd, RQKernel
mmd(RQKernel(1.0),randn(2,100),randn(2,100))
0.026"><pre><span class="pl-k">using</span> IPMeasures
<span class="pl-k">import</span> IPMeasures<span class="pl-k">:</span> mmd, RQKernel
<span class="pl-c1">mmd</span>(<span class="pl-c1">RQKernel</span>(<span class="pl-c1">1.0</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">100</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">100</span>))
<span class="pl-c1">0.026</span></pre></div>
<p dir="auto">Furthermore, we have estimation of Null Hypothesis of kernel <code>k</code> of samples <code>x</code>
from <code>n</code> random draws of subsets of size <code>l</code></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="null_distribution(k::AbstractKernel, x, n, l)"><pre class="notranslate"><code>null_distribution(k::AbstractKernel, x, n, l)
</code></pre></div>
<p dir="auto">estimates the null distribution</p>
</article></div>