<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hclust" class="anchor" aria-hidden="true" href="#hclust"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HClust</h1>
<p dir="auto"><a href="https://travis-ci.org/davidavdav/HClust.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6d2c67a485d02f9201f51a96dc9df9b8eedee8431a70287e5d6b533420c76d05/68747470733a2f2f7472617669732d63692e6f72672f646176696461766461762f48436c7573742e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/davidavdav/HClust.jl.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Hierarchical Clustering for Julia, similar to R's <code>hclust()</code></p>
<h1 dir="auto"><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Status</h1>
<p dir="auto"><strong>Please note</strong> this package has now <a href="https://github.com/JuliaStats/Clustering.jl/commit/7e6ae49fee3546868b3e277e73b21ca39d6e0f11">been merged</a> into <a href="https://github.com/JuliaStats/Clustering.jl">Clustering.jl</a></p>
<p dir="auto">This repository shows any additional work-in-progress.  Clustering involves doing a lot of admin, and it is easy to make an error.  I've tested the results for medium sized clusters (up to 250---5000) elements, for the following methods:</p>
<table>
<thead>
<tr>
<th>method</th>
<th>validated at matrix size</th>
<th>time</th>
<th>validated</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:single</code></td>
<td>5000</td>
<td>1.3</td>
<td>OK</td>
</tr>
<tr>
<td><code>:complete</code></td>
<td>2500</td>
<td>4.5</td>
<td>OK</td>
</tr>
<tr>
<td><code>:average</code></td>
<td>2500</td>
<td>4.5</td>
<td>OK</td>
</tr>
</tbody>
</table>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="d = rand(1000,1000)
d += d'  ## make sure distance matrix d is symmetric (this is optional)
h = hclust(d, :single)"><pre lang="julia" class="notranslate"><code>d = rand(1000,1000)
d += d'  ## make sure distance matrix d is symmetric (this is optional)
h = hclust(d, :single)
</code></pre></div>
<h2 dir="auto"><a id="user-content-hclust-1" class="anchor" aria-hidden="true" href="#hclust-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>hclust()</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="hclust(distance::Matrix, method::Symbol)"><pre lang="julia" class="notranslate"><code>hclust(distance::Matrix, method::Symbol)
</code></pre></div>
<p dir="auto">Performs hierarchical clustering for distance matrix <code>d</code> (which is forced to be symmetric), using one of three methods:</p>
<ul dir="auto">
<li><code>:single</code>: cluster distance is equal to the minimum distance between any of the members</li>
<li><code>:average</code>: cluster distance is equal to the mean distance between any of the cluster's members</li>
<li><code>:complete</code>: cluster distance is equal to the maximum distance between any of the members.</li>
</ul>
<p dir="auto">The output of <code>hclust()</code> is an object of type <code>Hclust</code> with the fields</p>
<ul dir="auto">
<li><code>merge</code> the clusters merged in order.  Leafs are indicated by negative numbers</li>
<li><code>height</code> the distance at which the merges take place</li>
<li><code>order</code> a preferred grouping for drawing a dendogram.  Not implemented, always <code>[1:n]</code>.</li>
<li><code>labels</code> labels of the clusters.  Not implemented, now always <code>[1:n]</code></li>
<li><code>method</code> the name of the clustering method.</li>
</ul>
<h2 dir="auto"><a id="user-content-cutree" class="anchor" aria-hidden="true" href="#cutree"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>cutree()</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cutree(cl:Hclust; h, k)"><pre lang="julia" class="notranslate"><code>cutree(cl:Hclust; h, k)
</code></pre></div>
<p dir="auto">Cuts the cluster tree at height <code>h</code> or amounting to <code>k</code> clusters.</p>
<p dir="auto">The output is a vector of indices.  The <code>n</code>th element in this vector indicates the cluster that this data point belongs to.</p>
</article></div>