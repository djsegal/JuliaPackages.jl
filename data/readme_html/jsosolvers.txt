<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-jsosolversjl" class="anchor" aria-hidden="true" href="#jsosolversjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>JSOSolvers.jl</h1>
<p dir="auto"><a href="https://doi.org/10.5281/zenodo.3991143" rel="nofollow"><img src="https://camo.githubusercontent.com/44037d692a639c322860b415307693a1cf60103532120b7545d4855f5e38993d/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333939313134332e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.3991143.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl/releases/latest"><img src="https://camo.githubusercontent.com/f5b0be1a965d5e01cc64f8f4547741b46fb1643e68e40db58900c905069465f0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4a756c6961536d6f6f74684f7074696d697a6572732f4a534f536f6c766572732e6a6c2e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/JuliaSmoothOptimizers/JSOSolvers.jl.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/JSOSolvers.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/6e0212a02bcf5c6976a054fd0941c8445d753dd1382e44d79d942c1fd829edac/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d3366353162352e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-3f51b5.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/JSOSolvers.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/488b4d0ade5e1683e5e6fd4e9e5e032f66bb645872789d758251744fe48a896d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d3366353162352e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-3f51b5.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaSmoothOptimizers/JSOSolvers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8d15a7b8efd45fe3549a1b784674184e5e320371fb0c9fa497659455edb1495c/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961536d6f6f74684f7074696d697a6572732f4a534f536f6c766572732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d6579694773696c625a78" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSmoothOptimizers/JSOSolvers.jl/branch/main/graph/badge.svg?token=eyiGsilbZx" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl/workflows/CI/badge.svg?branch=main"><img src="https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl/workflows/CI/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="https://cirrus-ci.com/github/JuliaSmoothOptimizers/JSOSolvers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0f209c71ea2aed5f01654c00cb9dfe5047c5ed9323aea672c611f922caa0397b/68747470733a2f2f696d672e736869656c64732e696f2f6369727275732f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4a534f536f6c766572732e6a6c3f6c6f676f3d4369727275732532304349" alt="Cirrus CI - Base Branch Build Status" data-canonical-src="https://img.shields.io/cirrus/github/JuliaSmoothOptimizers/JSOSolvers.jl?logo=Cirrus%20CI" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides optimization solvers curated by the JuliaSmoothOptimizers
organization for unconstrained optimization</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="min f(x)"><pre class="notranslate"><code>min f(x)
</code></pre></div>
<p dir="auto">and bound-constrained optimization</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="min f(x)     s.t.  ℓ ≤ x ≤ u"><pre class="notranslate"><code>min f(x)     s.t.  ℓ ≤ x ≤ u
</code></pre></div>
<p dir="auto">This package provides an implementation of four classic algorithms for unconstrained/bound-constrained nonlinear optimization:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>lbfgs</code>: an implementation of a limited-memory BFGS line-search method for unconstrained minimization;</p>
</li>
<li>
<p dir="auto"><code>R2</code>: a first-order quadratic regularization method for unconstrained optimization;</p>
</li>
<li>
<p dir="auto"><code>tron</code>: a pure Julia implementation of TRON, a trust-region solver for bound-constrained optimization described in</p>
<blockquote>
<p dir="auto">Chih-Jen Lin and Jorge J. Moré, <em>Newton's Method for Large Bound-Constrained
Optimization Problems</em>, SIAM J. Optim., 9(4), 1100–1127, 1999.
DOI: <a href="https://www.doi.org/10.1137/S1052623498345075" rel="nofollow">10.1137/S1052623498345075</a></p>
</blockquote>
<p dir="auto">as well as a variant for nonlinear least-squares;</p>
</li>
<li>
<p dir="auto"><code>trunk</code>: a trust-region solver for unconstrained optimization using exact second derivatives. Our implementation follows the description given in</p>
<blockquote>
<p dir="auto">A. R. Conn, N. I. M. Gould, and Ph. L. Toint,
Trust-Region Methods, volume 1 of MPS/SIAM Series on Optimization.
SIAM, Philadelphia, USA, 2000.
DOI: <a href="https://www.doi.org/10.1137/1.9780898719857" rel="nofollow">10.1137/1.9780898719857</a></p>
</blockquote>
<p dir="auto">The package also contains a variant for nonlinear least-squares.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>pkg&gt; add JSOSolvers</code></p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JSOSolvers, ADNLPModels

# Rosenbrock
nlp = ADNLPModel(x -&gt; 100 * (x[2] - x[1]^2)^2 + (x[1] - 1)^2, [-1.2; 1.0])
stats = lbfgs(nlp) # or trunk, tron, R2"><pre><span class="pl-k">using</span> JSOSolvers, ADNLPModels

<span class="pl-c"><span class="pl-c">#</span> Rosenbrock</span>
nlp <span class="pl-k">=</span> <span class="pl-c1">ADNLPModel</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">100</span> <span class="pl-k">*</span> (x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> (x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>, [<span class="pl-k">-</span><span class="pl-c1">1.2</span>; <span class="pl-c1">1.0</span>])
stats <span class="pl-k">=</span> <span class="pl-c1">lbfgs</span>(nlp) <span class="pl-c"><span class="pl-c">#</span> or trunk, tron, R2</span></pre></div>
<h2 dir="auto"><a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to cite</h2>
<p dir="auto">If you use JSOSolvers.jl in your work, please cite using the format given in <a href="CITATION.bib">CITATION.bib</a>.</p>
<h1 dir="auto"><a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h1>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a>, so questions about any of our packages are welcome.</p>
</article></div>