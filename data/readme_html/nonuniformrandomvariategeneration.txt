<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-non-uniform-random-variate-generation" class="anchor" aria-hidden="true" href="#non-uniform-random-variate-generation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Non-Uniform Random Variate Generation</h1>

<p dir="auto"><a href="https://github.com/awllee/NonUniformRandomVariateGeneration.jl/actions"><img src="https://github.com/awllee/NonUniformRandomVariateGeneration.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/awllee/NonUniformRandomVariateGeneration.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f3812c5c89ad4299c9688a8aa42b2eed554e3d8453644b04eb59d48c369382e7/68747470733a2f2f636f6465636f762e696f2f67682f61776c6c65652f4e6f6e556e69666f726d52616e646f6d5661726961746547656e65726174696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/awllee/NonUniformRandomVariateGeneration.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>

<p dir="auto">This package provides some non-uniform random variate generation schemes. They  can use specified random number generators, and hence can be used in multi-threaded applications with different random number generators associated to each thread.</p>
<p dir="auto">The current emphasis is on stateless algorithms with distribution parameters passed in.</p>
<p dir="auto">In the future, some of these approaches may be superseded by functionality in Distributions.jl.</p>
<p dir="auto">Currently includes generation of the following random variates:</p>
<ul dir="auto">
<li>
<p dir="auto">Binomial: W. HÃ¶rmann. The Generation of Binomial Random Variates, Journal of Statistical Computation and Simulation 46, 1993.</p>
</li>
<li>
<p dir="auto">Multinomial: using Binomial random variates.</p>
</li>
<li>
<p dir="auto">Gamma: Marsaglia, G. and Tsang, W.W., 2000. A simple method for generating gamma variables. ACM Transactions on Mathematical Software (TOMS), 26(3).</p>
</li>
<li>
<p dir="auto">Beta: using Gamma random variates.</p>
</li>
<li>
<p dir="auto">Poisson: Ahrens, J.H. and Dieter, U., 1982. Computer generation of Poisson deviates from modified normal distributions. ACM Transactions on Mathematical Software (TOMS), 8(2), pp. 163-179.</p>
</li>
<li>
<p dir="auto">Sorted Uniforms: Uniform spacing method, Algorithm B, p. 214 of L. Devroye. Non-uniform random variate generation. 1986.</p>
</li>
<li>
<p dir="auto">Categorical: using inversion with sorted uniforms. This method can be faster than the alias method, depending on the setting.</p>
</li>
</ul>
</article></div>