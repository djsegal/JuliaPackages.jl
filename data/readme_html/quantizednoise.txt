<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-quantizednoise" class="anchor" aria-hidden="true" href="#quantizednoise"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QuantizedNoise</h1>
<p dir="auto">This package provide the function <code>randqn</code> that generate random values from the
normal distribution <code>𝒩(μ,σ²)</code> quantized to <code>Integer</code> and <code>Complex{&lt;:Integer&gt;}</code>
types.  Usage is pretty much the same as <code>Base.randn</code> except for the addition of
<code>σ</code> and <code>µ</code> keyword arguments for the desired standard deviation and mean.  If
unspecified, <code>σ</code> defaults to 1.0 and <code>µ</code> defaults to 0.0.  The keywords <code>std</code>
and <code>mean</code> may be used instead of <code>σ</code> and <code>µ</code>, respectively.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="randqn([rng,] T::Type{&lt;:Integer}, dims::Integer...; σ=1.0, µ=0.0)
randqn([rng,] T::Type{&lt;:Integer}, dims::Integer...; std=1.0, mean=0.0)
randqn([rng,] ::Type{&lt;:Complex{T}}, dims::Integer...; σ=1.0, µ=0.0) where T&lt;:Integer
randqn([rng,] ::Type{&lt;:Complex{T}}, dims::Integer...; std=1.0, mean=0.0) where T&lt;:Integer"><pre class="notranslate"><code>randqn([rng,] T::Type{&lt;:Integer}, dims::Integer...; σ=1.0, µ=0.0)
randqn([rng,] T::Type{&lt;:Integer}, dims::Integer...; std=1.0, mean=0.0)
randqn([rng,] ::Type{&lt;:Complex{T}}, dims::Integer...; σ=1.0, µ=0.0) where T&lt;:Integer
randqn([rng,] ::Type{&lt;:Complex{T}}, dims::Integer...; std=1.0, mean=0.0) where T&lt;:Integer
</code></pre></div>
<p dir="auto">Generate samples from the normal distribution <code>𝒩(μ,σ²)</code> quantized and clamped
to the Integer subtype <code>T</code>.  Note that the <code>σ</code> and <code>μ</code> are properties of the
distribution from which the samples are drawn.  They are not necessarily
properties of the returned samples.  For example, quantization will alter the
standard deviation of the output values, so <code>std(randqn(Int8, 10^6, std=x))</code> may
be quite different from <code>x</code>, especially as <code>x</code> approaches (and exceeds)
<code>typemax(T)</code>.  Keyword arguments <code>std</code> and <code>mean</code> may be used instead of <code>σ</code> and
<code>μ</code>, resp.  If both forms are used, the single character keyword argument takes
precedence.</p>
<p dir="auto">For complex types, the standard deviation <code>σ</code> or <code>std</code> may be given as a <code>Real</code>
or <code>Complex</code>.  If <code>σ</code> is given as a <code>Real</code>, it specifies the standard deviation
of the complex values (i.e. each real/imaginary component will have a standard
deviarion of <code>σ/sqrt(2)</code>). If given as a <code>Complex</code>, each real/imaginary
component of <code>σ</code> will be the standard deviation of the corresponding components
of the output.  Note that <code>σ=1.0</code> is equivalent to <code>σ=(1+1im)/sqrt(2)</code>.
Likewise, if <code>µ</code> is a <code>Real</code>, the complex mean will be <code>µ+µ*im</code>.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QuantizedNoise

julia&gt; randqn(Int8, std=13)
25

julia&gt; randqn(Int8, 2, 3, σ=13)
2×3 Matrix{Int8}:
  97  108  89
 100   97  98

julia&gt; randqn(Int8, 2, 3, σ=10, µ=100)
2×3 Matrix{Int8}:
 104  101  99
  83   94  94

julia&gt; randqn(Complex{Int8}, 2, 3, σ=30)
2×3 Matrix{Complex{Int8}}:
   6-17im  -29-48im  -19+11im
 -31+18im    1+9im   -37+22im"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QuantizedNoise

julia<span class="pl-k">&gt;</span> <span class="pl-c1">randqn</span>(Int8, std<span class="pl-k">=</span><span class="pl-c1">13</span>)
<span class="pl-c1">25</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">randqn</span>(Int8, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, σ<span class="pl-k">=</span><span class="pl-c1">13</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span> Matrix{Int8}<span class="pl-k">:</span>
  <span class="pl-c1">97</span>  <span class="pl-c1">108</span>  <span class="pl-c1">89</span>
 <span class="pl-c1">100</span>   <span class="pl-c1">97</span>  <span class="pl-c1">98</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">randqn</span>(Int8, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, σ<span class="pl-k">=</span><span class="pl-c1">10</span>, µ<span class="pl-k">=</span><span class="pl-c1">100</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span> Matrix{Int8}<span class="pl-k">:</span>
 <span class="pl-c1">104</span>  <span class="pl-c1">101</span>  <span class="pl-c1">99</span>
  <span class="pl-c1">83</span>   <span class="pl-c1">94</span>  <span class="pl-c1">94</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">randqn</span>(Complex{Int8}, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, σ<span class="pl-k">=</span><span class="pl-c1">30</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span> Matrix{Complex{Int8}}<span class="pl-k">:</span>
   <span class="pl-c1">6</span><span class="pl-k">-</span><span class="pl-c1">17im</span>  <span class="pl-k">-</span><span class="pl-c1">29</span><span class="pl-k">-</span><span class="pl-c1">48im</span>  <span class="pl-k">-</span><span class="pl-c1">19</span><span class="pl-k">+</span><span class="pl-c1">11im</span>
 <span class="pl-k">-</span><span class="pl-c1">31</span><span class="pl-k">+</span><span class="pl-c1">18im</span>    <span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">9im</span>   <span class="pl-k">-</span><span class="pl-c1">37</span><span class="pl-k">+</span><span class="pl-c1">22im</span></pre></div>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Until this becomes part of Julia's global registry, this package can be
installed from the Julia REPL by:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;https://github.com/david-macmahon/QuantizedNoise.jl&quot;)"><pre class="notranslate"><code>using Pkg
Pkg.add("https://github.com/david-macmahon/QuantizedNoise.jl")
</code></pre></div>
<p dir="auto">...or...</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="]add https://github.com/david-macmahon/QuantizedNoise.jl"><pre class="notranslate"><code>]add https://github.com/david-macmahon/QuantizedNoise.jl
</code></pre></div>
</article></div>