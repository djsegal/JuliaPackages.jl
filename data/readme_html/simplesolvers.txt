<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simplesolvers" class="anchor" aria-hidden="true" href="#simplesolvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimpleSolvers</h1>
<p dir="auto"><a href="https://JuliaGNI.github.io/SimpleSolvers.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaGNI.github.io/SimpleSolvers.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/S/SimpleSolvers.html" rel="nofollow"><img src="https://camo.githubusercontent.com/265678f4c5436b347487b92c43346086552dd093cd1f7408d6559dc94f94d26f/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f532f53696d706c65536f6c766572732e737667" alt="PkgEval Status" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/S/SimpleSolvers.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaGNI/SimpleSolvers.jl/actions"><img src="https://github.com/JuliaGNI/SimpleSolvers.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaGNI/SimpleSolvers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c7b70816bbcd82ede8ed8fbb35b9c0aff72d510467a3376d40dc1e81ca539e18/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961474e492f53696d706c65536f6c766572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaGNI/SimpleSolvers.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.4317189" rel="nofollow"><img src="https://camo.githubusercontent.com/6c9b1fcb954d431baeda573eed4034409c94edbffeceb1e10e64fe15547d8f13/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f646f692f31302e353238312f7a656e6f646f2e343331373138392e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/doi/10.5281/zenodo.4317189.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides simple linear and nonlinear solvers such as LU decomposition and Newton's method. Under a unified interface, it provides low-overhead implementations in pure Julia, applicable to a wide range of data types, and wraps methods from other Julia libraries. Nonlinear solvers can be used with linesearch algorithms. Jacobians can be computed via automatic differentiation, finite differences or manually.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto">If you use SimpleSolvers.jl in your work, please consider citing it by</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@misc{Kraus:2020:SimpleSolvers,
  title={SimpleSolvers.jl: Simple linear and nonlinear solvers in Julia},
  author={Kraus, Michael},
  year={2020},
  howpublished={\url{https://github.com/JuliaGNI/SimpleSolvers.jl}},
  doi={10.5281/zenodo.4317189}
}"><pre class="notranslate"><code>@misc{Kraus:2020:SimpleSolvers,
  title={SimpleSolvers.jl: Simple linear and nonlinear solvers in Julia},
  author={Kraus, Michael},
  year={2020},
  howpublished={\url{https://github.com/JuliaGNI/SimpleSolvers.jl}},
  doi={10.5281/zenodo.4317189}
}
</code></pre></div>
</article></div>