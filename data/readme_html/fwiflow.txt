<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fwiflow-wave-and-flow-inversion-with-intrusive-automatic-differentiation" class="anchor" aria-hidden="true" href="#fwiflow-wave-and-flow-inversion-with-intrusive-automatic-differentiation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FwiFlow: Wave and Flow Inversion with Intrusive Automatic Differentiation</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lidongzh/FwiFlow.jl/actions/workflows/main.yml/badge.svg"><img src="https://github.com/lidongzh/FwiFlow.jl/actions/workflows/main.yml/badge.svg" alt="" style="max-width: 100%;"></a></p>
<table>
<thead>
<tr>
<th>Quick Install</th>
<th>Documentation</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>using Pkg; Pkg.add("FwiFlow")</code></td>
<td><a href="https://lidongzh.github.io/FwiFlow.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-highlights" class="anchor" aria-hidden="true" href="#highlights"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Highlights</h2>
<ul dir="auto">
<li>GPU-accelerated FWI module with checkpointing schemes;</li>
<li>AMG-accelerated implicit pressure-implicit saturation scheme;</li>
<li>Time Fractional Partial Differential Equations</li>
</ul>
<h2 dir="auto"><a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Philosophy</h2>
<p dir="auto">We treat physical simulations as a chain of multiple differentiable operators, such as discrete Laplacian evaluation, a Poisson solver, and a single implicit time-stepping for nonlinear PDEs. They are like building blocks that can be assembled to make simulation tools for new physical models.</p>
<p dir="auto">Those operators are differentiable and integrated within a computational graph so that the gradients can be computed automatically and efficiently via analyzing the dependency in the graph. Also, independent operators run in parallel, thanks to the graph-based parallelization mechanism of TensorFlow. With the gradients, we can perform gradient-based PDE-constrained optimization for inverse problems.</p>
<p dir="auto">FwiFlow is built on <a href="https://github.com/kailaix/ADCME.jl">ADCME</a>, a powerful static-graph-based automatic differentiation library for scientific computing (with TensorFlow backend). FwiFlow implements the idea of <strong>Intrusive Automatic Differentiation</strong>.</p>
<p align="center" dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="docs/src/assets/op.png"><img src="docs/src/assets/op.png" width="50%" style="max-width: 100%;"></a>
</p>
<h2 dir="auto"><a id="user-content-applications" class="anchor" aria-hidden="true" href="#applications"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Applications</h2>
<p dir="auto">The following examples are for inversion</p>
<table>
<thead>
<tr>
<th><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/marmousi_inv.png"><img src="docs/src/assets/marmousi_inv.png" width="270" style="max-width: 100%;"></a></th>
<th><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/flow.png"><img src="docs/src/assets/flow.png" width="270" style="max-width: 100%;"></a></th>
<th><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/diagram.png"><img src="docs/src/assets/diagram.png" width="270" style="max-width: 100%;"></a></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://lidongzh.github.io/FwiFlow.jl/dev/tutorials/fwi/" rel="nofollow">Full-waveform Inversion</a></td>
<td><a href="https://lidongzh.github.io/FwiFlow.jl/dev/tutorials/flow/" rel="nofollow">Two Phase Flow</a></td>
<td>FWI-Two Phase Flow Coupled Inversion</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/frac.png"><img src="docs/src/assets/frac.png" width="270" style="max-width: 100%;"></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://lidongzh.github.io/FwiFlow.jl/dev/tutorials/timefrac/" rel="nofollow">Time Fractional PDE</a></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-research-papers" class="anchor" aria-hidden="true" href="#research-papers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Research Papers</h2>
<ol dir="auto">
<li><strong>Dongzhuo Li</strong> (co-first author), <strong>Kailai Xu</strong> (co-first author), Jerry M. Harris, and Eric Darve. <a href="https://arxiv.org/abs/1912.07552" rel="nofollow"><em>Coupled Time‐Lapse Full‐Waveform Inversion for Subsurface Flow Problems Using Intrusive Automatic Differentiation</em></a>, <em>Water Resources Research</em>, <em>56</em>(8), p.e2019WR027032 (<a href="https://doi.org/10.1029/2019WR027032" rel="nofollow">https://doi.org/10.1029/2019WR027032</a>).</li>
<li><strong>Kailai Xu</strong>  (co-first author), <strong>Dongzhuo Li</strong>  (co-first author), Eric Darve, and Jerry M. Harris. <a href="http://arxiv.org/abs/1912.07547" rel="nofollow"><em>Learning Hidden Dynamics using Intrusive Automatic Differentiation</em></a>.</li>
</ol>
<h2 dir="auto"><a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Misc</h2>
<p dir="auto">The <strong>TorchFWI</strong> package, which shares the elastic FWI part, can be found <a href="https://github.com/lidongzh/TorchFWI"><em>here</em></a>. It may be helpful if one wants to experiment with PyTorch. <br>
An older version of this repository can be found <a href="https://github.com/lidongzh/TwoPhaseFlowFWI"><em>here</em></a>. It contains all scripts to recreate results in paper 1.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LICENSE</h2>
<p dir="auto">MIT License
Copyright (c) 2019 Dongzhuo Li and Kailai Xu</p>
</article></div>