<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mp3" class="anchor" aria-hidden="true" href="#mp3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MP3</h1>
<p dir="auto"><em>This project is unmaintained</em></p>
<p dir="auto"><a href="https://github.com/JuliaAudio/MP3.jl/actions/workflows/Tests.yml"><img src="https://github.com/JuliaAudio/MP3.jl/actions/workflows/Tests.yml/badge.svg" alt="Tests" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaAudio/MP3.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2e1d219bd094bc30939373c0ec4de5b23911f507219a3d963c008ef00b78be22/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961417564696f2f4d50332e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaAudio/MP3.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">MP3 is a <a href="http://julialang.org/" rel="nofollow">Julia</a> library for reading and writing MP3 files.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The API follows the idioms of <a href="https://github.com/JuliaIO/FileIO.jl">FileIO</a>, and uses <a href="https://github.com/JuliaAudio/SampledSignals.jl">SampleBuf</a> type to store audio samples. This should supplement <a href="https://github.com/JuliaAudio/LibSndFile.jl">LibSndFile</a> which does not support MP3 for patent issues.</p>
<h3 dir="auto"><a id="user-content-loading-mp3" class="anchor" aria-hidden="true" href="#loading-mp3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Loading MP3</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using MP3

julia&gt; audio = load(&quot;Sour_Tennessee_Red_Sting.mp3&quot;)
245376-frame, 2-channel SampleBuf{FixedPointNumbers.Fixed{Int16,15}, 2, SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}}
5.564081632653061 s at 44100 s⁻¹
▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▆▇▇▇▇▆▆▅▄▄▄▄▄▄▇▇▇▇▇▆▇▇▇▇▇▆▅▅▄▄▃▃▃▃▃▂▂▂▁▂▁▁▁
▇▇▇▆▇▇▇▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▅▇▇▆▆▆▅▅▄▄▄▅▄▃▇▇▇▇▇▆▇▇▇▇▆▆▅▄▄▄▄▃▃▃▃▂▂▂▁▂▁▁▁"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MP3

julia<span class="pl-k">&gt;</span> audio <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>Sour_Tennessee_Red_Sting.mp3<span class="pl-pds">"</span></span>)
<span class="pl-c1">245376</span><span class="pl-k">-</span>frame, <span class="pl-c1">2</span><span class="pl-k">-</span>channel SampleBuf{FixedPointNumbers<span class="pl-k">.</span>Fixed{Int16,<span class="pl-c1">15</span>}, <span class="pl-c1">2</span>, SIUnits<span class="pl-k">.</span>SIQuantity{Int64,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>}}
<span class="pl-c1">5.564081632653061</span> s at <span class="pl-c1">44100</span> s⁻¹
▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▆▇▇▇▇▆▆▅▄▄▄▄▄▄▇▇▇▇▇▆▇▇▇▇▇▆▅▅▄▄▃▃▃▃▃▂▂▂▁▂▁▁▁
▇▇▇▆▇▇▇▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▅▇▇▆▆▆▅▅▄▄▄▅▄▃▇▇▇▇▇▆▇▇▇▇▆▆▅▄▄▄▄▃▃▃▃▂▂▂▁▂▁▁▁</pre></div>
<h3 dir="auto"><a id="user-content-saving-mp3" class="anchor" aria-hidden="true" href="#saving-mp3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Saving MP3</h3>
<p dir="auto">Various options for encoding MP3 files can be specified using keyword arguments to <code>save()</code> function. An ID3v2 block will be added in front of the file, and the following tags can be optionally given as keyword arguments: <code>title</code>, <code>artist</code>, <code>album</code>, <code>year</code>, <code>comment</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; save(&quot;mono.mp3&quot;, audio; nchannels = 1)           # save as mono audio

julia&gt; save(&quot;small.mp3&quot;, audio; bitrate = 128)          # set bitrate to 128kbps

julia&gt; save(&quot;vbr.mp3&quot;, audio; VBR = true, quality = 0)  # encode as highest-quality VBR

julia&gt; save(&quot;down.mp3&quot;, audio; samplerate = 8kHz)       # downsample to 8 kHz"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>mono.mp3<span class="pl-pds">"</span></span>, audio; nchannels <span class="pl-k">=</span> <span class="pl-c1">1</span>)           <span class="pl-c"><span class="pl-c">#</span> save as mono audio</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>small.mp3<span class="pl-pds">"</span></span>, audio; bitrate <span class="pl-k">=</span> <span class="pl-c1">128</span>)          <span class="pl-c"><span class="pl-c">#</span> set bitrate to 128kbps</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>vbr.mp3<span class="pl-pds">"</span></span>, audio; VBR <span class="pl-k">=</span> <span class="pl-c1">true</span>, quality <span class="pl-k">=</span> <span class="pl-c1">0</span>)  <span class="pl-c"><span class="pl-c">#</span> encode as highest-quality VBR</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>down.mp3<span class="pl-pds">"</span></span>, audio; samplerate <span class="pl-k">=</span> <span class="pl-c1">8</span>kHz)       <span class="pl-c"><span class="pl-c">#</span> downsample to 8 kHz</span></pre></div>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This <a href="http://julialang.org/" rel="nofollow">Julia</a> library is distributed under MIT license. It uses <a href="http://lame.sourceforge.net/" rel="nofollow">LAME</a> for encoding and <a href="https://www.mpg123.de/" rel="nofollow">mpg123</a> for decoding mp3, which are dynamically linked, binding to the terms of their LGPL.</p>
</article></div>