<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-reactive-extensions-library-for-julia" class="anchor" aria-hidden="true" href="#reactive-extensions-library-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reactive extensions library for Julia</h1>
<p><a href="https://travis-ci.org/biaslab/Rocket.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/27b75e06bc86f1193e325887e3e79a2492c48287/68747470733a2f2f7472617669732d63692e6f72672f626961736c61622f526f636b65742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/biaslab/Rocket.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://biaslab.github.io/rocket/docs" rel="nofollow"><img src="https://camo.githubusercontent.com/e46edd77c7af595ff52e8e423cba725ca97f714b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/doc-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/biaslab/Rocket.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/10ebc363d37b5d03404c83a706bee4d76b1c44f0/68747470733a2f2f636f6465636f762e696f2f67682f626961736c61622f526f636b65742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/biaslab/Rocket.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Rocket.jl is a Julia package for reactive programming using Observables, to make it easier to work with asynchronous data.</p>
<p>In order to achieve best performance and convenient API Rocket.jl combines <a href="https://en.wikipedia.org/wiki/Observer_pattern" rel="nofollow">Observer pattern</a>, <a href="https://en.wikipedia.org/wiki/Actor_model" rel="nofollow">Actor model</a> and <a href="https://en.wikipedia.org/wiki/Functional_programming" rel="nofollow">Functional programming</a>.</p>
<p>Inspired by <a href="https://github.com/ReactiveX/rxjs">RxJS</a> and <a href="https://github.com/ReactiveX">ReactiveX</a> communities.</p>
<p>Rocket.jl has been designed with a focus on performance and modularity.</p>
<p>The essential concepts in Rocket.jl are:</p>
<ul>
<li><strong>Observable</strong>: represents a collection of future messages (data or/and events).</li>
<li><strong>Actor</strong>: is an object that knows how to react on incoming messages delivered by the <strong>Observable</strong>.</li>
<li><strong>Subscription</strong>: represents a teardown logic which might be useful for cancelling the execution of an <strong>Observable</strong>.</li>
<li><strong>Operators</strong>: are objects that enable a functional programming style to dealing with collections with operations like <code>map</code>, <code>filter</code>, <code>reduce</code>, etc.</li>
<li><strong>Subject</strong>: the way of multicasting a message to multiple Observers.</li>
</ul>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick start</h2>
<p>For a quick start and basic introduction take a look at the <a href="https://github.com/biaslab/Rocket.jl/tree/master/demo">demo folder</a> and <a href="https://github.com/biaslab/Rocket.jl/blob/master/demo/00_quick_start.ipynb">Quick Start notebook</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Rocket, Compose, IJulia ; <span class="pl-c1">set_default_graphic_size</span>(<span class="pl-c1">35</span>cm, <span class="pl-c1">2</span>cm)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">draw_ball</span>(t)
    IJulia<span class="pl-k">.</span><span class="pl-c1">clear_output</span>(<span class="pl-c1">true</span>)
    x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">exp</span>(<span class="pl-k">-</span><span class="pl-c1">0.01</span>t) <span class="pl-k">+</span> <span class="pl-c1">1</span>                     <span class="pl-c"><span class="pl-c">#</span> x coordinate</span>
    y <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">abs</span>(<span class="pl-c1">exp</span>(<span class="pl-k">-</span><span class="pl-c1">0.04</span>t)<span class="pl-k">*</span>(<span class="pl-c1">cos</span>(<span class="pl-c1">0.1</span>t))) <span class="pl-k">+</span> <span class="pl-c1">0.83</span> <span class="pl-c"><span class="pl-c">#</span> y coordinate</span>
    <span class="pl-c1">display</span>(<span class="pl-c1">compose</span>(<span class="pl-c1">context</span>(), <span class="pl-c1">circle</span>(x, y, <span class="pl-c1">0.01</span>)))
<span class="pl-k">end</span></pre></div>
<div class="highlight highlight-source-julia"><pre>source <span class="pl-k">=</span> <span class="pl-c1">interval</span>(<span class="pl-c1">20</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">take</span>(<span class="pl-c1">200</span>) <span class="pl-c"><span class="pl-c">#</span> Take only first 200 emissions</span>

subscription <span class="pl-k">=</span> <span class="pl-c1">subscribe!</span>(source, draw_ball)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="demo/pics/bouncing-ball.gif"><img src="demo/pics/bouncing-ball.gif" alt="Alt Text" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">unsubscribe!</span>(subscription) <span class="pl-c"><span class="pl-c">#</span> It is possible to unsubscribe before the stream ends    </span>
IJulia<span class="pl-k">.</span><span class="pl-c1">clear_output</span>(<span class="pl-c1">false</span>);</pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p>Full documentation is available at <a href="http://biaslab.github.io/rocket/docs/" rel="nofollow">BIASlab website</a>.</p>
<p>It is also possible to build a documentation locally. Just execute</p>
<div class="highlight highlight-source-shell"><pre>$ julia make.jl</pre></div>
<p>in the <code>docs/</code> directory to build a local version of the documentation.</p>
<h2><a id="user-content-first-example" class="anchor" aria-hidden="true" href="#first-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>First example</h2>
<p>Normally you use an arrays for processing some data.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">for</span> value <span class="pl-k">in</span> array_of_values
    <span class="pl-c1">doSomethingWithMyData</span>(value)
<span class="pl-k">end</span></pre></div>
<p>In Rocket.jl you will use an observable.</p>
<div class="highlight highlight-source-julia"><pre>subscription <span class="pl-k">=</span> <span class="pl-c1">subscribe!</span>(source_of_values, <span class="pl-c1">lambda</span>(
    on_next     <span class="pl-k">=</span> (data)  <span class="pl-k">-&gt;</span> <span class="pl-c1">doSomethingWithMyData</span>(data),
    on_error    <span class="pl-k">=</span> (error) <span class="pl-k">-&gt;</span> <span class="pl-c1">doSomethingWithAnError</span>(error),
    on_complete <span class="pl-k">=</span> ()      <span class="pl-k">-&gt;</span> <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Completed!<span class="pl-pds">"</span></span>)
))</pre></div>
<p>At some point of time you may decide to stop listening for new messages.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">unsubscribe!</span>(subscription)</pre></div>
<h2><a id="user-content-actors" class="anchor" aria-hidden="true" href="#actors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Actors</h2>
<p>To process messages from an observable you have to define an Actor that know how to react on incoming messages.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">struct</span> MyActor <span class="pl-k">&lt;:</span> <span class="pl-c1">Rocket.Actor{Int}</span> <span class="pl-k">end</span>

Rocket<span class="pl-k">.</span><span class="pl-en">on_next!</span>(actor<span class="pl-k">::</span><span class="pl-c1">MyActor</span>, data<span class="pl-k">::</span><span class="pl-c1">Int</span>) <span class="pl-k">=</span> <span class="pl-c1">doSomethingWithMyData</span>(data)
Rocket<span class="pl-k">.</span><span class="pl-en">on_error!</span>(actor<span class="pl-k">::</span><span class="pl-c1">MyActor</span>, error)    <span class="pl-k">=</span> <span class="pl-c1">doSomethingWithAnError</span>(error)
Rocket<span class="pl-k">.</span><span class="pl-en">on_complete!</span>(actor<span class="pl-k">::</span><span class="pl-c1">MyActor</span>)        <span class="pl-k">=</span> <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Completed!<span class="pl-pds">"</span></span>)</pre></div>
<p>Actor can also have its own local state</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">struct</span> StoreActor{D} <span class="pl-k">&lt;:</span> <span class="pl-c1">Rocket.Actor{D}</span>
    values <span class="pl-k">::</span> <span class="pl-c1">Vector{D}</span>

    <span class="pl-en">StoreActor</span><span class="pl-c1">{D}</span>() <span class="pl-k">where</span> D <span class="pl-k">=</span> <span class="pl-c1">new</span>(<span class="pl-c1">Vector</span><span class="pl-c1">{D}</span>())
<span class="pl-k">end</span>

Rocket<span class="pl-k">.</span><span class="pl-en">on_next!</span>(actor<span class="pl-k">::</span><span class="pl-c1">StoreActor{D}</span>, data<span class="pl-k">::</span><span class="pl-c1">D</span>) <span class="pl-k">where</span> D <span class="pl-k">=</span> <span class="pl-c1">push!</span>(actor<span class="pl-k">.</span>values, data)
Rocket<span class="pl-k">.</span><span class="pl-en">on_error!</span>(actor<span class="pl-k">::</span><span class="pl-c1">StoreActor</span>, error)             <span class="pl-k">=</span> <span class="pl-c1">doSomethingWithAnError</span>(error)
Rocket<span class="pl-k">.</span><span class="pl-en">on_complete!</span>(actor<span class="pl-k">::</span><span class="pl-c1">StoreActor</span>)                 <span class="pl-k">=</span> <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Completed: <span class="pl-v">$(actor<span class="pl-k">.</span>values)</span><span class="pl-pds">"</span></span>)</pre></div>
<p>For debugging purposes you can use a general <code>LambdaActor</code> actor or just pass a function object as an actor in <code>subscribe!</code> function.</p>
<h2><a id="user-content-operators" class="anchor" aria-hidden="true" href="#operators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Operators</h2>
<p>What makes Rocket.jl powerful is its ability to help you process, transform and modify the messages flow through your observables using <strong>Operators</strong>.</p>
<p>List of all available operators can be found in the documentation (<a href="https://biaslab.github.io/rocket/docs/operators/all.html" rel="nofollow">link</a>).</p>
<div class="highlight highlight-source-julia"><pre>squared_int_values <span class="pl-k">=</span> source_of_int_values <span class="pl-k">|&gt;</span> <span class="pl-c1">map</span>(Int, (d) <span class="pl-k">-&gt;</span> d <span class="pl-k">^</span> <span class="pl-c1">2</span>)
<span class="pl-c1">subscribe!</span>(squared_int_values, <span class="pl-c1">lambda</span>(
    on_next <span class="pl-k">=</span> (data) <span class="pl-k">-&gt;</span> <span class="pl-c1">println</span>(data)
))</pre></div>
<h2><a id="user-content-rocketjl-is-fast" class="anchor" aria-hidden="true" href="#rocketjl-is-fast"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Rocket.jl is fast</h2>
<p>Rocket.jl has been designed with a focus on efficiency, scalability and maximum performance. Below is a benchmark comparison between Rocket.jl, <a href="https://github.com/TsurHerman/Signals.jl">Signals.jl</a> and <a href="https://github.com/JuliaGizmos/Reactive.jl">Reactive.jl</a>.</p>
<p>Code is available in <a href="https://github.com/biaslab/Rocket.jl/tree/master/demo">demo folder</a>:</p>
<p><a target="_blank" rel="noopener noreferrer" href="demo/pics/reactive-rocket.svg?raw=true&amp;sanitize=true"><img src="demo/pics/reactive-rocket.svg?raw=true&amp;sanitize=true" alt="Rocket.jl vs Reactive.jl" title="Rocket.jl vs Reactive.jl" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="demo/pics/signals-rocket.svg?raw=true&amp;sanitize=true"><img src="demo/pics/signals-rocket.svg?raw=true&amp;sanitize=true" alt="Rocket.jl vs Signals.jl" title="Rocket.jl vs Signals.jl" style="max-width:100%;"></a></p>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>TODO</h2>
<p>This package in under development and some features of reactive framework may be missing</p>
<h3><a id="user-content-list-of-not-implemented-features" class="anchor" aria-hidden="true" href="#list-of-not-implemented-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>List of not implemented features</h3>
<ul>
<li>High-order observables and operators (<code>mergeMap</code>, <code>concatMap</code>, etc..)</li>
<li>Join operators: <code>combineLatest</code>, <code>concatAll</code>, etc..</li>
<li>More transformation, filtering, utility operators</li>
<li>Possible bugs (welcome to open a PR)</li>
</ul>
</article></div>