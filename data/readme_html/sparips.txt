<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-sparipsjl-practical-sparsification-of-rips-complexes-for-approximating-persistent-homology" class="anchor" aria-hidden="true" href="#sparipsjl-practical-sparsification-of-rips-complexes-for-approximating-persistent-homology"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sparips.jl: Practical Sparsification of Rips-complexes for approximating persistent homology</h2>
<p><code>Sparips.jl</code> provides a sparsifying preprocessor for the computation of persistent homology of Rips complexes of finite metric spaces. The original paper and algorithm is available on the <a href="https://arxiv.org/abs/1807.09982" rel="nofollow">arxiv</a>. If you use <code>Sparips.jl</code> in your research, please cite the paper, as well as Ulrich Bauer who wrote the underlying solver <a href="https://github.com/Ripser/ripser">ripser</a>.</p>
<p>The usage of <code>Sparips.jl</code> is explained in the <a href="./docs/tutorial/sparips_tutorial.md">tutorial</a>.</p>
<p>We have some preliminary <a href="./docs/benchmarks/comparison_gudhi.md">benchmarks</a> of sparsification rates and runtimes, compared to <a href="http://gudhi.gforge.inria.fr/" rel="nofollow">gudhi</a>.</p>
<p>The API has not yet stabilized; it is for this reason that the documentation is still rather lacking. If there are components of <code>Sparips.jl</code> that you would like to use in a different project, please open an issue. For example, the metric contraction tree might be a useful basis also in the context of manifold learning.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><code>Sparips.jl</code> is not registered yet. It can be installed by</p>
<pre><code>(v1.0) pkg&gt; add https://github.com/bbrehm/Sparips.jl
(v1.0) pkg&gt; build Sparips
</code></pre>
</article></div>