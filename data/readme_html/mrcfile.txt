<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mrcfilejl" class="anchor" aria-hidden="true" href="#mrcfilejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MRCFile.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width: 100%;"></a>
<a href="https://github.com/sethaxen/MRCFile.jl/actions?query=workflow%3ACI+branch%main"><img src="https://github.com/sethaxen/MRCFile.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/sethaxen/MRCFile.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ba343e865c2d53e659e6d1ff0ab1338d561b35947a0d5e92c5b7a5e58b87701b/68747470733a2f2f636f6465636f762e696f2f67682f736574686178656e2f4d524346696c652e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/sethaxen/MRCFile.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://sethaxen.github.io/MRCFile.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://sethaxen.github.io/MRCFile.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a></p>
<p dir="auto">MRCFile.jl implements the <a href="https://www.ccpem.ac.uk/mrc_format/mrc2014.php" rel="nofollow">MRC2014 format</a> for storing image and volume data such as those produced by electron microscopy.
It offers the ability to read, edit, and write MRC files, as well as utility functions for extracting useful information from the headers.</p>
<p dir="auto">The key type is <code>MRCData</code>, which contains the contents of the MRC file, accessible with <code>header</code> and <code>extendedheader</code>.
<code>MRCData</code> is an <code>AbstractArray</code> whose elements are those of the data portion of the file and can be accessed or modified accordingly.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;MRCFile&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MRCFile<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">This example downloads a map of <a href="https://www.emdataresource.org/EMD-5778" rel="nofollow">TRPV1</a> and animates slices taken through the map.</p>
<p dir="auto">To set-up this example, install FTPClient and Plots with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;FTPClient&quot;)
Pkg.add(&quot;Plots&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>FTPClient<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Plots<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MRCFile, FTPClient, Plots

emdid = 5778 # TRPV1
ftp = FTP(hostname = &quot;ftp.rcsb.org/pub/emdb/structures/EMD-$(emdid)/map&quot;)
dmap = read(download(ftp, &quot;emd_$(emdid).map.gz&quot;), MRCData)
close(ftp)
dmin, dmax = extrema(header(dmap))
drange = dmax - dmin

anim = @animate for xsection in eachmapsection(dmap)
    plot(RGB.((xsection .- dmin) ./ drange))
end

gif(anim, &quot;emd-$(emdid)_slices.gif&quot;, fps = 30)"><pre><span class="pl-k">using</span> MRCFile, FTPClient, Plots

emdid <span class="pl-k">=</span> <span class="pl-c1">5778</span> <span class="pl-c"><span class="pl-c">#</span> TRPV1</span>
ftp <span class="pl-k">=</span> <span class="pl-c1">FTP</span>(hostname <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ftp.rcsb.org/pub/emdb/structures/EMD-<span class="pl-v">$(emdid)</span>/map<span class="pl-pds">"</span></span>)
dmap <span class="pl-k">=</span> <span class="pl-c1">read</span>(<span class="pl-c1">download</span>(ftp, <span class="pl-s"><span class="pl-pds">"</span>emd_<span class="pl-v">$(emdid)</span>.map.gz<span class="pl-pds">"</span></span>), MRCData)
<span class="pl-c1">close</span>(ftp)
dmin, dmax <span class="pl-k">=</span> <span class="pl-c1">extrema</span>(<span class="pl-c1">header</span>(dmap))
drange <span class="pl-k">=</span> dmax <span class="pl-k">-</span> dmin

anim <span class="pl-k">=</span> <span class="pl-c1">@animate</span> <span class="pl-k">for</span> xsection <span class="pl-k">in</span> <span class="pl-c1">eachmapsection</span>(dmap)
    <span class="pl-c1">plot</span>(<span class="pl-c1">RGB</span>.((xsection <span class="pl-k">.-</span> dmin) <span class="pl-k">./</span> drange))
<span class="pl-k">end</span>

<span class="pl-c1">gif</span>(anim, <span class="pl-s"><span class="pl-pds">"</span>emd-<span class="pl-v">$(emdid)</span>_slices.gif<span class="pl-pds">"</span></span>, fps <span class="pl-k">=</span> <span class="pl-c1">30</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/sethaxen/MRCFile.jl/blob/main/docs/src/assets/emd-5778_slices.gif"><img src="https://github.com/sethaxen/MRCFile.jl/raw/main/docs/src/assets/emd-5778_slices.gif" alt="EMD-5778 slices" data-animated-image="" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-reading-a-map-as-a-memory-mapped-array" class="anchor" aria-hidden="true" href="#reading-a-map-as-a-memory-mapped-array"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading a map as a memory-mapped array</h1>
<p dir="auto">MRC files can be huge.
It is convenient then to load their data as <a href="https://docs.julialang.org/en/v1/stdlib/Mmap/" rel="nofollow">memory-mapped arrays</a>.
This is easy to do:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MRCFile

path = &quot;mymap.mrc&quot; # path to large uncompressed MRC file
mrc = read_mmap(path, MRCData)
... # do something"><pre><span class="pl-k">using</span> MRCFile

path <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>mymap.mrc<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> path to large uncompressed MRC file</span>
mrc <span class="pl-k">=</span> <span class="pl-c1">read_mmap</span>(path, MRCData)
<span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> do something</span></pre></div>
<p dir="auto">Note that writing to memory-mapped arrays is currently not supported.</p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<p dir="auto"><a href="https://github.com/ccpem/mrcfile">mrcfile</a> is a full-featured Python implementation of of the MRC2014 format.</p>
</article></div>