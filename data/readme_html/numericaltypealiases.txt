<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev" rel="nofollow"><img src="docs/src/assets/header.png" alt="numericaltypes-header" style="max-width: 100%;"></a></p>
<p dir="auto">A collection of simple type aliases restricting to numerical vectors or matrices for multiple dispatch.</p>
<p dir="auto">Please read the <a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev" rel="nofollow">documentation</a> for detailed usage and tutorials.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Stable Docs</strong></th>
<th align="center"><strong>Dev Docs</strong></th>
<th align="center"><strong>Testing Status</strong></th>
<th align="center"><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/AP6YC/NumericalTypeAliases.jl/actions?query=workflow%3ACI"><img src="https://github.com/AP6YC/NumericalTypeAliases.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/AP6YC/NumericalTypeAliases.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4be91275212c8d0ace52456fba2cad3b682f6c870674028273ea3ff677ae0276/68747470733a2f2f636f6465636f762e696f2f67682f41503659432f4e756d65726963616c54797065416c69617365732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/AP6YC/NumericalTypeAliases.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="center"><strong>Release</strong></td>
<td align="center"><strong>JuliaHub Status</strong></td>
<td align="center"><strong>Dependents</strong></td>
<td align="center"><strong>Zenodo DOI</strong></td>
</tr>
<tr>
<td align="center"><a href="https://juliahub.com/ui/Packages/NumericalTypeAliases/Repio" rel="nofollow"><img src="https://camo.githubusercontent.com/d2ccd5ca966d922e95861f7941d27f6c5dcf1cc5e35d51bd739a60f0c366db9a/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4e756d65726963616c54797065416c69617365732f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/NumericalTypeAliases/version.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://juliahub.com/ui/Packages/NumericalTypeAliases/Repio" rel="nofollow"><img src="https://camo.githubusercontent.com/c4695739496c456d3968d312f2cd57d56cc1468562b24024585b4640af7f2c81/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4e756d65726963616c54797065416c69617365732f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/NumericalTypeAliases/pkgeval.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://juliahub.com/ui/Packages/NumericalTypeAliases/Repio?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/b7c0d5704f84666d42be28d46344dae891bfa265fb846577c0e0c83cbe0534e4/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4e756d65726963616c54797065416c69617365732f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/NumericalTypeAliases/deps.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://zenodo.org/badge/latestdoi/543317478" rel="nofollow"><img src="https://camo.githubusercontent.com/6e5fb7f2d0541fe1faf8029ad02d808482fed7ecfb0939f4ba45fe7ecd6e4292/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3534333331373437382e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/543317478.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<ul dir="auto">
<li><a href="#overview">Overview</a></li>
<li><a href="#installation">Installation</a></li>
<li><a href="#quickstart">Quickstart</a></li>
<li><a href="#aliases">Aliases</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#faqs">FAQs</a></li>
<li><a href="#acknowledgements">Acknowledgements</a>
<ul dir="auto">
<li><a href="#authors">Authors</a></li>
<li><a href="#history">History</a></li>
<li><a href="#license">License</a></li>
<li><a href="#citation">Citation</a></li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">The purpose of this package is to define a set of commonly used aliases in numerical algorithms when it is known that an input vector or matrix should have an element type of floating-point or integer.</p>
<p dir="auto">This package was inspired by the blurb in <code>StatsBase.jl</code> that defined a set of type aliases to serve this very purpose.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This project is distributed as a Julia package, available on <a href="https://juliahub.com/" rel="nofollow">JuliaHub</a>.
Its usage follows the usual Julia package installation procedure, interactively:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add NumericalTypeAliases"><pre>] add NumericalTypeAliases</pre></div>
<p dir="auto">or programmatically:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;NumericalTypeAliases&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>NumericalTypeAliases<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">You may also add the package directly from GitHub to get the latest changes between releases:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add https://github.com/AP6YC/NumericalTypeAliases.jl"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>AP6YC<span class="pl-k">/</span>NumericalTypeAliases<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart</h2>
<p dir="auto">After installation, load the module with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using NumericalTypeAliases"><pre><span class="pl-k">using</span> NumericalTypeAliases</pre></div>
<p dir="auto">Then, you can define your functions with these type aliases.
For example, say that you have a function that accepts only real-valued vectors because integer don't make sense in your specific situation:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function my_real_func(input::RealVector)
    # Do some math on a 1D vector with floats.
end"><pre><span class="pl-k">function</span> <span class="pl-en">my_real_func</span>(input<span class="pl-k">::</span><span class="pl-c1">RealVector</span>)
    <span class="pl-c"><span class="pl-c">#</span> Do some math on a 1D vector with floats.</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Or say that you know that you need a function to operate on an array with a list of indices.
You know that floats don't make sense for indexing, so you would write with <code>IntegerVector</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function my_indexer(data::RealMatrix, indices::IntegerVector)
    for ix in eachindex(indices)
        println(data[ix, :])
    end
end"><pre><span class="pl-k">function</span> <span class="pl-en">my_indexer</span>(data<span class="pl-k">::</span><span class="pl-c1">RealMatrix</span>, indices<span class="pl-k">::</span><span class="pl-c1">IntegerVector</span>)
    <span class="pl-k">for</span> ix <span class="pl-k">in</span> <span class="pl-c1">eachindex</span>(indices)
        <span class="pl-c1">println</span>(data[ix, :])
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Furthermore, if you know that you need a real-valued number but want your package to still support 32-bit systems, you wouldn't hardcode <code>Float64</code> everywhere like usual.
Instead, you could write with the abstract type <code>RealFP</code> (which is just an alias for <code>AbstractFloat</code>):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function my_float_func(datum::RealFP)
    # Do math with a real-valued floating point variable
end"><pre><span class="pl-k">function</span> <span class="pl-en">my_float_func</span>(datum<span class="pl-k">::</span><span class="pl-c1">RealFP</span>)
    <span class="pl-c"><span class="pl-c">#</span> Do math with a real-valued floating point variable</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">As a bonus, say that you want to specify a hardcoded type within a struct as a float, but you don't want to write Float64 or Float32.
In the same way that the Julia Base defines an <code>Int</code> as the largest integer on your system, you can define a variable to be of the larget native floating point variable on your system depending on the system word size with <code>Float</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Make a struct that will compile with the largest available float size
struct MyStruct
    cool_variable::Float
end

# Make a cool struct
MyStruct(3.14)"><pre><span class="pl-c"><span class="pl-c">#</span> Make a struct that will compile with the largest available float size</span>
<span class="pl-k">struct</span> MyStruct
    cool_variable<span class="pl-k">::</span><span class="pl-c1">Float</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Make a cool struct</span>
<span class="pl-c1">MyStruct</span>(<span class="pl-c1">3.14</span>)</pre></div>
<p dir="auto"><strong>NOTE</strong> <code>RealFP</code> is the abstract type, and <code>Float</code> is the concrete type.
This is just like in base Julia where <code>Integer</code> is the abstract type, and <code>Int</code> is the concrete type.
This <code>Float</code> type is provided for semantic convenience, though beware that it has been the <a href="https://discourse.julialang.org/t/float-type-like-int-type/1164" rel="nofollow">subject of great debate</a>.</p>
<h2 dir="auto"><a id="user-content-aliases" class="anchor" aria-hidden="true" href="#aliases"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Aliases</h2>
<p dir="auto">The aliases exported in this package are:</p>
<ul dir="auto">
<li>Real-valued arrays:
<ul dir="auto">
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.RealArray" rel="nofollow"><code>RealArray</code></a>: an arbitrary size array of floats.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.RealVector" rel="nofollow"><code>RealVector</code></a>: a 1-D vector of floats.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.RealMatrix" rel="nofollow"><code>RealMatrix</code></a>: a 2-D matrix of floats.</li>
</ul>
</li>
<li>Integer-valued arrays:
<ul dir="auto">
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.IntegerArray" rel="nofollow"><code>IntegerArray</code></a>: an arbitrary size array of integers.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.IntegerVector" rel="nofollow"><code>IntegerVector</code></a>: a 1-D vector of integers.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.IntegerMatrix" rel="nofollow"><code>IntegerMatrix</code></a>: a 2-D matrix of integers.</li>
</ul>
</li>
<li>Single values:
<ul dir="auto">
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.RealFP" rel="nofollow"><code>RealFP</code></a>: an abstract floating point type, same as AbstractFloat.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.Float" rel="nofollow"><code>Float</code></a>: a concrete floating point type, likely Float64 depending on the system.</li>
</ul>
</li>
</ul>
<p dir="auto">Furthermore, the package exports some convenience variables:</p>
<ul dir="auto">
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.NTA_VERSION" rel="nofollow"><code>NTA_VERSION</code></a>: the version of <code>NumericalTypeAliases.jl</code> that is installed on the system.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.NTA_ABSTRACT_TYPES" rel="nofollow"><code>NTA_ABSTRACT_TYPES</code></a>: a list of the abstract types in the package.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.NTA_CONCRETE_TYPES" rel="nofollow"><code>NTA_CONCRETE_TYPES</code></a>: a list of the concrete types in the package.</li>
<li><a href="https://AP6YC.github.io/NumericalTypeAliases.jl/dev/man/full-index/#NumericalTypeAliases.NTA_TYPES" rel="nofollow"><code>NTA_TYPES</code></a>: a combined list of all abstract and concrete types in the package.</li>
</ul>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">If you have a question or concern, please raise an <a href="https://github.com/AP6YC/NumericalTypeAliases.jl/issues">issue</a>.
For more details on how to work with the project, propose changes, or even contribute code, please see the <a href="https://ap6yc.github.io/NumericalTypeAliases.jl/dev/man/contributing/" rel="nofollow">Developer Notes</a> in the project's documentation.</p>
<p dir="auto">In summary:</p>
<ol dir="auto">
<li>Questions and requested changes should all be made in the <a href="https://github.com/AP6YC/NumericalTypeAliases.jl/issues">issues</a> page.
These are preferred because they are publicly viewable and could assist or educate others with similar issues or questions.</li>
<li>For changes, this project accepts pull requests (PRs) from <code>feature/&lt;my-feature&gt;</code> branches onto the <code>develop</code> branch using the <a href="https://nvie.com/posts/a-successful-git-branching-model/" rel="nofollow">GitFlow</a> methodology.
If unit tests pass and the changes are beneficial, these PRs are merged into <code>develop</code> and eventually folded into versioned releases.</li>
<li>The project follows the <a href="https://semver.org/" rel="nofollow">Semantic Versioning</a> convention of <code>major.minor.patch</code> incremental versioning numbers.
Patch versions are for bug fixes, minor versions are for backward-compatible changes, and major versions are for new and incompatible usage changes.</li>
</ol>
<h2 dir="auto"><a id="user-content-faqs" class="anchor" aria-hidden="true" href="#faqs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FAQs</h2>
<p dir="auto">You may have some questions....</p>
<hr>
<blockquote>
<p dir="auto">Why does this package exist?</p>
</blockquote>
<p dir="auto">I have been duplicating this code across several different Julia projects, so I decided to finally modularize it like a big kid.</p>
<hr>
<blockquote>
<p dir="auto">Why not use <a href="https://github.com/JuliaAI/ScientificTypes.jl"><code>ScientificTypes.jl</code></a>?</p>
</blockquote>
<p dir="auto">This package may very well evolve to convert its type aliases into an extended <code>ScientificTypes</code> convention.
But today is not that day.</p>
<hr>
<blockquote>
<p dir="auto">Why is the testing coverage at 0%?</p>
</blockquote>
<p dir="auto">The Julia unit testing coverage methods don't seem to concern themselves with constant aliases of types, which is the only thing that this package contains.
Despite the fact that these types are tested with various assertions, these sadly don't register as covered lines.
Full coverage reporting is planned for this package in the future, but today is not that day.</p>
<hr>
<blockquote>
<p dir="auto">Why the over-the-top retro logo?</p>
</blockquote>
<p dir="auto">This package is so small, simple, and downright boring that it had might as well have a flashy logo to be any kind of memorable whatsoever.
Also, retro is always in style (contradiction intended).</p>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<h3 dir="auto"><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Authors</h3>
<p dir="auto">This package is developed and maintained by <a href="https://github.com/AP6YC">Sasha Petrenko</a> with sponsorship by the <a href="https://acil.mst.edu/" rel="nofollow">Applied Computational Intelligence Laboratory (ACIL)</a>. This project is supported by grants from the <a href="https://c5isr.ccdc.army.mil/inside_c5isr_center/nvesd/" rel="nofollow">Night Vision Electronic Sensors Directorate</a>, the <a href="https://www.darpa.mil/program/lifelong-learning-machines" rel="nofollow">DARPA Lifelong Learning Machines (L2M) program</a>, <a href="http://www.teledyne.com/" rel="nofollow">Teledyne Technologies</a>, and the <a href="https://www.nsf.gov/" rel="nofollow">National Science Foundation</a>.
The material, findings, and conclusions here do not necessarily reflect the views of these entities.</p>
<h3 dir="auto"><a id="user-content-history" class="anchor" aria-hidden="true" href="#history"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>History</h3>
<ul dir="auto">
<li>9/29/2022 - Begin project.</li>
<li>9/30/2022 - Submit v0.1.0 to JuliaHub.</li>
<li>10/10/2022 - v0.2.0 release.</li>
</ul>
<h3 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h3>
<p dir="auto">This software is openly maintained by the ACIL of the Missouri University of Science and Technology under the <a href="LICENSE">MIT License</a>.</p>
<h3 dir="auto"><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citation</h3>
<p dir="auto">This project has a <a href="CITATION.cff">citation file</a> file that generates citation information for the package, which can be accessed at the "Cite this repository button" under the "About" section of the GitHub page.</p>
<p dir="auto">You may also cite this repository with the following BibTeX entry:</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@misc{NumericalTypeAliases,
  doi = {10.5281/zenodo.7183296},
  url = {https://doi.org/10.5281/zenodo.7183296},
  author = {Sasha Petrenko},
  title = {NumericalTypeAliases.jl: A Julia Package for Function Dispatch on Numerical Types},
}"><pre><span class="pl-k">@misc</span>{<span class="pl-en">NumericalTypeAliases</span>,
  <span class="pl-s">doi</span> = <span class="pl-s"><span class="pl-pds">{</span>10.5281/zenodo.7183296<span class="pl-pds">}</span></span>,
  <span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.5281/zenodo.7183296<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Sasha Petrenko<span class="pl-pds">}</span></span>,
  <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>NumericalTypeAliases.jl: A Julia Package for Function Dispatch on Numerical Types<span class="pl-pds">}</span></span>,
}</pre></div>
</article></div>