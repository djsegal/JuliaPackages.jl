<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-voptgeneric-part-of-voptsolver-for-non-structured-problems" class="anchor" aria-hidden="true" href="#voptgeneric-part-of-voptsolver-for-non-structured-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>vOptGeneric: part of vOptSolver for non-structured problems</h1>
<p dir="auto"><a href="https://travis-ci.org/vOptSolver/vOptGeneric.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f88905eb0f131bb02a4ce630f9dc744a38e9942d73c3755be95e933bb7334aaa/68747470733a2f2f7472617669732d63692e6f72672f764f7074536f6c7665722f764f707447656e657269632e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/vOptSolver/vOptGeneric.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/vOptSolver/vOptGeneric.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/28ee22fcc34e2d1b30a33d642f902450b33c9578a3870cca492df368a3d83b50/687474703a2f2f636f6465636f762e696f2f6769746875622f764f7074536f6c7665722f764f707447656e657269632e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/vOptSolver/vOptGeneric.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/vOptSolver/vOptGeneric.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/df643f5468615dc6d8d1e36513e08999dd160815b5791b275a407a6f65e2aef8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f764f7074536f6c7665722f764f707447656e657269632e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/vOptSolver/vOptGeneric.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>vOptSolver</strong> is a solver of multiobjective linear optimization problems (MOMIP, MOLP, MOIP, MOCO).
This repository concerns <strong>vOptGeneric</strong>, the part of vOptSolver devoted to <strong>multiobjective non-structured problems</strong>. With vOptGeneric, the problem is expressed using JuMP algebraic language extended to multiple objectives. vOptGeneric runs on macOS, linux-ubuntu, and windows.
We suppose you are familiar with vOptSolver; if not, read first this <a href="https://voptsolver.github.io/vOptSolver/" rel="nofollow">presentation</a>.</p>
<p dir="auto"><strong>IMPORTANT</strong> (Feb-2023):</p>
<p dir="auto">vOptGeneric.jl has been fully redesigned, and reimplemented. It becomes <strong>MultiObjectiveAlgorithms.jl (MOA)</strong>, a collection of algorithms for multi-objective optimization integrated to <a href="https://jump.dev/" rel="nofollow">JuMP</a> and <a href="https://jump.dev/MathOptInterface.jl/stable/" rel="nofollow">MathOptInterface</a>. MOA comes with an enriched list of multi-objective algorithms, especially for solving problems with 3 objectives. Examples are available here:</p>
<ul dir="auto">
<li><a href="https://jump.dev/JuMP.jl/stable/tutorials/linear/multi_objective_knapsack/" rel="nofollow">multiobjective knapsack</a></li>
<li><a href="https://jump.dev/JuMP.jl/stable/tutorials/linear/multi_objective_examples/" rel="nofollow">simple multiobjective examples</a></li>
</ul>
<p dir="auto">Consequently vOptGeneric.jl is no longer under active development. It will remain available on Github at this URL. From February 2023, the JuMP-dev organization will continue to maintain the MOA package and transition development over the long term.</p>
<h2 dir="auto"><a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Instructions</h2>
<p dir="auto">For a local use, a working version of:</p>
<ul dir="auto">
<li>Julia must be ready; instructions for the installation are available <a href="https://julialang.org/downloads/" rel="nofollow">here</a></li>
<li>your favorite MIP solver must be ready (GLPK is suggested);
instructions for the installation are available <a href="https://github.com/jump-dev/JuMP.jl">here</a></li>
</ul>
<h3 dir="auto"><a id="user-content-run-julia" class="anchor" aria-hidden="true" href="#run-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Run Julia</h3>
<p dir="auto">On linux:</p>
<ul dir="auto">
<li>open a console on your computer</li>
<li>when the prompt is ready, type in the console <code>julia</code></li>
</ul>
<p dir="auto">On macOS:</p>
<ul dir="auto">
<li>locate the application <code>julia</code> and</li>
<li>click on the icon, the julia console comes to the screen</li>
</ul>
<h3 dir="auto"><a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation Instructions</h3>
<p dir="auto">Before your first use,</p>
<ol dir="auto">
<li>run Julia and when the terminal is ready with the prompt <code>julia</code> on screen,</li>
<li>add as follow the mandatory packages to your Julia distribution:</li>
</ol>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;vOptGeneric&quot;)
julia&gt; Pkg.add(&quot;JuMP&quot;)
julia&gt; Pkg.add(&quot;GLPK&quot;)"><pre class="notranslate"><code>julia&gt; using Pkg
julia&gt; Pkg.add("vOptGeneric")
julia&gt; Pkg.add("JuMP")
julia&gt; Pkg.add("GLPK")
</code></pre></div>
<p dir="auto">That's all folk; at this point, vOptGeneric is properly installed.</p>
<h3 dir="auto"><a id="user-content-usage-instructions" class="anchor" aria-hidden="true" href="#usage-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage Instructions</h3>
<p dir="auto">When vOptGeneric is properly installed,</p>
<ol dir="auto">
<li>run Julia and when the terminal is ready with the prompt <code>julia</code> on screen,</li>
<li>invoke vOptGeneric, JuMP and the MILP solver to activate in typing in the console:</li>
</ol>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using vOptGeneric
julia&gt; using JuMP
julia&gt; using GLPK"><pre class="notranslate"><code>julia&gt; using vOptGeneric
julia&gt; using JuMP
julia&gt; using GLPK
</code></pre></div>
<p dir="auto">vOptGeneric is ready. See examples for further informations and have fun with the solver!</p>
<h2 dir="auto"><a id="user-content-problems-available" class="anchor" aria-hidden="true" href="#problems-available"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Problems available</h2>
<table>
<thead>
<tr>
<th align="left">Problem</th>
<th align="left">Description</th>
<th align="center">Output</th>
<th align="right">Method</th>
<th>Parameter (if required)</th>
<th align="left">Name</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">2-IP</td>
<td align="left">bi-objective Integer Linear Program</td>
<td align="center">Y_N</td>
<td align="right"><strong>:epsilon</strong></td>
<td>step = <em>realValue</em></td>
<td align="left">ϵ-constraint</td>
</tr>
<tr>
<td align="left">2-IP</td>
<td align="left">bi-objective Integer Linear Program</td>
<td align="center">Y_N</td>
<td align="right"><strong>:chalmet</strong> or <strong>:Chalmet</strong></td>
<td>step = <em>realValue</em></td>
<td align="left">Chalmet</td>
</tr>
<tr>
<td align="left">2-IP</td>
<td align="left">bi-objective Integer Linear Program</td>
<td align="center">Y_{SN}</td>
<td align="right"><strong>:dicho</strong> or <strong>:dichotomy</strong></td>
<td>(none)</td>
<td align="left">Aneja &amp; Nair</td>
</tr>
<tr>
<td align="left">p-MIP</td>
<td align="left">multi-objective Mixed Integer Linear Program</td>
<td align="center">Y_{lex}</td>
<td align="right"><strong>:lex</strong> or <strong>:lexico</strong></td>
<td>(none)</td>
<td align="left">Lexicographic</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">The folder <code>examples</code> provides source code of problems ready to be solved.</p>
<h2 dir="auto"><a id="user-content-validation" class="anchor" aria-hidden="true" href="#validation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Validation</h2>
<p dir="auto">Tested the</p>
<ul dir="auto">
<li>22-Jul-2021</li>
</ul>
<p dir="auto">with</p>
<ul dir="auto">
<li>Julia 1.6.2</li>
<li>JuMP 0.21.8</li>
<li>GLPK 4.65</li>
<li>Gurobi 9.1.2</li>
</ul>
<p dir="auto">on</p>
<ul dir="auto">
<li>Linux ubuntu 18.04.5 LTS</li>
<li>macOS 11.4 (Big Sur)</li>
<li>Windows 10</li>
</ul>
</article></div>