<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-dispatcher" class="anchor" aria-hidden="true" href="#dispatcher"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dispatcher</h1>
<p><a href="https://travis-ci.org/invenia/Dispatcher.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ffcdad5f63a32390b95a13cce05d50601b67e69c/68747470733a2f2f7472617669732d63692e6f72672f696e76656e69612f446973706174636865722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/invenia/Dispatcher.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/iamed2/dispatcher-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/3756b312b207cac7f8a8e037bd39973e54577bb3/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f757273317630637038736867647133742f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/urs1v0cp8shgdq3t/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/invenia/Dispatcher.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/472db57c71bb9bb1a0b463a42185930c0b837638/68747470733a2f2f636f6465636f762e696f2f67682f696e76656e69612f446973706174636865722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/invenia/Dispatcher.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Dispatcher is a tool for building and executing a computation graph given a series of dependent operations.</p>
<p>Documentation: <a href="https://invenia.github.io/Dispatcher.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a> <a href="https://invenia.github.io/Dispatcher.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview</h2>
<p>Using Dispatcher, <code>run!</code> builds and runs a computation graph of <code>DispatchNode</code>s.
<code>DispatchNode</code>s represent units of computation that can be run.
The most common <code>DispatchNode</code> is <code>Op</code>, which represents a function call on some arguments.
Some of those arguments may exist when building the graph, and others may represent the results of other <code>DispatchNode</code>s.
An <code>Executor</code> executes a whole <code>DispatchGraph</code>.
Two <code>Executor</code>s are provided.
<code>AsyncExecutor</code> executes computations asynchronously using Julia <code>Task</code>s.
<code>ParallelExecutor</code> executes computations in parallel using all available Julia processes (by calling <code>@spawn</code>).</p>
<h2><a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Frequently Asked Questions</h2>
<blockquote>
<p>How is Dispatcher different from ComputeFramework/Dagger?</p>
</blockquote>
<p>Dagger is built around distributing vectorized computations across large arrays.
Dispatcher is built to deal with discrete, heterogeneous data using any Julia functions.</p>
<blockquote>
<p>How is Dispatcher different from Arbiter?</p>
</blockquote>
<p>Arbiter requires manually adding tasks and their dependencies and handling data passing.
Dispatcher automatically identifies dependencies from user code and passes data efficiently between dependencies.</p>
<blockquote>
<p>Isn't this just Dask?</p>
</blockquote>
<p>Pretty much.
The plan is to implement another <code>Executor</code> and <a href="https://github.com/dask/distributed/issues/586">integrate</a> with the <a href="https://distributed.readthedocs.io/" rel="nofollow"><code>dask.distributed</code></a> scheduler service to piggyback off of their great work.</p>
<blockquote>
<p>How does Dispatcher handle passing data?</p>
</blockquote>
<p>Dispatcher uses Julia <code>RemoteChannel</code>s to pass data between dispatched <code>DispatchNode</code>s.
For more information on how data transfer works with Julia's parallel tools see their <a href="http://docs.julialang.org/en/latest/manual/parallel-computing/" rel="nofollow">documentation</a>.</p>
</article></div>