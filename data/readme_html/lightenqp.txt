<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><em><strong>LightenQP.jl</strong></em></p>
<p dir="auto"><a href="https://github.com/PharosAbad/LightenQP.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/PharosAbad/LightenQP.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://github.com/PharosAbad/LightenQP.jl/wiki"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<h1 align="center" dir="auto"><a id="user-content---a-pure-julia-implementation-of-ooqp" class="anchor" aria-hidden="true" href="#--a-pure-julia-implementation-of-ooqp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>
  A pure Julia implementation of OOQP
</h1>
<p align="center" dir="auto">
  <a href="#features">Features</a> ‚Ä¢
  <a href="#installation">Installation</a> ‚Ä¢
  <a href="#license-">License</a> ‚Ä¢
  <a href="https://github.com/PharosAbad/LightenQP.jl/wiki">Documentation</a>
</p>
<p dir="auto"><strong>LightenQP.jl</strong> solves the following convex quadratic programming problems (called <code>OOQP</code>):</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="766ea254087d31bc2e70416584b2d51b">$$
\begin{array}
[c]{cl}
\min &amp; \frac{1}{2}\mathbf{x}^{\prime}\mathbf{Vx}+\mathbf{x}^{\prime}%
\mathbf{q}\\
s.t. &amp; \mathbf{Ax}=\mathbf{b}\in\mathbb{R}^{M}\\
&amp; \mathbf{Cx}\leq\mathbf{g}\in\mathbb{R}^{L}
\end{array}
$$</math-renderer></p>
<p dir="auto">with positive semi-definite symmetric matrix <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="766ea254087d31bc2e70416584b2d51b">$\mathbf{V}\in\mathbb{R}^{N\times N}$</math-renderer>. The general quadratic programming formulation solved by <code>LightenQP</code> is (<code>OOQP + d‚â§x‚â§u + h‚â§Cx</code>)</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="766ea254087d31bc2e70416584b2d51b">$$
\begin{array}
[c]{cl}
\min &amp; \frac{1}{2}\mathbf{x}^{\prime}\mathbf{Vx}+\mathbf{x}^{\prime}
\mathbf{q}\\
s.t. &amp; \mathbf{Ax}=\mathbf{b}\in\mathbb{R}^{M}\\
&amp; \mathbf{h}\leq\mathbf{Cx}\leq\mathbf{g}\in\mathbb{R}^{L}\\
&amp; \boldsymbol{d}\leq\mathbf{x}\leq\boldsymbol{u}\in\mathbb{R}^{N}
\end{array}
$$</math-renderer></p>
<h2 dir="auto">
<a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<ul dir="auto">
<li>
<strong>Light Weight</strong>: 100+ lines Julia code. Which follows closely the the implementation of the C/C++ solver <a href="https://github.com/emgertz/OOQP">OOQP</a>
</li>
<li>
<strong>Fast</strong>:  <a href="https://github.com/PharosAbad/LightenQP.jl/wiki/Speed-and-Accuracy">Speed and Accuracy</a>
</li>
<li>
<strong>Versatile</strong>: solving a general quadratic programming problem mentioned above. <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="766ea254087d31bc2e70416584b2d51b">$\mathbf{V}$</math-renderer> can be positive definite or positive semi-definite</li>
<li>
<strong>Open Source</strong>: Our code is available on <a href="https://github.com/PharosAbad/LightenQP.jl">GitHub</a> and distributed under the MIT License</li>
<li>
<strong>Arbitrary Precision Arithmetic</strong>: fully support for <code>BigFloat</code>
</li>
</ul>
<h2 dir="auto">
<a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><strong>LightenQP.jl</strong> can be added by</p>
<ul dir="auto">
<li><code>import Pkg; Pkg.add("LightenQP")</code></li>
<li><code>pkg&gt; add LightenQP</code></li>
<li>
<code>pkg&gt; dev LightenQP</code> for testing nightly version. To use the registered version again <code>pkg&gt; free LightenQP</code>
</li>
</ul>
<h2 dir="auto">
<a id="user-content-license-" class="anchor" aria-hidden="true" href="#license-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License <g-emoji class="g-emoji" alias="mag" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png">üîç</g-emoji></h2>
<p dir="auto">This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
</article></div>