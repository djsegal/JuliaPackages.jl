<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simplepadics" class="anchor" aria-hidden="true" href="#simplepadics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimplePadics</h1>
<p dir="auto">Easy to use and nicely formatted p-adic numbers (in base-p, place-value notation).
Everything rides on
<a href="https://github.com/Nemocas/Nemo.jl.git">Nemo</a>.</p>
<h2 dir="auto"><a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basics</h2>
<h3 dir="auto"><a id="user-content-construction" class="anchor" aria-hidden="true" href="#construction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Construction</h3>
<p dir="auto">This module provides the type <code>Padic{p}</code> to represent <code>p</code>-adic numbers (for prime <code>p</code>).
Numbers of this sort are created either with <code>Integer</code> or <code>Rational</code> arguments:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using SimplePadics

julia&gt; Padic{5}(82)
…312.0_{5}

julia&gt; Padic{5}(1//15)
…313131313.2_{5}"><pre class="notranslate"><code>julia&gt; using SimplePadics

julia&gt; Padic{5}(82)
…312.0_{5}

julia&gt; Padic{5}(1//15)
…313131313.2_{5}
</code></pre></div>
<p dir="auto">For <code>p</code> equal to <code>2</code> we have the abbreviation <code>Dyadic</code> that is exacly equivalent to <code>Padic{2}</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; Dyadic(1//10)
…1100110.1_{2}"><pre class="notranslate"><code>julia&gt; Dyadic(1//10)
…1100110.1_{2}
</code></pre></div>
<p dir="auto">The function <code>base</code> returns <code>p</code> for numbers of type <code>Padic{p}</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a = Padic{7}(100//49)
…2.02_{7}

julia&gt; base(a)
7"><pre class="notranslate"><code>julia&gt; a = Padic{7}(100//49)
…2.02_{7}

julia&gt; base(a)
7
</code></pre></div>
<h3 dir="auto"><a id="user-content-arithmetic" class="anchor" aria-hidden="true" href="#arithmetic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Arithmetic</h3>
<p dir="auto">The standard arithmetic operations (addition, subtraction, multiplication, division) may be performed with arguments that are both of the same <code>p</code>-adic type, or a mixture of a <code>p</code>-adic and an <code>Integer</code> or <code>Rational</code>. Some examples:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a = Padic{7}(10)
…13.0_{7}

julia&gt; a+1
…14.0_{7}

julia&gt; 2a
…26.0_{7}

julia&gt; a/a
…1.0_{7}

julia&gt; inv(a)
…462046205.0_{7}"><pre class="notranslate"><code>julia&gt; a = Padic{7}(10)
…13.0_{7}

julia&gt; a+1
…14.0_{7}

julia&gt; 2a
…26.0_{7}

julia&gt; a/a
…1.0_{7}

julia&gt; inv(a)
…462046205.0_{7}
</code></pre></div>
<h3 dir="auto"><a id="user-content-digits" class="anchor" aria-hidden="true" href="#digits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Digits</h3>
<p dir="auto">If the prime <code>p</code> is greater than 7, then we use letters to stand for digits beyond 9 (that is, a for ten, b for eleven, and so forth).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a = Padic{17}(1000)
…37e.0_{17}

julia&gt; 3 * 17^2 + 7 * 17 + 14
1000"><pre class="notranslate"><code>julia&gt; a = Padic{17}(1000)
…37e.0_{17}

julia&gt; 3 * 17^2 + 7 * 17 + 14
1000
</code></pre></div>
<p dir="auto">To get the digits as a list of integers, use <code>digits(a)</code>. The first entry in the result is the most significant digit (rightmost).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a = Padic{7}(124//49)
…2.35_{7}

julia&gt; digits(a)
3-element Vector{Int64}:
 5
 3
 2"><pre class="notranslate"><code>julia&gt; a = Padic{7}(124//49)
…2.35_{7}

julia&gt; digits(a)
3-element Vector{Int64}:
 5
 3
 2
</code></pre></div>
<p dir="auto">See <code>valuation</code> to determine the location of the radix point.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; valuation(a)
-2"><pre class="notranslate"><code>julia&gt; valuation(a)
-2
</code></pre></div>
<h2 dir="auto"><a id="user-content-adjusting-precision" class="anchor" aria-hidden="true" href="#adjusting-precision"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Adjusting Precision</h2>
<p dir="auto">The precision of <code>Padic</code> numbers is globally controlled using the functions <code>set_precision</code> and <code>get_precision</code>.</p>
<p dir="auto">Use <code>set_precision(n::Int)</code> to set the precision to <code>n</code> digits. Use <code>set_precision()</code> to
set the precision to the default value (10).</p>
<p dir="auto">The function <code>get_precision()</code> returns the current setting.</p>
<p dir="auto"><strong>Warning</strong>: <code>Padic</code> numbers created with different precisions cannot be compared for equality or combined in operations.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a = Padic{5}(-1)
…4444444444.0_{5}

julia&gt; set_precision(20)
20

julia&gt; b = Padic{5}(-1)
…44444444444444444444.0_{5}

julia&gt; a == b
ERROR: Incompatible padic rings in padic operation"><pre class="notranslate"><code>julia&gt; a = Padic{5}(-1)
…4444444444.0_{5}

julia&gt; set_precision(20)
20

julia&gt; b = Padic{5}(-1)
…44444444444444444444.0_{5}

julia&gt; a == b
ERROR: Incompatible padic rings in padic operation
</code></pre></div>
<h2 dir="auto"><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functions</h2>
<p dir="auto">The functions <code>sqrt</code>, <code>exp</code>, <code>log</code>, and <code>valuation</code> from Nemo are imported into this module. For example:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; a = Padic{5}(-1)
…4444444444.0_{5}

julia&gt; sqrt(a)
…3032431212.0_{5}

julia&gt; ans^2
…4444444444.0_{5}

julia&gt; a = Padic{5}(500)
…4000.0_{5}

julia&gt; valuation(a)
3

julia&gt; 1/a
…3333333.334_{5}

julia&gt; valuation(1/a)
-3

julia&gt; abs(a)
0.008

julia&gt; abs(1/a)
125.0"><pre class="notranslate"><code>julia&gt; a = Padic{5}(-1)
…4444444444.0_{5}

julia&gt; sqrt(a)
…3032431212.0_{5}

julia&gt; ans^2
…4444444444.0_{5}

julia&gt; a = Padic{5}(500)
…4000.0_{5}

julia&gt; valuation(a)
3

julia&gt; 1/a
…3333333.334_{5}

julia&gt; valuation(1/a)
-3

julia&gt; abs(a)
0.008

julia&gt; abs(1/a)
125.0
</code></pre></div>
<h2 dir="auto"><a id="user-content-roots-of-polynomials" class="anchor" aria-hidden="true" href="#roots-of-polynomials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Roots of Polynomials</h2>
<p dir="auto">Let <code>F</code> be a <code>SimplePolynomial</code> with integer or rational coefficients. The function <code>p_root(F,p)</code> returns a <code>p</code>-adic root of <code>F</code> (if one exists) or throws an error otherwise.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using SimplePadics, SimplePolynomials

julia&gt; x = getx()
x

julia&gt; F = x^2 + 1
1 + x^2

julia&gt; t = p_root(F,5)
…3032431212.0_{5}

julia&gt; t^2 + 1
…0.0_{5}

julia&gt; sqrt(Padic{5}(-1))
…3032431212.0_{5}"><pre class="notranslate"><code>julia&gt; using SimplePadics, SimplePolynomials

julia&gt; x = getx()
x

julia&gt; F = x^2 + 1
1 + x^2

julia&gt; t = p_root(F,5)
…3032431212.0_{5}

julia&gt; t^2 + 1
…0.0_{5}

julia&gt; sqrt(Padic{5}(-1))
…3032431212.0_{5}
</code></pre></div>
<p dir="auto">The function <code>has_p_root(F,p)</code> tests if a polynomial has a <code>p</code>-adic root. Note that this
function returns a 2-tuple whose first element is <code>true</code> if <code>F</code> has a root and <code>false</code> otherwise.
The other value in the 2-tuple is used by <code>p_root</code> and may be ignored.</p>
<h2 dir="auto"><a id="user-content-compatability-with-linearalgebrax" class="anchor" aria-hidden="true" href="#compatability-with-linearalgebrax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Compatability with <code>LinearAlgebraX</code></h2>
<p dir="auto">Matrices/vectors populated with <code>Padic</code> numbers can be used in the <code>LinearAlgebraX</code>
module. Some examples here:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using LinearAlgebraX

julia&gt; A = rand(Int,5,5) .% 10  # create a random matrix with entries between -9 and 9.
5×5 Matrix{Int64}:
 -9  -5  -4  -9  -8
  0  -1   9  -3   8
  2  -9   0   0  -4
  0   7  -6  -5   8
  0  -5   6  -2  -6

julia&gt; A = Padic{5}.(A)  # convert those values to 5-adic numbers
5×5 Matrix{Padic{5}}:
 …4444444431.0_{5}  …44444444440.0_{5}  …4444444441.0_{5}   …4444444431.0_{5}  …4444444432.0_{5}
          …0.0_{5}   …4444444444.0_{5}          …14.0_{5}   …4444444442.0_{5}          …13.0_{5}
          …2.0_{5}   …4444444431.0_{5}           …0.0_{5}            …0.0_{5}  …4444444441.0_{5}
          …0.0_{5}           …12.0_{5}  …4444444434.0_{5}  …44444444440.0_{5}          …13.0_{5}
          …0.0_{5}  …44444444440.0_{5}          …11.0_{5}   …4444444443.0_{5}  …4444444434.0_{5}

julia&gt; detx(A)
…4441202132.0_{5}

julia&gt; invx(A)
5×5 Matrix{Padic{5}}:
 …4344224002.0_{5}  …4441024033.0_{5}  …1242400242.0_{5}  …2100330003.0_{5}   …211103034.0_{5}
 …4333241114.0_{5}  …2024323204.0_{5}  …1141013103.0_{5}  …3103232201.0_{5}  …4420230301.0_{5}
 …1011004214.0_{5}  …3224241133.0_{5}  …4324312303.0_{5}   …404043040.0_{5}  …2430224440.0_{5}
 …1031224011.0_{5}  …2022011034.0_{5}  …2244123102.0_{5}  …1312340431.0_{5}    …23100104.0_{5}
 …1324102422.0_{5}  …2324440300.0_{5}   …101223004.0_{5}    …21033133.0_{5}   …220320101.0_{5}

julia&gt; A * ans
5×5 Matrix{Any}:
 …1.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}
 …0.0_{5}  …1.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}
 …0.0_{5}  …0.0_{5}  …1.0_{5}  …0.0_{5}  …0.0_{5}
 …0.0_{5}  …0.0_{5}  …0.0_{5}  …1.0_{5}  …0.0_{5}
 …0.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}  …1.0_{5}

julia&gt; nullspacex(A[1:3,:])
5×2 Matrix{Padic{5}}:
 …3414203434.0_{5}  …2234314433.0_{5}
 …3020203312.0_{5}   …241004443.0_{5}
 …3314221230.0_{5}  …2120313420.0_{5}
          …1.0_{5}           …0.0_{5}
          …0.0_{5}           …1.0_{5}"><pre class="notranslate"><code>julia&gt; using LinearAlgebraX

julia&gt; A = rand(Int,5,5) .% 10  # create a random matrix with entries between -9 and 9.
5×5 Matrix{Int64}:
 -9  -5  -4  -9  -8
  0  -1   9  -3   8
  2  -9   0   0  -4
  0   7  -6  -5   8
  0  -5   6  -2  -6

julia&gt; A = Padic{5}.(A)  # convert those values to 5-adic numbers
5×5 Matrix{Padic{5}}:
 …4444444431.0_{5}  …44444444440.0_{5}  …4444444441.0_{5}   …4444444431.0_{5}  …4444444432.0_{5}
          …0.0_{5}   …4444444444.0_{5}          …14.0_{5}   …4444444442.0_{5}          …13.0_{5}
          …2.0_{5}   …4444444431.0_{5}           …0.0_{5}            …0.0_{5}  …4444444441.0_{5}
          …0.0_{5}           …12.0_{5}  …4444444434.0_{5}  …44444444440.0_{5}          …13.0_{5}
          …0.0_{5}  …44444444440.0_{5}          …11.0_{5}   …4444444443.0_{5}  …4444444434.0_{5}

julia&gt; detx(A)
…4441202132.0_{5}

julia&gt; invx(A)
5×5 Matrix{Padic{5}}:
 …4344224002.0_{5}  …4441024033.0_{5}  …1242400242.0_{5}  …2100330003.0_{5}   …211103034.0_{5}
 …4333241114.0_{5}  …2024323204.0_{5}  …1141013103.0_{5}  …3103232201.0_{5}  …4420230301.0_{5}
 …1011004214.0_{5}  …3224241133.0_{5}  …4324312303.0_{5}   …404043040.0_{5}  …2430224440.0_{5}
 …1031224011.0_{5}  …2022011034.0_{5}  …2244123102.0_{5}  …1312340431.0_{5}    …23100104.0_{5}
 …1324102422.0_{5}  …2324440300.0_{5}   …101223004.0_{5}    …21033133.0_{5}   …220320101.0_{5}

julia&gt; A * ans
5×5 Matrix{Any}:
 …1.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}
 …0.0_{5}  …1.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}
 …0.0_{5}  …0.0_{5}  …1.0_{5}  …0.0_{5}  …0.0_{5}
 …0.0_{5}  …0.0_{5}  …0.0_{5}  …1.0_{5}  …0.0_{5}
 …0.0_{5}  …0.0_{5}  …0.0_{5}  …0.0_{5}  …1.0_{5}

julia&gt; nullspacex(A[1:3,:])
5×2 Matrix{Padic{5}}:
 …3414203434.0_{5}  …2234314433.0_{5}
 …3020203312.0_{5}   …241004443.0_{5}
 …3314221230.0_{5}  …2120313420.0_{5}
          …1.0_{5}           …0.0_{5}
          …0.0_{5}           …1.0_{5}
</code></pre></div>
</article></div>