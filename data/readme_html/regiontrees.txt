<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-regiontreesjl-quadtrees-octrees-and-their-n-dimensional-cousins" class="anchor" aria-hidden="true" href="#regiontreesjl-quadtrees-octrees-and-their-n-dimensional-cousins"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RegionTrees.jl: Quadtrees, Octrees, and their N-Dimensional Cousins</h1>
<p dir="auto"><a href="https://github.com/rdeits/RegionTrees.jl/actions?query=workflow%3ACI"><img src="https://github.com/rdeits/RegionTrees.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/rdeits/RegionTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/069ab1db4a5e647a11a2d87953a47bb40b2cc4fb5f553416f447ee772494719e/68747470733a2f2f636f6465636f762e696f2f67682f7264656974732f526567696f6e54726565732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/rdeits/RegionTrees.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This Julia package is a lightweight framework for defining N-Dimensional region trees. In 2D, these are called <em>region quadtrees</em>, and in 3D they are typically referred to as <em>octrees</em>. A region tree is a simple data structure used to describe some kind of spatial data with varying resolution. Each element in the tree can be a leaf, representing an N-dimensional rectangle of space, or a node which is divided exactly in half along each axis into 2^N children. In addition, each element in a <code>RegionTrees.jl</code> tree can carry an arbitrary data payload. This makes it easy to use <code>RegionTrees</code> to approximate functions or describe other interesting spatial data.</p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<ul dir="auto">
<li>Lightweight code with few dependencies (only <code>StaticArrays.jl</code> and <code>Iterators.jl</code> are required)</li>
<li>Optimized for speed and for few memory allocations
<ul dir="auto">
<li>Liberal use of <code>@generated</code> functions lets us unroll most loops and prevent allocating temporary arrays</li>
</ul>
</li>
<li>Built-in support for general adaptive sampling techniques</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">See <a href="examples/demo/demo.ipynb">examples/demo/demo.ipynb</a> for a tour through the API. You can also check out:</p>
<ul dir="auto">
<li><a href="examples/adaptive_distance_fields/adaptive_distances.ipynb">examples/adaptive_distance_fields/adaptive_distances.ipynb</a> for an adaptively-sampled distance field, or <a href="https://github.com/rdeits/AdaptiveDistanceFields.jl">AdaptiveDistanceFields.jl</a> for a more complete example [1]</li>
<li><a href="examples/adaptive_mpc/adaptive_mpc.ipynb">examples/adaptive_mpc/adaptive_mpc.ipynb</a> for an adaptive approximation of a model-predictive controller</li>
</ul>
<p dir="auto">[1] Frisken et al. "Adaptively Sampled Distance Fields: A General Representation of Shape for Computer Graphics". SIGGRAPH 2000.</p>
<h2 dir="auto"><a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Gallery</h2>
<p dir="auto">An adaptively sampled distance field, from <code>examples/adaptive_distances.ipynb</code>:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/04b9444349317915b2dd8120483bb241c9a46c9925a96e35b26a52ba593fe6a6/687474703a2f2f7264656974732e6769746875622e696f2f526567696f6e54726565732e6a6c2f696d672f64697374616e63652e737667"><img src="https://camo.githubusercontent.com/04b9444349317915b2dd8120483bb241c9a46c9925a96e35b26a52ba593fe6a6/687474703a2f2f7264656974732e6769746875622e696f2f526567696f6e54726565732e6a6c2f696d672f64697374616e63652e737667" alt="" data-canonical-src="http://rdeits.github.io/RegionTrees.jl/img/distance.svg" style="max-width: 100%;"></a></p>
<p dir="auto">An adaptively sampled model-predictive control problem, from <code>examples/adaptive_mpc.ipynb</code>:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/8cb48c30c4976e66d6c07a503feec0a97ff470ee3eafa1068ab7d968e63f7730/687474703a2f2f7264656974732e6769746875622e696f2f526567696f6e54726565732e6a6c2f696d672f6d70632e737667"><img src="https://camo.githubusercontent.com/8cb48c30c4976e66d6c07a503feec0a97ff470ee3eafa1068ab7d968e63f7730/687474703a2f2f7264656974732e6769746875622e696f2f526567696f6e54726565732e6a6c2f696d672f6d70632e737667" alt="" data-canonical-src="http://rdeits.github.io/RegionTrees.jl/img/mpc.svg" style="max-width: 100%;"></a></p>
<p dir="auto">An adaptive distance field in 3D, from <a href="https://github.com/rdeits/AdaptiveDistanceFields.jl">AdaptiveDistanceFields.jl</a>:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/25e3a06be7ee802615ab3465264772b3d1da8a6530774fd099995b04717bd69b/687474703a2f2f7264656974732e6769746875622e696f2f526567696f6e54726565732e6a6c2f696d672f64697374616e63655f33642e706e67"><img src="https://camo.githubusercontent.com/25e3a06be7ee802615ab3465264772b3d1da8a6530774fd099995b04717bd69b/687474703a2f2f7264656974732e6769746875622e696f2f526567696f6e54726565732e6a6c2f696d672f64697374616e63655f33642e706e67" alt="" data-canonical-src="http://rdeits.github.io/RegionTrees.jl/img/distance_3d.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Packages</h2>
<ul dir="auto">
<li><a href="https://github.com/JaneliaSciComp/Morton.jl">Morton.jl</a></li>
<li><a href="https://github.com/JuliaMath/Interpolations.jl">Interpolations.jl</a></li>
</ul>
</article></div>