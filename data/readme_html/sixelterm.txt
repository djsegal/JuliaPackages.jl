<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sixelterm" class="anchor" aria-hidden="true" href="#sixelterm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SixelTerm</h1>
<ul dir="auto">
<li><a href="https://github.com/eschnett/SixelTerm.jl/actions"><img src="https://github.com/eschnett/SixelTerm.jl/workflows/CI/badge.svg" alt="GitHub CI" style="max-width: 100%;"></a></li>
<li><a href="https://codecov.io/gh/eschnett/SixelTerm.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e3f8aff9eedf810b574f0389b41fe77225dbd7ccae4990c4832737cbd254402d/68747470733a2f2f636f6465636f762e696f2f67682f657363686e6574742f536978656c5465726d2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d364a42594c5241443258" alt="codecov" data-canonical-src="https://codecov.io/gh/eschnett/SixelTerm.jl/branch/master/graph/badge.svg?token=6JBYLRAD2X" style="max-width: 100%;"></a></li>
</ul>
<p dir="auto">This is a quick-and-dirty Julia package to display graphics inline on
terminals that support <a href="https://en.wikipedia.org/wiki/Sixel" rel="nofollow">Sixel</a> graphics.
This is like <a href="https://github.com/Keno/TerminalExtensions.jl">TerminalExtensions</a>
but works with more terminals.</p>
<p dir="auto">The main advantage of this approach is having usable graphics on remote
connections without having to mess with X or other remote display
connections. This works for Julia running on many remote platforms,
including the Windows Subsystem for Linux (WSL) and macOS. It works with
<a href="https://github.com/mintty/wsltty">WSLtty</a> and <a href="https://iterm2.com" rel="nofollow">iTerm2</a>.</p>
<p dir="auto">Terminals with Sixel support are available for Windows, Linux, MacOS, and Android.
See <a href="https://github.com/saitoha/libsixel/blob/master/README.md#terminal-requirements">here</a>
for one list.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Here is an example using Plots with the default GR backend:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;GKSwstype&quot;] = &quot;nul&quot;    # needed for the GR backend on headless servers
using Plots
using SixelTerm
scatter(rand(100))"><pre><span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>GKSwstype<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>nul<span class="pl-pds">"</span></span>    <span class="pl-c"><span class="pl-c">#</span> needed for the GR backend on headless servers</span>
<span class="pl-k">using</span> Plots
<span class="pl-k">using</span> SixelTerm
<span class="pl-c1">scatter</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">100</span>))</pre></div>
<p dir="auto">Note that when using it with Plots, you have to do <code>using SixelTerm</code> after <code>using Plots</code>.
For some reason, Plots.jl adds its own display to the stack, so we need the SixelTerm
display added last.</p>
<p dir="auto">This is how things look in iTerm2:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/eschnett/SixelTerm.jl/master/demo.png"><img src="https://raw.githubusercontent.com/eschnett/SixelTerm.jl/master/demo.png" width="900px" style="max-width: 100%;"></a></p>
<p dir="auto">Here is an example using Makie:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CairoMakie
using SixelTerm
scatter(rand(100))"><pre><span class="pl-k">using</span> CairoMakie
<span class="pl-k">using</span> SixelTerm
<span class="pl-c1">scatter</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">100</span>))</pre></div>
<p dir="auto">This is how things look in iTerm2:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/eschnett/SixelTerm.jl/master/demo-makie.png"><img src="https://raw.githubusercontent.com/eschnett/SixelTerm.jl/master/demo-makie.png" width="900px" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto">This package was written by <a href="https://github.com/tshort">Tom Short</a> and
is now maintained by <a href="https://github.com/eschnett">Erik Schnetter</a>.</p>
<p dir="auto"><a href="https://github.com/m-j-w/TerminalGraphics.jl">TerminalGraphics</a> is another package that
provides similar functionality. The main difference is that TerminalGraphics includes an
interface to libsixel, while this package relies on ImageMagick for conversion to the Sixel
format.</p>
</article></div>