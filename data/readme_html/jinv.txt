<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.org/JuliaInv/jInv.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fb770b4befadb716db1aceffc96d2c3ab22ec76289eefa712a6bcfad5a684e29/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961496e762f6a496e762e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaInv/jInv.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaInv/jInv.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c6f8119b2e6edebade48f43c0c77912bcdac1a94e15872ba517ff3656215254d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961496e762f6a496e762e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaInv/jInv.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/JuliaInv/jinv-jl-81lel" rel="nofollow"><img src="https://camo.githubusercontent.com/000a3de1fc82f648a3025e006aab1a67277aa5e63228c8a26a9b74ab62ffb291/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f30707867746d6d3038623077367767683f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/0pxgtmm08b0w6wgh?svg=true" style="max-width: 100%;"></a>
<a href="https://JuliaInv.github.io/jInv.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-jinv" class="anchor" aria-hidden="true" href="#jinv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>jInv</h1>
<p dir="auto"><code>jInv</code> is a flexible framework for PDE parameter estimation in Julia. It provides easy to extend core functions used in PDE-constrained inverse problems.
Our goal is to solve parameter estimation problems efficiently and in parallel. For more details see (<a href="http://arxiv.org/abs/1606.07399" rel="nofollow">http://arxiv.org/abs/1606.07399</a>).</p>
<h1 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h1>
<p dir="auto">jInv consists of five submodules:</p>
<ol dir="auto">
<li><code>ForwardShare</code> - methods for solving forward problems in parallel.</li>
<li><code>InverseSolve</code> - methods commonly used in inverse problems such as misfit functions, regularization and numerical optimization.</li>
<li><code>Mesh</code> - regular and tensor meshes in 2D and 3D as well as differential operators.</li>
<li><code>LinearSolvers</code> - interfaces to sparse and (if installed) direct linear solvers that can be used for solving the discretized PDEs.</li>
<li><code>Utils</code> - utility functions</li>
</ol>
<h1 dir="auto"><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Requirements</h1>
<p dir="auto">jInv is intended for use with Julia versions 0.7. and requires:</p>
<ol dir="auto">
<li><a href="https://github.com/lruthotto/KrylovMethods.jl"><code>KrylovMethods.jl</code></a>  - iterative methods for solving (sparse) linear systems.</li>
</ol>
<p dir="auto">Additional (optional) packages for higher performance.
<a href="https://github.com/lruthotto/ParSpMatVec.jl"><code>ParSpMatVec.jl</code></a> - shared memory implementation for sparse matrix vector products. <code>jInv</code> detects automatically if this package is properly set and uses it by default.</p>
<p dir="auto">Additional add-on package:</p>
<ol dir="auto">
<li><a href="https://github.com/JuliaInv/MUMPSjInv.jl"><code>MUMPSjInv.jl</code></a> - wrapper for MUMPS. Used as a direct linear solver.</li>
<li><a href="https://github.com/JuliaSparse/Pardiso.jl">'Pardiso.jl'</a> - The extension using this package exists but was not tested for Julia version 1.0.</li>
</ol>
<p dir="auto">The mesh module in jInv features regular and tensor meshes but can also be extended by</p>
<ol dir="auto">
<li><a href="https://github.com/JuliaInv/JOcTree"><code>JOcTree</code></a> - efficient spatially adaptive meshes</li>
</ol>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<p dir="auto">In julia type:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/JuliaInv/jInv.jl&quot;,&quot;jInv&quot;)
Pkg.test(&quot;jInv&quot;)"><pre class="notranslate"><code>Pkg.clone("https://github.com/JuliaInv/jInv.jl","jInv")
Pkg.test("jInv")
</code></pre></div>
<h1 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h1>
<p dir="auto">Some inversion examples can be found in the <code>examples</code> folder.</p>
<h1 dir="auto"><a id="user-content-packages-using-jinv" class="anchor" aria-hidden="true" href="#packages-using-jinv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Packages using jInv</h1>
<p dir="auto">jInv provides generic methods for PDE parameter estimation problems. In order to use it for applications, some methods need to be extended by specifying solvers of the forward problem, sensitivity matrix vector products, etc. This should be organized in small modules. Currently implemented are the following PDE models:</p>
<ol dir="auto">
<li><a href="https://github.com/JuliaInv/DivSigGrad.jl"><code>DivSigGrad.jl</code></a> - Inverse conductivity problems in statics</li>
<li><a href="https://github.com/JuliaInv/jInvSeismic.jl"><code>jInvSeismic.jl</code></a> - Seismic inversion packages: Full Waveform Inversion (jInvSeismic.FWI) and travel time tomography (jInvSeismic.EikonalInv)</li>
<li><a href="https://github.com/JuliaInv/MaxwellFrequency"><code>MaxwellFrequency</code></a> - Inversion for conductivity in Maxwell's equations</li>
</ol>
<h1 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h1>
<p dir="auto">This material is in part based upon work supported by the National Science Foundation under Grant Number 1522599. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.</p>
</article></div>