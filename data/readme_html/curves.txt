<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.com/lungben/Curves.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cf2012c37e3330a183614a87115e6e3249801c31/68747470733a2f2f7472617669732d63692e636f6d2f6c756e6762656e2f4375727665732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/lungben/Curves.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/lungben/Curves.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0e38e2c4ec524033a86298de80610b939b1e7190/68747470733a2f2f636f6465636f762e696f2f67682f6c756e6762656e2f4375727665732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/lungben/Curves.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-curves" class="anchor" aria-hidden="true" href="#curves"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Curves</h1>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Introduction</h2>
<p>A <code>Curve</code> in this package is essentially a collection of points <code>(x, y)</code>, together with an interpolation and extrapolation method.</p>
<p><code>Curve</code> objects have a number of standard calculation function defined (like addition, multiplication, logarithm), thus they can be used in algebraic expressions analogue to scalars.</p>
<h3><a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How it Works</h3>
<p>Operations on Curves alone (e.g. <code>exp(c)</code>, <code>log(c)</code>) or with scalars (e.g. <code>c+1</code> or <code>2c</code>) are defined point-wise on the y-values of the Curve.</p>
<p>Operations between 2 Curve objects (noted as <code>c1</code> and <code>c2</code>) are defined as follows:</p>
<ol>
<li>Interpolate <code>c1</code> to the x-values of <code>c2</code>.</li>
<li>Do the operation (e.g. adding) on the y-values of <code>c2</code> and the interpolated y-values of c1.</li>
<li>Repeat steps 1. and 2., but interpolate <code>c2</code> to the x-values of <code>c1</code>.</li>
<li>Combine the results of both interpolations and create a new Curve object for the result.</li>
</ol>
<p>Technically, this package is based on <a href="https://github.com/JuliaMath/Interpolations.jl">Interpolations.jl</a>.
Support of log-interpolation on both axis is added by this package.</p>
<p><code>Curve</code> objects are defined to be immutable, thus every operation creates a new <code>Curve</code> object as output.</p>
<h3><a id="user-content-use-case" class="anchor" aria-hidden="true" href="#use-case"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Use Case</h3>
<p>The use case I had in mind was interest rate / FX curves for mathematical finance applications.
The <code>Curve</code> objects make it easier to shift market data, e.g. for sensitivity or scenario P&amp;L calculation, or to calculate such shift sizes based on market data time series.</p>
<p>Example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> construct zero interest rate curve</span>
c_zero_base <span class="pl-k">=</span> <span class="pl-c1">Curve</span>([<span class="pl-c1">2</span>, <span class="pl-c1">7</span>, <span class="pl-c1">30</span>, <span class="pl-c1">90</span>, <span class="pl-c1">180</span>, <span class="pl-c1">365</span>], [<span class="pl-c1">0.5</span>, <span class="pl-c1">0.7</span>, <span class="pl-c1">0.75</span>, <span class="pl-c1">0.83</span>, <span class="pl-c1">1.1</span>, <span class="pl-c1">1.5</span>])

<span class="pl-c"><span class="pl-c">#</span> define zero rate shifts (e.g. for stress testing or sensitivities)</span>
c_shifts <span class="pl-k">=</span> <span class="pl-c1">Curve</span>([<span class="pl-c1">2</span>, <span class="pl-c1">185</span>, <span class="pl-c1">360</span>], [<span class="pl-c1">0.1</span>, <span class="pl-k">-</span><span class="pl-c1">0.1</span>, <span class="pl-c1">0.2</span>])

<span class="pl-c"><span class="pl-c">#</span> shift curve</span>
c_shifted <span class="pl-k">=</span> c_zero_base <span class="pl-k">+</span> c_shifts

<span class="pl-c"><span class="pl-c">#</span> calculate discount factors for the unshifted and shifted curves</span>
c_base_df<span class="pl-k">=</span><span class="pl-c1">apply</span>((x,y) <span class="pl-k">-&gt;</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x<span class="pl-k">*</span>y<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">/</span><span class="pl-c1">365</span>), c_zero_base, logy<span class="pl-k">=</span><span class="pl-c1">true</span>)
c_shifted_df <span class="pl-k">=</span> <span class="pl-c1">apply</span>((x,y) <span class="pl-k">-&gt;</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x<span class="pl-k">*</span>y<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">/</span><span class="pl-c1">365</span>), c_shifted, logy<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c"><span class="pl-c">#</span> calculate log-returns of discount factors</span>
log_ret <span class="pl-k">=</span> <span class="pl-c1">log</span>(c_shifted_df<span class="pl-k">/</span>c_base_df)

<span class="pl-c"><span class="pl-c">#</span> apply log returns to the base curve - this should give the shifted curve back</span>
curve_scenario <span class="pl-k">=</span> <span class="pl-k">*</span>(c_base_df, <span class="pl-c1">exp</span>(log_ret), logy<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">@assert</span> curve_scenario <span class="pl-k">â‰ˆ</span> c_shifted_df</pre></div>
<h2><a id="user-content-ideas-for-further-improvements" class="anchor" aria-hidden="true" href="#ideas-for-further-improvements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ideas for Further Improvements</h2>
<ul>
<li>Support of more operations</li>
<li>Interactions with <a href="https://github.com/pazzo83/QuantLib.jl">QuantLib.jl</a> curve objects</li>
<li>Multi-dimensional structures (especially 2d, e.g. for Volatility surfaces)</li>
</ul>
</article></div>