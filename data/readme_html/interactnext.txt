<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-interactnext" class="anchor" aria-hidden="true" href="#interactnext"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>InteractNext</h1>
<p dir="auto">This package has now been rewritten and its ideas are inside Interact.jl. Use <a href="https://juliagizmos.github.io/Interact.jl/latest/" rel="nofollow">Interact.jl</a> instead!</p>
<h3 dir="auto"><a id="user-content-development-status" class="anchor" aria-hidden="true" href="#development-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Development Status</h3>
<p dir="auto">This package is new, but should be "working" to a greater or lesser extent in all supported backends (IJulia, Atom, Blink, Mux), so please file issues liberally.</p>
<h3 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h3>
<p dir="auto">Currently InteractNext is not in metadata, so for now installation is:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/JuliaGizmos/InteractNext.jl&quot;)"><pre class="notranslate"><code>Pkg.clone("https://github.com/JuliaGizmos/InteractNext.jl")
</code></pre></div>
<h3 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h3>
<p dir="auto">The following code is common to the examples below. It creates some svg circle elements
whose centres are sampled from a sine wave.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using InteractNext, WebIO

width, height = 700, 300
colors = [&quot;black&quot;, &quot;gray&quot;, &quot;silver&quot;, &quot;maroon&quot;, &quot;red&quot;, &quot;olive&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;lime&quot;, &quot;teal&quot;, &quot;aqua&quot;, &quot;navy&quot;, &quot;blue&quot;, &quot;purple&quot;, &quot;fuchsia&quot;]
color(i) = colors[i%length(colors)+1]
ui = @manipulate for nsamples in 1:200,
        sample_step in slider(0.01:0.01:1.0, value=0.1, label=&quot;sample step&quot;),
        phase in slider(0:0.1:2pi, value=0, label=&quot;phase&quot;),
        radii in 0.1:0.1:60
    cxs_unscaled = [i*sample_step + phase for i in 1:nsamples]
    cys = sin.(cxs_unscaled) .* height/3 .+ height/2
    cxs = cxs_unscaled .* width/4pi
    dom&quot;svg:svg[width=$width, height=$height]&quot;(
        (dom&quot;svg:circle[cx=$(cxs[i]), cy=$(cys[i]), r=$radii, fill=$(color(i))]&quot;()
            for i in 1:nsamples)...
    )
end"><pre><span class="pl-k">using</span> InteractNext, WebIO

width, height <span class="pl-k">=</span> <span class="pl-c1">700</span>, <span class="pl-c1">300</span>
colors <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>black<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>gray<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>silver<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>maroon<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>olive<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>yellow<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>green<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>lime<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>teal<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>aqua<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>navy<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>blue<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>purple<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>fuchsia<span class="pl-pds">"</span></span>]
<span class="pl-en">color</span>(i) <span class="pl-k">=</span> colors[i<span class="pl-k">%</span><span class="pl-c1">length</span>(colors)<span class="pl-k">+</span><span class="pl-c1">1</span>]
ui <span class="pl-k">=</span> <span class="pl-c1">@manipulate</span> <span class="pl-k">for</span> nsamples <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">200</span>,
        sample_step <span class="pl-k">in</span> <span class="pl-c1">slider</span>(<span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">1.0</span>, value<span class="pl-k">=</span><span class="pl-c1">0.1</span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>sample step<span class="pl-pds">"</span></span>),
        phase <span class="pl-k">in</span> <span class="pl-c1">slider</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">2pi</span>, value<span class="pl-k">=</span><span class="pl-c1">0</span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>phase<span class="pl-pds">"</span></span>),
        radii <span class="pl-k">in</span> <span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">60</span>
    cxs_unscaled <span class="pl-k">=</span> [i<span class="pl-k">*</span>sample_step <span class="pl-k">+</span> phase <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>nsamples]
    cys <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(cxs_unscaled) <span class="pl-k">.*</span> height<span class="pl-k">/</span><span class="pl-c1">3</span> <span class="pl-k">.+</span> height<span class="pl-k">/</span><span class="pl-c1">2</span>
    cxs <span class="pl-k">=</span> cxs_unscaled <span class="pl-k">.*</span> width<span class="pl-k">/</span><span class="pl-c1">4pi</span>
    <span class="pl-s"><span class="pl-pds"><span class="pl-c1">dom</span>"</span>svg:svg[width=$width, height=$height]<span class="pl-pds">"</span></span>(
        (<span class="pl-s"><span class="pl-pds"><span class="pl-c1">dom</span>"</span>svg:circle[cx=$(cxs[i]), cy=$(cys[i]), r=$radii, fill=$(color(i))]<span class="pl-pds">"</span></span>()
            <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>nsamples)<span class="pl-k">...</span>
    )
<span class="pl-k">end</span></pre></div>
<p dir="auto">You can move the sliders
to adjust some of the parameters, and the picture should update. In IJulia it should look like this:
<a target="_blank" rel="noopener noreferrer" href="docs/pics/svg_ijulia.png"><img src="docs/pics/svg_ijulia.png" alt="Svg demo in Mux" style="max-width: 100%;"></a></p>
<p dir="auto">Note, on first running the examples in each backend, the widgets could take
up to 10 seconds to appear, after that first load they should display much
faster.</p>
<p dir="auto">The nice thing is, you can write this viz code once, and then very
easily display it in IJulia, in a desktop window with Blink, in a plots pane
in Atom, and serve it up in a web page using Mux, like so:</p>
<h5 dir="auto"><a id="user-content-ijulia" class="anchor" aria-hidden="true" href="#ijulia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IJulia</h5>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="display(ui); # or simply have ui be the result of a cell;"><pre><span class="pl-c1">display</span>(ui); <span class="pl-c"><span class="pl-c">#</span> or simply have ui be the result of a cell;</span></pre></div>
<h5 dir="auto"><a id="user-content-blink-from-the-repl" class="anchor" aria-hidden="true" href="#blink-from-the-repl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Blink (from the REPL)</h5>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Blink
w = Window()
body!(w, ui)"><pre><span class="pl-k">using</span> Blink
w <span class="pl-k">=</span> <span class="pl-c1">Window</span>()
<span class="pl-c1">body!</span>(w, ui)</pre></div>
<h5 dir="auto"><a id="user-content-atomjuno" class="anchor" aria-hidden="true" href="#atomjuno"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Atom/Juno</h5>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="w = get_page()
body!(w, ui)"><pre>w <span class="pl-k">=</span> <span class="pl-c1">get_page</span>()
<span class="pl-c1">body!</span>(w, ui)</pre></div>
<h5 dir="auto"><a id="user-content-mux-from-the-repl" class="anchor" aria-hidden="true" href="#mux-from-the-repl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mux (from the REPL)</h5>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Mux
responder(req) = ui
webio_serve(page(&quot;/&quot;, responder))"><pre><span class="pl-k">using</span> Mux
<span class="pl-en">responder</span>(req) <span class="pl-k">=</span> ui
<span class="pl-c1">webio_serve</span>(<span class="pl-c1">page</span>(<span class="pl-s"><span class="pl-pds">"</span>/<span class="pl-pds">"</span></span>, responder))</pre></div>
<p dir="auto">Then navigate in your browser to <code>http://localhost:8000</code></p>
<p dir="auto">You can redefine the <code>ui</code> and the <code>responder</code> function, then browser refresh to update the page.</p>
<h3 dir="auto"><a id="user-content-plotlyjs" class="anchor" aria-hidden="true" href="#plotlyjs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PlotlyJS</h3>
<p dir="auto">The following example uses PlotlyJS, to install it use: <code>Pkg.add("PlotlyJS")</code>. It's included here as an example since it's a great plotting package, but also because it needs to be used slightly differently to work well with InteractNext.</p>
<h4 dir="auto"><a id="user-content-plotly-example-ui-code" class="anchor" aria-hidden="true" href="#plotly-example-ui-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotly Example UI Code</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using InteractNext, PlotlyJS, CSSUtil, DataStructures

x = y = 0:0.1:30
p = plot(x, y)

freqs = OrderedDict(zip([&quot;pi/4&quot;, &quot;π/2&quot;, &quot;3π/4&quot;, &quot;π&quot;], [π/4, π/2, 3π/4, π]))

mp = @manipulate for freq1 in freqs, freq2 in slider(0.01:0.1:4π; label=&quot;freq2&quot;)
    y = @. sin(freq1*x) * sin(freq2*x)
    restyle!(p, y=[y])
    nothing
end
ui = vbox(mp, p)"><pre><span class="pl-k">using</span> InteractNext, PlotlyJS, CSSUtil, DataStructures

x <span class="pl-k">=</span> y <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">30</span>
p <span class="pl-k">=</span> <span class="pl-c1">plot</span>(x, y)

freqs <span class="pl-k">=</span> <span class="pl-c1">OrderedDict</span>(<span class="pl-c1">zip</span>([<span class="pl-s"><span class="pl-pds">"</span>pi/4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>π/2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>3π/4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>π<span class="pl-pds">"</span></span>], [π<span class="pl-k">/</span><span class="pl-c1">4</span>, π<span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">3</span>π<span class="pl-k">/</span><span class="pl-c1">4</span>, π]))

mp <span class="pl-k">=</span> <span class="pl-c1">@manipulate</span> <span class="pl-k">for</span> freq1 <span class="pl-k">in</span> freqs, freq2 <span class="pl-k">in</span> <span class="pl-c1">slider</span>(<span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">4</span>π; label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>freq2<span class="pl-pds">"</span></span>)
    y <span class="pl-k">=</span> <span class="pl-c1">@.</span> <span class="pl-c1">sin</span>(freq1<span class="pl-k">*</span>x) <span class="pl-k">*</span> <span class="pl-c1">sin</span>(freq2<span class="pl-k">*</span>x)
    <span class="pl-c1">restyle!</span>(p, y<span class="pl-k">=</span>[y])
    <span class="pl-c1">nothing</span>
<span class="pl-k">end</span>
ui <span class="pl-k">=</span> <span class="pl-c1">vbox</span>(mp, p)</pre></div>
<p dir="auto">Below is the code to display it in each of the supported WebIO backends. If
everything is working you should see something like this screenshot using Blink:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/pics/blink_plotly.png"><img src="docs/pics/blink_plotly.png" alt="InteractNext Blink Screenshot" style="max-width: 100%;"></a></p>
<p dir="auto">and when you click on a button, or move the slider, the plot should update.</p>
<h4 dir="auto"><a id="user-content-ijulia-1" class="anchor" aria-hidden="true" href="#ijulia-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IJulia</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="display.((mp,p)); # needed until PlotlyJS.jl is better integrated with WebIO.jl"><pre><span class="pl-c1">display</span>.((mp,p)); <span class="pl-c"><span class="pl-c">#</span> needed until PlotlyJS.jl is better integrated with WebIO.jl</span></pre></div>
<h4 dir="auto"><a id="user-content-blink-from-the-repl-1" class="anchor" aria-hidden="true" href="#blink-from-the-repl-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Blink (from the REPL)</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Blink
w = Window()
p.view.w = w # needed until PlotlyJS.jl is better integrated with WebIO.jl
body!(w, ui)"><pre><span class="pl-k">using</span> Blink
w <span class="pl-k">=</span> <span class="pl-c1">Window</span>()
p<span class="pl-k">.</span>view<span class="pl-k">.</span>w <span class="pl-k">=</span> w <span class="pl-c"><span class="pl-c">#</span> needed until PlotlyJS.jl is better integrated with WebIO.jl</span>
<span class="pl-c1">body!</span>(w, ui)</pre></div>
<h3 dir="auto"><a id="user-content-use-in-atomjuno" class="anchor" aria-hidden="true" href="#use-in-atomjuno"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use in Atom/Juno</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="w = get_page()
p.view.w = w
body!(w, ui)"><pre>w <span class="pl-k">=</span> <span class="pl-c1">get_page</span>()
p<span class="pl-k">.</span>view<span class="pl-k">.</span>w <span class="pl-k">=</span> w
<span class="pl-c1">body!</span>(w, ui)</pre></div>
<h4 dir="auto"><a id="user-content-mux-from-the-repl---doesnt-work-" class="anchor" aria-hidden="true" href="#mux-from-the-repl---doesnt-work-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mux (from the REPL) - Doesn't Work :(</h4>
<p dir="auto">PlotlyJS doesn't support Julia-&gt;JavaScript communication in Mux as yet. Once PlotlyJS.jl is better integrated
with WebIO.jl, the following should work:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Mux
webio_serve(page(&quot;/&quot;, req -&gt; ui))"><pre><span class="pl-k">using</span> Mux
<span class="pl-c1">webio_serve</span>(<span class="pl-c1">page</span>(<span class="pl-s"><span class="pl-pds">"</span>/<span class="pl-pds">"</span></span>, req <span class="pl-k">-&gt;</span> ui))</pre></div>
</article></div>