<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cleaner" class="anchor" aria-hidden="true" href="#cleaner"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cleaner</h1>
<p dir="auto"><a href="https://TheRoniOne.github.io/Cleaner.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://TheRoniOne.github.io/Cleaner.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/TheRoniOne/Cleaner.jl/actions"><img src="https://github.com/TheRoniOne/Cleaner.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/TheRoniOne/Cleaner.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/28e9d1344309a4cd4cd050e3a14312f4e5b7d9893ab99874704543ce0cc08910/68747470733a2f2f636f6465636f762e696f2f67682f546865526f6e694f6e652f436c65616e65722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/TheRoniOne/Cleaner.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-a-toolbox-of-simple-solutions-for-common-data-cleaning-problems" class="anchor" aria-hidden="true" href="#a-toolbox-of-simple-solutions-for-common-data-cleaning-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A toolbox of simple solutions for common data cleaning problems.</h3>
<p dir="auto"><strong>Compatible with any <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> implementation.</strong></p>
<p dir="auto"><strong>Installation</strong>: At the Julia REPL, <code>using Pkg; Pkg.add("Cleaner")</code></p>
<h2 dir="auto"><a id="user-content-key-features" class="anchor" aria-hidden="true" href="#key-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Key Features</h2>
<h3 dir="auto"><a id="user-content-with-cleanerjl-you-will-be-able-to" class="anchor" aria-hidden="true" href="#with-cleanerjl-you-will-be-able-to"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>With Cleaner.jl you will be able to:</h3>
<ul dir="auto">
<li>Format column names to make them unique and fit <code>snake_case</code> or <code>camelCase</code> style.</li>
<li>Remove rows and columns filled with different kinds of empty values.
e.g: <code>missing</code>, <code>""</code>, <code>"NA"</code>, <code>"None"</code></li>
<li>Delete columns filled with just a constant value.</li>
<li>Delete rows with at least one missing value.</li>
<li>Use a row as the names of the columns.</li>
<li>Minimize the amount of element types for each column without making the column of type <code>Any</code>.</li>
<li>Add a row index to your table.</li>
<li>Automatically use multiple threads if your data is big enough (and you are running <code>Julia</code> with more than 1 thread).</li>
<li>Rematerialize your original source <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> type, as <code>CleanTable</code> implements the <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> interface too.</li>
<li>Apply <code>Cleaner</code> transformations on your original table implementation and have the resulting table be of the same type as the original.</li>
<li>Get all repeated values or value combinations that are supposed to be unique.</li>
<li>Get the percentage distribution of the different categories that make up your table.</li>
<li>Compare tables to help solve <code>join</code> or <code>merge</code> problems caused by having different schemas.</li>
</ul>
<h3 dir="auto"><a id="user-content-to-keep-in-mind" class="anchor" aria-hidden="true" href="#to-keep-in-mind"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To keep in mind</h3>
<ul dir="auto">
<li>All non mutating functions (those ending without a <code>!</code>) recieve a <code>table</code> as argument and return a <code>CleanTable</code>.</li>
<li>All mutating functions (those ending with a <code>!</code>) recieve a <code>CleanTable</code> and return a <code>CleanTable</code>.</li>
<li>All returning original type function variants (those ending with ROT) recieve a <code>table</code> as argument and return a <code>table</code> of the same type of the original.</li>
</ul>
<p dir="auto">So you can start your workflow with a non mutating function and continue it using mutating ones if you prefer.
E.g.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = DataFrame(&quot; some bad Name&quot; =&gt; [missing, missing, missing], &quot;Another_weird name &quot; =&gt; [1, 2, 3])
3×2 DataFrame
 Row │  some bad Name  Another_weird name
     │ Missing         Int64
─────┼─────────────────────────────────────
   1 │        missing                    1
   2 │        missing                    2
   3 │        missing                    3

julia&gt; df |&gt; polish_names |&gt; compact_columns!
┌────────────────────┐
│ another_weird_name │
│              Int64 │
├────────────────────┤
│                  1 │
│                  2 │
│                  3 │
└────────────────────┘

"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(<span class="pl-s"><span class="pl-pds">"</span> some bad Name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">missing</span>, <span class="pl-c1">missing</span>, <span class="pl-c1">missing</span>], <span class="pl-s"><span class="pl-pds">"</span>Another_weird name <span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>])
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">2</span> DataFrame
 Row │  some bad Name  Another_weird name
     │ Missing         Int64
─────┼─────────────────────────────────────
   <span class="pl-c1">1</span> │        <span class="pl-c1">missing</span>                    <span class="pl-c1">1</span>
   <span class="pl-c1">2</span> │        <span class="pl-c1">missing</span>                    <span class="pl-c1">2</span>
   <span class="pl-c1">3</span> │        <span class="pl-c1">missing</span>                    <span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> df <span class="pl-k">|&gt;</span> polish_names <span class="pl-k">|&gt;</span> compact_columns!
┌────────────────────┐
│ another_weird_name │
│              Int64 │
├────────────────────┤
│                  <span class="pl-c1">1</span> │
│                  <span class="pl-c1">2</span> │
│                  <span class="pl-c1">3</span> │
└────────────────────┘

</pre></div>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Packages</h2>
<ul dir="auto">
<li><a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a> for general and complex tabular data transformations.</li>
<li><a href="https://github.com/JuliaData/TableOperations.jl">TableOperations.jl</a> for common lazily evaluated transformations on <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> implementations.</li>
<li><a href="https://github.com/invenia/FeatureTransforms.jl">FeatureTransforms.jl</a>, <a href="https://github.com/JuliaML/TableTransforms.jl">TableTransforms.jl</a> for statistical data transformations on <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> implementations.</li>
</ul>
<h2 dir="auto"><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgement</h2>
<p dir="auto">Inspired by <a href="https://github.com/sfirke/janitor">janitor</a> from the R ecosystem.</p>
</article></div>