<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/meggart/SentinelMissings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c4cb5f123cbbf3ffaee9fbe60a565206f78340ac8163392f4b2129e4e17d265a/68747470733a2f2f7472617669732d63692e6f72672f6d6567676172742f53656e74696e656c4d697373696e67732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/meggart/SentinelMissings.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-sentinelmissingsjl" class="anchor" aria-hidden="true" href="#sentinelmissingsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SentinelMissings.jl</h1>
<p>This small package is an attempt to deal with data where missing values are
represented through a so-called sentinel value.
For example, you have an array</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = [0.1,0.2,-9999.0]
"><pre>x <span class="pl-k">=</span> [<span class="pl-c1">0.1</span>,<span class="pl-c1">0.2</span>,<span class="pl-k">-</span><span class="pl-c1">9999.0</span>]</pre></div>
<p>where the <code>-9999.0</code> represents missing data. We can reinterpret this array without copying:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; xs = as_sentinel(x,-9999.0)
3-element reinterpret(SentinelMissings.SentinelMissing{Float64,-9999.0}, ::Array{Float64,1}):
     0.1
     0.2
 missing
"><pre><code>julia&gt; xs = as_sentinel(x,-9999.0)
3-element reinterpret(SentinelMissings.SentinelMissing{Float64,-9999.0}, ::Array{Float64,1}):
     0.1
     0.2
 missing
</code></pre></div>
<p>all operations will promote the <code>SentinelMissing</code> type to a <code>Union{T,Missing}</code> through
Julias type promotion system.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; xs .- 0.1
3-element Array{Union{Missing, Float64},1}:
 0.0
 0.1
  missing
"><pre><code>julia&gt; xs .- 0.1
3-element Array{Union{Missing, Float64},1}:
 0.0
 0.1
  missing
</code></pre></div>
<p>Although conversion to a <code>SentinelMissing</code> is defined as well:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; xs[2]=missing;x
3-element Array{Float64,1}:
     0.1
 -9999.0
 -9999.0
"><pre><code>julia&gt; xs[2]=missing;x
3-element Array{Float64,1}:
     0.1
 -9999.0
 -9999.0
</code></pre></div>
<h3><a id="user-content-mmap-example" class="anchor" aria-hidden="true" href="#mmap-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Mmap-example</h3>
<p>This is an example how to use SentinelMissings with Mmap:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = [1 2 3;
  4 5 6;
  -1 -1 10]
open(&quot;./mmap.bin&quot;,&quot;w&quot;) do f
    write(f,x)
end
using Mmap
xm = open(&quot;./mmap.bin&quot;,&quot;r+&quot;) do f
    Mmap.mmap(f, Matrix{Int}, (3,3))
end
xs = as_sentinel(xm,-1)
"><pre>x <span class="pl-k">=</span> [<span class="pl-c1">1</span> <span class="pl-c1">2</span> <span class="pl-c1">3</span>;
  <span class="pl-c1">4</span> <span class="pl-c1">5</span> <span class="pl-c1">6</span>;
  <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-c1">10</span>]
<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>./mmap.bin<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    <span class="pl-c1">write</span>(f,x)
<span class="pl-k">end</span>
<span class="pl-k">using</span> Mmap
xm <span class="pl-k">=</span> <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>./mmap.bin<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>r+<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    Mmap<span class="pl-k">.</span><span class="pl-c1">mmap</span>(f, Matrix{Int}, (<span class="pl-c1">3</span>,<span class="pl-c1">3</span>))
<span class="pl-k">end</span>
xs <span class="pl-k">=</span> <span class="pl-c1">as_sentinel</span>(xm,<span class="pl-k">-</span><span class="pl-c1">1</span>)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="3×3 reinterpret(SentinelMissings.SentinelMissing{Int64,-1}, ::Array{Int64,2}):
       1        2   3
       4        5   6
 missing  missing  10
"><pre><code>3×3 reinterpret(SentinelMissings.SentinelMissing{Int64,-1}, ::Array{Int64,2}):
       1        2   3
       4        5   6
 missing  missing  10
</code></pre></div>
<p>You can do some operations:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="any(ismissing,xs,dims=1)
"><pre><span class="pl-c1">any</span>(ismissing,xs,dims<span class="pl-k">=</span><span class="pl-c1">1</span>)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="1×3 Array{Bool,2}:
 true  true  true
"><pre><code>1×3 Array{Bool,2}:
 true  true  true
</code></pre></div>
<p>Still there is no copy, the array is just reinterpreted, so that <code>xs</code> and <code>xm</code> point to the same file:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="xs[:,3] = missing
xs
"><pre>xs[:,<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-c1">missing</span>
xs</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="3×3 reinterpret(SentinelMissings.SentinelMissing{Int64,-1}, ::Array{Int64,2}):
       1        2  missing
       4        5  missing
 missing  missing  missing
"><pre><code>3×3 reinterpret(SentinelMissings.SentinelMissing{Int64,-1}, ::Array{Int64,2}):
       1        2  missing
       4        5  missing
 missing  missing  missing
</code></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="xm
"><pre>xm</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="3×3 Array{Int64,2}:
  1   2  -1
  4   5  -1
 -1  -1  -1
"><pre><code>3×3 Array{Int64,2}:
  1   2  -1
  4   5  -1
 -1  -1  -1
</code></pre></div>
</article></div>