<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-abstractgps" class="anchor" aria-hidden="true" href="#abstractgps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AbstractGPs</h1>
<p><a href="https://JuliaGaussianProcesses.github.io/AbstractGPs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaGaussianProcesses/AbstractGPs.jl/workflows/CI/badge.svg?branch=master"><img src="https://github.com/JuliaGaussianProcesses/AbstractGPs.jl/workflows/CI/badge.svg?branch=master" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaGaussianProcesses/AbstractGPs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/86e2cf1b2bc74546fdcd5d7c88ce6737923ab98e1aca2fda2c368d8ad3cca08b/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961476175737369616e50726f6365737365732f41627374726163744750732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/JuliaGaussianProcesses/AbstractGPs.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width:100%;"></a></p>
<p>AbstractGPs.jl is a package that defines a low-level API for working with Gaussian processes (GPs), and basic functionality for working with them in the simplest cases. As such it is aimed more at developers and researchers who are interested in using it as a building block than end-users of GPs.</p>
<p><a target="_blank" rel="noopener noreferrer" href="gp.gif"><img src="gp.gif" alt="GP" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>AbstractGPs is an officially registered Julia package, so the following will install AbstractGPs using the Julia's package manager:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add AbstractGPs
"><pre>] add AbstractGPs</pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Import packages.
using AbstractGPs, Plots

# Generate toy synthetic data.
X = rand(10)
Y = sin.(rand(10))

# Define GP prior with Matern32 kernel
f = GP(Matern32Kernel())

# Finite projection at the inputs `X`
fx = f(X, 0.001)

# Data's log-likelihood w.r.t prior GP `f`. 
logpdf(fx, Y)

# Exact posterior given `Y`.
p_fx = posterior(fx, Y)

# Data's log-likelihood w.r.t posterior GP `p_fx`. 
logpdf(p_fx(X), Y)

# Plot posterior.
scatter(X, Y; label=&quot;Data&quot;)
plot!(-0.5:0.001:1.5, p_fx; label=&quot;Posterior&quot;)
"><pre><span class="pl-c"><span class="pl-c">#</span> Import packages.</span>
<span class="pl-k">using</span> AbstractGPs, Plots

<span class="pl-c"><span class="pl-c">#</span> Generate toy synthetic data.</span>
X <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>)
Y <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(<span class="pl-c1">rand</span>(<span class="pl-c1">10</span>))

<span class="pl-c"><span class="pl-c">#</span> Define GP prior with Matern32 kernel</span>
f <span class="pl-k">=</span> <span class="pl-c1">GP</span>(<span class="pl-c1">Matern32Kernel</span>())

<span class="pl-c"><span class="pl-c">#</span> Finite projection at the inputs `X`</span>
fx <span class="pl-k">=</span> <span class="pl-c1">f</span>(X, <span class="pl-c1">0.001</span>)

<span class="pl-c"><span class="pl-c">#</span> Data's log-likelihood w.r.t prior GP `f`. </span>
<span class="pl-c1">logpdf</span>(fx, Y)

<span class="pl-c"><span class="pl-c">#</span> Exact posterior given `Y`.</span>
p_fx <span class="pl-k">=</span> <span class="pl-c1">posterior</span>(fx, Y)

<span class="pl-c"><span class="pl-c">#</span> Data's log-likelihood w.r.t posterior GP `p_fx`. </span>
<span class="pl-c1">logpdf</span>(<span class="pl-c1">p_fx</span>(X), Y)

<span class="pl-c"><span class="pl-c">#</span> Plot posterior.</span>
<span class="pl-c1">scatter</span>(X, Y; label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Data<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot!</span>(<span class="pl-k">-</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0.001</span><span class="pl-k">:</span><span class="pl-c1">1.5</span>, p_fx; label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Posterior<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-related-julia-packages" class="anchor" aria-hidden="true" href="#related-julia-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related Julia packages</h2>
<ul>
<li><a href="https://github.com/JuliaGaussianProcesses/AbstractGPsMakie.jl/">AbstractGPsMakie.jl</a> - Plotting GPs with <a href="https://github.com/JuliaPlots/Makie.jl/">Makie.jl</a>.</li>
<li><a href="https://github.com/JuliaGaussianProcesses/BayesianLinearRegressors.jl">BayesianLinearRegressors.jl</a> - Accelerated inference in GPs with a linear kernel. Built on types which implement this package's APIs.</li>
<li><a href="https://github.com/JuliaGaussianProcesses/GPLikelihoods.jl/">GPLikelihoods.jl</a> - Non-Gaussian likelihood functions to use with GPs.</li>
<li><a href="https://github.com/JuliaGaussianProcesses/KernelFunctions.jl/">KernelFunctions.jl</a> - Kernel functions for machine learning.</li>
<li><a href="https://github.com/JuliaGaussianProcesses/Stheno.jl">Stheno.jl</a> - Building probabilistic programmes involving GPs. Built on types which implement this package's APIs.</li>
<li><a href="https://github.com/JuliaGaussianProcesses/TemporalGPs.jl">TemporalGPs.jl</a> - Accelerated inference in GPs involving time. Built on types which implement this package's APIs.</li>
</ul>
<h2><a id="user-content-issuescontributing" class="anchor" aria-hidden="true" href="#issuescontributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Issues/Contributing</h2>
<p>If you notice a problem or would like to contribute by adding more kernel functions or features please <a href="https://github.com/JuliaGaussianProcesses/AbstractGPs.jl/issues">submit an issue</a>.</p>
</article></div>