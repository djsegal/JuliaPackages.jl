<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-distributedfactorgraphsjl" class="anchor" aria-hidden="true" href="#distributedfactorgraphsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DistributedFactorGraphs.jl</h1>
<table>
<thead>
<tr>
<th>Release v0.7</th>
<th>Dev</th>
<th>Coverage</th>
<th>Docs</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://travis-ci.org/JuliaRobotics/DistributedFactorGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/379d1522dcdb2c9b244fded61724f04270cff1fc/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961526f626f746963732f4469737472696275746564466163746f724772617068732e6a6c2e7376673f6272616e63683d72656c656173652f76302e37" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaRobotics/DistributedFactorGraphs.jl.svg?branch=release/v0.7" style="max-width:100%;"></a></td>
<td><a href="https://travis-ci.org/JuliaRobotics/DistributedFactorGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6d4399af6a419cd1d83612edf58e06def274512c/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961526f626f746963732f4469737472696275746564466163746f724772617068732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaRobotics/DistributedFactorGraphs.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td><a href="https://codecov.io/gh/JuliaRobotics/DistributedFactorGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/91036dfbaac219074d84c8d4f707c58c95b22fc9/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961526f626f746963732f4469737472696275746564466163746f724772617068732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov Status" data-canonical-src="https://codecov.io/gh/JuliaRobotics/DistributedFactorGraphs.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
<td><a href="http://juliarobotics.github.io/DistributedFactorGraphs.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>DistributedFactorGraphs.jl provides a flexible factor graph API for use in the <a href="https://github.com/JuliaRobotics/Caesar.jl">Caesar.jl</a> ecosystem. The package supplies:</p>
<ul>
<li>A standardized API for interacting with factor graphs</li>
<li>Implementations of the API for in-memory and database-driven operation</li>
<li>Visualization extensions to validate the underlying graph</li>
</ul>
<p><strong>Note</strong> this package is still under initial development, and will adopt parts of the functionality currently contained in <a href="http://www.github.com/JuliaRobotics/IncrementalInference.jl">IncrementalInference.jl</a>.</p>
<h1><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h1>
<p>Please see the <a href="http://juliarobotics.github.io/DistributedFactorGraphs.jl/latest/" rel="nofollow">documentation</a> and the <a href="https://github.com/JuliaRobotics/DistributedFactorGraphs.jl/tree/master/test">unit tests</a> for examples on using DistributedFactorGraphs.jl.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h1>
<p>DistributedFactorGraphs can be installed from Julia packages using:</p>
<div class="highlight highlight-source-julia"><pre>add DistributedFactorGraphs</pre></div>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>
<p>DistributedFactorGraphs (DFG) currently supports two implementations:</p>
<ul>
<li>An in-memory factor graphs based on Graphs.jl and LightGraphs.jl</li>
<li>A Neo4j-based factor graph based on Neo4j.jl</li>
</ul>
<p>The in-memory implementation is the default. The Neo4j driver can be enabled by importing Neo4j before DFG:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> To enable the Neo4j driver, import Neo4j.jl first</span>
<span class="pl-k">using</span> Neo4j
<span class="pl-k">using</span> DistributedFactorGraphs</pre></div>
<p>Both drivers support the same functions, so choose which you want to use when creating your initial DFG. For example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> In-memory DFG</span>
dfg <span class="pl-k">=</span> <span class="pl-c1">GraphsDFG</span><span class="pl-c1">{NoSolverParams}</span>()
<span class="pl-c1">addVariable!</span>(dfg, <span class="pl-c1">DFGVariable</span>(<span class="pl-c1">:a</span>))
<span class="pl-c1">addVariable!</span>(dfg, <span class="pl-c1">DFGVariable</span>(<span class="pl-c1">:b</span>))
<span class="pl-c1">addFactor!</span>(dfg, [v1, v2], <span class="pl-c1">DFGFactor</span><span class="pl-c1">{Int, :Symbol}</span>(<span class="pl-c1">:f1</span>)) <span class="pl-c"><span class="pl-c">#</span> Rather use a RoME-type factor here (e.g. Pose2Pose2) rather than an Int, this is just for demonstrative purposes.</span></pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Neo4j-based DFG</span>
dfg <span class="pl-k">=</span> <span class="pl-c1">CloudGraphsDFG</span><span class="pl-c1">{NoSolverParams}</span>(<span class="pl-s"><span class="pl-pds">"</span>localhost<span class="pl-pds">"</span></span>, <span class="pl-c1">7474</span>, <span class="pl-s"><span class="pl-pds">"</span>neo4j<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>testUser<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>testRobot<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>testSession<span class="pl-pds">"</span></span>,
      <span class="pl-c1">nothing</span>,
      <span class="pl-c1">nothing</span>,
      IncrementalInference<span class="pl-k">.</span>decodePackedType)
<span class="pl-c1">addVariable!</span>(dfg, <span class="pl-c1">DFGVariable</span>(<span class="pl-c1">:a</span>))
<span class="pl-c1">addVariable!</span>(dfg, <span class="pl-c1">DFGVariable</span>(<span class="pl-c1">:b</span>))
<span class="pl-c1">addFactor!</span>(dfg, [v1, v2], <span class="pl-c1">DFGFactor</span><span class="pl-c1">{Int, :Symbol}</span>(<span class="pl-c1">:f1</span>)) <span class="pl-c"><span class="pl-c">#</span> Rather use a RoME-type factor here (e.g. Pose2Pose2) rather than an Int, this is just for demonstrative purposes.</span></pre></div>
<p>Please see the documentation for more information on interacting with the factor graph.</p>
<h2><a id="user-content-setting-up-a-quick-neo4j-database" class="anchor" aria-hidden="true" href="#setting-up-a-quick-neo4j-database"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up a Quick Neo4j Database</h2>
<p>The simplest way to set up a test database is with Docker.</p>
<p>To pull the Neo4j image:</p>
<div class="highlight highlight-source-shell"><pre>docker pull neo4j</pre></div>
<p>To run the image with user <code>neo4j</code> and password <code>test</code>:</p>
<div class="highlight highlight-source-shell"><pre>docker run -d --publish=7474:7474 --publish=7687:7687 --env NEO4J_AUTH=neo4j/test neo4j</pre></div>
<blockquote>
<p><strong>Note</strong> If you just installed docker and having permission issues, please see <a href="https://askubuntu.com/questions/941816/permission-denied-when-running-docker-after-installing-it-as-a-snap" rel="nofollow">this ask Ubuntu forum</a>.</p>
</blockquote>
</article></div>