<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-quadoscjl" class="anchor" aria-hidden="true" href="#quadoscjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QuadOsc.jl</h1>
<p dir="auto">This Julia package exports exactly one function <code>quadosc()</code> that is used to
integrate oscillatory functions to infinity. The algorithm works by integrating
the integrand between successive zeros using <a href="https://github.com/JuliaMath/QuadGK.jl">QuadGK</a> and then summing the
resulting alternating series with a series acceleration, either using Wynn's
epsilon algorithm from 1956 (by default) or the algorthm <a href="https://people.mpim-bonn.mpg.de/zagier/files/exp-math-9/fulltext.pdf" rel="nofollow">described</a> in
<a href="https://doi.org/10.1080/10586458.2000.10504632" rel="nofollow">Cohen et al 2000</a>.</p>
<p dir="auto">Given an oscillatory function <code>fn(x)</code>,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QuadOsc
julia&gt; a = 0.0
julia&gt; I, E = quadosc(fn, a, Inf, n-&gt;fnzeros(n))"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QuadOsc
julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
julia<span class="pl-k">&gt;</span> I, E <span class="pl-k">=</span> <span class="pl-c1">quadosc</span>(fn, a, <span class="pl-c1">Inf</span>, n<span class="pl-k">-&gt;</span><span class="pl-c1">fnzeros</span>(n))</pre></div>
<p dir="auto">integrates <code>fn(x)</code> from <code>a</code> to infinity, and <code>fnzeros(n)</code> is the <code>n</code>-th zero of
<code>fn(x)</code>. That is, <code>fn(fnzeros(n)) == 0</code> for integer <code>n</code>.</p>
<p dir="auto">The series acceleration is available via</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ak = @. (-1)^(1:5) / (1:5)
julia&gt; sum_ak = QuadOsc.accel_cohen_villegas_zagier(ak)"><pre>julia<span class="pl-k">&gt;</span> ak <span class="pl-k">=</span> <span class="pl-c1">@.</span> (<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">^</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>) <span class="pl-k">/</span> (<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>)
julia<span class="pl-k">&gt;</span> sum_ak <span class="pl-k">=</span> QuadOsc<span class="pl-k">.</span><span class="pl-c1">accel_cohen_villegas_zagier</span>(ak)</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; sum_ak = QuadOsc.accel_wynn_eps(ak)"><pre>julia<span class="pl-k">&gt;</span> sum_ak <span class="pl-k">=</span> QuadOsc<span class="pl-k">.</span><span class="pl-c1">accel_wynn_eps</span>(ak)</pre></div>
<p dir="auto">Tests can be run by loading the package, entering package mode with pressing
<code>]</code>, and calling <code>test</code> on the package:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QuadOsc
pkg&gt; test QuadOsc"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QuadOsc
pkg<span class="pl-k">&gt;</span> test QuadOsc</pre></div>
<p dir="auto">'nuff said?</p>
</article></div>