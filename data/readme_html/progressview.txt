<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-progressview" class="anchor" aria-hidden="true" href="#progressview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ProgressView</h1>
<p>A Julia package for displaying categorical progress information</p>
<ul>
<li><a href="https://github.com/eschnett/ProgressView.jl">GitHub</a>: Source code repository</li>
<li><a href="https://github.com/eschnett/ProgressView.jl/actions"><img src="https://github.com/eschnett/ProgressView.jl/workflows/CI/badge.svg" alt="GitHub CI" style="max-width:100%;"></a></li>
</ul>
<p><code>ProgressView</code> displays periodically which functions a program is
currently executing with a stack-like view. This similar to a
hierarchical version of
<a href="https://github.com/timholy/ProgressMeter.jl"><code>ProgressMeter</code></a>.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function inner()
    return 2
end

function fun()
    x = @monitor &quot;inner&quot; inner()
    return nothing
end

function main()
    @monitor &quot;fun&quot; fun()
end
"><pre><span class="pl-k">function</span> <span class="pl-en">inner</span>()
    <span class="pl-k">return</span> <span class="pl-c1">2</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">fun</span>()
    x <span class="pl-k">=</span> <span class="pl-c1">@monitor</span> <span class="pl-s"><span class="pl-pds">"</span>inner<span class="pl-pds">"</span></span> <span class="pl-c1">inner</span>()
    <span class="pl-k">return</span> <span class="pl-c1">nothing</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">main</span>()
    <span class="pl-c1">@monitor</span> <span class="pl-s"><span class="pl-pds">"</span>fun<span class="pl-pds">"</span></span> <span class="pl-c1">fun</span>()
<span class="pl-k">end</span></pre></div>
<p>Sample snapshot of output:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="1. fun
  2. inner
"><pre><code>1. fun
  2. inner
</code></pre></div>
</article></div>