<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-salsajl" class="anchor" aria-hidden="true" href="#salsajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Salsa.jl</h1>
<p><a href="https://travis-ci.com/RelationalAI-oss/Salsa.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c000da0aad62e41c238466ca115d6b769226a4e5cea410c931065997177ffe05/68747470733a2f2f7472617669732d63692e636f6d2f52656c6174696f6e616c41492d6f73732f53616c73612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/RelationalAI-oss/Salsa.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A framework for on-demand, incremental computation via memoization, inspired by Rust lang's
<a href="https://github.com/salsa-rs/salsa">salsa-rs/salsa</a>.</p>
<ul>
<li><code>@derived</code></li>
<li><code>@declare_input</code></li>
<li><code>Runtime()</code></li>
</ul>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>Salsa is:</p>
<ul>
<li>a memoization framework, with</li>
<li>runtime dependency tracking, so that</li>
<li>you can update some inputs and (performantly) automatically invalidate the affected caches.</li>
</ul>
<p>It provides a framework for automating away the potential pitfalls of cache invalidation, by automatically detecting dependencies between parts of your code (<code>@derived</code> functions), and using the detected dependency graph to propagate invalidations when facts about the world have changed.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @declare_input x(rt)::Int
(x, set_x!, delete_x!)

julia&gt; @derived function x_plus_one(rt)
           println(&quot;Running x_plus_one.&quot;)
           return x(rt) + 1
       end
x_plus_one (generic function with 1 method)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@declare_input</span> <span class="pl-c1">x</span>(rt)<span class="pl-k">::</span><span class="pl-c1">Int</span>
(x, set_x!, delete_x!)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@derived</span> <span class="pl-k">function</span> <span class="pl-en">x_plus_one</span>(rt)
           <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Running x_plus_one.<span class="pl-pds">"</span></span>)
           <span class="pl-k">return</span> <span class="pl-c1">x</span>(rt) <span class="pl-k">+</span> <span class="pl-c1">1</span>
       <span class="pl-k">end</span>
x_plus_one (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; rt = Runtime();

julia&gt; set_x!(rt, 1)

julia&gt; x_plus_one(rt)
Running x_plus_one.
2

julia&gt; x_plus_one(rt)
2

julia&gt; set_x!(rt, 10)

julia&gt; x_plus_one(rt)
Running x_plus_one.
11
"><pre>julia<span class="pl-k">&gt;</span> rt <span class="pl-k">=</span> <span class="pl-c1">Runtime</span>();

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_x!</span>(rt, <span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x_plus_one</span>(rt)
Running x_plus_one.
<span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x_plus_one</span>(rt)
<span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_x!</span>(rt, <span class="pl-c1">10</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x_plus_one</span>(rt)
Running x_plus_one.
<span class="pl-c1">11</span></pre></div>
<h3><a id="user-content-flags" class="anchor" aria-hidden="true" href="#flags"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Flags</h3>
<p>For maximum performance in deployed software, you can disable all runtime assertions and debug code by setting this environment variable before building Salsa: <code>SALSA_STATIC_DEBUG=false</code>.</p>
<p>Or, for slightly less peformance gain, you can toggle it at runtime via <code>Salsa.Debug.disable_debug()</code>.</p>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Credits</h2>
<p>This package was closely modelled off of the Rust
<a href="https://github.com/salsa-rs/salsa"><code>salsa</code></a> framework, and takes heavy inspiration from
that framework and <a href="http://adapton.org/" rel="nofollow">adapton</a>.</p>
<p>We highly recommend this talk which motivates the need for incremental, demand driven
computation, and for packages like Salsa:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=N6b44kMS6OM&amp;t=984s" rel="nofollow">YouTube: Responsive compilers - Nicholas Matsakis - PLISS 2019</a></li>
</ul>
<h3><a id="user-content-comparison-with-the-rust-salsa-rs-framework" class="anchor" aria-hidden="true" href="#comparison-with-the-rust-salsa-rs-framework"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Comparison with the Rust Salsa-rs framework</h3>
<p>The underlying principles are very similar to, and inspired from that package:
It can be hard to write correct incremental programs by hand, so we provide macros
that make it easy by automatically tracking dependencies between computations.</p>
<p>If you are familiar with Salsa-rs, you'll see many things that are familiar, with
slightly more generic names that are moved away from database-oriented naming:</p>
<ul>
<li><strong>derived queries</strong> =&gt; <strong><code>@derived</code> functions</strong></li>
<li><strong>query group</strong> =&gt; <strong><code>Runtime</code></strong></li>
</ul>
</article></div>