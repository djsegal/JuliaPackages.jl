<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fieldconstantsjl" class="anchor" aria-hidden="true" href="#fieldconstantsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FieldConstants.jl</h1>
<p dir="auto"><em>Field algbera constants as parametric types</em></p>
<p dir="auto">When using the base Julia language it is frequently necessary to use <code>Float64</code> or <code>Int64</code> numbers as compile time constants for generating code.
<code>FieldConstants</code> implements a parametric type similar to <code>Val</code> called <code>Constant</code> which satisfies the mathematical field axioms.</p>
<p dir="auto">Used in <a href="https://github.com/chakravala/UnitSystems.jl">UnitSystems.jl</a>, <a href="https://github.com/chakravala/FieldAlgebra.jl">FieldAlgebra.jl</a>, <a href="https://github.com/chakravala/Similitude.jl">Similitude.jl</a>, and <a href="https://github.com/chakravala/MeasureSystems.jl">MeasureSystems.jl</a>.</p>
</article></div>