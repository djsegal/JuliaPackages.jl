<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-possibilisticarithmeticjl" class="anchor" aria-hidden="true" href="#possibilisticarithmeticjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PossibilisticArithmetic.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Institute-for-Risk-and-Uncertainty/FuzzyArithmetic.jl/workflows/CI/badge.svg"><img src="https://github.com/Institute-for-Risk-and-Uncertainty/FuzzyArithmetic.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://en.wikipedia.org/wiki/Possibility_theory" rel="nofollow">Possibility Theory</a>: fuzzy set theory applied to bounding sets of probability measures (<a href="https://en.wikipedia.org/wiki/Imprecise_probability" rel="nofollow">Imprecise Probabilities</a>). This package gives a rigorous arithmetic between fuzzy numbers. Outer approximations and arithmetic between fuzzy sets are based on <a href="https://github.com/JuliaIntervals/IntervalArithmetic.jl">IntervalArithmetic.jl</a>.</p>
<h3 dir="auto"><a id="user-content-in-development-package-can-currently" class="anchor" aria-hidden="true" href="#in-development-package-can-currently"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>In development. Package can currently:</h3>
<ul dir="auto">
<li>Get interval bounds on probabilities</li>
<li>Construct robust outer approximations of membership functions with different step sizes</li>
<li>Construct fuzzy numbers with a real or interval core</li>
<li>Perform dependent arithmeric (using <a href="https://github.com/AnderGray/BivariateCopulas.jl">copulas</a>) between fuzzy numbers
<ul dir="auto">
<li>Levelwise arithmetic (standard fuzzy arithmetic)</li>
<li>Arithmetic with a precise copula defined (sigma convolutions)</li>
<li>Arithmetic with a copula's bound defined (tau convolutions)</li>
</ul>
</li>
<li>Unary operators: <code>-, sin, cos, tan, exp, log</code></li>
<li>Interacts with <a href="https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl">ProbabilityBoundsAnalysis.jl</a> and <a href="https://github.com/JuliaIntervals/IntervalArithmetic.jl">IntervalArithmetic.jl</a></li>
<li>Conversions between fuzzy numbers, <a href="https://en.wikipedia.org/wiki/Probability_box" rel="nofollow">p-boxes</a>, and more general <a href="https://en.wikipedia.org/wiki/Dempster%E2%80%93Shafer_theory" rel="nofollow">random sets</a></li>
<li>Plot fuzzy numbers (requires PyPlot)</li>
</ul>
<h3 dir="auto"><a id="user-content-soon" class="anchor" aria-hidden="true" href="#soon"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Soon:</h3>
<ul dir="auto">
<li>Multimodal possibility distributions (non-convex fuzzy sets) using <a href="https://github.com/AnderGray/IntervalUnionArithmetic.jl">IntervalUnionArithmetic.jl</a></li>
<li>Parameteric distribution constructors</li>
<li>Documentation and testing</li>
</ul>
<h2 dir="auto"><a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Resources</h2>
<ul dir="auto">
<li>Fuzzy &amp; Possibility Interest Group (FnPIG) <a href="https://sites.google.com/site/fuzzypossrisk/" rel="nofollow">google site</a> (access granted on request)</li>
<li>Society for Imprecise Probabilities: Theories and Applications <a href="https://www.sipta.org" rel="nofollow">website</a></li>
<li><a href="https://proceedings.mlr.press/v147/gray21a.html" rel="nofollow">ISIPTA21 paper</a></li>
<li><a href="https://www.researchgate.net/publication/353220811_Poster_Dependent_Possibilistic_Arithmetic_using_Copulas" rel="nofollow">ISIPTA21 poster</a></li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>PossibilisticArithmtic.jl</code> is a registered Julia package, and can be installed using the Julia package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
(v1.0) pkg&gt; add PossibilisticArithmetic
julia&gt; using PossibilisticArithmetic"><pre>julia<span class="pl-k">&gt;</span> ]
(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add PossibilisticArithmetic
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PossibilisticArithmetic</pre></div>
<p dir="auto">or for the latest version:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
(v1.0) pkg&gt; add https://github.com/AnderGray/PossibilisticArithmetic.jl#master
julia&gt; using PossibilisticArithmetic"><pre>julia<span class="pl-k">&gt;</span> ]
(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>AnderGray<span class="pl-k">/</span>PossibilisticArithmetic<span class="pl-k">.</span>jl<span class="pl-c"><span class="pl-c">#</span>master</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PossibilisticArithmetic</pre></div>
<h2 dir="auto"><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; a = Fuzzy(0, 1, 2)
Fuzzy: 	 ~ ( Range=[0, 2], Core=1.0 )

julia&gt; a = Fuzzy(0, 1, 2, steps = 200) # Give number of steps, default = 200
Fuzzy: 	 ~ ( Range=[0, 2], Core=1.0 )

julia&gt; cut(a,0.2)       # get an Alpha-cut, returns an interval
[0.195979, 1.80403]

julia&gt; b = Fuzzy(0, 1, 1.5, 2)
Fuzzy: 	 ~ ( Range=[0, 2], Core=[1, 1.5] )

julia&gt; c = a * b
Fuzzy: 	 ~ ( Range=[0, 4], Core=[1, 1.5] )

julia&gt; mass(c, interval(3, 4) )   # Bound probability measure in some set
[0, 0.351759]

julia&gt; mass(c, 3, 4)   # Same as above
[0, 0.351759]

julia&gt; c(3, 4)         # Can also query object directly
[0, 0.351759]

julia&gt; plot(a)
julia&gt; plot(b)
julia&gt; plot(c)"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Fuzzy</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>)
Fuzzy<span class="pl-k">:</span> 	 <span class="pl-k">~</span> ( Range<span class="pl-k">=</span>[<span class="pl-c1">0</span>, <span class="pl-c1">2</span>], Core<span class="pl-k">=</span><span class="pl-c1">1.0</span> )

julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Fuzzy</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, steps <span class="pl-k">=</span> <span class="pl-c1">200</span>) <span class="pl-c"><span class="pl-c">#</span> Give number of steps, default = 200</span>
Fuzzy<span class="pl-k">:</span> 	 <span class="pl-k">~</span> ( Range<span class="pl-k">=</span>[<span class="pl-c1">0</span>, <span class="pl-c1">2</span>], Core<span class="pl-k">=</span><span class="pl-c1">1.0</span> )

julia<span class="pl-k">&gt;</span> <span class="pl-c1">cut</span>(a,<span class="pl-c1">0.2</span>)       <span class="pl-c"><span class="pl-c">#</span> get an Alpha-cut, returns an interval</span>
[<span class="pl-c1">0.195979</span>, <span class="pl-c1">1.80403</span>]

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">Fuzzy</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1.5</span>, <span class="pl-c1">2</span>)
Fuzzy<span class="pl-k">:</span> 	 <span class="pl-k">~</span> ( Range<span class="pl-k">=</span>[<span class="pl-c1">0</span>, <span class="pl-c1">2</span>], Core<span class="pl-k">=</span>[<span class="pl-c1">1</span>, <span class="pl-c1">1.5</span>] )

julia<span class="pl-k">&gt;</span> c <span class="pl-k">=</span> a <span class="pl-k">*</span> b
Fuzzy<span class="pl-k">:</span> 	 <span class="pl-k">~</span> ( Range<span class="pl-k">=</span>[<span class="pl-c1">0</span>, <span class="pl-c1">4</span>], Core<span class="pl-k">=</span>[<span class="pl-c1">1</span>, <span class="pl-c1">1.5</span>] )

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mass</span>(c, <span class="pl-c1">interval</span>(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>) )   <span class="pl-c"><span class="pl-c">#</span> Bound probability measure in some set</span>
[<span class="pl-c1">0</span>, <span class="pl-c1">0.351759</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mass</span>(c, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>)   <span class="pl-c"><span class="pl-c">#</span> Same as above</span>
[<span class="pl-c1">0</span>, <span class="pl-c1">0.351759</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">c</span>(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>)         <span class="pl-c"><span class="pl-c">#</span> Can also query object directly</span>
[<span class="pl-c1">0</span>, <span class="pl-c1">0.351759</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(a)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(b)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(c)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/45a518b933bcc96a1bfc4525a8035800f62e688bc500f22dcdb11ef2b2009184/68747470733a2f2f692e696d6775722e636f6d2f375a59625479522e706e67"><img src="https://camo.githubusercontent.com/45a518b933bcc96a1bfc4525a8035800f62e688bc500f22dcdb11ef2b2009184/68747470733a2f2f692e696d6775722e636f6d2f375a59625479522e706e67" alt="Fuzzy with real core" data-canonical-src="https://i.imgur.com/7ZYbTyR.png" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dd0b0c6eb86ed9acf1ea2899ddc10ae05cf83271eac61ceed3fb83961c4eabf1/68747470733a2f2f692e696d6775722e636f6d2f683868337537632e706e67"><img src="https://camo.githubusercontent.com/dd0b0c6eb86ed9acf1ea2899ddc10ae05cf83271eac61ceed3fb83961c4eabf1/68747470733a2f2f692e696d6775722e636f6d2f683868337537632e706e67" alt="Fuzzy with interval core" data-canonical-src="https://i.imgur.com/h8h3u7c.png" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/479f540435bec3e708e474c1e9b939323879217ea9bfb8583bca44d5c8fdd1d0/68747470733a2f2f692e696d6775722e636f6d2f707134646a42542e706e67"><img src="https://camo.githubusercontent.com/479f540435bec3e708e474c1e9b939323879217ea9bfb8583bca44d5c8fdd1d0/68747470733a2f2f692e696d6775722e636f6d2f707134646a42542e706e67" alt="Levelwise fuzzy product" data-canonical-src="https://i.imgur.com/pq4djBT.png" style="max-width: 100%;"></a></p>
</article></div>