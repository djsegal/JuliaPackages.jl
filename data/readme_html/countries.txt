<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-countriesjl" class="anchor" aria-hidden="true" href="#countriesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Countries.jl</h1>
<p><a href="https://juliahub.com/docs/Countries/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/cjdoris/Countries.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b86d10d46f9e8dbd4ed271bb54db0ee1db1bcf7baea9d3bd0d1f8c6b011e85d7/68747470733a2f2f7472617669732d63692e636f6d2f636a646f7269732f436f756e74726965732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/cjdoris/Countries.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/cjdoris/Countries.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/77f30ba358467eb20f8f1588aed5271cbe4ff7e623e07bcf0e52ec50cf237415/68747470733a2f2f636f6465636f762e696f2f67682f636a646f7269732f436f756e74726965732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/cjdoris/Countries.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Julia package for handling the countries on Earth. Useful for example to decode countries encoded differently in different data sets.</p>
<p>It is based on the data <a href="https://datahub.io/core/country-codes" rel="nofollow">here</a>, which is downloaded the first time you load this package.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="] add https://github.com/cjdoris/Countries.jl.git
"><pre><code>] add https://github.com/cjdoris/Countries.jl.git
</code></pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>This module exports one type, <code>Country</code>. The following are all ways to construct the UK:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# ISO3166 codes (numeric, strings or symbols)
Country(826)
Country(&quot;GB&quot;)
Country(:GB)
Country(&quot;GBR&quot;)
Country(:GBR)

# Official name, UN name (any case, any language) or CLDR display name
Country(&quot;UK&quot;)
Country(&quot;United Kingdom of Great Britain and Northern Ireland&quot;)
Country(&quot;EL REINO UNIDO DE GRAN BRETAÑA E IRLANDA DEL NORTE&quot;)

# When all else fails, if there is an unambiguous match, returns this and emits a warning
Country(&quot;United Kingdom&quot;)
Country(&quot;Great Britain&quot;)
Country(&quot;Britain&quot;)
Country(&quot;Reino Unido&quot;)
Country(&quot;Grande-Bretagne&quot;)
"><pre><span class="pl-c"><span class="pl-c">#</span> ISO3166 codes (numeric, strings or symbols)</span>
<span class="pl-c1">Country</span>(<span class="pl-c1">826</span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>GB<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-c1">:GB</span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>GBR<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-c1">:GBR</span>)

<span class="pl-c"><span class="pl-c">#</span> Official name, UN name (any case, any language) or CLDR display name</span>
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>UK<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>United Kingdom of Great Britain and Northern Ireland<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>EL REINO UNIDO DE GRAN BRETAÑA E IRLANDA DEL NORTE<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> When all else fails, if there is an unambiguous match, returns this and emits a warning</span>
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>United Kingdom<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>Great Britain<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>Britain<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>Reino Unido<span class="pl-pds">"</span></span>)
<span class="pl-c1">Country</span>(<span class="pl-s"><span class="pl-pds">"</span>Grande-Bretagne<span class="pl-pds">"</span></span>)</pre></div>
<p>We can retrieve information about a country <code>c</code> via property access:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c = Country(:GBR)
c.iso3166_numeric       # 826
c.iso3166_alpha2        # :GB
c.iso3166_alpha3        # :GBR
c.cldr_name_en          # &quot;UK&quot;
c.official_name_en      # &quot;United Kingdom of Great Britain and Northern Ireland&quot;
c.unterm_formal_name_ar # &quot;المملكة المتحدة لبريطانيا العظمى وآيرلندا الشمالية&quot;
c.tld_name              # &quot;.uk&quot;
c.continent_code        # :EU
c.capital_name_en       # &quot;London&quot;
"><pre>c <span class="pl-k">=</span> <span class="pl-c1">Country</span>(<span class="pl-c1">:GBR</span>)
c<span class="pl-k">.</span>iso3166_numeric       <span class="pl-c"><span class="pl-c">#</span> 826</span>
c<span class="pl-k">.</span>iso3166_alpha2        <span class="pl-c"><span class="pl-c">#</span> :GB</span>
c<span class="pl-k">.</span>iso3166_alpha3        <span class="pl-c"><span class="pl-c">#</span> :GBR</span>
c<span class="pl-k">.</span>cldr_name_en          <span class="pl-c"><span class="pl-c">#</span> "UK"</span>
c<span class="pl-k">.</span>official_name_en      <span class="pl-c"><span class="pl-c">#</span> "United Kingdom of Great Britain and Northern Ireland"</span>
c<span class="pl-k">.</span>unterm_formal_name_ar <span class="pl-c"><span class="pl-c">#</span> "المملكة المتحدة لبريطانيا العظمى وآيرلندا الشمالية"</span>
c<span class="pl-k">.</span>tld_name              <span class="pl-c"><span class="pl-c">#</span> ".uk"</span>
c<span class="pl-k">.</span>continent_code        <span class="pl-c"><span class="pl-c">#</span> :EU</span>
c<span class="pl-k">.</span>capital_name_en       <span class="pl-c"><span class="pl-c">#</span> "London"</span></pre></div>
<p>Alternatively there are functions of the same name. The argument can be anything convertible to a country. The return type can be specified:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c = Country(:GBR)
Countries.continent_code(c)            # :EU
Countries.continent_code(Symbol, c)    # :EU
Countries.continent_code(String, c)    # &quot;EU&quot;
Countries.continent_code(String, :GBR) # &quot;EU&quot;
"><pre>c <span class="pl-k">=</span> <span class="pl-c1">Country</span>(<span class="pl-c1">:GBR</span>)
Countries<span class="pl-k">.</span><span class="pl-c1">continent_code</span>(c)            <span class="pl-c"><span class="pl-c">#</span> :EU</span>
Countries<span class="pl-k">.</span><span class="pl-c1">continent_code</span>(Symbol, c)    <span class="pl-c"><span class="pl-c">#</span> :EU</span>
Countries<span class="pl-k">.</span><span class="pl-c1">continent_code</span>(String, c)    <span class="pl-c"><span class="pl-c">#</span> "EU"</span>
Countries<span class="pl-k">.</span><span class="pl-c1">continent_code</span>(String, <span class="pl-c1">:GBR</span>) <span class="pl-c"><span class="pl-c">#</span> "EU"</span></pre></div>
</article></div>