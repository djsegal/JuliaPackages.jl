<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-owntimejl" class="anchor" aria-hidden="true" href="#owntimejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>OwnTime.jl</h1>
<p>OwnTime provides two additional ways to view <a href="https://docs.julialang.org/en/v1/manual/profile/" rel="nofollow">Julia's Profile</a> data.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h1>
<p>Use <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">Julia's package manager</a> to install.</p>
<p>In <a href="https://docs.julialang.org/en/v1/stdlib/REPL/" rel="nofollow">the Julia REPL</a> do:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>OwnTime<span class="pl-pds">"</span></span>)</pre></div>
<h1><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic Usage</h1>
<p>Let's say we have the following code in <code>mycode.jl</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">myfunc</span>()
    A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">200</span>, <span class="pl-c1">200</span>, <span class="pl-c1">400</span>)
    <span class="pl-c1">maximum</span>(A)
<span class="pl-k">end</span></pre></div>
<p>We profile our code in the usual way:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>mycode.jl<span class="pl-pds">"</span></span>)
myfunc (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">myfunc</span>()  <span class="pl-c"><span class="pl-c">#</span> run once to force JIT compilation</span>
<span class="pl-c1">0.9999999760080607</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Profile

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@profile</span> <span class="pl-c1">myfunc</span>()
<span class="pl-c1">0.9999999988120492</span></pre></div>
<p>We can now view our profiling data using <code>owntime</code> or <code>totaltime</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">owntime</span>()
 [<span class="pl-c1">1</span>]  <span class="pl-c1">63</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">dsfmt_fill_array_close_open!</span>(<span class="pl-k">::</span><span class="pl-c1">Random.DSFMT.DSFMT_state</span>, <span class="pl-k">::</span><span class="pl-c1">Ptr{Float64}</span>, <span class="pl-k">...</span>) at DSFMT<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">95</span>
 [<span class="pl-c1">2</span>]  <span class="pl-c1">13</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> _fast at reduce<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">454</span> [inlined]
 [<span class="pl-c1">3</span>]  <span class="pl-c1">11</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">eval</span>(<span class="pl-k">::</span><span class="pl-c1">Module</span>, <span class="pl-k">::</span><span class="pl-c1">Any</span>) at boot<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">330</span>
 [<span class="pl-c1">4</span>]   <span class="pl-c1">8</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> Array at boot<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">408</span> [inlined]
 [<span class="pl-c1">5</span>]   <span class="pl-c1">1</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-k">!=</span> at float<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">456</span> [inlined]


julia<span class="pl-k">&gt;</span> <span class="pl-c1">totaltime</span>()
 [<span class="pl-c1">1</span>]  <span class="pl-c1">96</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">eval</span>(<span class="pl-k">::</span><span class="pl-c1">Module</span>, <span class="pl-k">::</span><span class="pl-c1">Any</span>) at boot<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">330</span>
 [<span class="pl-c1">2</span>]  <span class="pl-c1">96</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> (<span class="pl-k">::</span><span class="pl-c1">REPL.var"#26#27"</span>{REPL<span class="pl-k">.</span>REPLBackend})() at task<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">333</span>
 [<span class="pl-c1">3</span>]  <span class="pl-c1">96</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-k">macro</span> expansion at REPL<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">118</span> [inlined]
 [<span class="pl-c1">4</span>]  <span class="pl-c1">96</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">eval_user_input</span>(<span class="pl-k">::</span><span class="pl-c1">Any</span>, <span class="pl-k">::</span><span class="pl-c1">REPL.REPLBackend</span>) at REPL<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">86</span>
 [<span class="pl-c1">5</span>]  <span class="pl-c1">72</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">2</span>
 [<span class="pl-c1">6</span>]  <span class="pl-c1">72</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> rand at Random<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">277</span> [inlined]
 [<span class="pl-c1">7</span>]  <span class="pl-c1">63</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">rand</span>(<span class="pl-k">::</span><span class="pl-c1">Type{Float64}</span>, <span class="pl-k">::</span><span class="pl-c1">Tuple{Int64,Int64,Int64}</span>) at gcutils<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">91</span>
    <span class="pl-k">...</span>
[<span class="pl-c1">11</span>]  <span class="pl-c1">14</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">3</span>
    <span class="pl-k">...</span></pre></div>
<h2><a id="user-content-owntime-vs-totaltime" class="anchor" aria-hidden="true" href="#owntime-vs-totaltime"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>owntime</code> vs <code>totaltime</code></h2>
<p><code>totaltime</code> show the amount of time spent on a StackFrame <em>including</em> its sub-calls. <code>owntime</code> shows the amount of time spent on a StackFrame <em>excluding</em> its sub-calls.</p>
<h2><a id="user-content-filtering-stackframes" class="anchor" aria-hidden="true" href="#filtering-stackframes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Filtering StackFrames</h2>
<p>We can filter <a href="https://docs.julialang.org/en/v1/base/stacktraces/#Base.StackTraces.StackFrame" rel="nofollow">StackFrames</a> to shorten the output:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">owntime</span>(stackframe_filter<span class="pl-k">=</span><span class="pl-c1">filecontains</span>(<span class="pl-s"><span class="pl-pds">"</span>mycode.jl<span class="pl-pds">"</span></span>))
 [<span class="pl-c1">1</span>]  <span class="pl-c1">72</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">2</span>
 [<span class="pl-c1">2</span>]  <span class="pl-c1">14</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">3</span>


julia<span class="pl-k">&gt;</span> <span class="pl-c1">totaltime</span>(stackframe_filter<span class="pl-k">=</span><span class="pl-c1">filecontains</span>(<span class="pl-s"><span class="pl-pds">"</span>mycode.jl<span class="pl-pds">"</span></span>))
 [<span class="pl-c1">1</span>]  <span class="pl-c1">72</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">2</span>
 [<span class="pl-c1">2</span>]  <span class="pl-c1">14</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">owntime</span>(stackframe_filter<span class="pl-k">=</span>stackframe <span class="pl-k">-&gt;</span> stackframe<span class="pl-k">.</span>func <span class="pl-k">==</span> <span class="pl-c1">:myfunc</span>)
 [<span class="pl-c1">1</span>]  <span class="pl-c1">72</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">2</span>
 [<span class="pl-c1">2</span>]  <span class="pl-c1">14</span><span class="pl-k">%</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">myfunc</span>() at mycode<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">3</span></pre></div>
<p>It's now clear that 72% of the time was spent on line 2 of our code, and 14% on line 3. The rest of the time was spent on overhead related to Julia and profiling; for such a small example a relatively large amount of time is spent on that overhead.</p>
<p><code>stackframe_filter</code> should be passed a function that accepts a single <a href="https://docs.julialang.org/en/v1/base/stacktraces/#Base.StackTraces.StackFrame" rel="nofollow"><code>StackFrame</code></a> and returns <code>true</code> if that StackFrame should be included.</p>
<h1><a id="user-content-how-does-this-relate-to-profile-in-julias-standard-library" class="anchor" aria-hidden="true" href="#how-does-this-relate-to-profile-in-julias-standard-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How does this relate to Profile in Julia's standard library?</h1>
<p>OwnTime merely provides an alternate view into the profiling data collected by Julia. It is complimentary to the <a href="https://docs.julialang.org/en/v1/stdlib/Profile/" rel="nofollow">Profile</a> package in the standard library.</p>
<p><code>totaltime</code> provides a view of the profiling data similar to the flat format of <a href="https://docs.julialang.org/en/v1/stdlib/Profile/#Profile.print" rel="nofollow"><code>Profile.print(format=:flat)</code></a>.</p>
<p><code>owntime</code> is a view unique to OwnTime*, hence the name.</p>
<p>The ability to filter <a href="https://docs.julialang.org/en/v1/base/stacktraces/#Base.StackTraces.StackFrame" rel="nofollow">StackFrames</a> is unique to OwnTime*.</p>
<p>(* At this time, and as far as I'm aware.)</p>
</article></div>