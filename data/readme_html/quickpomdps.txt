<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-quickpomdps" class="anchor" aria-hidden="true" href="#quickpomdps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>QuickPOMDPs</h1>
<p><a href="https://travis-ci.org/JuliaPOMDP/QuickPOMDPs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f494f6ba0265ac82be1e5befb2041a4061ded1756ad371d337f0d329d7a6f929/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961504f4d44502f517569636b504f4d4450732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaPOMDP/QuickPOMDPs.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://JuliaPOMDP.github.io/QuickPOMDPs.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs - Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://JuliaPOMDP.github.io/QuickPOMDPs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Docs - Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaPOMDP/QuickPOMDPs.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/41c1616ede0a79f4d3e9beba4eab5d3d27f6be7e3f9ac35ca9e1fc663b329d23/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c6961504f4d44502f517569636b504f4d4450732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaPOMDP/QuickPOMDPs.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaPOMDP/QuickPOMDPs.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8a2fdd58a6e9d19758e09682a30278a6699eeff7946f78ee36a48dc8357242b3/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961504f4d44502f517569636b504f4d4450732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaPOMDP/QuickPOMDPs.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Simplified interfaces for specifying <a href="https://github.com/JuliaPOMDP/POMDPs.jl">POMDPs.jl</a> models.</p>
<p>The package contains two interfaces - the Quick interface, and the Discrete Explicit interface.</p>
<p><strong>Please see <a href="https://JuliaPOMDP.github.io/QuickPOMDPs.jl/stable" rel="nofollow">the documentation</a> for more information on each.</strong></p>
<p>The package can also be used from <strong><a href="https://www.python.org" rel="nofollow">Python</a></strong> via <a href="https://github.com/JuliaPy/pyjulia">pyjulia</a>. See <a href="https://github.com/JuliaPOMDP/QuickPOMDPs.jl/blob/master/examples/tiger.py">examples/tiger.py</a> for an example.</p>
<h2><a id="user-content-quick-interface" class="anchor" aria-hidden="true" href="#quick-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Interface</h2>
<p>The Quick Interface exposes nearly all of the features of POMDPs.jl as constructor keyword arguments. <a href="https://juliapomdp.github.io/QuickPOMDPs.jl/stable/quick/" rel="nofollow">Documentation</a>, Mountain Car Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mountaincar = QuickMDP(
    function (s, a, rng)        
        x, v = s
        vp = clamp(v + a*0.001 + cos(3*x)*-0.0025, -0.07, 0.07)
        xp = x + vp
        if xp &gt; 0.5
            r = 100.0
        else
            r = -1.0
        end
        return (sp=(xp, vp), r=r)
    end,
    actions = [-1., 0., 1.],
    initialstate = (-0.5, 0.0),
    discount = 0.95,
    isterminal = s -&gt; s[1] &gt; 0.5
)
"><pre>mountaincar <span class="pl-k">=</span> <span class="pl-c1">QuickMDP</span>(
    <span class="pl-k">function</span> (s, a, rng)        
        x, v <span class="pl-k">=</span> s
        vp <span class="pl-k">=</span> <span class="pl-c1">clamp</span>(v <span class="pl-k">+</span> a<span class="pl-k">*</span><span class="pl-c1">0.001</span> <span class="pl-k">+</span> <span class="pl-c1">cos</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>x)<span class="pl-k">*-</span><span class="pl-c1">0.0025</span>, <span class="pl-k">-</span><span class="pl-c1">0.07</span>, <span class="pl-c1">0.07</span>)
        xp <span class="pl-k">=</span> x <span class="pl-k">+</span> vp
        <span class="pl-k">if</span> xp <span class="pl-k">&gt;</span> <span class="pl-c1">0.5</span>
            r <span class="pl-k">=</span> <span class="pl-c1">100.0</span>
        <span class="pl-k">else</span>
            r <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1.0</span>
        <span class="pl-k">end</span>
        <span class="pl-k">return</span> (sp<span class="pl-k">=</span>(xp, vp), r<span class="pl-k">=</span>r)
    <span class="pl-k">end</span>,
    actions <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">1.</span>, <span class="pl-c1">0.</span>, <span class="pl-c1">1.</span>],
    initialstate <span class="pl-k">=</span> (<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">0.0</span>),
    discount <span class="pl-k">=</span> <span class="pl-c1">0.95</span>,
    isterminal <span class="pl-k">=</span> s <span class="pl-k">-&gt;</span> s[<span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> <span class="pl-c1">0.5</span>
)</pre></div>
<h2><a id="user-content-discrete-explicit-interface" class="anchor" aria-hidden="true" href="#discrete-explicit-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Discrete Explicit Interface</h2>
<p>The Discrete Explicit Interface is suitable for problems with small discrete state, action, and observation spaces. This interface is pedagogically useful because each element of the (S, A, O, R, T, Z, γ) tuple for a POMDP and (S, A, R, T, γ) tuple for an MDP is defined explicitly in a straightforward manner. <a href="https://juliapomdp.github.io/QuickPOMDPs.jl/stable/discrete_explicit/" rel="nofollow">Documentation</a>, Tiger POMDP Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="S = [:left, :right]
A = [:left, :right, :listen]
O = [:left, :right]
γ = 0.95

function T(s, a, sp)
    if a == :listen
        return s == sp
    else # a door is opened
        return 0.5 #reset
    end
end

function Z(a, sp, o)
    if a == :listen
        if o == sp
            return 0.85
        else
            return 0.15
        end
    else
        return 0.5
    end
end

function R(s, a)
    if a == :listen  
        return -1.0
    elseif s == a # the tiger was found
        return -100.0
    else # the tiger was escaped
        return 10.0
    end
end

m = DiscreteExplicitPOMDP(S,A,O,T,Z,R,γ)
"><pre>S <span class="pl-k">=</span> [<span class="pl-c1">:left</span>, <span class="pl-c1">:right</span>]
A <span class="pl-k">=</span> [<span class="pl-c1">:left</span>, <span class="pl-c1">:right</span>, <span class="pl-c1">:listen</span>]
O <span class="pl-k">=</span> [<span class="pl-c1">:left</span>, <span class="pl-c1">:right</span>]
γ <span class="pl-k">=</span> <span class="pl-c1">0.95</span>

<span class="pl-k">function</span> <span class="pl-en">T</span>(s, a, sp)
    <span class="pl-k">if</span> a <span class="pl-k">==</span> <span class="pl-c1">:listen</span>
        <span class="pl-k">return</span> s <span class="pl-k">==</span> sp
    <span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">#</span> a door is opened</span>
        <span class="pl-k">return</span> <span class="pl-c1">0.5</span> <span class="pl-c"><span class="pl-c">#</span>reset</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">Z</span>(a, sp, o)
    <span class="pl-k">if</span> a <span class="pl-k">==</span> <span class="pl-c1">:listen</span>
        <span class="pl-k">if</span> o <span class="pl-k">==</span> sp
            <span class="pl-k">return</span> <span class="pl-c1">0.85</span>
        <span class="pl-k">else</span>
            <span class="pl-k">return</span> <span class="pl-c1">0.15</span>
        <span class="pl-k">end</span>
    <span class="pl-k">else</span>
        <span class="pl-k">return</span> <span class="pl-c1">0.5</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">R</span>(s, a)
    <span class="pl-k">if</span> a <span class="pl-k">==</span> <span class="pl-c1">:listen</span>  
        <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1.0</span>
    <span class="pl-k">elseif</span> s <span class="pl-k">==</span> a <span class="pl-c"><span class="pl-c">#</span> the tiger was found</span>
        <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">100.0</span>
    <span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">#</span> the tiger was escaped</span>
        <span class="pl-k">return</span> <span class="pl-c1">10.0</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

m <span class="pl-k">=</span> <span class="pl-c1">DiscreteExplicitPOMDP</span>(S,A,O,T,Z,R,γ)</pre></div>
</article></div>