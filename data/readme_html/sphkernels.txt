<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Licence</strong></th>
<th align="center"><strong>Citation</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://LudwigBoess.github.io/SPHKernels.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://LudwigBoess.github.io/SPHKernels.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/LudwigBoess/SPHKernels.jl/actions/workflows/jlpkgbutler-ci-master-workflow.yml"><img src="https://github.com/LudwigBoess/SPHKernels.jl/actions/workflows/jlpkgbutler-ci-master-workflow.yml/badge.svg" alt="Run CI on master" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/LudwigBoess/SPHKernels.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/84ae0fcb8d977a0ffebb7d1a6e7a6ac1d2369f03682149b4f528b80438d95b24/68747470733a2f2f636f6465636f762e696f2f67682f4c7564776967426f6573732f5350484b65726e656c732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/gh/LudwigBoess/SPHKernels.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></td>
<td align="center"><a href="LICENSE.md"><img src="https://camo.githubusercontent.com/34c33e2f7f61f9b82750baf175f4aa3260f774ead54e160dd013b7d818992096/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6f72616e67652e737667" alt="The MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-orange.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://zenodo.org/badge/latestdoi/281332370" rel="nofollow"><img src="https://camo.githubusercontent.com/92392222e813c8317450a2f2f6bdc2111d2f4ff7124f41851a024f426b3e7e61/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3238313333323337302e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/281332370.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h1 dir="auto"><a id="user-content-sphkernelsjl" class="anchor" aria-hidden="true" href="#sphkernelsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SPHKernels.jl</h1>
<p dir="auto">This package supplies a number of kernels frequently used in Smoothed-Particle Hydrodynamics (SPH), as well as functions to evaluate their values and derivatives in 2D and 3D.</p>
<p dir="auto">The implementation closely follows the one in <a href="https://wwwmpa.mpa-garching.mpg.de/gadget/" rel="nofollow">Gadget2</a>, see <a href="https://ui.adsabs.harvard.edu/abs/2005MNRAS.364.1105S/abstract" rel="nofollow">Springel (2005)</a> for details.</p>
<p dir="auto">These kernels include the B-splines (<code>Cubic</code> and <code>Quintic</code>) suggested in <a href="https://ui.adsabs.harvard.edu/abs/1985A%26A...149..135M/abstract" rel="nofollow">Monaghan &amp; Lattanzio (1985)</a>, the Wendland functions (<code>WendlandC2</code>, <code>WendlandC4</code> and <code>WendlandC6</code> from <a href="https://www.researchgate.net/publication/220179293_Divergence-Free_Kernel_Methods_for_Approximating_the_Stokes_Problem" rel="nofollow">Wendland (2009)</a>) as suggested in <a href="https://academic.oup.com/mnras/article/425/2/1068/1187211" rel="nofollow">Dehnen &amp; Aly (2012)</a> and <code>WendlandC8</code> as suggested by <a href="https://arxiv.org/abs/1902.02330" rel="nofollow">Kummer et. al. (2019)</a>.</p>
<blockquote>
<p dir="auto"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">‚ö†Ô∏è</g-emoji> <strong>The version numbering of this package is unfortunately not really reflective of the state. I made an error on the original setup of the repository, so I had to start out with version 1.0. View this more as v0.2, instead of v2.0!</strong>: Please sanity-check everything before you use it in production!</p>
</blockquote>
<h2 dir="auto"><a id="user-content-evaluating-kernels" class="anchor" aria-hidden="true" href="#evaluating-kernels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Evaluating Kernels</h2>
<p dir="auto">To evaluate a 3D kernel you need to use the function</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="kernel_value(k::AbstractSPHKernel, u::Real, h_inv::Real)"><pre><span class="pl-c1">kernel_value</span>(k<span class="pl-k">::</span><span class="pl-c1">AbstractSPHKernel</span>, u<span class="pl-k">::</span><span class="pl-c1">Real</span>, h_inv<span class="pl-k">::</span><span class="pl-c1">Real</span>)</pre></div>
<p dir="auto">where <code>AbstractSPHKernel</code> is the supertype for an implemented SPH kernel, <code>u = \frac{x}{h}</code> is the distance to the kernel origin in measures of the smoothing length and <code>h_inv</code> is the inverse of the smoothing length.</p>
<p dir="auto">If you want your code to look a little more fancy you can also use the alternative functions <code>ùí≤</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ùí≤( kernel::AbstractSPHKernel, u::Real, h_inv::Real) = kernel_value(kernel, u, h_inv)"><pre><span class="pl-en">ùí≤</span>( kernel<span class="pl-k">::</span><span class="pl-c1">AbstractSPHKernel</span>, u<span class="pl-k">::</span><span class="pl-c1">Real</span>, h_inv<span class="pl-k">::</span><span class="pl-c1">Real</span>) <span class="pl-k">=</span> <span class="pl-c1">kernel_value</span>(kernel, u, h_inv)</pre></div>
<p dir="auto">As an example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SPHKernels 

# Wendland C6 kernel with double precision in 3D
k     = WendlandC6(Float64, 3)
# distance between the particle and the origin of the kernel
r     = 0.5
h     = 1.0
h_inv = 1.0 / h
u     = r * h_inv

# kernel value at position r
val = ùí≤(k, u, h_inv)"><pre><span class="pl-k">using</span> SPHKernels 

<span class="pl-c"><span class="pl-c">#</span> Wendland C6 kernel with double precision in 3D</span>
k     <span class="pl-k">=</span> <span class="pl-c1">WendlandC6</span>(Float64, <span class="pl-c1">3</span>)
<span class="pl-c"><span class="pl-c">#</span> distance between the particle and the origin of the kernel</span>
r     <span class="pl-k">=</span> <span class="pl-c1">0.5</span>
h     <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
h_inv <span class="pl-k">=</span> <span class="pl-c1">1.0</span> <span class="pl-k">/</span> h
u     <span class="pl-k">=</span> r <span class="pl-k">*</span> h_inv

<span class="pl-c"><span class="pl-c">#</span> kernel value at position r</span>
val <span class="pl-k">=</span> <span class="pl-c1">ùí≤</span>(k, u, h_inv)</pre></div>
<h2 dir="auto"><a id="user-content-evaluating-derivatives" class="anchor" aria-hidden="true" href="#evaluating-derivatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Evaluating Derivatives</h2>
<p dir="auto">Similar to <a href="@ref">Evaluating Kernels</a> you can evluate a kernel derivative with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="kernel_deriv(k::AbstractSPHKernel, u::Real, h_inv::Real)"><pre><span class="pl-c1">kernel_deriv</span>(k<span class="pl-k">::</span><span class="pl-c1">AbstractSPHKernel</span>, u<span class="pl-k">::</span><span class="pl-c1">Real</span>, h_inv<span class="pl-k">::</span><span class="pl-c1">Real</span>)</pre></div>
<p dir="auto">or in the fancy way:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="dùí≤(kernel::AbstractSPHKernel, u::Real, h_inv::Real) = kernel_deriv(kernel, u, h_inv)"><pre><span class="pl-en">dùí≤</span>(kernel<span class="pl-k">::</span><span class="pl-c1">AbstractSPHKernel</span>, u<span class="pl-k">::</span><span class="pl-c1">Real</span>, h_inv<span class="pl-k">::</span><span class="pl-c1">Real</span>) <span class="pl-k">=</span> <span class="pl-c1">kernel_deriv</span>(kernel, u, h_inv)</pre></div>
<h2 dir="auto"><a id="user-content-bias-correction" class="anchor" aria-hidden="true" href="#bias-correction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bias Correction</h2>
<p dir="auto">You can correct for the kernel bias of the Wendland kernels as described in <a href="https://academic.oup.com/mnras/article/425/2/1068/1187211" rel="nofollow">Dehnen &amp; Aly (2012)</a>, Eq. 18 + 19 with the functions:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bias_correction(kernel::AbstractSPHKernel, density::Real, m::Real, h_inv::Real, n_neighbours::Integer)"><pre><span class="pl-c1">bias_correction</span>(kernel<span class="pl-k">::</span><span class="pl-c1">AbstractSPHKernel</span>, density<span class="pl-k">::</span><span class="pl-c1">Real</span>, m<span class="pl-k">::</span><span class="pl-c1">Real</span>, h_inv<span class="pl-k">::</span><span class="pl-c1">Real</span>, n_neighbours<span class="pl-k">::</span><span class="pl-c1">Integer</span>)</pre></div>
<p dir="auto">or again in the fancy way</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Œ¥œÅ(kernel::AbstractSPHKernel, density::Real, m::Real, h_inv::Real, n_neighbours::Integer) = bias_correction(kernel, density, m, h_inv, n_neighbours)"><pre><span class="pl-en">Œ¥œÅ</span>(kernel<span class="pl-k">::</span><span class="pl-c1">AbstractSPHKernel</span>, density<span class="pl-k">::</span><span class="pl-c1">Real</span>, m<span class="pl-k">::</span><span class="pl-c1">Real</span>, h_inv<span class="pl-k">::</span><span class="pl-c1">Real</span>, n_neighbours<span class="pl-k">::</span><span class="pl-c1">Integer</span>) <span class="pl-k">=</span> <span class="pl-c1">bias_correction</span>(kernel, density, m, h_inv, n_neighbours)</pre></div>
<p dir="auto">This will return a new value for the density:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SPHKernels
density = 1.0
kernel  = WendlandC6(3)

# correct density
density = bias_correction(kernel, density, 1.0, 0.5, 295)"><pre><span class="pl-k">using</span> SPHKernels
density <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
kernel  <span class="pl-k">=</span> <span class="pl-c1">WendlandC6</span>(<span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span> correct density</span>
density <span class="pl-k">=</span> <span class="pl-c1">bias_correction</span>(kernel, density, <span class="pl-c1">1.0</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">295</span>)</pre></div>
</article></div>