<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dash-html-components" class="anchor" aria-hidden="true" href="#dash-html-components"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>dash-html-components</h1>
<p>Vanilla HTML components for <a href="https://plotly.com/dash" rel="nofollow">Dash</a></p>
<h3><a id="user-content-install-dependencies" class="anchor" aria-hidden="true" href="#install-dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install dependencies</h3>
<ol>
<li>
<p>Create a virtual env and activate.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ virtualenv venv
$ venv/bin/activate
"><pre><code>$ virtualenv venv
$ venv/bin/activate
</code></pre></div>
<p><em>Note: venv\Scripts\activate for Windows</em></p>
</li>
<li>
<p>Install Python packages required to build components.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ pip install -r dev-requirements.txt
"><pre><code>$ pip install -r dev-requirements.txt
</code></pre></div>
</li>
<li>
<p>Generate components and install npm packages</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ npm install
"><pre><code>$ npm install
</code></pre></div>
</li>
</ol>
<h3><a id="user-content-generating-html-components" class="anchor" aria-hidden="true" href="#generating-html-components"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Generating HTML Components</h3>
<p>The components in <code>src/components</code>, as well as the export index in
<code>src/index.js</code> are programmatically generated from element definitions in
<code>scripts/</code>. To regenerate:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ npm run generate-components
"><pre>$ npm run generate-components</pre></div>
<p>The list of attributes is regenerated by scraping the
<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes" rel="nofollow">MDN HTML attribute reference</a>.</p>
<p><em>Note: This step will have already been done for you when you ran <code>npm install</code></em></p>
<h3><a id="user-content-development" class="anchor" aria-hidden="true" href="#development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Development</h3>
<h4><a id="user-content-testing-your-components-in-dash" class="anchor" aria-hidden="true" href="#testing-your-components-in-dash"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Testing your components in Dash</h4>
<ol>
<li>
<p>Watch for changes</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content=" $ npm run build:watch
"><pre><code> $ npm run build:watch
</code></pre></div>
</li>
<li>
<p>Install module locally (after every change)</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content=" # Generate metadata, and build the JavaScript bundle
 $ npm run install-local

 # Now you're done. For subsequent changes, if you've got `npm run build:watch`
 $ python setup.py install
"><pre><code> # Generate metadata, and build the JavaScript bundle
 $ npm run install-local

 # Now you're done. For subsequent changes, if you've got `npm run build:watch`
 $ python setup.py install
</code></pre></div>
</li>
<li>
<p>Run the Dash layout you want to test</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content=" # Import dash_html_components to your layout, then run it:
 $ python my_dash_layout.py
"><pre><code> # Import dash_html_components to your layout, then run it:
 $ python my_dash_layout.py
</code></pre></div>
</li>
</ol>
<h4><a id="user-content-installing-python-package-locally" class="anchor" aria-hidden="true" href="#installing-python-package-locally"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing Python package locally</h4>
<p>Before publishing to PyPi, you can test installing the module locally:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="# Install in `site-packages` on your machine
$ npm run install-local
"><pre><span class="pl-c"><span class="pl-c">#</span> Install in `site-packages` on your machine</span>
$ npm run install-local</pre></div>
<h4><a id="user-content-uninstalling-python-package-locally" class="anchor" aria-hidden="true" href="#uninstalling-python-package-locally"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Uninstalling Python package locally</h4>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ npm run uninstall-local
"><pre>$ npm run uninstall-local</pre></div>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>See the <a href="CONTRIBUTING.md">contributing guide</a> for guidelines on contributing to this project.</p>
<h3><a id="user-content-create-a-production-build-and-publish" class="anchor" aria-hidden="true" href="#create-a-production-build-and-publish"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Create a production build and publish:</h3>
<ol>
<li>
<p>Build your code:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ npm run build
"><pre><code>$ npm run build
</code></pre></div>
</li>
<li>
<p>Create a Python tarball</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ python setup.py sdist
"><pre><code>$ python setup.py sdist
</code></pre></div>
<p>This distribution tarball will get generated in the <code>dist/</code> folder</p>
</li>
<li>
<p>Test your tarball by copying it into a new environment and installing it locally:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ pip install dash-html-components-&lt;new-version&gt;.tar.gz
"><pre><code>$ pip install dash-html-components-&lt;new-version&gt;.tar.gz
</code></pre></div>
</li>
<li>
<p>If it works, then you can publish the component to NPM and PyPI:</p>
<ol>
<li>Publish on PyPI
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ twine upload dist/*
"><pre><code>$ twine upload dist/*
</code></pre></div>
</li>
<li>Cleanup the dist folder (optional)
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ rm -rf dist
"><pre><code>$ rm -rf dist
</code></pre></div>
</li>
<li>Publish on NPM (Optional if chosen False in <code>publish_on_npm</code>)
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ npm publish
"><pre><code>$ npm publish
</code></pre></div>
<em>Publishing your component to NPM will make the JavaScript bundles available on the unpkg CDN. By default, Dash servers the component library's CSS and JS from the remote unpkg CDN, so if you haven't published the component package to NPM you'll need to set the <code>serve_locally</code> flags to <code>True</code> (unless you choose <code>False</code> on <code>publish_on_npm</code>). We will eventually make <code>serve_locally=True</code> the default, <a href="https://github.com/plotly/dash/issues/284">follow our progress in this issue</a>.</em></li>
</ol>
</li>
</ol>
</article></div>