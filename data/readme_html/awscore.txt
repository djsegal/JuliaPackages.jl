<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-awscorejl" class="anchor" aria-hidden="true" href="#awscorejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AWSCore.jl</h1>
<p><a href="https://travis-ci.org/JuliaCloud/AWSCore.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/07d6b06f8bd7335ae0f38ae907ed832b48a84c48/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961436c6f75642f415753436f72652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/JuliaCloud/AWSCore.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Julia interface for <a href="https://aws.amazon.com" rel="nofollow">Amazon Web Services</a>.</p>
<p>This package provides core infrastructure functions and types.</p>
<p>The <a href="https://github.com/JuliaCloud/AWSSDK.jl">AWSSDK.jl</a> package provides
automatically generated low-level API wrappers for each operation in each
Amazon Web Service.</p>
<p>The following high-level packages are also available:
<a href="http://github.com/samoconnor/AWSS3.jl">AWS S3</a>,
<a href="http://github.com/samoconnor/AWSSQS.jl">AWS SQS</a>,
<a href="http://github.com/samoconnor/AWSSNS.jl">AWS SNS</a>,
<a href="http://github.com/samoconnor/AWSIAM.jl">AWS IAM</a>,
<a href="http://github.com/samoconnor/AWSEC2.jl">AWS EC2</a>,
<a href="http://github.com/samoconnor/AWSLambda.jl">AWS Lambda</a>,
<a href="http://github.com/samoconnor/AWSSES.jl">AWS SES</a> and
<a href="http://github.com/samoconnor/AWSSDB.jl">AWS SDB</a>.
These packages include operation specific result structure parsing, error
handling, type convenience functions, iterators, etc.</p>
<p>Full documentation <a href="https://juliacloud.github.io/AWSCore.jl/build/index.html" rel="nofollow">is available here</a>,
or see below for some examples of how to get started.</p>
<p>There are three ways to use <code>AWSCore</code>:</p>
<ol>
<li>Call <a href="https://github.com/JuliaCloud/AWSCore.jl/blob/master/src/Services.jl"><code>AWSCore/Services.jl</code></a>
functions directly:</li>
</ol>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AWSCore<span class="pl-k">.</span>Services<span class="pl-k">.</span>cloudformation
<span class="pl-c1">cloudformation</span>(<span class="pl-s"><span class="pl-pds">"</span>CreateStack<span class="pl-pds">"</span></span>,
               StackName <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>mystack<span class="pl-pds">"</span></span>,
               TemplateBody <span class="pl-k">=</span> <span class="pl-c1">readstring</span>(<span class="pl-s"><span class="pl-pds">"</span>cloudformation_template.yaml<span class="pl-pds">"</span></span>),
               Parameters <span class="pl-k">=</span> [[<span class="pl-s"><span class="pl-pds">"</span>ParameterKey<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Foo<span class="pl-pds">"</span></span>,
                              <span class="pl-s"><span class="pl-pds">"</span>ParameterValue<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>]],
               Capabilities <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>CAPABILITY_IAM<span class="pl-pds">"</span></span>])</pre></div>
<ol start="2">
<li>Use the low-level <a href="https://github.com/JuliaCloud/AWSSDK.jl"><code>AWSSDK</code></a> wrappers:</li>
</ol>
<pre><code>using AWSSDK.S3.list_buckets
r = list_buckets()
buckets = [b["Name"] for b in r["Buckets"]["Bucket"]]
</code></pre>
<ol start="3">
<li>Use one of the high-level convenience packages:</li>
</ol>
<pre><code>using AWSS3
buckets = s3_list_buckets()
</code></pre>
<h3><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h3>
<p>Create an S3 bucket and store some data...</p>
<div class="highlight highlight-source-julia"><pre>aws <span class="pl-k">=</span> <span class="pl-c1">aws_config</span>()
<span class="pl-c1">s3_create_bucket</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>)
<span class="pl-c1">s3_enable_versioning</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>)

<span class="pl-c1">s3_put</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-pds">"</span></span>)
<span class="pl-c1">println</span>(<span class="pl-c1">s3_get</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>))</pre></div>
<p>Post a message to a queue...</p>
<div class="highlight highlight-source-julia"><pre>q <span class="pl-k">=</span> <span class="pl-c1">sqs_get_queue</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my-queue<span class="pl-pds">"</span></span>)

<span class="pl-c1">sqs_send_message</span>(q, <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-pds">"</span></span>)

m <span class="pl-k">=</span> <span class="pl-c1">sqs_receive_message</span>(q)
<span class="pl-c1">println</span>(m[<span class="pl-s"><span class="pl-pds">"</span>message<span class="pl-pds">"</span></span>])
<span class="pl-c1">sqs_delete_message</span>(q, m)</pre></div>
<p>Post a message to a notification topic...</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">sns_create_topic</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my-topic<span class="pl-pds">"</span></span>)
<span class="pl-c1">sns_subscribe_sqs</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my-topic<span class="pl-pds">"</span></span>, q; raw <span class="pl-k">=</span> <span class="pl-c1">true</span>)

<span class="pl-c1">sns_publish</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my-topic<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-pds">"</span></span>)

m <span class="pl-k">=</span> <span class="pl-c1">sqs_receive_message</span>(q)
<span class="pl-c1">println</span>(m[<span class="pl-s"><span class="pl-pds">"</span>message<span class="pl-pds">"</span></span>])
<span class="pl-c1">sqs_delete_message</span>(q, m)
</pre></div>
<p>Start an EC2 server and fetch info...</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">ec2</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>StartInstances<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">var</span>"</span>InstanceId.1<span class="pl-pds">"</span></span> <span class="pl-k">=</span> my_instance_id)
r <span class="pl-k">=</span> <span class="pl-c1">ec2</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>DescribeInstances<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">var</span>"</span>Filter.1.Name<span class="pl-pds">"</span></span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>instance-id<span class="pl-pds">"</span></span>,
                                  <span class="pl-s"><span class="pl-pds"><span class="pl-c1">var</span>"</span>Filter.1.Value.1<span class="pl-pds">"</span></span> <span class="pl-k">=</span> my_instance_id)
<span class="pl-c1">println</span>(r)</pre></div>
<p>Create an IAM user...</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">iam</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>CreateUser<span class="pl-pds">"</span></span>, UserName <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>me<span class="pl-pds">"</span></span>)</pre></div>
<p>Automatically assume a role(<a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html" rel="nofollow">details</a>)...</p>
<p>For a user with the IAM profile <code>valid-iam-profile</code> already in their credentials file
that has permissions to a role called <code>example-role-name</code>:</p>
<p>~/.aws/config:</p>
<pre><code>[profile example-role-name]
role_arn = arn:aws:iam::[role number here]:role/example-role-name
source_profile = valid-iam-profile
</code></pre>
<div class="highlight highlight-source-julia"><pre>ENV[<span class="pl-s"><span class="pl-pds">"</span>AWS_PROFILE<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>example-role-name<span class="pl-pds">"</span></span>
AWSCore<span class="pl-k">.</span><span class="pl-c1">aws_config</span>()</pre></div>
</article></div>