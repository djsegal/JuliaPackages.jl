<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-openpixelcontroljl" class="anchor" aria-hidden="true" href="#openpixelcontroljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OpenPixelControl.jl</h1>
<p>This package provides a <a href="https://julialang.org" rel="nofollow">Julia</a> port of the <a href="https://raw.githubusercontent.com/zestyping/openpixelcontrol/master/python/opc.py" rel="nofollow">Python</a> of the <a href="https://github.com/zestyping/openpixelcontrol">openpixelcontrol</a> Client for the streaming protocol for controlling RGB LEDs.</p>
<h1><a id="user-content-a-small-example" class="anchor" aria-hidden="true" href="#a-small-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>A small example</h1>
<p>As an example, you can use the following small code example.
First start up your local <a href="https://github.com/scanlime/fadecandy">fadecandy server</a></p>
<p>Then, to set the first pixel to red, the second to blue after activating interpolation,
you can use the following small code</p>
<pre><code>using OpenPixelControl
o = OpenPixelConnection()
setInterpolation(o,true)
setPixel(o, (RGB(1.,0.,0.), RGB(0.,0.,1.)) ) 
</code></pre>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<pre><code># -----------------------------------------------------
# "THE COFFEE-AND-MATE-WARE LICENSE" (Revision 42/023)
# Ronny Bergmann &lt;stackenlichten@ronnybergmann.net&gt;
# wrote this file. As long as you retain this notice
# you can do whatever you want with this stuff. If we
# meet some day, and you think this stuff is worth it,
# you can buy me a coffee or (Club) Mate in return.
# -----------------------------------------------------
</code></pre>
</article></div>