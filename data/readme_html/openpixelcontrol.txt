<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-openpixelcontroljl" class="anchor" aria-hidden="true" href="#openpixelcontroljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>OpenPixelControl.jl</h1>
<p>This package provides a <a href="https://julialang.org" rel="nofollow">Julia</a> port of the <a href="https://raw.githubusercontent.com/zestyping/openpixelcontrol/master/python/opc.py" rel="nofollow">Python</a> of the <a href="https://github.com/zestyping/openpixelcontrol">openpixelcontrol</a> Client for the streaming protocol for controlling RGB LEDs.</p>
<h1><a id="user-content-a-small-example" class="anchor" aria-hidden="true" href="#a-small-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>A small example</h1>
<p>As an example, you can use the following small code example.
First start up your local <a href="https://github.com/scanlime/fadecandy">fadecandy server</a></p>
<p>Then, to set the first pixel to red, the second to blue after activating interpolation,
you can use the following small code</p>
<pre><code>using OpenPixelControl
o = OpenPixelConnection()
setInterpolation(o,true)
setPixel(o, (RGB(1.,0.,0.), RGB(0.,0.,1.)) ) 
</code></pre>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>
<pre><code># -----------------------------------------------------
# "THE COFFEE-AND-MATE-WARE LICENSE" (Revision 42/023)
# Ronny Bergmann &lt;stackenlichten@ronnybergmann.net&gt;
# wrote this file. As long as you retain this notice
# you can do whatever you want with this stuff. If we
# meet some day, and you think this stuff is worth it,
# you can buy me a coffee or (Club) Mate in return.
# -----------------------------------------------------
</code></pre>
</article></div>