<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/usnistgov/ThreeBodyTB.jl/workflows/CI/badge.svg"><img src="https://github.com/usnistgov/ThreeBodyTB.jl/workflows/CI/badge.svg" alt="asdf" style="max-width: 100%;"></a>
<a href="https://pages.nist.gov/ThreeBodyTB.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>


<h1 dir="auto"><a id="user-content-threebodytbjl" class="anchor" aria-hidden="true" href="#threebodytbjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ThreeBodyTB.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/kfgarrity/ThreeBodyTB.jl/blob/main/docs/src/assets/logo.svg"><img align="right" src="https://github.com/kfgarrity/ThreeBodyTB.jl/raw/main/docs/src/assets/logo.svg" alt="logo" width="200" style="max-width: 100%;"></a></p>
<p dir="auto">Code for accurate and efficient electronic structure calculations
using tight-binding (TB), including three-body interactions. Run TB
calculations with nearly DFT (pbesol) accuracy in seconds, using a
pre-fit and tested model for most elemental or binary systems.</p>
<p dir="auto">Or fit your own coefficients!</p>
<p dir="auto">Calculate energies, forces, and band structures.</p>
<p dir="auto">ThreeBodyTB is written in the Julia programming language, for easy and efficient computations.</p>
<p dir="auto">Please see our preprint at <a href="https://arxiv.org/abs/2112.11585" rel="nofollow">arXiv:2112.11585</a> and our
<a href="https://jarvis.nist.gov/jarvisqetb/" rel="nofollow">database</a> used for fitting.</p>
<h2 dir="auto"><a id="user-content-easy-installation" class="anchor" aria-hidden="true" href="#easy-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Easy Installation</h2>
<p dir="auto">After installing julia (see <a href="https://julialang.org/downloads/" rel="nofollow">here</a>), start a REPL and install using the package manager:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;ThreeBodyTB&quot;)"><pre class="notranslate"><code>using Pkg
Pkg.add("ThreeBodyTB")
</code></pre></div>
<p dir="auto">Alternatively, you can install from github directly</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(url=&quot;https://github.com/usnistgov/ThreeBodyTB.jl&quot;)"><pre class="notranslate"><code>using Pkg
Pkg.add(url="https://github.com/usnistgov/ThreeBodyTB.jl")
</code></pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">See <a href="https://pages.nist.gov/ThreeBodyTB.jl/" rel="nofollow">documentation</a> for more details.</p>
<h2 dir="auto"><a id="user-content-example-code" class="anchor" aria-hidden="true" href="#example-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example code</h2>
<p dir="auto">Example of creating a crystal structure of AlP (zincblende) and calculating the energy and band structure.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using ThreeBodyTB
c = makecrys([2.6 2.6 0;2.6 0 2.6;0 2.6 2.6], [0 0 0; 0.25 0.25 0.25], [&quot;Al&quot;, &quot;P&quot;])
energy, tbc, flag = scf_energy(c)
plot_bandstr(tbc)"><pre class="notranslate"><code>using ThreeBodyTB
c = makecrys([2.6 2.6 0;2.6 0 2.6;0 2.6 2.6], [0 0 0; 0.25 0.25 0.25], ["Al", "P"])
energy, tbc, flag = scf_energy(c)
plot_bandstr(tbc)
</code></pre></div>
<p dir="auto">See also the <a href="https://pages.nist.gov/ThreeBodyTB.jl/ug_run/" rel="nofollow">user's guide</a> for more detail.</p>
<p dir="auto"><em>Performance Note:</em> julia compiles code the first time you run a function, but
subsequent runs of this code will take under 1 second. Also,
ThreeBodyTB.jl can take advantage of multiple processors if you define
the environment variable <code>JULIA_NUM_THREADS=8;export JULIA_NUM_THREADS</code>
or start julia with <code>julia --threads 8</code> where
the number of threads is set as appropriate for your system.</p>
</article></div>