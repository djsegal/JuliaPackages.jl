<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-cornerplot" class="anchor" aria-hidden="true" href="#cornerplot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CornerPlot</h1>
<p>CornerPlot.jl is a plotting package in julia built on top of Gadfly.jl.
Inspired by [corner.py<a href="occco%5B"></a>](<a href="https://github.com/dfm/corner.py">https://github.com/dfm/corner.py</a>), it plots samples in multiple dimensions as a triangular
matrix of subplots showing the samples in pairs of dimensions. To use make
such a plot, simply call <code>corner</code> with an array of shape (nsamples, ndims)
or a DataFrame containing your samples:</p>
<pre><code>corner(df)
</code></pre>
<p>Further optional arguments can be seen in the example IJulia notebook or in
the docstrings of the code.</p>
<p><a target="_blank" rel="noopener noreferrer" href="./assets/rosenbrock.png"><img src="./assets/rosenbrock.png" alt="corner example" style="max-width:100%;"></a></p>
</article></div>