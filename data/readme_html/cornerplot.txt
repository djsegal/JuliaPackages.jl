<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cornerplot" class="anchor" aria-hidden="true" href="#cornerplot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CornerPlot</h1>
<p>CornerPlot.jl is a plotting package in julia built on top of Gadfly.jl.
Inspired by [corner.py<a href="occco%5B"></a>](<a href="https://github.com/dfm/corner.py">https://github.com/dfm/corner.py</a>), it plots samples in multiple dimensions as a triangular
matrix of subplots showing the samples in pairs of dimensions. To use make
such a plot, simply call <code>corner</code> with an array of shape (nsamples, ndims)
or a DataFrame containing your samples:</p>
<pre><code>corner(df)
</code></pre>
<p>Further optional arguments can be seen in the example IJulia notebook or in
the docstrings of the code.</p>
<p><a target="_blank" rel="noopener noreferrer" href="./assets/rosenbrock.png"><img src="./assets/rosenbrock.png" alt="corner example" style="max-width:100%;"></a></p>
</article></div>