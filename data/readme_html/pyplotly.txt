<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pyplotly" class="anchor" aria-hidden="true" href="#pyplotly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PyPlotly</h1>
<p dir="auto"><a href="https://github.com/AtelierArith/PyPlotly.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/AtelierArith/PyPlotly.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://AtelierArith.github.io/PyPlotly.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://AtelierArith.github.io/PyPlotly.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h1>
<p dir="auto">I know there are Plotly.jl and PlotlyJS.jl. But, it would be nice to provide a Pythonista-friendly Julia interface for plotly since there are lots of examples on the internet regarding plotly written in Python.</p>
<h1 dir="auto"><a id="user-content-just-give-it-a-try" class="anchor" aria-hidden="true" href="#just-give-it-a-try"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Just give it a try</h1>
<div class="highlight highlight-text-shell-session notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ pip3 install numpy pandas plotly
$ git clone https://github.com/AtelierArith/PyPlotly.jl.git
$ cd PyPlotly
$ julia --project=@. -e 'using Pkg; Pkg.isinstance()'"><pre>$ <span class="pl-s1">pip3 install numpy pandas plotly</span>
$ <span class="pl-s1">git clone https://github.com/AtelierArith/PyPlotly.jl.git</span>
$ <span class="pl-s1"><span class="pl-c1">cd</span> PyPlotly</span>
$ <span class="pl-s1">julia --project=@. -e <span class="pl-s"><span class="pl-pds">'</span>using Pkg; Pkg.isinstance()<span class="pl-pds">'</span></span></span></pre></div>
<h1 dir="auto"><a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use</h1>
<p dir="auto">Let's assume you've written a Python script something like:</p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import plotly.graph_objects as go

# Create random data with numpy
import numpy as np
np.random.seed(1)

N = 100
random_x = np.linspace(0, 1, N)
random_y0 = np.random.randn(N) + 5
random_y1 = np.random.randn(N)
random_y2 = np.random.randn(N) - 5

fig = go.Figure()

# Add traces
fig.add_trace(go.Scatter(x=random_x, y=random_y0,
                    mode='markers',
                    name='markers'))
fig.add_trace(go.Scatter(x=random_x, y=random_y1,
                    mode='lines+markers',
                    name='lines+markers'))
fig.add_trace(go.Scatter(x=random_x, y=random_y2,
                    mode='lines',
                    name='lines'))

fig.show()"><pre><span class="pl-k">import</span> <span class="pl-s1">plotly</span>.<span class="pl-s1">graph_objects</span> <span class="pl-k">as</span> <span class="pl-s1">go</span>

<span class="pl-c"># Create random data with numpy</span>
<span class="pl-k">import</span> <span class="pl-s1">numpy</span> <span class="pl-k">as</span> <span class="pl-s1">np</span>
<span class="pl-s1">np</span>.<span class="pl-s1">random</span>.<span class="pl-en">seed</span>(<span class="pl-c1">1</span>)

<span class="pl-v">N</span> <span class="pl-c1">=</span> <span class="pl-c1">100</span>
<span class="pl-s1">random_x</span> <span class="pl-c1">=</span> <span class="pl-s1">np</span>.<span class="pl-en">linspace</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-v">N</span>)
<span class="pl-s1">random_y0</span> <span class="pl-c1">=</span> <span class="pl-s1">np</span>.<span class="pl-s1">random</span>.<span class="pl-en">randn</span>(<span class="pl-v">N</span>) <span class="pl-c1">+</span> <span class="pl-c1">5</span>
<span class="pl-s1">random_y1</span> <span class="pl-c1">=</span> <span class="pl-s1">np</span>.<span class="pl-s1">random</span>.<span class="pl-en">randn</span>(<span class="pl-v">N</span>)
<span class="pl-s1">random_y2</span> <span class="pl-c1">=</span> <span class="pl-s1">np</span>.<span class="pl-s1">random</span>.<span class="pl-en">randn</span>(<span class="pl-v">N</span>) <span class="pl-c1">-</span> <span class="pl-c1">5</span>

<span class="pl-s1">fig</span> <span class="pl-c1">=</span> <span class="pl-s1">go</span>.<span class="pl-v">Figure</span>()

<span class="pl-c"># Add traces</span>
<span class="pl-s1">fig</span>.<span class="pl-en">add_trace</span>(<span class="pl-s1">go</span>.<span class="pl-v">Scatter</span>(<span class="pl-s1">x</span><span class="pl-c1">=</span><span class="pl-s1">random_x</span>, <span class="pl-s1">y</span><span class="pl-c1">=</span><span class="pl-s1">random_y0</span>,
                    <span class="pl-s1">mode</span><span class="pl-c1">=</span><span class="pl-s">'markers'</span>,
                    <span class="pl-s1">name</span><span class="pl-c1">=</span><span class="pl-s">'markers'</span>))
<span class="pl-s1">fig</span>.<span class="pl-en">add_trace</span>(<span class="pl-s1">go</span>.<span class="pl-v">Scatter</span>(<span class="pl-s1">x</span><span class="pl-c1">=</span><span class="pl-s1">random_x</span>, <span class="pl-s1">y</span><span class="pl-c1">=</span><span class="pl-s1">random_y1</span>,
                    <span class="pl-s1">mode</span><span class="pl-c1">=</span><span class="pl-s">'lines+markers'</span>,
                    <span class="pl-s1">name</span><span class="pl-c1">=</span><span class="pl-s">'lines+markers'</span>))
<span class="pl-s1">fig</span>.<span class="pl-en">add_trace</span>(<span class="pl-s1">go</span>.<span class="pl-v">Scatter</span>(<span class="pl-s1">x</span><span class="pl-c1">=</span><span class="pl-s1">random_x</span>, <span class="pl-s1">y</span><span class="pl-c1">=</span><span class="pl-s1">random_y2</span>,
                    <span class="pl-s1">mode</span><span class="pl-c1">=</span><span class="pl-s">'lines'</span>,
                    <span class="pl-s1">name</span><span class="pl-c1">=</span><span class="pl-s">'lines'</span>))

<span class="pl-s1">fig</span>.<span class="pl-en">show</span>()</pre></div>
<p dir="auto">The example above is taken from <a href="https://plotly.com/python/line-and-scatter/#line-and-scatter-plots" rel="nofollow">Line and Scatter Plots</a>. You can translate the python code into Julia code as below:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PyPlotly # this exports `go` and `px`

using Random
Random.seed!(1)

N = 100
random_x = range(0, 1, length=N)
random_y0 = randn(N) .+ 5
random_y1 = randn(N)
random_y2 = randn(N) .- 5

fig = go.Figure()

# Add traces
fig.add_trace(go.Scatter(x=random_x, y=random_y0,
                    mode=&quot;markers&quot;,
                    name=&quot;markers&quot;))
fig.add_trace(go.Scatter(x=random_x, y=random_y1,
                    mode=&quot;lines+markers&quot;,
                    name=&quot;lines+markers&quot;))
fig.add_trace(go.Scatter(x=random_x, y=random_y2,
                    mode=&quot;lines&quot;,
                    name=&quot;lines&quot;))

fig"><pre><span class="pl-k">using</span> PyPlotly <span class="pl-c"><span class="pl-c">#</span> this exports `go` and `px`</span>

<span class="pl-k">using</span> Random
Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">1</span>)

N <span class="pl-k">=</span> <span class="pl-c1">100</span>
random_x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, length<span class="pl-k">=</span>N)
random_y0 <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N) <span class="pl-k">.+</span> <span class="pl-c1">5</span>
random_y1 <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N)
random_y2 <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N) <span class="pl-k">.-</span> <span class="pl-c1">5</span>

fig <span class="pl-k">=</span> go<span class="pl-k">.</span><span class="pl-c1">Figure</span>()

<span class="pl-c"><span class="pl-c">#</span> Add traces</span>
fig<span class="pl-k">.</span><span class="pl-c1">add_trace</span>(go<span class="pl-k">.</span><span class="pl-c1">Scatter</span>(x<span class="pl-k">=</span>random_x, y<span class="pl-k">=</span>random_y0,
                    mode<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>markers<span class="pl-pds">"</span></span>,
                    name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>markers<span class="pl-pds">"</span></span>))
fig<span class="pl-k">.</span><span class="pl-c1">add_trace</span>(go<span class="pl-k">.</span><span class="pl-c1">Scatter</span>(x<span class="pl-k">=</span>random_x, y<span class="pl-k">=</span>random_y1,
                    mode<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>lines+markers<span class="pl-pds">"</span></span>,
                    name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>lines+markers<span class="pl-pds">"</span></span>))
fig<span class="pl-k">.</span><span class="pl-c1">add_trace</span>(go<span class="pl-k">.</span><span class="pl-c1">Scatter</span>(x<span class="pl-k">=</span>random_x, y<span class="pl-k">=</span>random_y2,
                    mode<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>lines<span class="pl-pds">"</span></span>,
                    name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>lines<span class="pl-pds">"</span></span>))

fig</pre></div>
<h1 dir="auto"><a id="user-content-display-object-in-notebook" class="anchor" aria-hidden="true" href="#display-object-in-notebook"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Display object in notebook</h1>
<h2 dir="auto"><a id="user-content-jupyterlab" class="anchor" aria-hidden="true" href="#jupyterlab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>JupyterLab</h2>
<p dir="auto">Try running the following example in your notebook</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PyPlotly

df = px.data.iris()
fig = px.scatter(
    df,
    x=&quot;sepal_width&quot;,
    y=&quot;sepal_length&quot;,
    color=&quot;species&quot;,
    size=&quot;petal_length&quot;,
    hover_data=[&quot;petal_width&quot;],
)
fig"><pre><span class="pl-k">using</span> PyPlotly

df <span class="pl-k">=</span> px<span class="pl-k">.</span>data<span class="pl-k">.</span><span class="pl-c1">iris</span>()
fig <span class="pl-k">=</span> px<span class="pl-k">.</span><span class="pl-c1">scatter</span>(
    df,
    x<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>sepal_width<span class="pl-pds">"</span></span>,
    y<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>sepal_length<span class="pl-pds">"</span></span>,
    color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>species<span class="pl-pds">"</span></span>,
    size<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>petal_length<span class="pl-pds">"</span></span>,
    hover_data<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>petal_width<span class="pl-pds">"</span></span>],
)
fig</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/16760547/166682557-260cc5a0-1321-4c07-9080-26459cf85706.png"><img width="600" alt="image" src="https://user-images.githubusercontent.com/16760547/166682557-260cc5a0-1321-4c07-9080-26459cf85706.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-pluto" class="anchor" aria-hidden="true" href="#pluto"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pluto</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/16760547/166682859-f3d342e6-2cc5-414b-b9a5-ec918625b6f7.png"><img width="600" alt="image" src="https://user-images.githubusercontent.com/16760547/166682859-f3d342e6-2cc5-414b-b9a5-ec918625b6f7.png" style="max-width: 100%;"></a></p>
<p dir="auto">Code is available from <a href="https://github.com/AtelierArith/PyPlotly.jl/blob/main/playground/pluto/jlsample.jl">here</a>.</p>
<h1 dir="auto"><a id="user-content-appendix" class="anchor" aria-hidden="true" href="#appendix"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Appendix</h1>
<ul dir="auto">
<li><a href="https://www.youtube.com/watch?v=Nb_w0MV4OLs&amp;t=1994s" rel="nofollow">JuliaLang Live Coding (Making PyPlotly.jl) with a silent cat</a></li>
<li><a href="https://zenn.dev/terasakisatoshi/articles/ebac6e005b9200" rel="nofollow">Japanese blog post</a></li>
<li><a href="https://discourse.julialang.org/t/pyplotly-jl/76035" rel="nofollow">Julia discourse</a></li>
<li><a href="https://github.com/plotly/Dash.jl/issues/50#issuecomment-1033972687" data-hovercard-type="issue" data-hovercard-url="/plotly/Dash.jl/issues/50/hovercard">PyPlotly.jl + Dash.jl</a></li>
</ul>
</article></div>