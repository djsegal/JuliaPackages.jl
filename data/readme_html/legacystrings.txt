<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-legacystrings" class="anchor" aria-hidden="true" href="#legacystrings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LegacyStrings</h1>
<p dir="auto"><a href="https://github.com/JuliaStrings/LegacyStrings.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaStrings/LegacyStrings.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">The LegacyStrings package provides compatibility string types from Julia 0.5 (and earlier), which were removed in subsequent versions, including:</p>
<ul dir="auto">
<li><code>ASCIIString</code>:Â a single-byte-per character string type that can only hold ASCII string data.</li>
<li><code>UTF8String</code>: a string type with single byte code units (<code>UInt8</code>), encoding strings as UTF-8.</li>
<li><code>UTF16String</code>: a string type with two-byte native-endian code units (<code>UInt16</code>), encoding strings as UTF-16.</li>
<li><code>UTF32String</code>: a string type with four-byte native-endian code units (<code>UInt32</code>), encoding strings as UTF-32.</li>
<li><code>ByteString</code>: a type alias for <code>Union{ASCIIString,UTF8String}</code>, i.e. strings that can be passed to C directly.</li>
<li><code>WString</code>: an alias for <code>UTF16String</code> if <code>Cwchart_t</code> is two bytes (i.e. Windows) or <code>UTF32String</code> otherwise.</li>
<li><code>RepString</code>: a string type for efficient handling of repeated strings.</li>
</ul>
<p dir="auto">LegacyStrings also defines and exports converter functions for these types, i.e.:</p>
<ul dir="auto">
<li><code>ascii</code>: convert to <code>ASCIIString</code>; since <code>Base</code> exports an <code>ascii</code> function as well, you must explicitly do <code>import LegacyStrings: ascii</code> or write <code>LegacyStrings.ascii</code> in order to use this function rather than <code>Base.ascii</code>.</li>
<li><code>utf8</code>: convert to <code>UTF8String</code>.</li>
<li><code>utf16</code>: convert to <code>UTF16String</code>.</li>
<li><code>utf32</code>: convert to <code>UTF32String</code>.</li>
<li><code>wstring</code>: alias for <code>utf16</code> or <code>utf32</code> according to what <code>WString</code> is an alias to.</li>
</ul>
</article></div>