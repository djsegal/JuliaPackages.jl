<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mathenize" class="anchor" aria-hidden="true" href="#mathenize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Mathenize</h1>
<p>Small package to make it possible to perform math operations
from strings in the <a href="http://julialang.org/" rel="nofollow">Julia language</a>,
written by Luis C. Gómez.</p>
<p>Most math operations are possible, check <a href="https://docs.julialang.org/en/v1/base/math/#Mathematical-Functions" rel="nofollow">Mathematics - The Julia Language</a> to check functions.</p>
<h3></h3>
<h3><a id="user-content-installation-and-usage" class="anchor" aria-hidden="true" href="#installation-and-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation and Usage</h3>
<p>Use Julia 1.6.1 or above.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(@v1.6) pkg&gt; add Mathenize
"><pre lang="@example"><code>(@v1.6) pkg&gt; add Mathenize
</code></pre></div>
<p>Displaying log info.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Mathenize
x = calculate(&quot;sqrt(complex(-90)) + 10im&quot;, true)
"><pre><span class="pl-k">using</span> Mathenize
x <span class="pl-k">=</span> <span class="pl-c1">calculate</span>(<span class="pl-s"><span class="pl-pds">"</span>sqrt(complex(-90)) + 10im<span class="pl-pds">"</span></span>, <span class="pl-c1">true</span>)</pre></div>
<p>Output:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="┌ Info: -&gt; sqrt(complex(-90)) + 10im &lt;-
│  └Tasks: 3
│  └Any[:+, :(sqrt(complex(-90))), :(10im)]
│    └ Performing subtasks:
│     └ sqrt is a valid symbol | Belongs to: sqrt(complex(-90)) | Length: 1 - 2
│     └ complex is a valid Expression found in sym
│     └ complex(-90) is permitted | Belongs to: sqrt(complex(-90)) | Length: 2 - 2
│     └ * is a valid symbol | Belongs to: 10im | Length: 1 - 3
│     └ 10 is a valid number | Belongs to: 10im | Length: 2 - 3
│     └ im is a valid symbol | Belongs to: 10im | Length: 3 - 3
│     └ Subtasks done.
│     └ Checking if :Expr can be performed.
│
│ sqrt(complex(-90)) + 10im
└ └ :Expr parsed correctly.
0.0 + 19.486832980505138im
"><pre><code>┌ Info: -&gt; sqrt(complex(-90)) + 10im &lt;-
│  └Tasks: 3
│  └Any[:+, :(sqrt(complex(-90))), :(10im)]
│    └ Performing subtasks:
│     └ sqrt is a valid symbol | Belongs to: sqrt(complex(-90)) | Length: 1 - 2
│     └ complex is a valid Expression found in sym
│     └ complex(-90) is permitted | Belongs to: sqrt(complex(-90)) | Length: 2 - 2
│     └ * is a valid symbol | Belongs to: 10im | Length: 1 - 3
│     └ 10 is a valid number | Belongs to: 10im | Length: 2 - 3
│     └ im is a valid symbol | Belongs to: 10im | Length: 3 - 3
│     └ Subtasks done.
│     └ Checking if :Expr can be performed.
│
│ sqrt(complex(-90)) + 10im
└ └ :Expr parsed correctly.
0.0 + 19.486832980505138im
</code></pre></div>
<h3><a id="user-content-difference-between-parsing-with-coreevalbasemath-expr-and-mathenize" class="anchor" aria-hidden="true" href="#difference-between-parsing-with-coreevalbasemath-expr-and-mathenize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Difference between parsing with Core.eval(Base.Math, :Expr) and Mathenize</h3>
<h4><a id="user-content-using-mathenize-the-following-input-will-result-in" class="anchor" aria-hidden="true" href="#using-mathenize-the-following-input-will-result-in"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using Mathenize, the following input will result in:</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = calculate(&quot;for i in 1:10; print(i); end;&quot;)
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">calculate</span>(<span class="pl-s"><span class="pl-pds">"</span>for i in 1:10; print(i); end;<span class="pl-pds">"</span></span>)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="ERROR: Error in Mathenize syntax. Check the log using calculate(math::String, true)
└ -&gt;for i = 1:10
    #= none:1 =#
    print(i)
end is not recognized as a valid math operation.
 └ The input given is a Expr that contains Any[:(i = 1:10), quote
    #= none:1 =#
    print(i)
end]
"><pre><code>ERROR: Error in Mathenize syntax. Check the log using calculate(math::String, true)
└ -&gt;for i = 1:10
    #= none:1 =#
    print(i)
end is not recognized as a valid math operation.
 └ The input given is a Expr that contains Any[:(i = 1:10), quote
    #= none:1 =#
    print(i)
end]
</code></pre></div>
<h4><a id="user-content-using-coreevalbasemath-expr" class="anchor" aria-hidden="true" href="#using-coreevalbasemath-expr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using Core.eval(Base.Math, :Expr)</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Core.eval(Base.Math, Meta.parse(&quot;for i in 1:10; print(i); end;&quot;))
&gt; 12345678910
"><pre>Core<span class="pl-k">.</span><span class="pl-c1">eval</span>(Base<span class="pl-k">.</span>Math, Meta<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">"</span>for i in 1:10; print(i); end;<span class="pl-pds">"</span></span>))
<span class="pl-k">&gt;</span> <span class="pl-c1">12345678910</span></pre></div>
<h3><a id="user-content-author" class="anchor" aria-hidden="true" href="#author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Author</h3>
<p>This package was written by Luis C. Gómez.</p>
</article></div>