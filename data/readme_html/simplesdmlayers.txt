<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-simple-layers-for-species-distributions-modelling" class="anchor" aria-hidden="true" href="#simple-layers-for-species-distributions-modelling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Simple layers for Species Distributions Modelling</h2>
<p>This package offers very simple types and functions to interact with
bioclimatic data and the output of species distribution models.</p>
<p><strong>Documentation</strong> (released version): <a href="https://ecojulia.github.io/SimpleSDMLayers.jl/stable/" rel="nofollow">https://ecojulia.github.io/SimpleSDMLayers.jl/stable/</a><br>
<strong>Documentation</strong> (development version): <a href="https://ecojulia.github.io/SimpleSDMLayers.jl/dev/" rel="nofollow">https://ecojulia.github.io/SimpleSDMLayers.jl/dev/</a></p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/EcoJulia/SimpleSDMLayers.jl/workflows/Unit%20testing/badge.svg"><img src="https://github.com/EcoJulia/SimpleSDMLayers.jl/workflows/Unit%20testing/badge.svg" alt="" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/EcoJulia/SimpleSDMLayers.jl/workflows/Documentation/badge.svg"><img src="https://github.com/EcoJulia/SimpleSDMLayers.jl/workflows/Documentation/badge.svg" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h3>
<p>The currently released version of the package can be installed with:</p>
<div class="highlight highlight-source-julia"><pre>] add SimpleSDMLayers</pre></div>
<p>The development version of the package can be installed with:</p>
<div class="highlight highlight-source-julia"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>EcoJulia<span class="pl-k">/</span>SimpleSDMLayers<span class="pl-k">.</span>jl<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<h3><a id="user-content-type-system" class="anchor" aria-hidden="true" href="#type-system"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Type system</h3>
<p>All types belong to the abstract <code>SimpleSDMLayer</code>, and are organised in the
same way: a <code>grid</code> field storing a matrix of data (of any type!), and the
<code>left</code>, <code>right</code>, <code>bottom</code>, and <code>top</code> coordinates (as floating point values).</p>
<p>The two core types of the package are <code>SimpleSDMPredictor</code> and
<code>SimpleSDMResponse</code>. The only difference between the two is that predictors
are immutable, but responses are.</p>
<h3><a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Methods</h3>
<p>Most of the methods are overloads from <code>Base</code>. In particular, <code>SimpleSDMLayer</code>
objects can be accessed like normal two-dimensional arrays, in which case
they return an object of the same type if called with a range, and the value
if called with a single position.</p>
<p>It is also possible to crop a layer based on a bounding box:</p>
<div class="highlight highlight-source-julia"><pre>p[(left, right), (bottom, top)]</pre></div>
<p>If the layer is of the <code>SimpleSDMResponse</code> type, it is possible to write to it:</p>
<div class="highlight highlight-source-julia"><pre>p[<span class="pl-k">-</span><span class="pl-c1">74.3</span>, <span class="pl-c1">17.65</span>] <span class="pl-k">=</span> <span class="pl-c1">1.4</span></pre></div>
<p>This is only defined for <code>SimpleSDMResponse</code>, and <code>SimpleSDMPredictor</code>
are immutable.</p>
<h3><a id="user-content-bioclimatic-data" class="anchor" aria-hidden="true" href="#bioclimatic-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Bioclimatic data</h3>
<h4><a id="user-content-worldclim-20" class="anchor" aria-hidden="true" href="#worldclim-20"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>WorldClim 2.0</h4>
<p>The <code>worldclim</code> function will get a range, or an array of indices, and return
the corresponding bioclim 2.0 layers at the specified <code>resolution</code>. For
example, to get the annual temperature, and annual precipitation:</p>
<div class="highlight highlight-source-julia"><pre>temperature, precipitation <span class="pl-k">=</span> <span class="pl-c1">worldclim</span>([<span class="pl-c1">1</span>,<span class="pl-c1">12</span>])</pre></div>
<p>By default, the function will return the layers for the entire globe, and they
can be cropped later. The layers are returned as <code>SimpleSDMPredictor</code> objects.</p>
<h3><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Plotting</h3>
<p>Using the <code>Plots</code> package, one can call the <code>heatmap</code>, <code>contour</code>, <code>density</code>
(requires <code>StatsPlots</code>), and <code>plot</code> methods. Note that <code>plot</code> defaults to a
<code>heatmap</code>.</p>
<p>One can also use <code>scatter(l1, l2)</code> where both <code>l1</code> and <code>l2</code> are layers with the
same dimensions and bounding box, to get a scatterplot of the values. Only the
pixels that have non-<code>NaN</code> values in <em>both</em> layers are shown. Similarly,
<code>histogram2d</code> works.</p>
</article></div>