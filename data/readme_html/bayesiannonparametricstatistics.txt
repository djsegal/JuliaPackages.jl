<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p>BayesianNonparametricStatistics.jl is a Julia package to sample from nonparametric posteriors with data from a diffusion process (SDE). You can simulate SDEs, simulate Gaussian processes, calculate the posterior associated with diffusion process and a Gaussian process prior.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation:</h1>
<p>This package works with Julia 0.6, 0.7 and any version 1.X.</p>
<p>When you use any version of Julia 1 press ] and copy-paste</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="add BayesianNonparametricStatistics
"><pre>add BayesianNonparametricStatistics</pre></div>
<p>alternatively you can use</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;BayesianNonparametricStatistics&quot;)
"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>BayesianNonparametricStatistics<span class="pl-pds">"</span></span>)</pre></div>
<p>When using Julia 0.6, execute the following code:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl.git&quot;, &quot;BayesianNonparametricStatistics&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl.git<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BayesianNonparametricStatistics<span class="pl-pds">"</span></span>)</pre></div>
<p>when using Julia 0.7, execute</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.clone(&quot;https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl.git&quot;, &quot;BayesianNonparametricStatistics&quot;)
"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl.git<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BayesianNonparametricStatistics<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-any-problems-contact-me" class="anchor" aria-hidden="true" href="#any-problems-contact-me"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Any problems? Contact me!</h2>
<p><a href="mailto:jvanwaaij@gmail.com">jvanwaaij@gmail.com</a></p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<p>After installation, type the following in your Julia script, or in a Julia REPL.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="  using BayesianNonparametricStatistics
"><pre>  <span class="pl-k">using</span> BayesianNonparametricStatistics</pre></div>
<p>to use the package.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<p>Sample from an SDE dX_t=sin(2\pi X_t)dt+dW_t:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="  using BayesianNonparametricStatistics, Plots
  # implement SDE dX_t=sin(2\pi X_t)dt+dW_t, 
  # starting at zero till time 1000.0, discretised 
  # with precision 0.01.
  model = SDEModel(1.0,0.0,1000.0,0.01)
  sde = SDE(x-&gt;sinpi(2*x),model)
  # Sample from sde.
  X = rand(sde)
  # Plot X. 
  plot(X.timeinterval, X.samplevalues)
"><pre>  <span class="pl-k">using</span> BayesianNonparametricStatistics, Plots
  <span class="pl-c"><span class="pl-c">#</span> implement SDE dX_t=sin(2\pi X_t)dt+dW_t, </span>
  <span class="pl-c"><span class="pl-c">#</span> starting at zero till time 1000.0, discretised </span>
  <span class="pl-c"><span class="pl-c">#</span> with precision 0.01.</span>
  model <span class="pl-k">=</span> <span class="pl-c1">SDEModel</span>(<span class="pl-c1">1.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">1000.0</span>,<span class="pl-c1">0.01</span>)
  sde <span class="pl-k">=</span> <span class="pl-c1">SDE</span>(x<span class="pl-k">-&gt;</span><span class="pl-c1">sinpi</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>x),model)
  <span class="pl-c"><span class="pl-c">#</span> Sample from sde.</span>
  X <span class="pl-k">=</span> <span class="pl-c1">rand</span>(sde)
  <span class="pl-c"><span class="pl-c">#</span> Plot X. </span>
  <span class="pl-c1">plot</span>(X<span class="pl-k">.</span>timeinterval, X<span class="pl-k">.</span>samplevalues)</pre></div>
<p>To recover the drift function, using Gaussian process posterior:
(the code is for Julia 0.7 or 1.0. When using 0.6 leave the line "using LinearAlgebra, SparseArrays" out and replace "Diagonal" in the second line by "diagm")</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="  using BayesianNonparametricStatistics, LinearAlgebra, SparseArrays, Plots
  distribution = GaussianVector(sparse(Diagonal([k^(-1.0) for k in 1.0:50.0])))
  Π = GaussianProcess([fourier(k) for k in 1:50], distribution)
  postΠ = calculateposterior(Π, X, model)
  # sample 10 times from posterior
  plot()
  x = 0.0:0.01:1.0
  for k in 1:10
    f = rand(postΠ)
    y = f.(x)
    plot!(x,y,show=true)
  end 
"><pre>  <span class="pl-k">using</span> BayesianNonparametricStatistics, LinearAlgebra, SparseArrays, Plots
  distribution <span class="pl-k">=</span> <span class="pl-c1">GaussianVector</span>(<span class="pl-c1">sparse</span>(<span class="pl-c1">Diagonal</span>([k<span class="pl-k">^</span>(<span class="pl-k">-</span><span class="pl-c1">1.0</span>) <span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">1.0</span><span class="pl-k">:</span><span class="pl-c1">50.0</span>])))
  Π <span class="pl-k">=</span> <span class="pl-c1">GaussianProcess</span>([<span class="pl-c1">fourier</span>(k) <span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">50</span>], distribution)
  postΠ <span class="pl-k">=</span> <span class="pl-c1">calculateposterior</span>(Π, X, model)
  <span class="pl-c"><span class="pl-c">#</span> sample 10 times from posterior</span>
  <span class="pl-c1">plot</span>()
  x <span class="pl-k">=</span> <span class="pl-c1">0.0</span><span class="pl-k">:</span><span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">1.0</span>
  <span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>
    f <span class="pl-k">=</span> <span class="pl-c1">rand</span>(postΠ)
    y <span class="pl-k">=</span> <span class="pl-c1">f</span>.(x)
    <span class="pl-c1">plot!</span>(x,y,show<span class="pl-k">=</span><span class="pl-c1">true</span>)
  <span class="pl-k">end</span> </pre></div>
<h1><a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Wiki</h1>
<p>Go to the <a href="https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl/wiki">Wiki</a>.</p>
<h1><a id="user-content-website" class="anchor" aria-hidden="true" href="#website"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Website</h1>
<p><a href="https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl.git">https://github.com/Jan-van-Waaij/BayesianNonparametricStatistics.jl.git</a></p>
<h1><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h1>
<p>The BayesianNonparametricStatistics.jl package is licensed under the MIT "Expat" License:</p>
<blockquote>
<p>Copyright (c) 2017-2021: Jan van Waaij.</p>
<p>Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:</p>
<p>The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.</p>
</blockquote>
</article></div>