<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-clusteringga" class="anchor" aria-hidden="true" href="#clusteringga"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ClusteringGA</h1>
<p><a href="https://travis-ci.org/sambitdash/ClusteringGA.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e6515fae5269ff526ef1525ef41d9162691fc13f/68747470733a2f2f7472617669732d63692e6f72672f73616d626974646173682f436c7573746572696e6747412e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/sambitdash/ClusteringGA.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/sambitdash/ClusteringGA.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a1b963a055c7e842cc37c12cfd0347344ff2fc0d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f73616d626974646173682f436c7573746572696e6747412e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/sambitdash/ClusteringGA.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p><code>Clustering Genetic Algorithm</code> is a method that uses a modification of <code>Genetic Algorithms</code> to estimate potential clusters in a dataset. This is particulaly useful, in cases where other parameters like estimated numbers of clusters(<code>k</code>) may not be known be known. The alogorithm maximizes the mean silhouettes of clustering to compute the clusters.</p>
<p>Being an evolutionary alogorithm, the algorithm depends on randomly generated populations and for large datasets can be computational intensive.</p>
<pre><code>function cga(objects, distances, population_size, generations)
</code></pre>
<p>Compute the clusters in the objects using <code>Clustering Genetic Algorithms</code>.</p>
<ul>
<li><code>objects</code>: the vector of objects used for clustering</li>
<li><code>distances</code>: the matrix providing the pairwise distance between the objects</li>
<li><code>population_size</code>: populations utilized in computing the genetic algorithm (default <code>20*length(objects)</code>)</li>
<li><code>generations</code>: number of generations for which genetic algorithm has to run (default <code>50</code>)</li>
</ul>
<h2><a id="user-content-return" class="anchor" aria-hidden="true" href="#return"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Return</h2>
<p>It returns a tuple of <code>CGAData</code> and <code>CGAResult</code>.</p>
<pre><code>struct CGAResult &lt;: ClusteringResult
	  assignments::Vector{Int}    # element-to-cluster assignments (n)
    counts::Vector{Int}         # number of samples assigned to each cluster (k)
    found_gen::Int              # first generation where the elite was found
    total_gen::Int              # total generations the GA has been run
end

mutable struct CGAData{S, T&lt;:Real}
		# to be used as an opaque object and normally not to be queried for values.
end
</code></pre>
<p>Methods like <code>count</code> can be used with <code>CGAResult</code> as this is derived from the <code>Clustering.ClusteringResult</code> abstract type.</p>
<h2><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reference</h2>
<ol>
<li>Hruschka, Eduardo &amp; Ebecken, Nelson. (2003). A genetic algorithm for cluster analysis. Intell. Data Anal.. 7. 15-25. 10.3233/IDA-2003-7103.</li>
</ol>
</article></div>