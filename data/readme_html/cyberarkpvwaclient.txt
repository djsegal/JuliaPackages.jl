<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cyberarkpvwaclientjl" class="anchor" aria-hidden="true" href="#cyberarkpvwaclientjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CyberArkPVWAClient.jl</h1>
<p dir="auto">Julia module for interfacing with the CyberArk PVWA REST API</p>
<p dir="auto">Basic usage:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using CyberArkPVWAClient

pvwauri = &quot;https://cyberark.skynet.local/PasswordVault&quot;
method = &quot;ldap&quot;
causer = &quot;noah.bliss&quot;

capass = Base.getpass(&quot;Please enter your CyberArk password&quot;)
cookieset = CyberArkPVWAClient.login(pvwauri, method, causer, capass)
accountsresult = CyberArkPVWAClient.request(pvwauri, cookieset, &quot;ExtendedAccounts&quot;)"><pre class="notranslate"><code>using CyberArkPVWAClient

pvwauri = "https://cyberark.skynet.local/PasswordVault"
method = "ldap"
causer = "noah.bliss"

capass = Base.getpass("Please enter your CyberArk password")
cookieset = CyberArkPVWAClient.login(pvwauri, method, causer, capass)
accountsresult = CyberArkPVWAClient.request(pvwauri, cookieset, "ExtendedAccounts")
</code></pre></div>
<p dir="auto">To fetch RDP files you'll need the "AccountID" which is usually <code>##_#</code> e.g. <code>23_1</code></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="target = &quot;dc01.domain.local&quot;
reason = &quot;Because I want to.&quot;
accountid = &quot;23_7&quot;

psmrdpfile = CyberArkPVWAClient.psmconnect(pvwauri, cookieset, accountid, reason, target)

filename = &quot;rdpswap.rdp&quot;
open(filename, &quot;w&quot;)
write(filename, psmrdpfile)
run(`ca-rdp $filename`)"><pre class="notranslate"><code>target = "dc01.domain.local"
reason = "Because I want to."
accountid = "23_7"

psmrdpfile = CyberArkPVWAClient.psmconnect(pvwauri, cookieset, accountid, reason, target)

filename = "rdpswap.rdp"
open(filename, "w")
write(filename, psmrdpfile)
run(`ca-rdp $filename`)
</code></pre></div>
<p dir="auto">To make this process a bit more human-friendly, you can use the following function.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="function getaccountid(username, address, connection, caaccounts)
        for acc in caaccounts[&quot;Accounts&quot;]#[1]
                if acc[&quot;Properties&quot;][&quot;UserName&quot;] == username &amp;&amp;
                acc[&quot;Properties&quot;][&quot;Address&quot;] == address &amp;&amp;
                haskey(acc[&quot;ActionsDisplay&quot;][&quot;ConnectionDisplay&quot;][&quot;ConnectionComponents&quot;], connection)
                        return acc[&quot;AccountID&quot;]
                end
        end
end

username = &quot;domain-admin&quot;
address = &quot;domain.local&quot;
connection = &quot;PSM-RDP&quot;

accountid = getaccountid(username, address, connection, accountsresult)"><pre class="notranslate"><code>function getaccountid(username, address, connection, caaccounts)
        for acc in caaccounts["Accounts"]#[1]
                if acc["Properties"]["UserName"] == username &amp;&amp;
                acc["Properties"]["Address"] == address &amp;&amp;
                haskey(acc["ActionsDisplay"]["ConnectionDisplay"]["ConnectionComponents"], connection)
                        return acc["AccountID"]
                end
        end
end

username = "domain-admin"
address = "domain.local"
connection = "PSM-RDP"

accountid = getaccountid(username, address, connection, accountsresult)
</code></pre></div>
</article></div>