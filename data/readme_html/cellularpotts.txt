<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content--cellularpottsjl" class="anchor" aria-hidden="true" href="#-cellularpottsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo.svg"><img title="CellularPotts.jl" src="docs/src/assets/logo.svg" alt="" width="50" style="max-width: 100%;"></a> CellularPotts.jl</h1>
<p dir="auto"><a href="https://robertgregg.github.io/CellularPotts.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">The goal of this package is to develop a Cellular Potts modeling approach in Julia using a network-based approach. Currently, other software exists to simulate these types of models, but they have a number of limitations:</p>
<ul dir="auto">
<li>They are written in a low-level language (e.g. C++) with a GUI or python frontend
<ul dir="auto">
<li>This separates developers from users, complicates the code base, and makes customization difficult</li>
</ul>
</li>
<li>They rely on a grid approach instead of a network based approach
<ul dir="auto">
<li>Representing the model as a graph allows access to decades of graph theory research, for example:
<ul dir="auto">
<li>calculating articulation points to avoid cells disconnecting</li>
<li>using graph partitioning algorithms to simulate cellular division</li>
<li>avoiding cumbersome boundary conditions by simply adding edges that loop around</li>
<li>using graphical laplacians to simulate diffusion</li>
</ul>
</li>
</ul>
</li>
<li>They cannot take advantage of how composable Julia packages are with one another. For example, we can use state-of-the-art differential equation solving techniques from <a href="https://diffeq.sciml.ai/stable/" rel="nofollow">DifferentialEquations.jl</a>.
<ul dir="auto">
<li>Most CPM software relies on Runge-Kutta or even simple Euler Methods</li>
</ul>
</li>
</ul>
<p dir="auto">Researchers and developers have been able to accomplish a lot with their respective softwares and I would urge anyone to check them out. My favorites are <a href="https://morpheus.gitlab.io/" rel="nofollow">Morpheus</a>, <a href="https://artistoo.net/" rel="nofollow">Artistoo</a>, and <a href="https://compucell3d.org/" rel="nofollow">CompuCell3D</a>. This package takes a lot of inspiration from their design and pedagogical examples.</p>
<p dir="auto">Careful attention has been taken to ensure this package is as performant as I can possibly make it, however, if you spot something egregious in the package, feel free to raise an issue or pull request.</p>
<p dir="auto">Also of note, <strong>this package is still in major development and is not currently recommended for general use</strong>. I'm still working out how to best organize datastructures and functionally. However, still feel free to try it if you're curious.</p>
<h2 dir="auto"><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simple Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="#Install the package
using Pkg; Pkg.add(&quot;CellularPotts&quot;)

#Load in the package
using CellularPotts

#Create a space (50×50) for cells to exist in
space = CellSpace(50,50; isPeriodic=true, neighborhood=:moore)

#Describe the cells in the model
initialCellState = CellTable(
    [:Epithelial], #names
    [500],         #sizes
    [1])           #counts

#Add penalties to the model
penalties = [
    AdhesionPenalty([0 20;
                     20 0]),
    VolumePenalty([5])
    ]

#Create a model object
cpm = CellPotts(space, initialCellState, penalties)

#Record a simulation of the model
recordCPM(&quot;ReadMeExample.gif&quot;, cpm)"><pre><span class="pl-c"><span class="pl-c">#</span>Install the package</span>
<span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CellularPotts<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span>Load in the package</span>
<span class="pl-k">using</span> CellularPotts

<span class="pl-c"><span class="pl-c">#</span>Create a space (50×50) for cells to exist in</span>
space <span class="pl-k">=</span> <span class="pl-c1">CellSpace</span>(<span class="pl-c1">50</span>,<span class="pl-c1">50</span>; isPeriodic<span class="pl-k">=</span><span class="pl-c1">true</span>, neighborhood<span class="pl-k">=</span><span class="pl-c1">:moore</span>)

<span class="pl-c"><span class="pl-c">#</span>Describe the cells in the model</span>
initialCellState <span class="pl-k">=</span> <span class="pl-c1">CellTable</span>(
    [<span class="pl-c1">:Epithelial</span>], <span class="pl-c"><span class="pl-c">#</span>names</span>
    [<span class="pl-c1">500</span>],         <span class="pl-c"><span class="pl-c">#</span>sizes</span>
    [<span class="pl-c1">1</span>])           <span class="pl-c"><span class="pl-c">#</span>counts</span>

<span class="pl-c"><span class="pl-c">#</span>Add penalties to the model</span>
penalties <span class="pl-k">=</span> [
    <span class="pl-c1">AdhesionPenalty</span>([<span class="pl-c1">0</span> <span class="pl-c1">20</span>;
                     <span class="pl-c1">20</span> <span class="pl-c1">0</span>]),
    <span class="pl-c1">VolumePenalty</span>([<span class="pl-c1">5</span>])
    ]

<span class="pl-c"><span class="pl-c">#</span>Create a model object</span>
cpm <span class="pl-k">=</span> <span class="pl-c1">CellPotts</span>(space, initialCellState, penalties)

<span class="pl-c"><span class="pl-c">#</span>Record a simulation of the model</span>
<span class="pl-c1">recordCPM</span>(<span class="pl-s"><span class="pl-pds">"</span>ReadMeExample.gif<span class="pl-pds">"</span></span>, cpm)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/RobertGregg/CellularPotts.jl/blob/master/docs/src/ExampleGallery/HelloWorld/HelloWorld.gif?raw=true"><img title="ReadMeEaxmple" src="https://github.com/RobertGregg/CellularPotts.jl/raw/master/docs/src/ExampleGallery/HelloWorld/HelloWorld.gif?raw=true" data-animated-image="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-major-improvements" class="anchor" aria-hidden="true" href="#major-improvements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Major Improvements</h2>
<ul class="contains-task-list">
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Introduce more cell properties</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Division</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Death</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Active movement</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Movement up gradients</li>
</ul>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Integrate hybrid modeling schemes</p>
<ul class="contains-task-list">
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> ODE Modeling (intracellular)</p>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> PDE Modeling (extracellular)</p>
</li>
<li>
<p dir="auto">Maybe use <a href="https://github.com/SciML/NeuralPDE.jl">Neural networks</a> to speed up the PDE computation?</p>
</li>
<li>
<p dir="auto">Stochastic jumps?</p>
</li>
</ul>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Create an Examples folder</p>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> How to save output?</p>
<ul dir="auto">
<li>Save the data into a dictionary of dataframes</li>
<li>Needs to be made more efficient</li>
</ul>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Implement different ways to initialize cell locations</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Image input</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> specify locations with property</li>
</ul>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Allow cells to have different properties (used <code>NamedTuple</code>)</p>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Use automatic differentiation to calculate <a href="https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1007459" rel="nofollow">cellular forces</a> from the Hamiltonian</p>
</li>
<li class="task-list-item">
<p dir="auto"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Add a correction factor to adhesion to deal with boundaries.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-minor-improvements" class="anchor" aria-hidden="true" href="#minor-improvements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Minor Improvements</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Allow user defined parameters to cells (used <code>NamedTuple</code>)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Allow cells of the same type to be different sizes (?)
<ul dir="auto">
<li>Just specify different desired volumes</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Could get a big speed improvement if you don't loop through all cells to update articulation points
<ul dir="auto">
<li>Need to be clever about updating articulation points locally (is this possible?)</li>
<li>rewrote <a href="https://en.wikipedia.org/wiki/Biconnected_component" rel="nofollow">Tarjan's algoirthm</a> to find articulation points which is O(V+E)</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Adding cell borders is slow for large spaces
<ul dir="auto">
<li>fixed by using NA</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Use abstract typing (e.g. <code>AbstractVector</code> vs <code>Vector</code>) without creating type instability</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Do we even need to track to total energy? (nope!)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Use SVectors to store graph edges? <g-emoji class="g-emoji" alias="thinking" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png">🤔</g-emoji>
<ul dir="auto">
<li>Only useful for spaces where all nodes are identical (e.g., periodic boundaries)</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Add more tests and CI badge</li>
</ul>
</article></div>