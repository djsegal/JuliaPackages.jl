<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-keldyshjl" class="anchor" aria-hidden="true" href="#keldyshjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Keldysh.jl</h1>
<p><a href="https://travis-ci.com/kleinhenz/Keldysh.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/73147dcaa1a403a39ae77c9609d3b82cd65b86af/68747470733a2f2f7472617669732d63692e636f6d2f6b6c65696e68656e7a2f4b656c647973682e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/kleinhenz/Keldysh.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><code>Keldysh.jl</code> provides a set of tools for working with non-equilibrium Keldysh Green's functions.
It contains types to represent contours, grids defined on these contours, and two-time Green's functions defined on these grids.
Additionally, it provides functions for generating Green's functions, performing integration on a contour and hdf5 serialization.</p>
<p>Credit to Andrey Antipov and Igor Krivenko for designing a first version of the abstractions implemented here.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>The following code generates a non-equilibrium Green's function from a spectral density and saves it to an hdf5 archive</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Keldysh, HDF5

contour <span class="pl-k">=</span> <span class="pl-c1">twist</span>(<span class="pl-c1">Contour</span>(full_contour, tmax<span class="pl-k">=</span><span class="pl-c1">1.0</span>, Î²<span class="pl-k">=</span><span class="pl-c1">5.0</span>))
grid <span class="pl-k">=</span> <span class="pl-c1">TimeGrid</span>(contour, npts_real<span class="pl-k">=</span><span class="pl-c1">11</span>, npts_imag<span class="pl-k">=</span><span class="pl-c1">51</span>)
dos <span class="pl-k">=</span> Keldysh<span class="pl-k">.</span><span class="pl-c1">flat_dos</span>(D<span class="pl-k">=</span><span class="pl-c1">10.0</span>)
gf <span class="pl-k">=</span> <span class="pl-c1">dos2gf</span>(dos, grid)
<span class="pl-c1">h5write</span>(<span class="pl-s"><span class="pl-pds">"</span>output.h5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/gf<span class="pl-pds">"</span></span>, gf)</pre></div>
<p><a href="examples/anderson_nca.jl">anderson_nca.jl</a> implements a NCA solver for the anderson impurity model using <code>Keldysh.jl</code>.</p>
</article></div>