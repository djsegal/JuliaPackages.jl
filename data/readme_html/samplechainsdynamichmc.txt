<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-samplechainsdynamichmc" class="anchor" aria-hidden="true" href="#samplechainsdynamichmc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SampleChainsDynamicHMC</h1>
<p dir="auto"><a href="https://cscherrer.github.io/SampleChainsDynamicHMC.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://cscherrer.github.io/SampleChainsDynamicHMC.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/cscherrer/SampleChainsDynamicHMC.jl/actions"><img src="https://github.com/cscherrer/SampleChainsDynamicHMC.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/cscherrer/SampleChainsDynamicHMC.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9d75bf4637d94301b0a41201c691976199bf0511f158d2a544c0d7210e6d9bfe/68747470733a2f2f636f6465636f762e696f2f67682f6373636865727265722f53616d706c65436861696e7344796e616d6963484d432e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/cscherrer/SampleChainsDynamicHMC.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Setting up:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SampleChainsDynamicHMC

julia&gt; using TransformVariables

julia&gt; function ℓ(nt)
               z = nt.x/nt.σ
               return -z^2 - nt.σ - log(nt.σ)
       end
ℓ (generic function with 1 method)

julia&gt; t = as((x=asℝ, σ=asℝ₊))
TransformVariables.TransformTuple{NamedTuple{(:x, :σ), Tuple{TransformVariables.Identity, TransformVariables.ShiftedExp{true, Float64}}}}((x = asℝ, σ = asℝ₊), 2)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SampleChainsDynamicHMC

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TransformVariables

julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> <span class="pl-en">ℓ</span>(nt)
               z <span class="pl-k">=</span> nt<span class="pl-k">.</span>x<span class="pl-k">/</span>nt<span class="pl-k">.</span>σ
               <span class="pl-k">return</span> <span class="pl-k">-</span>z<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> nt<span class="pl-k">.</span>σ <span class="pl-k">-</span> <span class="pl-c1">log</span>(nt<span class="pl-k">.</span>σ)
       <span class="pl-k">end</span>
ℓ (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)

julia<span class="pl-k">&gt;</span> t <span class="pl-k">=</span> <span class="pl-c1">as</span>((x<span class="pl-k">=</span>asℝ, σ<span class="pl-k">=</span>asℝ₊))
TransformVariables<span class="pl-k">.</span>TransformTuple{NamedTuple{(<span class="pl-c1">:x</span>, <span class="pl-c1">:σ</span>), Tuple{TransformVariables<span class="pl-k">.</span>Identity, TransformVariables<span class="pl-k">.</span>ShiftedExp{<span class="pl-c1">true</span>, Float64}}}}((x <span class="pl-k">=</span> asℝ, σ <span class="pl-k">=</span> asℝ₊), <span class="pl-c1">2</span>)</pre></div>
<p dir="auto">Initialize and take some samples:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; chain = newchain(DynamicHMCChain, ℓ, t)
1-element Chain with schema (x = Float64, σ = Float64)
(x = -0.66±0.0, σ = 0.65±0.0)

julia&gt; sample!(chain, 9)
10-element Chain with schema (x = Float64, σ = Float64)
(x = -0.36±0.38, σ = 1.26±0.69)

julia&gt; sample!(chain, 90)
100-element Chain with schema (x = Float64, σ = Float64)
(x = -0.32±0.68, σ = 1.06±0.66)

julia&gt; chain[1]
(x = -0.660818661864279, σ = 0.6482824278360845)

julia&gt; chain.x[1:10]
10-element ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}:
 -0.660818661864279
 -0.31966349282522916
 -0.5030732787889958
 -0.27788387641411594
 -0.9287874718868021
 -0.6260927333733151
  0.4303096842134812
 -0.3844104968943612
  0.05987431572954072
 -0.351002647246055"><pre>julia<span class="pl-k">&gt;</span> chain <span class="pl-k">=</span> <span class="pl-c1">newchain</span>(DynamicHMCChain, ℓ, t)
<span class="pl-c1">1</span><span class="pl-k">-</span>element Chain with schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.66</span>±<span class="pl-c1">0.0</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.65</span>±<span class="pl-c1">0.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sample!</span>(chain, <span class="pl-c1">9</span>)
<span class="pl-c1">10</span><span class="pl-k">-</span>element Chain with schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.36</span>±<span class="pl-c1">0.38</span>, σ <span class="pl-k">=</span> <span class="pl-c1">1.26</span>±<span class="pl-c1">0.69</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sample!</span>(chain, <span class="pl-c1">90</span>)
<span class="pl-c1">100</span><span class="pl-k">-</span>element Chain with schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.32</span>±<span class="pl-c1">0.68</span>, σ <span class="pl-k">=</span> <span class="pl-c1">1.06</span>±<span class="pl-c1">0.66</span>)

julia<span class="pl-k">&gt;</span> chain[<span class="pl-c1">1</span>]
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.660818661864279</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.6482824278360845</span>)

julia<span class="pl-k">&gt;</span> chain<span class="pl-k">.</span>x[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
<span class="pl-c1">10</span><span class="pl-k">-</span>element ElasticArrays<span class="pl-k">.</span>ElasticVector{Float64, <span class="pl-c1">0</span>, Vector{Float64}}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.660818661864279</span>
 <span class="pl-k">-</span><span class="pl-c1">0.31966349282522916</span>
 <span class="pl-k">-</span><span class="pl-c1">0.5030732787889958</span>
 <span class="pl-k">-</span><span class="pl-c1">0.27788387641411594</span>
 <span class="pl-k">-</span><span class="pl-c1">0.9287874718868021</span>
 <span class="pl-k">-</span><span class="pl-c1">0.6260927333733151</span>
  <span class="pl-c1">0.4303096842134812</span>
 <span class="pl-k">-</span><span class="pl-c1">0.3844104968943612</span>
  <span class="pl-c1">0.05987431572954072</span>
 <span class="pl-k">-</span><span class="pl-c1">0.351002647246055</span></pre></div>
<p dir="auto">Or multiple chains:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; chains = newchain(4, DynamicHMCChain, ℓ, t)
4-element MultiChain with 4 chains and schema (x = Float64, σ = Float64)
(x = -0.38±0.75, σ = 0.76±0.76)

julia&gt; sample!(chains, 9)
40-element MultiChain with 4 chains and schema (x = Float64, σ = Float64)
(x = -0.11±0.73, σ = 0.83±0.8)

julia&gt; sample!(chains, 90)
400-element MultiChain with 4 chains and schema (x = Float64, σ = Float64)
(x = -0.18±0.75, σ = 0.9±0.97)

julia&gt; samples(chains)
400-element TupleVector with schema (x = Float64, σ = Float64)
(x = -0.18±0.75, σ = 0.9±0.97)

julia&gt; getchains(chains) .|&gt; summarize
4-element Vector{NamedTuple{(:x, :σ), Tuple{RealSummary, RealSummary}}}:
 (x = -0.22±0.73, σ = 1.4±0.92)
 (x = -0.031±0.33, σ = 0.46±0.37)
 (x = -0.0214±0.014, σ = 0.07497±0.0044)
 (x = -0.46±1.2, σ = 1.7±1.0)"><pre>julia<span class="pl-k">&gt;</span> chains <span class="pl-k">=</span> <span class="pl-c1">newchain</span>(<span class="pl-c1">4</span>, DynamicHMCChain, ℓ, t)
<span class="pl-c1">4</span><span class="pl-k">-</span>element MultiChain with <span class="pl-c1">4</span> chains and schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.38</span>±<span class="pl-c1">0.75</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.76</span>±<span class="pl-c1">0.76</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sample!</span>(chains, <span class="pl-c1">9</span>)
<span class="pl-c1">40</span><span class="pl-k">-</span>element MultiChain with <span class="pl-c1">4</span> chains and schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.11</span>±<span class="pl-c1">0.73</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.83</span>±<span class="pl-c1">0.8</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sample!</span>(chains, <span class="pl-c1">90</span>)
<span class="pl-c1">400</span><span class="pl-k">-</span>element MultiChain with <span class="pl-c1">4</span> chains and schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.18</span>±<span class="pl-c1">0.75</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.9</span>±<span class="pl-c1">0.97</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">samples</span>(chains)
<span class="pl-c1">400</span><span class="pl-k">-</span>element TupleVector with schema (x <span class="pl-k">=</span> Float64, σ <span class="pl-k">=</span> Float64)
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.18</span>±<span class="pl-c1">0.75</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.9</span>±<span class="pl-c1">0.97</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">getchains</span>(chains) <span class="pl-k">.|</span><span class="pl-k">&gt;</span> summarize
<span class="pl-c1">4</span><span class="pl-k">-</span>element Vector{NamedTuple{(<span class="pl-c1">:x</span>, <span class="pl-c1">:σ</span>), Tuple{RealSummary, RealSummary}}}<span class="pl-k">:</span>
 (x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.22</span>±<span class="pl-c1">0.73</span>, σ <span class="pl-k">=</span> <span class="pl-c1">1.4</span>±<span class="pl-c1">0.92</span>)
 (x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.031</span>±<span class="pl-c1">0.33</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.46</span>±<span class="pl-c1">0.37</span>)
 (x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.0214</span>±<span class="pl-c1">0.014</span>, σ <span class="pl-k">=</span> <span class="pl-c1">0.07497</span>±<span class="pl-c1">0.0044</span>)
 (x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.46</span>±<span class="pl-c1">1.2</span>, σ <span class="pl-k">=</span> <span class="pl-c1">1.7</span>±<span class="pl-c1">1.0</span>)</pre></div>
<p dir="auto">A <code>MultiChain</code> is still represented abstractly similarly to a single chain, for easy comptuations:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; chains[1]
(x = -0.36681258114618465, σ = 1.7508963122497017)

julia&gt; chains.x[1:10]
vcat(10-element view(::ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}, 1:10) with eltype Float64, 0-element view(::ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}, 1:0) with eltype Float64, 0-element view(::ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}, 1:0) with eltype Float64, 0-element view(::ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}, 1:0) with eltype Float64):
 -0.36681258114618465
 -0.09339967949694516
 -0.3089171887973833
 -1.5420534117776032
 -0.10574714292144685
 -0.11312594562766448
 -0.008799704824529742
  0.5209894936643252
 -0.11204122979765113
 -1.100922340370071"><pre>julia<span class="pl-k">&gt;</span> chains[<span class="pl-c1">1</span>]
(x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.36681258114618465</span>, σ <span class="pl-k">=</span> <span class="pl-c1">1.7508963122497017</span>)

julia<span class="pl-k">&gt;</span> chains<span class="pl-k">.</span>x[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
<span class="pl-c1">vcat</span>(<span class="pl-c1">10</span><span class="pl-k">-</span>element <span class="pl-c1">view</span>(<span class="pl-k">::</span><span class="pl-c1">ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}</span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>) with eltype Float64, <span class="pl-c1">0</span><span class="pl-k">-</span>element <span class="pl-c1">view</span>(<span class="pl-k">::</span><span class="pl-c1">ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}</span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>) with eltype Float64, <span class="pl-c1">0</span><span class="pl-k">-</span>element <span class="pl-c1">view</span>(<span class="pl-k">::</span><span class="pl-c1">ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}</span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>) with eltype Float64, <span class="pl-c1">0</span><span class="pl-k">-</span>element <span class="pl-c1">view</span>(<span class="pl-k">::</span><span class="pl-c1">ElasticArrays.ElasticVector{Float64, 0, Vector{Float64}}</span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>) with eltype Float64)<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.36681258114618465</span>
 <span class="pl-k">-</span><span class="pl-c1">0.09339967949694516</span>
 <span class="pl-k">-</span><span class="pl-c1">0.3089171887973833</span>
 <span class="pl-k">-</span><span class="pl-c1">1.5420534117776032</span>
 <span class="pl-k">-</span><span class="pl-c1">0.10574714292144685</span>
 <span class="pl-k">-</span><span class="pl-c1">0.11312594562766448</span>
 <span class="pl-k">-</span><span class="pl-c1">0.008799704824529742</span>
  <span class="pl-c1">0.5209894936643252</span>
 <span class="pl-k">-</span><span class="pl-c1">0.11204122979765113</span>
 <span class="pl-k">-</span><span class="pl-c1">1.100922340370071</span></pre></div>
</article></div>