<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-indexedvectors" class="anchor" aria-hidden="true" href="#indexedvectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IndexedVectors</h1>
<p dir="auto"><a href="https://travis-ci.org/lucidfrontier45/IndexedVectors" rel="nofollow"><img src="https://camo.githubusercontent.com/5dffd3ac0a099f59911aa0e3b05c5f961ad9f7ad7a2f6846ed6893e85c518f7b/68747470733a2f2f7472617669732d63692e6f72672f6c7563696466726f6e7469657234352f496e6465786564566563746f72732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/lucidfrontier45/IndexedVectors.svg?branch=master" style="max-width: 100%;"></a> <a href="https://coveralls.io/github/lucidfrontier45/IndexedVectors?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a2377d6cfe84e3ccebfa4d4938dde174e14192b8a187f33213d5b8bb267a5fe6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c7563696466726f6e7469657234352f496e6465786564566563746f72732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/lucidfrontier45/IndexedVectors/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Vectors that can be looked up by the specidied key.</p>
<p dir="auto">Example</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using IndexedVectors

# base data
data = [(&quot;a&quot;, 100), (&quot;b&quot;, 200), (&quot;c&quot;, 300)]

# create index by the first item
indexed_data = IndexedVector(data, x -&gt; x[1])

# get by index
data[1] # (&quot;a&quot;, 100)

# get by key
data[&quot;b&quot;] # (&quot;b&quot;, 200)

# slice index
data[1:2] # [(&quot;a&quot;, 100), (&quot;b&quot;, 200)]"><pre><span class="pl-k">using</span> IndexedVectors

<span class="pl-c"><span class="pl-c">#</span> base data</span>
data <span class="pl-k">=</span> [(<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-c1">100</span>), (<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-c1">200</span>), (<span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>, <span class="pl-c1">300</span>)]

<span class="pl-c"><span class="pl-c">#</span> create index by the first item</span>
indexed_data <span class="pl-k">=</span> <span class="pl-c1">IndexedVector</span>(data, x <span class="pl-k">-&gt;</span> x[<span class="pl-c1">1</span>])

<span class="pl-c"><span class="pl-c">#</span> get by index</span>
data[<span class="pl-c1">1</span>] <span class="pl-c"><span class="pl-c">#</span> ("a", 100)</span>

<span class="pl-c"><span class="pl-c">#</span> get by key</span>
data[<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>] <span class="pl-c"><span class="pl-c">#</span> ("b", 200)</span>

<span class="pl-c"><span class="pl-c">#</span> slice index</span>
data[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>] <span class="pl-c"><span class="pl-c">#</span> [("a", 100), ("b", 200)]</span></pre></div>
</article></div>