<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-geodata-soon-to-be-archived---use-rastersjl" class="anchor" aria-hidden="true" href="#geodata-soon-to-be-archived---use-rastersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoData (soon to be archived! - use <a href="https://github.com/rafaqz/Rasters.jl">Rasters.jl</a>)</h1>
<p dir="auto"><a href="https://rafaqz.github.io/GeoData.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://rafaqz.github.io/GeoData.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.com/rafaqz/GeoData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/427172370e0e43773116dcdedb3ba7fee15658157405cc41be65c9a9702df145/68747470733a2f2f7472617669732d63692e636f6d2f72616661717a2f47656f446174612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/rafaqz/GeoData.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/rafaqz/GeoData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1b37280735d361c6019d1db6efccafe638aafebc3a861df91f52154ee2c34b8d/68747470733a2f2f636f6465636f762e696f2f67682f72616661717a2f47656f446174612e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/rafaqz/GeoData.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://camo.githubusercontent.com/e608d77380b4ff8adb32f31cbee4c79ea1cb5a3c7557c512c51e88785dde8e61/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417175616a6c2d2546302539462538432541322d617175612e737667" alt="Aqua.jl Quality Assurance" data-canonical-src="https://img.shields.io/badge/Aquajl-%F0%9F%8C%A2-aqua.svg" style="max-width: 100%;"></a></p>
<p dir="auto">GeoData.jl defines common types and methods for reading, writing and
manipulating spatial data.</p>
<p dir="auto">These currently include raster arrays like GeoTIFF and NetCDF, R grd files,
multi-layered stacks, and multi-file series of arrays and stacks.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6b52a8e22a9fef0e40397af0fb7d6b1613095941b538ac9b05880df673563994/68747470733a2f2f72616661717a2e6769746875622e696f2f47656f446174612e6a6c2f737461626c652f7472696d5f6578616d706c655f61667465722e706e67"><img src="https://camo.githubusercontent.com/6b52a8e22a9fef0e40397af0fb7d6b1613095941b538ac9b05880df673563994/68747470733a2f2f72616661717a2e6769746875622e696f2f47656f446174612e6a6c2f737461626c652f7472696d5f6578616d706c655f61667465722e706e67" alt="EarthEnv HabitatHeterogeneity layers trimmed to Australia" data-canonical-src="https://rafaqz.github.io/GeoData.jl/stable/trim_example_after.png" style="max-width: 100%;"></a></p>
<p dir="auto"><em>A GeoStack of EarthEnv HabitatHeterogeneity layers, trimmed to Australia and plotted with Plots.jl</em></p>
<h2 dir="auto"><a id="user-content-lazyness" class="anchor" aria-hidden="true" href="#lazyness"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lazyness</h2>
<ul dir="auto">
<li>Data is loaded lazily wherever possible using
<a href="https://github.com/meggart/DiskArrays.jl">DiskArrays.jl</a>. Indexing a
<code>GeoStack</code> by name is always lazy, while <code>view</code> of a <code>GeoArray</code> is lazy and
<code>getindex</code> will load to memory. <code>read</code> can be used on any object to ensure
that all data is loaded to memory.</li>
<li>Broadcast over disk-based objects is lazy - it will only run when the array is
indexed. Always prefer broadcasts to explicit loops - these can be very slow
with disk-based data.</li>
</ul>
<h2 dir="auto"><a id="user-content-data-source-abstraction" class="anchor" aria-hidden="true" href="#data-source-abstraction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Data-source abstraction</h2>
<p dir="auto">GeoData provides a standardised interface that allows many source data types to
be used with identical syntax.</p>
<ul dir="auto">
<li>Scripts and packages building on GeoData.jl can treat <code>AbstractGeoArray</code>,
<code>AbstractGeoStack</code>, and <code>AbstrackGeoSeries</code> as black boxes.
<ul dir="auto">
<li>The data could hold GeoTiff or NetCDF files, <code>Array</code>s in memory or
<code>CuArray</code>s on the GPU - they will all behave in the same way.</li>
<li><code>AbstractGeoStack</code> can be a Netcdf or HDF5 file, or a <code>NamedTuple</code> of
<code>GDALarray</code> holding <code>.tif</code> files, or all <code>GeoArray</code> in memory.</li>
<li>Users do not have to deal with the specifics of spatial file types.</li>
</ul>
</li>
<li>For <code>Projected</code> mode you can index with any projection by setting the
<code>mappedcrs</code> keyword on construction. You don't need to know the underlying
projection, the conversion is handled automatically. This means lat/lon
<code>EPSG(4326)</code> can be used across all sources seamlessly if you need that.</li>
<li>Regions and points selected with <code>Between</code> and <code>Contains</code> select the right
point or whole interval no matter the order of the index or it's position in
the cell.</li>
</ul>
<h2 dir="auto"><a id="user-content-named-dimensions-and-index-lookups" class="anchor" aria-hidden="true" href="#named-dimensions-and-index-lookups"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Named dimensions and index lookups</h2>
<p dir="auto">GeoData.jl extends
<a href="https://github.com/rafaqz/DimensionalData.jl">DimensionalData.jl</a> so that
spatial data can be indexed using named dimensions like <code>X</code>, <code>Y</code> and <code>Ti</code> (time)
and e.g. spatial coordinates.</p>
<p dir="auto">Dimensions can also be used in most <code>Base</code> and <code>Statistics</code> methods like <code>mean</code>
and <code>reduce</code> where <code>dims</code> arguments are required. Much of the behaviour is
covered in the <a href="https://rafaqz.github.io/DimensionalData.jl/stable/" rel="nofollow">DimensionalData
docs</a>.</p>
<p dir="auto">See <a href="https://rafaqz.github.io/GeoData.jl/stable" rel="nofollow">the docs</a> for more details and
examples for GeoData.jl.</p>
</article></div>