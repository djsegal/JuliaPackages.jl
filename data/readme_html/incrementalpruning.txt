<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-incrementalpruning" class="anchor" aria-hidden="true" href="#incrementalpruning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>IncrementalPruning</h1>
<p><a href="https://travis-ci.org/JuliaPOMDP/IncrementalPruning.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/20c51feae0853ab16efe2c24ffb6ac8aafb1ef92d0bd1b98dc23bd56acde701c/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961504f4d44502f496e6372656d656e74616c5072756e696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaPOMDP/IncrementalPruning.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaPOMDP/IncrementalPruning.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/cf8345450b42bc217343cf3a5b5bdbbb4fcb1147382652f4bc4d9ed83bc6e094/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961504f4d44502f496e6372656d656e74616c5072756e696e672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaPOMDP/IncrementalPruning.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This Julia package implements the incremental pruning solver for partially observable Markov decision processes.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
# Pkg.Registry.add(&quot;https://github.com/JuliaPOMDP/Registry) # for julia 1.1+

# for julia 1.0 add the registry throught the POMDP package
# Pkg.add(&quot;POMDPs&quot;)
# using POMDPs
# POMDPs.add_registry() 
Pkg.add(&quot;IncrementalPruning&quot;)
"><pre><span class="pl-k">using</span> Pkg
<span class="pl-c"><span class="pl-c">#</span> Pkg.Registry.add("https://github.com/JuliaPOMDP/Registry) # for julia 1.1+</span>

<span class="pl-c"><span class="pl-c">#</span> for julia 1.0 add the registry throught the POMDP package</span>
<span class="pl-c"><span class="pl-c">#</span> Pkg.add("POMDPs")</span>
<span class="pl-c"><span class="pl-c">#</span> using POMDPs</span>
<span class="pl-c"><span class="pl-c">#</span> POMDPs.add_registry() </span>
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>IncrementalPruning<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using IncrementalPruning
using POMDPModels
pomdp = TigerPOMDP() # initialize POMDP

solver = PruneSolver() # set the solver

policy = solve(solver, pomdp) # solve the POMDP  
"><pre><span class="pl-k">using</span> IncrementalPruning
<span class="pl-k">using</span> POMDPModels
pomdp <span class="pl-k">=</span> <span class="pl-c1">TigerPOMDP</span>() <span class="pl-c"><span class="pl-c">#</span> initialize POMDP</span>

solver <span class="pl-k">=</span> <span class="pl-c1">PruneSolver</span>() <span class="pl-c"><span class="pl-c">#</span> set the solver</span>

policy <span class="pl-k">=</span> <span class="pl-c1">solve</span>(solver, pomdp) <span class="pl-c"><span class="pl-c">#</span> solve the POMDP  </span></pre></div>
<p>The result of <code>solve</code> is a <code>Policy</code> that contains the alpha vectors of the solution.</p>
<p>IncrementalPruning.jl solves problems implemented using the <a href="https://github.com/JuliaPOMDP/POMDPs.jl">POMDPs.jl interface</a>. See the <a href="http://juliapomdp.github.io/POMDPs.jl/latest/" rel="nofollow">documentation for POMDPs.jl</a> for more information.</p>
<h2><a id="user-content-algorithm-details" class="anchor" aria-hidden="true" href="#algorithm-details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Algorithm Details</h2>
<p>This solver implements the incremental pruning algorithm as described in Zhang and Liu (1996) and Cassandra et al. (1997). This solution method is exact (ϵ-optimal) but is much slower than modern approximate solution techniques. As such, it is only computationally feasible for small problems.</p>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<p>Cassandra, A., Littman, M., &amp; Zhang, N. (1997). Incremental pruning: A simple, fast, exact method for partially observable Markov decision processes. Proceedings of the Thirteenth Annual Conference on Uncertainty in Artificial Intelligence (UAI-97), 54–61.</p>
<p>Zhang N. L., Liu W. (1996). Planning in stochastic domains: Problem characteristics and approximation. Technical Report HKUST-CS96-31, Hong Kong University of Science and Technology.</p>
</article></div>