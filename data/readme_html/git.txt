<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gitjl" class="anchor" aria-hidden="true" href="#gitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Git.jl</h1>
<p><a href="https://github.com/JuliaVersionControl/Git.jl/actions/workflows/ci.yml"><img src="https://github.com/JuliaVersionControl/Git.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaVersionControl/Git.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/747dffdffacd56d5f14de0009fd05aa7676779b49ccfb89fafdd48489225768c/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696156657273696f6e436f6e74726f6c2f4769742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d636458706948304f4a33" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaVersionControl/Git.jl/branch/master/graph/badge.svg?token=cdXpiH0OJ3" style="max-width:100%;"></a></p>
<p>Git.jl allows you to use command-line Git in your Julia packages. You do
not need to have Git installed on your computer, and neither do the users of
your packages!</p>
<p>Git.jl provides a Git binary via
<a href="https://github.com/JuliaBinaryWrappers/Git_jll.jl">Git_jll.jl</a>.
The latest version of Git.jl requires at least Julia 1.6.</p>
<p>Git.jl is intended to work on any platform that supports Julia,
including (but not limited to) Windows, macOS, Linux, and FreeBSD.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Git

julia&gt; run(`$(git()) clone https://github.com/JuliaRegistries/General`)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Git

julia<span class="pl-k">&gt;</span> <span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>$(git()) clone https://github.com/JuliaRegistries/General<span class="pl-pds">`</span></span>)</pre></div>
<p>This can equivalently be written with explicitly split arguments as</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; run(git([&quot;clone&quot;, &quot;https://github.com/JuliaRegistries/General&quot;]))
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">run</span>(<span class="pl-c1">git</span>([<span class="pl-s"><span class="pl-pds">"</span>clone<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaRegistries/General<span class="pl-pds">"</span></span>]))</pre></div>
<p>to bypass the parsing of the command string. Of course, one can also do</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; import Git

julia&gt; const git = Git.git()

julia&gt; run(`$git clone https://github.com/JuliaRegistries/General`)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Git

julia<span class="pl-k">&gt;</span> <span class="pl-k">const</span> git <span class="pl-k">=</span> Git<span class="pl-k">.</span><span class="pl-c1">git</span>()

julia<span class="pl-k">&gt;</span> <span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>$git clone https://github.com/JuliaRegistries/General<span class="pl-pds">`</span></span>)</pre></div>
<p>This is thread-safe since <code>Cmd</code> objects are not stateful. However, note that the
<code>git</code> command object won't notice any changes to environmental variables
(like <code>GIT_CURL_VERBOSE</code> for example) since it was created.</p>
<p>To read a single line of output from a git command you can use <code>readchomp</code>,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; cd(&quot;General&quot;)

julia&gt; readchomp(`$(git()) remote get-url origin`)
&quot;https://github.com/JuliaRegistries/General&quot;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">cd</span>(<span class="pl-s"><span class="pl-pds">"</span>General<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">readchomp</span>(<span class="pl-s"><span class="pl-pds">`</span>$(git()) remote get-url origin<span class="pl-pds">`</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaRegistries/General<span class="pl-pds">"</span></span></pre></div>
<p>and <code>readlines</code> for multiple lines.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; readlines(`$(git()) log`)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">readlines</span>(<span class="pl-s"><span class="pl-pds">`</span>$(git()) log<span class="pl-pds">`</span></span>)</pre></div>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h2>
<ul>
<li>This work was supported in part by National Institutes of Health grants U54GM115677, R01LM011963, and R25MH116440. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health.</li>
</ul>
</article></div>