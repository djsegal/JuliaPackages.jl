<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/0a1c1397d331f9a7183a3160fed1f39d178573c8d3e2a1d15762131455825f43/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f502f506f696e7450726f63657373496e666572656e63652e737667" alt="" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/P/PointProcessInference.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/mschauer/PointProcessInference.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d556669d4bba5d01bfa1965632803071db75d02654597b4f23330a0ebc46d7f3/68747470733a2f2f7472617669732d63692e6f72672f6d736368617565722f506f696e7450726f63657373496e666572656e63652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mschauer/PointProcessInference.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-pointprocessinferencejl" class="anchor" aria-hidden="true" href="#pointprocessinferencejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PointProcessInference.jl</h1>
<p>Fast and scalable non-parametric Bayesian inference for Poisson point processes</p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p>Poisson point processes are among the basic modelling tools in many areas. Their probabilistic properties are determined by their intensity function, the density <em>λ</em>.
This Julia package implements our non-parametric Bayesian approach to estimation of the intensity function <em>λ</em> for univariate Poisson point processes. For full details see our preprint</p>
<ul>
<li>S. Gugushvili, M. Schauer, F. van der Meulen, and P. Spreij. Fast and scalable non-parametric Bayesian inference for Poisson point processes. <strong><a href="https://arxiv.org/abs/1804.03616" rel="nofollow">arXiv:1804.03616 [stat.ME]</a></strong>, 2018.</li>
</ul>
<p>Intuitively, a univariate Poisson point processes <em>X</em>, also called a non-homogeneous Poisson process, can be thought of as random
scattering of points in the time interval <em>[0,T]</em>, where the way the scattering occurs is determined by the intensity function <em>λ</em>.
An example is the ordinary Poisson process, for which the intensity <em>λ</em>  is constant.</p>
<h2><a id="user-content-methodology" class="anchor" aria-hidden="true" href="#methodology"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Methodology</h2>
<p>We infer the intensity function <em>λ</em> in a non-parametric fashion. The function <em>λ</em> is a priori modelled as piecewise constant. This is even more natural, if the data have been already binned,
as is often the case in, e.g., astronomy. Thus, fix a positive integer <em>N</em> and a grid <em>b</em> of points <code>b[1] == 0</code>, <code>b[N] == T</code> on the interval <em>[0,T]</em>, for instance a uniform grid.
The intensity <em>λ</em> is then modelled as
<code>λ(x) = ψ[k]</code> for <code>b[k] &lt;= x &lt; b[k+1]</code>.</p>
<p>Now we postulate that a priori the coefficients <em>ψ</em> form a Gamma Markov chain (GMC). As explained in our preprint, this prior induces smoothing across the coefficients <em>ψ</em>, and leads to conjugate posterior computations
via the Gibbs sampler. The data-generating intensity is not assumed to be necessarily piecewise constant. Our methodology provides both a point estimate of the intensity function (posterior mean) and uncertainty quantification via marginal credible bands; see the examples below.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Change julia into the package manager mode by hitting <code>]</code>. Then run the command <code>add  PointProcessInference</code>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg&gt; add PointProcessInference
"><pre><code>pkg&gt; add PointProcessInference
</code></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>In the following example we load the UK coal mining disasters data and
performs its statistical analysis via the Poisson point process.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using PointProcessInference
using Random

Random.seed!(1234) # set RNG

observations, parameters, λinfo = PointProcessInference.loadexample(&quot;coal&quot;)

res = PointProcessInference.inference(observations; parameters...)
"><pre><code>using PointProcessInference
using Random

Random.seed!(1234) # set RNG

observations, parameters, λinfo = PointProcessInference.loadexample("coal")

res = PointProcessInference.inference(observations; parameters...)
</code></pre></div>
<p>The main procedure has signature</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content=" PointProcessInference.inference(observations; title = &quot;Poisson process&quot;, T = 1.0, n = 1, ...)
"><pre> PointProcessInference<span class="pl-k">.</span><span class="pl-c1">inference</span>(observations; title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Poisson process<span class="pl-pds">"</span></span>, T <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, n <span class="pl-k">=</span> <span class="pl-c1">1</span>, <span class="pl-k">...</span>)</pre></div>
<p>where <code>observations</code> is the sorted vector of Poisson event times, <code>T</code> is the endpoint of the time interval considered, and if
<code>observations</code> is an aggregate of <code>n</code> different independent observations (say aggregated for <code>n</code> days), this can be indicated by the parameter <code>n &gt; 1</code>. A full list of parameters is as follows:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function inference(observations;
    title = &quot;Poisson process&quot;, # optional caption for mcmc run
    summaryfile = nothing, # path to summary file or nothing
    T0 = 0.0, # start time
    T = maximum(observations), # end time
    n = 1, # number of aggregated samples in `observations`
    N = min(length(observations)÷4, 50), # number of bins
    samples = 1:1:30000, # run for `i in 1:last(samples)` iterations, save coefficients if `i ∈ samples`
    α1 = 0.1, β1 = 0.1, # parameters for Gamma Markov chain
    Π = Exponential(10), # prior on alpha
    τ = 0.7, # Set scale for random walk update on log(α)
    αind = 0.1, βind = 0.1, # parameters for the independent Gamma prior
    emp_bayes = false, # estimate βind using empirical Bayes
    verbose = true
)
"><pre><span class="pl-k">function</span> <span class="pl-en">inference</span>(observations;
    title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Poisson process<span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span> optional caption for mcmc run</span>
    summaryfile <span class="pl-k">=</span> <span class="pl-c1">nothing</span>, <span class="pl-c"><span class="pl-c">#</span> path to summary file or nothing</span>
    T0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, <span class="pl-c"><span class="pl-c">#</span> start time</span>
    T <span class="pl-k">=</span> <span class="pl-c1">maximum</span>(observations), <span class="pl-c"><span class="pl-c">#</span> end time</span>
    n <span class="pl-k">=</span> <span class="pl-c1">1</span>, <span class="pl-c"><span class="pl-c">#</span> number of aggregated samples in `observations`</span>
    N <span class="pl-k">=</span> <span class="pl-c1">min</span>(<span class="pl-c1">length</span>(observations)<span class="pl-k">÷</span><span class="pl-c1">4</span>, <span class="pl-c1">50</span>), <span class="pl-c"><span class="pl-c">#</span> number of bins</span>
    samples <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">30000</span>, <span class="pl-c"><span class="pl-c">#</span> run for `i in 1:last(samples)` iterations, save coefficients if `i ∈ samples`</span>
    α1 <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, β1 <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, <span class="pl-c"><span class="pl-c">#</span> parameters for Gamma Markov chain</span>
    Π <span class="pl-k">=</span> <span class="pl-c1">Exponential</span>(<span class="pl-c1">10</span>), <span class="pl-c"><span class="pl-c">#</span> prior on alpha</span>
    τ <span class="pl-k">=</span> <span class="pl-c1">0.7</span>, <span class="pl-c"><span class="pl-c">#</span> Set scale for random walk update on log(α)</span>
    αind <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, βind <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, <span class="pl-c"><span class="pl-c">#</span> parameters for the independent Gamma prior</span>
    emp_bayes <span class="pl-k">=</span> <span class="pl-c1">false</span>, <span class="pl-c"><span class="pl-c">#</span> estimate βind using empirical Bayes</span>
    verbose <span class="pl-k">=</span> <span class="pl-c1">true</span>
)</pre></div>
<p>Iterates of <em>ψ</em> are the rows of the matrix</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="res.ψ
"><pre>res<span class="pl-k">.</span>ψ</pre></div>
<h2><a id="user-content-high-quality-plots" class="anchor" aria-hidden="true" href="#high-quality-plots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>High-quality plots</h2>
<p>For high quality plotting, the package has a script <code>process-output-simple.jl</code> that visualizes
the results with the help of <code>R</code> and <code>ggplot2</code>.
After installing the additional dependencies</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg&gt; add RCall
pkg&gt; add DataFrames
"><pre><code>pkg&gt; add RCall
pkg&gt; add DataFrames
</code></pre></div>
<p>include the script (it is located in the <code>contrib</code> folder, the location can be retrieved by calling <code>PointProcessInference.plotscript()</code>)</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="include(PointProcessInference.plotscript())
plotposterior(res)
"><pre><code>include(PointProcessInference.plotscript())
plotposterior(res)
</code></pre></div>
<p>The script starts <code>ggplot2</code> with <code>RCall</code>, and <code>plotposterior</code> expects as its argument the result <code>res</code> returned from <code>inference</code>. For computing the posterior summary measures, the first half of the MCMC iterates is treated as burnin samples.</p>
<h2><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 1</h2>
<p>Here, we generate data from a nonhomogeneous Poissson process as follows:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="λ0(x) =  (20 + 8*cos(x))
λ0max = 28
obs = PointProcessInference.samplepoisson(λ0, λ0max, 0, 10)
"><pre><span class="pl-en">λ0</span>(x) <span class="pl-k">=</span>  (<span class="pl-c1">20</span> <span class="pl-k">+</span> <span class="pl-c1">8</span><span class="pl-k">*</span><span class="pl-c1">cos</span>(x))
λ0max <span class="pl-k">=</span> <span class="pl-c1">28</span>
obs <span class="pl-k">=</span> PointProcessInference<span class="pl-k">.</span><span class="pl-c1">samplepoisson</span>(λ0, λ0max, <span class="pl-c1">0</span>, <span class="pl-c1">10</span>)</pre></div>
<p>The nonparametric estimator is obtained by running</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="res = PointProcessInference.inference(obs)
"><pre>res <span class="pl-k">=</span> PointProcessInference<span class="pl-k">.</span><span class="pl-c1">inference</span>(obs)</pre></div>
<p>Finally, a default graph is obtained by</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="include(PointProcessInference.plotscript())
plotposterior(res)
"><pre><span class="pl-c1">include</span>(PointProcessInference<span class="pl-k">.</span><span class="pl-c1">plotscript</span>())
<span class="pl-c1">plotposterior</span>(res)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/basicexample1.png"><img src="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/basicexample1.png" alt="Intensity estimate for example 1." width="67%" style="max-width:100%;"></a></p>
<ul>
<li>Illustration: Intensity estimation for the generated data in example 1. The data are displayed via the rug plot in the upper margin of the plot, the posterior mean is given by a solid black line, while a 95% marginal credible band is shaded in light blue.</li>
</ul>
<p>A slightly refined plot, where the true intensity is added to the figure can be obtained by passing the data-generating intensity function as an extra argument.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="plotposterior(res;figtitle=&quot;Cosine intensity&quot;, λ=λ0)
"><pre><span class="pl-c1">plotposterior</span>(res;figtitle<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Cosine intensity<span class="pl-pds">"</span></span>, λ<span class="pl-k">=</span>λ0)</pre></div>
<p>This results in the plot</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/basicexample2.png"><img src="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/basicexample2.png" alt="Intensity estimate for example 1." width="67%" style="max-width:100%;"></a></p>
<h2><a id="user-content-example-2" class="anchor" aria-hidden="true" href="#example-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 2</h2>
<p>Here, we analyse the well-known coal mining disasters data set.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="observations, parameters, λinfo = PointProcessInference.loadexample(&quot;coal&quot;)
res = PointProcessInference.inference(observations)
plotposterior(res)
"><pre>observations, parameters, λinfo <span class="pl-k">=</span> PointProcessInference<span class="pl-k">.</span><span class="pl-c1">loadexample</span>(<span class="pl-s"><span class="pl-pds">"</span>coal<span class="pl-pds">"</span></span>)
res <span class="pl-k">=</span> PointProcessInference<span class="pl-k">.</span><span class="pl-c1">inference</span>(observations)
<span class="pl-c1">plotposterior</span>(res)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/coal1.png"><img src="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/coal1.png" alt="Intensity estimate for example 2." width="67%" style="max-width:100%;"></a></p>
<ul>
<li>Illustration: Intensity estimation for the UK coal mining disasters data (1851-1962). The data are displayed via the rug plot in the upper margin of the plot, the posterior mean is given by a solid black line, while a 95% marginal credible band is shaded in light blue.</li>
</ul>
<p>The horizontal tickmarks can be adjusted, as the offset date of the data, which is March 15, 1851 in this case.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="start = 1851+(28+31+15)/365
plotposterior(res; figtitle=&quot;Coal mining disasters&quot;, offset = start,hortics=1850:10:1960)
"><pre>start <span class="pl-k">=</span> <span class="pl-c1">1851</span><span class="pl-k">+</span>(<span class="pl-c1">28</span><span class="pl-k">+</span><span class="pl-c1">31</span><span class="pl-k">+</span><span class="pl-c1">15</span>)<span class="pl-k">/</span><span class="pl-c1">365</span>
<span class="pl-c1">plotposterior</span>(res; figtitle<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Coal mining disasters<span class="pl-pds">"</span></span>, offset <span class="pl-k">=</span> start,hortics<span class="pl-k">=</span><span class="pl-c1">1850</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">1960</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/coal2.png"><img src="https://raw.githubusercontent.com/mschauer/PointProcessInference.jl/master/assets/coal2.png" alt="Intensity estimate for example 2." width="67%" style="max-width:100%;"></a></p>
<h2><a id="user-content-citing-the-package" class="anchor" aria-hidden="true" href="#citing-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citing the package</h2>
<p>If you use the package in your work, we encourage you to cite it using the following BibTeX code:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@misc{pppjl,
	title = { {PointProcessInference 0.1.0 -- Code and Julia package accompanying the article ``Gugushvili, van der Meulen, Schauer, Spreij (2018): Fast and scalable non-parametric Bayesian inference for Poisson point processes&quot; ({http://arxiv.org/abs/1804.03616})} },
	author = {Gugushvili, Shota and van der Meulen, Frank and Schauer, Moritz and Spreij, Peter},
	year = {2019},
	doi = {10.5281/zenodo.2591395},
	url = {https://doi.org/10.5281/zenodo.2591395},
}
"><pre><code>@misc{pppjl,
	title = { {PointProcessInference 0.1.0 -- Code and Julia package accompanying the article ``Gugushvili, van der Meulen, Schauer, Spreij (2018): Fast and scalable non-parametric Bayesian inference for Poisson point processes" ({http://arxiv.org/abs/1804.03616})} },
	author = {Gugushvili, Shota and van der Meulen, Frank and Schauer, Moritz and Spreij, Peter},
	year = {2019},
	doi = {10.5281/zenodo.2591395},
	url = {https://doi.org/10.5281/zenodo.2591395},
}
</code></pre></div>
</article></div>