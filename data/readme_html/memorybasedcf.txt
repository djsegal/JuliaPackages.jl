<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-memorybasedcfjl" class="anchor" aria-hidden="true" href="#memorybasedcfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MemoryBasedCF.jl</h1>
<p>Memory-based collaborative filtering in Julia</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> SparseArrays
<span class="pl-k">using</span> MemoryBasedCF

<span class="pl-c"><span class="pl-c">#</span> rating matrix</span>
<span class="pl-c"><span class="pl-c">#</span> zero means the user has not rated the item yet.</span>
R <span class="pl-k">=</span> <span class="pl-c1">sparse</span>([
    <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">0.0</span>
    <span class="pl-c1">1.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">2.0</span>
    <span class="pl-c1">0.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">2.0</span>
    <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">2.0</span>
])

<span class="pl-c"><span class="pl-c">#</span> constuct memory</span>
<span class="pl-c"><span class="pl-c">#</span> calc item-item and user-user similarities inside</span>
memory <span class="pl-k">=</span> <span class="pl-c1">memorize</span>(R)

<span class="pl-c"><span class="pl-c">#</span> get predicted scores of items for users [1,2] using item-item similarities</span>
<span class="pl-c1">itembased_scores</span>(memory, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>])
<span class="pl-c"><span class="pl-c">#</span> 2×3 Array{Float64,2}:</span>
<span class="pl-c"><span class="pl-c">#</span> 2.0  1.0  1.5</span>
<span class="pl-c"><span class="pl-c">#</span> 1.0  1.5  2.0</span>

<span class="pl-c"><span class="pl-c">#</span> get top-2 item rankings for users [1,2] using item-item similarities</span>
ranking, scores <span class="pl-k">=</span> <span class="pl-c1">itembased_rankings</span>(memory, <span class="pl-c1">2</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>])

rankings
<span class="pl-c"><span class="pl-c">#</span> 2×2 Array{Int64,2}:</span>
<span class="pl-c"><span class="pl-c">#</span> 1  3</span>
<span class="pl-c"><span class="pl-c">#</span> 3  2</span>

scores
<span class="pl-c"><span class="pl-c">#</span> 2×2 Array{Float64,2}:</span>
<span class="pl-c"><span class="pl-c">#</span> 2.0  1.5</span>
<span class="pl-c"><span class="pl-c">#</span> 2.0  1.5</span></pre></div>
</article></div>