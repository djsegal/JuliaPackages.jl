<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-memorybasedcfjl" class="anchor" aria-hidden="true" href="#memorybasedcfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MemoryBasedCF.jl</h1>
<p>Memory-based collaborative filtering in Julia</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using SparseArrays
using MemoryBasedCF

# rating matrix
# zero means the user has not rated the item yet.
R = sparse([
    2.0  1.0  0.0
    1.0  0.0  2.0
    0.0  1.0  2.0
    0.0  0.0  2.0
])

# constuct memory
# calc item-item and user-user similarities inside
memory = memorize(R)

# get predicted scores of items for users [1,2] using item-item similarities
itembased_scores(memory, [1,2])
# 2×3 Array{Float64,2}:
# 2.0  1.0  1.5
# 1.0  1.5  2.0

# get top-2 item rankings for users [1,2] using item-item similarities
ranking, scores = itembased_rankings(memory, 2, [1,2])

rankings
# 2×2 Array{Int64,2}:
# 1  3
# 3  2

scores
# 2×2 Array{Float64,2}:
# 2.0  1.5
# 2.0  1.5
"><pre><span class="pl-k">using</span> SparseArrays
<span class="pl-k">using</span> MemoryBasedCF

<span class="pl-c"><span class="pl-c">#</span> rating matrix</span>
<span class="pl-c"><span class="pl-c">#</span> zero means the user has not rated the item yet.</span>
R <span class="pl-k">=</span> <span class="pl-c1">sparse</span>([
    <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">0.0</span>
    <span class="pl-c1">1.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">2.0</span>
    <span class="pl-c1">0.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">2.0</span>
    <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">2.0</span>
])

<span class="pl-c"><span class="pl-c">#</span> constuct memory</span>
<span class="pl-c"><span class="pl-c">#</span> calc item-item and user-user similarities inside</span>
memory <span class="pl-k">=</span> <span class="pl-c1">memorize</span>(R)

<span class="pl-c"><span class="pl-c">#</span> get predicted scores of items for users [1,2] using item-item similarities</span>
<span class="pl-c1">itembased_scores</span>(memory, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>])
<span class="pl-c"><span class="pl-c">#</span> 2×3 Array{Float64,2}:</span>
<span class="pl-c"><span class="pl-c">#</span> 2.0  1.0  1.5</span>
<span class="pl-c"><span class="pl-c">#</span> 1.0  1.5  2.0</span>

<span class="pl-c"><span class="pl-c">#</span> get top-2 item rankings for users [1,2] using item-item similarities</span>
ranking, scores <span class="pl-k">=</span> <span class="pl-c1">itembased_rankings</span>(memory, <span class="pl-c1">2</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>])

rankings
<span class="pl-c"><span class="pl-c">#</span> 2×2 Array{Int64,2}:</span>
<span class="pl-c"><span class="pl-c">#</span> 1  3</span>
<span class="pl-c"><span class="pl-c">#</span> 3  2</span>

scores
<span class="pl-c"><span class="pl-c">#</span> 2×2 Array{Float64,2}:</span>
<span class="pl-c"><span class="pl-c">#</span> 2.0  1.5</span>
<span class="pl-c"><span class="pl-c">#</span> 2.0  1.5</span></pre></div>
</article></div>