<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/davide-f/PointEstimateMethod.jl/actions/workflows/CI.yml/badge.svg"><img src="https://github.com/davide-f/PointEstimateMethod.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-pointestimatemethodjl" class="anchor" aria-hidden="true" href="#pointestimatemethodjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PointEstimateMethod.jl</h1>
<p dir="auto">This repository implements the well known Point Estimate Method (PEM) to represent a distribution
with a number of points that preserve the moments of the original distribution.</p>
<p dir="auto">The methodology implements the Miller and Rice methodology as described at:</p>
<ul dir="auto">
<li>H.P.Hong, An efficient point estimate method for probabilistic analysis, Reliability Engineering and System Safety, 1998, <a href="https://doi.org/10.1016/S0951-8320(97)00071-9" rel="nofollow">https://doi.org/10.1016/S0951-8320(97)00071-9</a></li>
<li>Miller, Allen C., and Thomas R. Rice. “Discrete Approximations of Probability Distributions.” Management Science 29, no. 3 (1983): 352–62. <a href="http://www.jstor.org/stable/2631060" rel="nofollow">http://www.jstor.org/stable/2631060</a>.</li>
</ul>
<p dir="auto">Example of usage is as follow:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
using Distributions
using PointEstimateMethod

distribution = Normal()  # distribution to consider
N_pem = 3  # number of point estimate models to use

pem_output = pem(distribution, N_pem)

pem_output.x  # locations of the points
pem_output.p  # probability of each point"><pre><span class="pl-k">using</span> Distributions
<span class="pl-k">using</span> PointEstimateMethod

distribution <span class="pl-k">=</span> <span class="pl-c1">Normal</span>()  <span class="pl-c"><span class="pl-c">#</span> distribution to consider</span>
N_pem <span class="pl-k">=</span> <span class="pl-c1">3</span>  <span class="pl-c"><span class="pl-c">#</span> number of point estimate models to use</span>

pem_output <span class="pl-k">=</span> <span class="pl-c1">pem</span>(distribution, N_pem)

pem_output<span class="pl-k">.</span>x  <span class="pl-c"><span class="pl-c">#</span> locations of the points</span>
pem_output<span class="pl-k">.</span>p  <span class="pl-c"><span class="pl-c">#</span> probability of each point</span></pre></div>
<p dir="auto">The pem function automatically calculates the moments of the distribution
with the method Distributions.moment(::UnivariateDistribution, ::Int), by default;
custom function can also be specified using the optional keyword central_moment_fun;
see the docstring of the pem function.</p>
<p dir="auto">When the function is not available, the proposed distribution is sampled
using the rand function and then the sampled vector is used to calculate the moments.
For more details, see the docstring of the pem function.</p>
<p dir="auto">Examples are provided in the notebooks folder.</p>
</article></div>