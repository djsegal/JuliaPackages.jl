<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-texasholdemjl" class="anchor" aria-hidden="true" href="#texasholdemjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TexasHoldem.jl</h1>
<table>
<thead>
<tr>
<th align="right"></th>
<th align="left"></th>
</tr>
</thead>
<tbody>
<tr>
<td align="right"><strong>Docs Build</strong></td>
<td align="left"><a href="https://github.com/charleskawczynski/TexasHoldem.jl/actions?query=workflow%3ADocumentation"><img src="https://github.com/charleskawczynski/TexasHoldem.jl/workflows/Documentation/badge.svg" alt="docs build" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Documentation</strong></td>
<td align="left"><a href="https://charleskawczynski.github.io/TexasHoldem.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>GHA CI</strong></td>
<td align="left"><a href="https://github.com/charleskawczynski/TexasHoldem.jl/actions?query=workflow%3Aci"><img src="https://github.com/charleskawczynski/TexasHoldem.jl/workflows/ci/badge.svg" alt="gha ci" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Code Coverage</strong></td>
<td align="left"><a href="https://codecov.io/gh/charleskawczynski/TexasHoldem.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5a877706522ab0679101011d948e327c2217202b554fa865a9db57c2bbeefc5f/68747470733a2f2f636f6465636f762e696f2f67682f636861726c65736b6177637a796e736b692f5465786173486f6c64656d2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/charleskawczynski/TexasHoldem.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Bors enabled</strong></td>
<td align="left"><a href="https://app.bors.tech/repositories/32732" rel="nofollow"><img src="https://camo.githubusercontent.com/0974fbc63eeb2ed86d518ed0afaafe112e9e907ffa1c459396b0be2434c4f83b/68747470733a2f2f626f72732e746563682f696d616765732f62616467655f736d616c6c2e737667" alt="bors" data-canonical-src="https://bors.tech/images/badge_small.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">A package for simulating no-limit Texas Holdem Poker. Install with</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="(@v1.x) pkg&gt; add TexasHoldem"><pre lang="julia-repl" class="notranslate"><code>(@v1.x) pkg&gt; add TexasHoldem
</code></pre></div>
<h1 dir="auto"><a id="user-content-playing" class="anchor" aria-hidden="true" href="#playing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Playing</h1>
<p dir="auto">A single game can be played with <code>play!</code> and tournament-style game with <code>tournament!</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TexasHoldem
play!(configure_game()) # play 1 game
tournament!(configure_game()) # play until 1 player remains"><pre><span class="pl-k">using</span> TexasHoldem
<span class="pl-c1">play!</span>(<span class="pl-c1">configure_game</span>()) <span class="pl-c"><span class="pl-c">#</span> play 1 game</span>
<span class="pl-c1">tournament!</span>(<span class="pl-c1">configure_game</span>()) <span class="pl-c"><span class="pl-c">#</span> play until 1 player remains</span></pre></div>
<h1 dir="auto"><a id="user-content-creating-your-own-bot" class="anchor" aria-hidden="true" href="#creating-your-own-bot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Creating your own bot</h1>
<p dir="auto">Four methods (variants of <code>player_option!</code>) need to be defined to create and play your own bot:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TexasHoldem
import TexasHoldem
TH = TexasHoldem

struct MyBot &lt;: AbstractAI end

function TH.player_option!(game::Game, player::Player{MyBot}, ::CheckRaiseFold)
    # options are:
    #    check!(game, player)
    #    raise!(game, player, amt::Float64)
    #    raise_all_in!(game, player)
    #    fold!(game, player)
    if rand() &lt; 0.5
        check!(game, player)
    else
        amt = Int(round(rand()*bank_roll(player), digits=0))
        amt = TH.bound_raise(game.table, player, amt) # to properly bound raise amount
        raise_to!(game, player, amt)
    end
end
function TH.player_option!(game::Game, player::Player{MyBot}, ::CallRaiseFold)
    # options are:
    #    call!(game, player)
    #    raise!(game, player, amt::Float64)
    #    raise_all_in!(game, player)
    #    fold!(game, player)
    if rand() &lt; 0.5
        if rand() &lt; 0.5 # Call
            call!(game, player)
        else # re-raise
            amt = Int(round(rand()*bank_roll(player), digits=0))
            amt = TH.bound_raise(game.table, player, amt) # to properly bound raise amount
            raise_to!(game, player, amt)
        end
    else
        fold!(game, player)
    end
end
function TH.player_option!(game::Game, player::Player{MyBot}, ::CallAllInFold)
    # options are:
    #    call!(game, player)
    #    raise_all_in!(game, player)
    #    fold!(game, player)
    if rand() &lt; 0.5
        if rand() &lt; 0.5 # Call
            call!(game, player)
        else # re-raise
            raise_all_in!(game, player)
        end
    else
        fold!(game, player)
    end
end
function TH.player_option!(game::Game, player::Player{MyBot}, ::CallFold)
    # options are:
    #    call!(game, player)
    #    fold!(game, player)
    if rand() &lt; 0.5
        call!(game, player)
    else
        fold!(game, player)
    end
end

# Heads-up against the MyBot!
tournament!(Game((Player(Human(), 1), Player(MyBot(), 2))))"><pre><span class="pl-k">using</span> TexasHoldem
<span class="pl-k">import</span> TexasHoldem
TH <span class="pl-k">=</span> TexasHoldem

<span class="pl-k">struct</span> MyBot <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractAI</span> <span class="pl-k">end</span>

<span class="pl-k">function</span> TH<span class="pl-k">.</span><span class="pl-en">player_option!</span>(game<span class="pl-k">::</span><span class="pl-c1">Game</span>, player<span class="pl-k">::</span><span class="pl-c1">Player{MyBot}</span>, <span class="pl-k">::</span><span class="pl-c1">CheckRaiseFold</span>)
    <span class="pl-c"><span class="pl-c">#</span> options are:</span>
    <span class="pl-c"><span class="pl-c">#</span>    check!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    raise!(game, player, amt::Float64)</span>
    <span class="pl-c"><span class="pl-c">#</span>    raise_all_in!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    fold!(game, player)</span>
    <span class="pl-k">if</span> <span class="pl-c1">rand</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.5</span>
        <span class="pl-c1">check!</span>(game, player)
    <span class="pl-k">else</span>
        amt <span class="pl-k">=</span> <span class="pl-c1">Int</span>(<span class="pl-c1">round</span>(<span class="pl-c1">rand</span>()<span class="pl-k">*</span><span class="pl-c1">bank_roll</span>(player), digits<span class="pl-k">=</span><span class="pl-c1">0</span>))
        amt <span class="pl-k">=</span> TH<span class="pl-k">.</span><span class="pl-c1">bound_raise</span>(game<span class="pl-k">.</span>table, player, amt) <span class="pl-c"><span class="pl-c">#</span> to properly bound raise amount</span>
        <span class="pl-c1">raise_to!</span>(game, player, amt)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-k">function</span> TH<span class="pl-k">.</span><span class="pl-en">player_option!</span>(game<span class="pl-k">::</span><span class="pl-c1">Game</span>, player<span class="pl-k">::</span><span class="pl-c1">Player{MyBot}</span>, <span class="pl-k">::</span><span class="pl-c1">CallRaiseFold</span>)
    <span class="pl-c"><span class="pl-c">#</span> options are:</span>
    <span class="pl-c"><span class="pl-c">#</span>    call!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    raise!(game, player, amt::Float64)</span>
    <span class="pl-c"><span class="pl-c">#</span>    raise_all_in!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    fold!(game, player)</span>
    <span class="pl-k">if</span> <span class="pl-c1">rand</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.5</span>
        <span class="pl-k">if</span> <span class="pl-c1">rand</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.5</span> <span class="pl-c"><span class="pl-c">#</span> Call</span>
            <span class="pl-c1">call!</span>(game, player)
        <span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">#</span> re-raise</span>
            amt <span class="pl-k">=</span> <span class="pl-c1">Int</span>(<span class="pl-c1">round</span>(<span class="pl-c1">rand</span>()<span class="pl-k">*</span><span class="pl-c1">bank_roll</span>(player), digits<span class="pl-k">=</span><span class="pl-c1">0</span>))
            amt <span class="pl-k">=</span> TH<span class="pl-k">.</span><span class="pl-c1">bound_raise</span>(game<span class="pl-k">.</span>table, player, amt) <span class="pl-c"><span class="pl-c">#</span> to properly bound raise amount</span>
            <span class="pl-c1">raise_to!</span>(game, player, amt)
        <span class="pl-k">end</span>
    <span class="pl-k">else</span>
        <span class="pl-c1">fold!</span>(game, player)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-k">function</span> TH<span class="pl-k">.</span><span class="pl-en">player_option!</span>(game<span class="pl-k">::</span><span class="pl-c1">Game</span>, player<span class="pl-k">::</span><span class="pl-c1">Player{MyBot}</span>, <span class="pl-k">::</span><span class="pl-c1">CallAllInFold</span>)
    <span class="pl-c"><span class="pl-c">#</span> options are:</span>
    <span class="pl-c"><span class="pl-c">#</span>    call!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    raise_all_in!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    fold!(game, player)</span>
    <span class="pl-k">if</span> <span class="pl-c1">rand</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.5</span>
        <span class="pl-k">if</span> <span class="pl-c1">rand</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.5</span> <span class="pl-c"><span class="pl-c">#</span> Call</span>
            <span class="pl-c1">call!</span>(game, player)
        <span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">#</span> re-raise</span>
            <span class="pl-c1">raise_all_in!</span>(game, player)
        <span class="pl-k">end</span>
    <span class="pl-k">else</span>
        <span class="pl-c1">fold!</span>(game, player)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-k">function</span> TH<span class="pl-k">.</span><span class="pl-en">player_option!</span>(game<span class="pl-k">::</span><span class="pl-c1">Game</span>, player<span class="pl-k">::</span><span class="pl-c1">Player{MyBot}</span>, <span class="pl-k">::</span><span class="pl-c1">CallFold</span>)
    <span class="pl-c"><span class="pl-c">#</span> options are:</span>
    <span class="pl-c"><span class="pl-c">#</span>    call!(game, player)</span>
    <span class="pl-c"><span class="pl-c">#</span>    fold!(game, player)</span>
    <span class="pl-k">if</span> <span class="pl-c1">rand</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.5</span>
        <span class="pl-c1">call!</span>(game, player)
    <span class="pl-k">else</span>
        <span class="pl-c1">fold!</span>(game, player)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Heads-up against the MyBot!</span>
<span class="pl-c1">tournament!</span>(<span class="pl-c1">Game</span>((<span class="pl-c1">Player</span>(<span class="pl-c1">Human</span>(), <span class="pl-c1">1</span>), <span class="pl-c1">Player</span>(<span class="pl-c1">MyBot</span>(), <span class="pl-c1">2</span>))))</pre></div>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<table>
<thead>
<tr>
<th align="right">Package</th>
<th align="center">Development status</th>
<th align="left">Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td align="right"><a href="https://github.com/charleskawczynski/PlayingCards.jl">PlayingCards.jl</a></td>
<td align="center">Perhaps stable</td>
<td align="left">Representing cards</td>
</tr>
<tr>
<td align="right"><a href="https://github.com/charleskawczynski/PokerHandEvaluator.jl">PokerHandEvaluator.jl</a></td>
<td align="center">Perhaps stable</td>
<td align="left">Comparing any two 5-7 card hands</td>
</tr>
<tr>
<td align="right"><a href="https://github.com/charleskawczynski/TexasHoldem.jl">TexasHoldem.jl</a></td>
<td align="center">Likely changes needed</td>
<td align="left">Simulating multi-player games of TexasHoldem</td>
</tr>
<tr>
<td align="right"><a href="https://github.com/charleskawczynski/PokerBots.jl">PokerBots.jl</a></td>
<td align="center"><em>very</em> early development</td>
<td align="left">Battling bots with prescribed (or learned) strategies</td>
</tr>
<tr>
<td align="right"><a href="https://github.com/charleskawczynski/PokerGUI.jl">PokerGUI.jl</a></td>
<td align="center"><em>very</em> early development</td>
<td align="left">Visualizing TexasHoldem games via a GUI</td>
</tr>
</tbody>
</table>
</article></div>