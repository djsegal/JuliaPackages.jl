<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-delaydiffeqjl" class="anchor" aria-hidden="true" href="#delaydiffeqjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DelayDiffEq.jl</h1>
<p><a href="https://travis-ci.org/SciML/DelayDiffEq.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0690afdba45f3b2f903bff3cb6823f638df86aba/68747470733a2f2f7472617669732d63692e6f72672f5363694d4c2f44656c61794469666645712e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/SciML/DelayDiffEq.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://github.com/SciML/DelayDiffEq.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/DelayDiffEq.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/SciML/DelayDiffEq.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2fed44d07c082f337d3e3a9663f0f039668c31db/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f5363694d4c2f44656c61794469666645712e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/SciML/DelayDiffEq.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/SciML/DelayDiffEq.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cf29d05b113d9990624a513ae1513e1236fc2c8b/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f44656c61794469666645712e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/DelayDiffEq.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>DelayDiffEq.jl is a component package in the DifferentialEquations ecosystem. It holds the
delay differential equation solvers and utilities. It is built on top of OrdinaryDiffEq
to extend those solvers for delay differential equations. While completely independent
and usable on its own, users interested in using this
functionality should check out <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>.</p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API</h2>
<p>DelayDiffEq.jl is part of the JuliaDiffEq common interface, but can be used independently of DifferentialEquations.jl. The only requirement is that the user passes a DelayDiffEq.jl algorithm to <code>solve</code>. For example, we can solve the <a href="https://docs.sciml.ai/stable/tutorials/dde_example/" rel="nofollow">DDE tutorial from the documentation</a> using the <code>MethodOfSteps(Tsit5())</code> algorithm:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DelayDiffEq
<span class="pl-k">const</span> p0 <span class="pl-k">=</span> <span class="pl-c1">0.2</span>; <span class="pl-k">const</span> q0 <span class="pl-k">=</span> <span class="pl-c1">0.3</span>; <span class="pl-k">const</span> v0 <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-k">const</span> d0 <span class="pl-k">=</span> <span class="pl-c1">5</span>
<span class="pl-k">const</span> p1 <span class="pl-k">=</span> <span class="pl-c1">0.2</span>; <span class="pl-k">const</span> q1 <span class="pl-k">=</span> <span class="pl-c1">0.3</span>; <span class="pl-k">const</span> v1 <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-k">const</span> d1 <span class="pl-k">=</span> <span class="pl-c1">1</span>
<span class="pl-k">const</span> d2 <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-k">const</span> beta0 <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-k">const</span> beta1 <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-k">const</span> tau <span class="pl-k">=</span> <span class="pl-c1">1</span>
<span class="pl-k">function</span> <span class="pl-en">bc_model</span>(du,u,h,p,t)
  du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> (v0<span class="pl-k">/</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>beta0<span class="pl-k">*</span>(<span class="pl-c1">h</span>(p, t<span class="pl-k">-</span>tau)[<span class="pl-c1">3</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>))) <span class="pl-k">*</span> (p0 <span class="pl-k">-</span> q0)<span class="pl-k">*</span>u[<span class="pl-c1">1</span>] <span class="pl-k">-</span> d0<span class="pl-k">*</span>u[<span class="pl-c1">1</span>]
  du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> (v0<span class="pl-k">/</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>beta0<span class="pl-k">*</span>(<span class="pl-c1">h</span>(p, t<span class="pl-k">-</span>tau)[<span class="pl-c1">3</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>))) <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> p0 <span class="pl-k">+</span> q0)<span class="pl-k">*</span>u[<span class="pl-c1">1</span>] <span class="pl-k">+</span>
          (v1<span class="pl-k">/</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>beta1<span class="pl-k">*</span>(<span class="pl-c1">h</span>(p, t<span class="pl-k">-</span>tau)[<span class="pl-c1">3</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>))) <span class="pl-k">*</span> (p1 <span class="pl-k">-</span> q1)<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-k">-</span> d1<span class="pl-k">*</span>u[<span class="pl-c1">2</span>]
  du[<span class="pl-c1">3</span>] <span class="pl-k">=</span> (v1<span class="pl-k">/</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>beta1<span class="pl-k">*</span>(<span class="pl-c1">h</span>(p, t<span class="pl-k">-</span>tau)[<span class="pl-c1">3</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>))) <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> p1 <span class="pl-k">+</span> q1)<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-k">-</span> d2<span class="pl-k">*</span>u[<span class="pl-c1">3</span>]
<span class="pl-k">end</span>
lags <span class="pl-k">=</span> [tau]
<span class="pl-en">h</span>(p, t) <span class="pl-k">=</span> <span class="pl-c1">ones</span>(<span class="pl-c1">3</span>)
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">10.0</span>)
u0 <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>,<span class="pl-c1">1.0</span>,<span class="pl-c1">1.0</span>]
prob <span class="pl-k">=</span> <span class="pl-c1">DDEProblem</span>(bc_model,u0,h,tspan,constant_lags <span class="pl-k">=</span> lags)
alg <span class="pl-k">=</span> <span class="pl-c1">MethodOfSteps</span>(<span class="pl-c1">Tsit5</span>())
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,alg)
<span class="pl-k">using</span> Plots; <span class="pl-c1">plot</span>(sol)</pre></div>
<p>Both constant and state-dependent lags are supported. Interfacing with OrdinaryDiffEq.jl for implicit methods for stiff equations is also supported.</p>
<h2><a id="user-content-available-solvers" class="anchor" aria-hidden="true" href="#available-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Available Solvers</h2>
<p>For the list of available solvers, please refer to the <a href="https://docs.sciml.ai/stable/solvers/dde_solve/" rel="nofollow">DifferentialEquations.jl DDE Solvers page</a>. For options for the <code>solve</code> command, see the <a href="https://docs.sciml.ai/stable/basics/common_solver_opts/" rel="nofollow">common solver options page</a>.</p>
</article></div>