<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-neuralynxncs" class="anchor" aria-hidden="true" href="#neuralynxncs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>NeuralynxNCS</h1>
<p><a href="https://travis-ci.org/simonster/NeuralynxNCS.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0755a3847e34ba39b5b3c77586ba5513850565cb/68747470733a2f2f7472617669732d63692e6f72672f73696d6f6e737465722f4e657572616c796e784e43532e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/simonster/NeuralynxNCS.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/simonster/NeuralynxNCS.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5c7b809fe69d5b725d264be828b66d53031948ed/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f73696d6f6e737465722f4e657572616c796e784e43532e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/simonster/NeuralynxNCS.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a Julia module for reading Neuralynx NCS files. You can read files as:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">readncs</span>(<span class="pl-s"><span class="pl-pds">"</span>CSC1.Ncs<span class="pl-pds">"</span></span>)</pre></div>
<p>The output is an object:</p>
<div class="highlight highlight-source-julia"><pre>immutable NCSContinuousChannel
    header<span class="pl-k">::</span><span class="pl-c1">ByteString</span>
    samples<span class="pl-k">::</span><span class="pl-c1">Vector{Int16}</span>
    times<span class="pl-k">::</span><span class="pl-c1">PiecewiseIncreasingRange{Float64,StepRange{Int64,Int64},Int64}</span>
<span class="pl-k">end</span></pre></div>
<p>At present it supports only a single channel per file, because this is
how all the NCS files I have are structured.</p>
<p>See <a href="https://github.com/simonster/PiecewiseIncreasingRanges.jl">PiecewiseIncreasingRanges.jl</a>
for some more information on how to use <code>times</code>.</p>
</article></div>