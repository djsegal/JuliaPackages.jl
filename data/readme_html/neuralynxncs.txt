<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-neuralynxncs" class="anchor" aria-hidden="true" href="#neuralynxncs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NeuralynxNCS</h1>
<p dir="auto"><a href="https://travis-ci.org/simonster/NeuralynxNCS.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c13656f84fdd2b1f161bd995d226c28d748bfae4d53cd0a5f1a093d640d0bd88/68747470733a2f2f7472617669732d63692e6f72672f73696d6f6e737465722f4e657572616c796e784e43532e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/simonster/NeuralynxNCS.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/r/simonster/NeuralynxNCS.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ef963a91da9644c50b821d9429b0cd0911c8aa4d1c3d960c750dee1bb82ce557/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f73696d6f6e737465722f4e657572616c796e784e43532e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/simonster/NeuralynxNCS.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This is a Julia module for reading Neuralynx NCS files. You can read files as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="readncs(&quot;CSC1.Ncs&quot;)"><pre><span class="pl-c1">readncs</span>(<span class="pl-s"><span class="pl-pds">"</span>CSC1.Ncs<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The output is an object:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="immutable NCSContinuousChannel
    header::ByteString
    samples::Vector{Int16}
    times::PiecewiseIncreasingRange{Float64,StepRange{Int64,Int64},Int64}
end"><pre>immutable NCSContinuousChannel
    header<span class="pl-k">::</span><span class="pl-c1">ByteString</span>
    samples<span class="pl-k">::</span><span class="pl-c1">Vector{Int16}</span>
    times<span class="pl-k">::</span><span class="pl-c1">PiecewiseIncreasingRange{Float64,StepRange{Int64,Int64},Int64}</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">At present it supports only a single channel per file, because this is
how all the NCS files I have are structured.</p>
<p dir="auto">See <a href="https://github.com/simonster/PiecewiseIncreasingRanges.jl">PiecewiseIncreasingRanges.jl</a>
for some more information on how to use <code>times</code>.</p>
</article></div>