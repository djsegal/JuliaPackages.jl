<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://pawbz.github.io/GeoPhyInv.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-toolbox-for-geophysical-modeling-and-inverse-problems" class="anchor" aria-hidden="true" href="#toolbox-for-geophysical-modeling-and-inverse-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Toolbox for Geophysical Modeling and Inverse Problems</h1>
<p dir="auto">GeoPhyInv provides architecture-agnostic elastic and acoustic wave equation solvers using either <a href="https://github.com/JuliaGPU/CUDA.jl">CUDA.jl</a> for <a href="https://docs.julialang.org/en/v1/base/multi-threading/" rel="nofollow">Base.Threads</a> for high-performance computations on GPUs and CPUs, respectively.  For GPU computations, a performance similar to CUDA C is achieved, thanks to
<a href="https://github.com/omlins/ParallelStencil.jl">ParallelStencil.jl</a>.
The finite-difference simulations are performed in both 2-D and 3-D
using a staggered-grid velocity-stress formulation.
Finally, <a href="https://docs.julialang.org/en/v1/manual/distributed-computing/" rel="nofollow">distributed computing</a> shipped with Julia ensures that the modelling of the super-sources can be parallelized.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">For complete installation, enter these package manager commands in the REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(PackageSpec(name=&quot;GeoPhyInv&quot;,url=&quot;https://github.com/pawbz/GeoPhyInv.jl.git&quot;))"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>GeoPhyInv<span class="pl-pds">"</span></span>,url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/pawbz/GeoPhyInv.jl.git<span class="pl-pds">"</span></span>))</pre></div>
<h2 dir="auto"><a id="user-content-credits-and-references" class="anchor" aria-hidden="true" href="#credits-and-references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Credits and References</h2>
<ul dir="auto">
<li>Some implementation ideas are borrowed from Jan Thorbecke's <a href="https://janth.home.xs4all.nl/Software/Software.html" rel="nofollow">fdelmodc</a> software.</li>
<li><a href="https://library.seg.org/doi/abs/10.1190/1.1442147" rel="nofollow">[paper]</a> P-SV wave propagation in heterogeneous media: Velocity‐stress finite‐difference method.</li>
<li>Work of <a href="https://www.researchgate.net/publication/47503800_An_unsplit_convolutional_Perfectly_Matched_Layer_improved_at_grazing_incidence_for_the_seismic_wave_equation" rel="nofollow">Komatitsch and Martin (2007)</a> on convolutional perfectly matched layers for seismic wave equation.</li>
<li>Charles Clerget <a href="https://github.com/chclerget">@chclerget</a> tested some methods of this package.</li>
<li>The Poisson solver (<code>GeoPhyInv.Poisson</code>) was developed by Niels Grobbe, after adapting scripts from <a href="https://erlweb.mit.edu/users/aimemitedu" rel="nofollow">Aime Fournier</a>.</li>
<li>Thanks to <a href="https://erlweb.mit.edu" rel="nofollow">Earth Resources Laboratory</a>, MIT. A few developments of this project were supported by Aime Fournier via research funds from Equinor.</li>
</ul>
</article></div>