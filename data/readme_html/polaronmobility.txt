<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-polaronmobilityjl" class="anchor" aria-hidden="true" href="#polaronmobilityjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PolaronMobility.jl</h1>
<p dir="auto"><a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width: 100%;"></a>
<a href="https://julialang.org" rel="nofollow"><img src="https://camo.githubusercontent.com/6cc4ca088d70f2e4ce1c1dc5f87a24560e78fcd4537aa1aa78621f74ea1de74f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d4a756c69612d6666363962662e737667" alt="made-with-julia" data-canonical-src="https://img.shields.io/badge/Made%20with-Julia-ff69bf.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.21105/joss.00566" rel="nofollow"><img src="https://camo.githubusercontent.com/e13a4f073fc28d39cf043dbb31bb7aaa1b8d373bd22b3d2f8d587b4e770c350c/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303536362f7374617475732e737667" alt="DOI" data-canonical-src="http://joss.theoj.org/papers/10.21105/joss.00566/status.svg" style="max-width: 100%;"></a>
<a href="https://jarvist.github.io/PolaronMobility.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs-latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/jarvist/PolaronMobility.jl/actions"><img src="https://github.com/jarvist/PolaronMobility.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/jarvist/PolaronMobility.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c94061bbc86ce51dd5582d37404fc3dec014a208430c82b4ac7684758b5d860c/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6172766973742f506f6c61726f6e4d6f62696c6974792e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jarvist/PolaronMobility.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><code>PolaronMobility.jl</code> is a Julia package which calculates the
temperature-dependent polaron mobility for a material.</p>
<p dir="auto">This is based on the Feynman variational solution to the Polaron problem.
The electron-phonon coupling is treated as an effective α (alpha) Frohlich
Hamiltonian parameter.
The band structure is treated with an effective mass theory.
The variational problem is solved numerically for finite-temperature free
energies.
(The original 1960s work, and thus textbook solutions, often use asymptotic approximations to the integrals, with a more simple athermal action.)<br>
The mobility is calculated in three ways:</p>
<ol dir="auto">
<li>numerically by integrating the polaron self-energy along the imaginary axis (<code>Hellwarth1999</code>)</li>
<li>using Kadanoff's Boltzmann equation approximation (<code>Kadanoff1963</code>)</li>
<li>using the FHIP low-temperature asymptotic solution (<code>FHIP</code>)</li>
</ol>
<p dir="auto">These three methods are in approximately descending order of accuracy.</p>
<p dir="auto">We provide parameters for various metal-halide Perovskites, and other
interesting systems.</p>
<p dir="auto">The motivation for developing these codes was to enable polaron mobility
calculations on arbitrary materials.
They also provide the only extant implementation of Feynman's variational
method.<br>
They offer a convenient basis for writing codes that build on these variational
solutions.</p>
<p dir="auto">More <a href="https://jarvist.github.io/PolaronMobility.jl/" rel="nofollow">extensive documentation</a>,
is perhaps easiest to read and understand alongside the first paper:
<a href="https://arxiv.org/abs/1704.05404" rel="nofollow">ArXiv:1704.05404</a>
/ <a href="https://doi.org/10.1103/PhysRevB.96.195202" rel="nofollow">Frost2017PRB</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install, type the following at the Julia (&gt;1.0) REPL:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;PolaronMobility&quot;)"><pre class="notranslate"><code>julia&gt; import Pkg; Pkg.add("PolaronMobility")
</code></pre></div>
<h2 dir="auto"><a id="user-content-cloud-notebook" class="anchor" aria-hidden="true" href="#cloud-notebook"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cloud notebook</h2>
<p dir="auto">There is an <a href="JuliaBox-Example.ipynb">example notebook</a> which can be run interactively on the (free) MyBinder notebook server. This is the fastest way to calculate a few polaron parameters, if you do not have Julia installed locally.</p>
<ol dir="auto">
<li>Click on <a href="https://mybinder.org/v2/gh/jarvist/PolaronMobility.jl/master?filepath=JuliaBox-Example.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width: 100%;"></a></li>
<li>That's it!</li>
</ol>
<p dir="auto">(Currently plotting does not work, as the Docker image is not built with the (heavy weight) Plots dependency, and I'm not sure how I can do this just for MyBinder, without requiring it generally for PolaronMobility.jl. If this is problematic for you, please open an issue and I'll try to fix it!)</p>
<h2 dir="auto"><a id="user-content-using" class="anchor" aria-hidden="true" href="#using"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using</h2>
<p dir="auto">As an example:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using PolaronMobility
MAPIe=polaronmobility(300, 4.5, 24.1, 2.25, 0.12)"><pre class="notranslate"><code>using PolaronMobility
MAPIe=polaronmobility(300, 4.5, 24.1, 2.25, 0.12)
</code></pre></div>
<p dir="auto">Will calculate the polaron mobility for methyl-ammonium lead halide perovskite
(f=2.25 THz; ϵoptical=4.5; ϵstatic=24.1; effective-mass=0.12 electron-masses) at 300 K.</p>
<p dir="auto">An abbreviated output should look like:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="T: 300.000000 β: 2.41e+20 βred: 0.36 ħω  = 9.31 meV     Converged? : true
 VariationalParams v= 19.86  w= 16.96   ||   M=0.371407 k=106.835753    
 POLARON SIZE (rf), following Schultz1959. (s.d. of Gaussian polaron ψ )
     Schultz1959(2.4): rf= 0.528075 (int units) = 2.68001e-09 m [SI]
 Polaron Free Energy: A= -6.448815 B= 7.355626 C= 2.911977 F= -3.818788  = -35.534786 meV
Polaron Mobility theories:
    μ(FHIP)= 0.082049 m^2/Vs    = 820.49 cm^2/Vs
     Eqm. Phonon. pop. Nbar: 2.308150 
    μ(Kadanoff1963 [Eqn. 25]) = 0.019689 m^2/Vs      = 196.89 cm^2/Vs
    Tau=1/Gamma0 = 1.15751e-13 = 0.115751 ps
    μ(Hellwarth1999)= 0.013642 m^2/Vs   = 136.42 cm^2/Vs"><pre class="notranslate"><code>T: 300.000000 β: 2.41e+20 βred: 0.36 ħω  = 9.31 meV     Converged? : true
 VariationalParams v= 19.86  w= 16.96   ||   M=0.371407 k=106.835753    
 POLARON SIZE (rf), following Schultz1959. (s.d. of Gaussian polaron ψ )
     Schultz1959(2.4): rf= 0.528075 (int units) = 2.68001e-09 m [SI]
 Polaron Free Energy: A= -6.448815 B= 7.355626 C= 2.911977 F= -3.818788  = -35.534786 meV
Polaron Mobility theories:
    μ(FHIP)= 0.082049 m^2/Vs    = 820.49 cm^2/Vs
     Eqm. Phonon. pop. Nbar: 2.308150 
    μ(Kadanoff1963 [Eqn. 25]) = 0.019689 m^2/Vs      = 196.89 cm^2/Vs
    Tau=1/Gamma0 = 1.15751e-13 = 0.115751 ps
    μ(Hellwarth1999)= 0.013642 m^2/Vs   = 136.42 cm^2/Vs
</code></pre></div>
<p dir="auto">Further details in the
<a href="https://jarvist.github.io/PolaronMobility.jl/" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-research-outputs" class="anchor" aria-hidden="true" href="#research-outputs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Research outputs</h2>
<p dir="auto">The central output of this model are temperature-dependent polaron mobilities:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="mobility-calculated-experimental.png"><img src="mobility-calculated-experimental.png" alt="MAPI Polaron mobility, plotted vs experimental data" style="max-width: 100%;"></a></p>
<p dir="auto">From the variational solution, you have characterised the polarons in your
system.
This gives access to the effective mass renormalisations (phonon drag), polaron
binding energies, effective electron-phonon coupling parameters, etc.</p>
<h2 dir="auto"><a id="user-content-community-guidelines" class="anchor" aria-hidden="true" href="#community-guidelines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Community guidelines</h2>
<p dir="auto">Contributions to the code (extending that which is calculated), or additional
physical systems / examples, are very welcome.</p>
<p dir="auto">If you have questions about the software, scientific questions, or find errors,
please create a <a href="https://github.com/jarvist/PolaronMobility.jl/issues">GitHub issue</a>.</p>
<h2 dir="auto"><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reference</h2>
<p dir="auto">If you find this package (or snippets, such as the entered and tested
free-energy expressions) useful for your work, please cite the paper
<a href="https://doi.org/10.1103/PhysRevB.96.195202" rel="nofollow">Frost2017PRB</a>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{Frost2017,
  doi = {10.1103/physrevb.96.195202},
  url = {https://doi.org/10.1103/physrevb.96.195202},
  year  = {2017},
  month = {nov},
  publisher = {American Physical Society ({APS})},
  volume = {96},
  number = {19},
  author = {Jarvist Moore Frost},
  title = {Calculating polaron mobility in halide perovskites},
  journal = {Physical Review B}
}"><pre class="notranslate"><code>@article{Frost2017,
  doi = {10.1103/physrevb.96.195202},
  url = {https://doi.org/10.1103/physrevb.96.195202},
  year  = {2017},
  month = {nov},
  publisher = {American Physical Society ({APS})},
  volume = {96},
  number = {19},
  author = {Jarvist Moore Frost},
  title = {Calculating polaron mobility in halide perovskites},
  journal = {Physical Review B}
}
</code></pre></div>
<p dir="auto">These codes use the <code>Optim.jl</code> optimisation library to do the essential calculation of the Feynman variational theory.
<a href="https://doi.org/10.21105/joss.00615" rel="nofollow"><img src="https://camo.githubusercontent.com/9d90ceda7c3adde4a0987bb3a7060fad1fd3e5f2fd7dad35779ab5660e96ad66/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303631352f7374617475732e737667" alt="DOI" data-canonical-src="http://joss.theoj.org/papers/10.21105/joss.00615/status.svg" style="max-width: 100%;"></a></p>
</article></div>