<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-polaronmobilityjl" class="anchor" aria-hidden="true" href="#polaronmobilityjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PolaronMobility.jl</h1>
<p><a href="https://travis-ci.org/jarvist/PolaronMobility.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e353f7c622c11913c8c136b442987b7cbb10a7ed/68747470733a2f2f7472617669732d63692e6f72672f6a6172766973742f506f6c61726f6e4d6f62696c6974792e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jarvist/PolaronMobility.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/jarvist/PolaronMobility.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/35150cdd717af120f139b25ae0bfccc6bb7af0cc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6172766973742f506f6c61726f6e4d6f62696c6974792e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/jarvist/PolaronMobility.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/jarvist/PolaronMobility.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/daca3b4c29e638f7803517a67f820b4c22291765/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6172766973742f506f6c61726f6e4d6f62696c6974792e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jarvist/PolaronMobility.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://jarvist.github.io/PolaronMobility.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs-latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p><a href="https://doi.org/10.21105/joss.00566" rel="nofollow"><img src="https://camo.githubusercontent.com/e40bfcc170f6e14d3e5e478d3b63db7a9fb8712b/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303536362f7374617475732e737667" alt="DOI" data-canonical-src="http://joss.theoj.org/papers/10.21105/joss.00566/status.svg" style="max-width:100%;"></a></p>
<p><code>PolaronMobility.jl</code> is a Julia package which calculates the
temperature-dependent polaron mobility for a material.</p>
<p>This is based on the Feynman variational solution to the Polaron problem.
The electron-phonon coupling is treated as an effective α (alpha) Frohlich
Hamiltonian parameter.
The band structure is treated with an effective mass theory.
The variational problem is solved numerically for finite-temperature free
energies.
(The original 1960s work, and thus textbook solutions, often use asymptotic approximations to the integrals, with a more simple athermal action.)<br>
The mobility is calculated in three ways:</p>
<ol>
<li>numerically by integrating the polaron self-energy along the imaginary axis (<code>Hellwarth1999</code>)</li>
<li>using the Kadanoff Boltzmann equation approximation (<code>Kadanoff1963</code>)</li>
<li>using the FHIP low-temperature asymptotic solution (<code>FHIP</code>)</li>
</ol>
<p>These three methods are in approximately descending order of accuracy.</p>
<p>We provide parameters for various metal-halide Perovskites, and other
interesting systems.</p>
<p>The motivation for developing these codes was to enable polaron mobility
calculations on arbitrary materials.
They also provide the only extant implementation of Feynman's variational
method.<br>
They offer a convenient basis for writing codes that build on these variational
solutions.</p>
<p>More <a href="https://jarvist.github.io/PolaronMobility.jl/" rel="nofollow">extensive documentation</a>,
is perhaps easiest to read and understand alongside the first paper:
<a href="https://arxiv.org/abs/1704.05404" rel="nofollow">ArXiv:1704.05404</a>
/ <a href="https://doi.org/10.1103/PhysRevB.96.195202" rel="nofollow">Frost2017PRB</a>.</p>
<h2><a id="user-content-local-installation" class="anchor" aria-hidden="true" href="#local-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Local installation</h2>
<p>These codes require Julia &gt;0.6 . They are structured as a full Julia package,
but and are registered with the central METADATA package repository.</p>
<p>To install, type the following at the Julia REPL:</p>
<pre><code>julia&gt; import Pkg; Pkg.add("PolaronMobility")
</code></pre>
<h3><a id="user-content-common-errors" class="anchor" aria-hidden="true" href="#common-errors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Common errors</h3>
<p>Often errors discoverd when trying to run these codes are related to changes in the interface to <a href="https://github.com/JuliaNLSolvers/Optim.jl"><code>Optim.jl</code></a></p>
<p>This general appears as a MethodError with the internal Optim type, perhaps similar to:
<code>MethodError: Cannot convert an object of type Optim.BFGS{...</code></p>
<p>You may want to check the Optim package version and status:
<code>Pkg.status("Optim")</code></p>
<p>The present versions of the code require <code>Optim 0.15-</code>.</p>
<h2><a id="user-content-polarons-in-the-cloud" class="anchor" aria-hidden="true" href="#polarons-in-the-cloud"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Polarons in the cloud</h2>
<p>There is an <a href="JuliaBox-Example.ipynb">example notebook</a> which can be run interactively on the (free) MyBinder notebook server. This is the fastest way to calculate a few polaron parameters, if you do not have Julia.</p>
<ol>
<li>Click on <a href="https://mybinder.org/v2/gh/jarvist/PolaronMobility.jl/master?filepath=JuliaBox-Example.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a></li>
<li>That's it!</li>
</ol>
<p>(Currently plotting does not work, as the Docker image is not built with the (heavy weight) Plots dependency, and I'm not sure how I can do this just for MyBinder, without requiring it generally for PolaronMobility.jl. If this is problematic for you, please open an issue and I'll try to fix it!)</p>
<h2><a id="user-content-using" class="anchor" aria-hidden="true" href="#using"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using</h2>
<p>As an example:</p>
<pre><code>using PolaronMobility
MAPIe=polaronmobility(300, 4.5, 24.1, 2.25E12, 0.12)
</code></pre>
<p>Will calculate the polaron mobility for methyl-ammonium lead halide perovskite
(f=2.25 THz; ϵoptical=4.5; ϵstatic=24.1; effective-mass=0.12 electron-masses) at 300 K.</p>
<p>An abbreviated output should look like:</p>
<pre><code>T: 300.000000 β: 2.41e+20 βred: 0.36 ħω  = 9.31 meV     Converged? : true
 VariationalParams v= 19.86  w= 16.96   ||   M=0.371407 k=106.835753    
 POLARON SIZE (rf), following Schultz1959. (s.d. of Gaussian polaron ψ )
     Schultz1959(2.4): rf= 0.528075 (int units) = 2.68001e-09 m [SI]
 Polaron Free Energy: A= -6.448815 B= 7.355626 C= 2.911977 F= -3.818788  = -35.534786 meV
Polaron Mobility theories:
    μ(FHIP)= 0.082049 m^2/Vs    = 820.49 cm^2/Vs
     Eqm. Phonon. pop. Nbar: 2.308150 
    μ(Kadanoff1963 [Eqn. 25]) = 0.019689 m^2/Vs      = 196.89 cm^2/Vs
    Tau=1/Gamma0 = 1.15751e-13 = 0.115751 ps
    μ(Hellwarth1999)= 0.013642 m^2/Vs   = 136.42 cm^2/Vs
</code></pre>
<p>Further details in the
<a href="https://jarvist.github.io/PolaronMobility.jl/" rel="nofollow">documentation</a>.</p>
<h2><a id="user-content-research-outputs" class="anchor" aria-hidden="true" href="#research-outputs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Research outputs</h2>
<p>The central output of this model are temperature-dependent polaron mobilities:</p>
<p><a target="_blank" rel="noopener noreferrer" href="mobility-calculated-experimental.png"><img src="mobility-calculated-experimental.png" alt="MAPI Polaron mobility, plotted vs experimental data" style="max-width:100%;"></a></p>
<p>From the variational solution, you have characterised the polarons in your
system.
This gives access to the effective mass renormalisations (phonon drag), polaron
binding energies, effective electron-phonon coupling parameters, etc.</p>
<h2><a id="user-content-community-guidelines" class="anchor" aria-hidden="true" href="#community-guidelines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Community guidelines</h2>
<p>Contributions to the code (extending that which is calculated), or additional
physical systems / examples, are very welcome.</p>
<p>If you have questions about the software, scientific questions, or find errors,
please create a <a href="https://github.com/jarvist/PolaronMobility.jl/issues">GitHub issue</a>.</p>
<h2><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reference</h2>
<p>If you find this package (or snippets, such as the entered and tested
free-energy expressions) useful for your work, please cite the paper
<a href="https://doi.org/10.1103/PhysRevB.96.195202" rel="nofollow">Frost2017PRB</a>.</p>
<pre><code>@article{Frost2017,
  doi = {10.1103/physrevb.96.195202},
  url = {https://doi.org/10.1103/physrevb.96.195202},
  year  = {2017},
  month = {nov},
  publisher = {American Physical Society ({APS})},
  volume = {96},
  number = {19},
  author = {Jarvist Moore Frost},
  title = {Calculating polaron mobility in halide perovskites},
  journal = {Physical Review B}
}
</code></pre>
<p>These codes use the <code>Optim.jl</code> optimisation library to do the essential calculation of the Feynman variational theory.
<a href="https://doi.org/10.21105/joss.00615" rel="nofollow"><img src="https://camo.githubusercontent.com/7a0cac49eb2a077b403717883539f542be132c08/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303631352f7374617475732e737667" alt="DOI" data-canonical-src="http://joss.theoj.org/papers/10.21105/joss.00615/status.svg" style="max-width:100%;"></a></p>
</article></div>