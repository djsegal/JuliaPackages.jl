<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-inertiajl" class="anchor" aria-hidden="true" href="#inertiajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inertia.jl</h1>
<p dir="auto">Julia package for calculating inertia of geometric solids.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="  pkg&gt; add Inertia"><pre>  pkg<span class="pl-k">&gt;</span> add Inertia</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Inertia"><pre><span class="pl-k">using</span> Inertia</pre></div>
<h3 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
# create two solids
l = 1.0
w = 2.0
h = 3.0
m = 0.1
cuboid1 = Cuboid(l,w,h,m) # length, width, height, mass
cuboid2 = Cuboid(l,w,h,m)

# centre of mass of each solid
r1 = [-l/2, 0, 0]
r2 = [ l/2, 0, 0]

# rotation of each solid
R = [1 0 0; 0 0 -1; 0 1 0] # each rotated by 90 degrees about x axis

# group into vectors
solids = [cuboid1, cuboid2]
Rs = fill(R, 2)
rs = [r1, r2]

# centre of mass of whole system
com = centre_of_mass(solids, rs)

# combined inertia about combined centre of mass
moi = calculate_inertia(solids, Rs, rs, com)

# check combined inertia is equal to that of cuboid with double the length, double the mass and rotated by 90 degrees about x axis
moi == Cuboid(2l, h, w, 2m).moi
"><pre><span class="pl-c"><span class="pl-c">#</span> create two solids</span>
l <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
w <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
h <span class="pl-k">=</span> <span class="pl-c1">3.0</span>
m <span class="pl-k">=</span> <span class="pl-c1">0.1</span>
cuboid1 <span class="pl-k">=</span> <span class="pl-c1">Cuboid</span>(l,w,h,m) <span class="pl-c"><span class="pl-c">#</span> length, width, height, mass</span>
cuboid2 <span class="pl-k">=</span> <span class="pl-c1">Cuboid</span>(l,w,h,m)

<span class="pl-c"><span class="pl-c">#</span> centre of mass of each solid</span>
r1 <span class="pl-k">=</span> [<span class="pl-k">-</span>l<span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>]
r2 <span class="pl-k">=</span> [ l<span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>]

<span class="pl-c"><span class="pl-c">#</span> rotation of each solid</span>
R <span class="pl-k">=</span> [<span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-c1">0</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span>] <span class="pl-c"><span class="pl-c">#</span> each rotated by 90 degrees about x axis</span>

<span class="pl-c"><span class="pl-c">#</span> group into vectors</span>
solids <span class="pl-k">=</span> [cuboid1, cuboid2]
Rs <span class="pl-k">=</span> <span class="pl-c1">fill</span>(R, <span class="pl-c1">2</span>)
rs <span class="pl-k">=</span> [r1, r2]

<span class="pl-c"><span class="pl-c">#</span> centre of mass of whole system</span>
com <span class="pl-k">=</span> <span class="pl-c1">centre_of_mass</span>(solids, rs)

<span class="pl-c"><span class="pl-c">#</span> combined inertia about combined centre of mass</span>
moi <span class="pl-k">=</span> <span class="pl-c1">calculate_inertia</span>(solids, Rs, rs, com)

<span class="pl-c"><span class="pl-c">#</span> check combined inertia is equal to that of cuboid with double the length, double the mass and rotated by 90 degrees about x axis</span>
moi <span class="pl-k">==</span> <span class="pl-c1">Cuboid</span>(<span class="pl-c1">2</span>l, h, w, <span class="pl-c1">2</span>m)<span class="pl-k">.</span>moi
</pre></div>
</article></div>