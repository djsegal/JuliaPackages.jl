<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-atomix" class="anchor" aria-hidden="true" href="#atomix"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Atomix</h1>
<p dir="auto"><a href="https://juliaconcurrent.github.io/Atomix.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaConcurrent/Atomix.jl/actions/workflows/ci.yml"><img src="https://github.com/JuliaConcurrent/Atomix.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">Atomix.jl implements <code>@atomic</code>, <code>@atomicswap</code>, and <code>@atomicreplace</code> that
are superset of the macros in <code>Base</code>.  In addition to atomic operations on the
fields as implemented in <code>Base</code>, they support atomic operations on array
elements.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Atomix: @atomic, @atomicswap, @atomicreplace

julia&gt; A = ones(Int, 3);

julia&gt; @atomic A[1] += 1;  # fetch-and-increment

julia&gt; @atomic A[1]
2

julia&gt; @atomicreplace A[begin+1] 1 =&gt; 42  # compare-and-swap
(old = 1, success = true)

julia&gt; @inbounds @atomic :monotonic A[begin+1]  # specify ordering and skip bound check
42

julia&gt; @atomicswap A[end] = 123
1

julia&gt; A[end]
123"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Atomix<span class="pl-k">:</span> <span class="pl-c1">@atomic</span>, <span class="pl-c1">@atomicswap</span>, <span class="pl-c1">@atomicreplace</span>

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">ones</span>(Int, <span class="pl-c1">3</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@atomic</span> A[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> <span class="pl-c1">1</span>;  <span class="pl-c"><span class="pl-c">#</span> fetch-and-increment</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@atomic</span> A[<span class="pl-c1">1</span>]
<span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@atomicreplace</span> A[<span class="pl-c1">begin</span><span class="pl-k">+</span><span class="pl-c1">1</span>] <span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">42</span>  <span class="pl-c"><span class="pl-c">#</span> compare-and-swap</span>
(old <span class="pl-k">=</span> <span class="pl-c1">1</span>, success <span class="pl-k">=</span> <span class="pl-c1">true</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@inbounds</span> <span class="pl-c1">@atomic</span> <span class="pl-c1">:monotonic</span> A[<span class="pl-c1">begin</span><span class="pl-k">+</span><span class="pl-c1">1</span>]  <span class="pl-c"><span class="pl-c">#</span> specify ordering and skip bound check</span>
<span class="pl-c1">42</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@atomicswap</span> A[<span class="pl-c1">end</span>] <span class="pl-k">=</span> <span class="pl-c1">123</span>
<span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> A[<span class="pl-c1">end</span>]
<span class="pl-c1">123</span></pre></div>
</article></div>