<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fastroundingjl" class="anchor" aria-hidden="true" href="#fastroundingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FastRounding.jl</h1>
<h3><a id="user-content-faster-directed-rounding-for-inline-arithmetic" class="anchor" aria-hidden="true" href="#faster-directed-rounding-for-inline-arithmetic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Faster directed rounding for inline arithmetic</h3>
<h4><a id="user-content-copyright--2015-2018-by-jeffrey-sarnoff--released-under-the-mit-license" class="anchor" aria-hidden="true" href="#copyright--2015-2018-by-jeffrey-sarnoff--released-under-the-mit-license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Copyright © 2015-2018 by Jeffrey Sarnoff.  Released under the MIT License.</h4>
<hr>
<p><a href="https://travis-ci.org/JeffreySarnoff/FastRounding.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ff3ed8bf52576cf0ba4eec08852b4ade5ebb7d18/68747470733a2f2f7472617669732d63692e6f72672f4a6566667265795361726e6f66662f46617374526f756e64696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JeffreySarnoff/FastRounding.jl.svg?branch=master" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-quick-overview" class="anchor" aria-hidden="true" href="#quick-overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Overview</h2>
<ul>
<li>
<p>This package provides arithmetic with directed rounding</p>
</li>
<li>
<p>The numeric types<br>
{ Float32, Float64 }</p>
</li>
<li>
<p>The arithmetic operations
{ +, -, *, inv, /, sqrt }</p>
</li>
<li>
<p>The directed rounding modes<br>
{ RoundNearest, RoundUp, RoundDown, RoundToZero, RoundFromZero }</p>
</li>
<li>
<p>These functions ran faster than Julia's erstwhile <code>setrounding</code></p>
</li>
</ul>
<hr>
<h3><a id="user-content-rounding-modes" class="anchor" aria-hidden="true" href="#rounding-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rounding Modes</h3>
<ul>
<li>RoundNearest</li>
<li>RoundUp</li>
<li>RoundDown</li>
<li>RoundToZero</li>
<li>RoundFromZero</li>
</ul>
<h3><a id="user-content-exports" class="anchor" aria-hidden="true" href="#exports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Exports</h3>
<ul>
<li>add_round, sub_round</li>
<li>square_round, mul_round</li>
<li>sqrt_round, inv_round</li>
<li>div_round</li>
</ul>
<h3><a id="user-content-equivalent-exports" class="anchor" aria-hidden="true" href="#equivalent-exports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Equivalent Exports</h3>
<table>
<thead>
<tr>
<th align="center">subscript</th>
<th align="left">signifies mode</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">◌₌</td>
<td align="left">RoundNearest</td>
</tr>
<tr>
<td align="center">◌₊</td>
<td align="left">RoundUp</td>
</tr>
<tr>
<td align="center">◌₋</td>
<td align="left">RoundDown</td>
</tr>
<tr>
<td align="center">◌₀</td>
<td align="left">RoundToZero</td>
</tr>
<tr>
<td align="center">◌₁</td>
<td align="left">RoundFromZero</td>
</tr>
</tbody>
</table>
<hr>
<table>
<thead>
<tr>
<th align="center">unicode op</th>
<th align="center">arithmetic op</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">⊕</td>
<td align="center">+</td>
</tr>
<tr>
<td align="center">⊖</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center">⊗</td>
<td align="center">*</td>
</tr>
<tr>
<td align="center">⚆</td>
<td align="center">inv</td>
</tr>
<tr>
<td align="center">⊘</td>
<td align="center">/</td>
</tr>
<tr>
<td align="center">⊚</td>
<td align="center">square</td>
</tr>
<tr>
<td align="center">⊙</td>
<td align="center">sqrt</td>
</tr>
</tbody>
</table>
<h2><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FastRounding

julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Float32</span>(pi)
<span class="pl-c1">3.1415927</span>f0

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">inv</span>(<span class="pl-c1">Float32</span>(pi))
<span class="pl-c1">0.31830987</span>f0

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mul_round</span>(a, b, RoundUp)
<span class="pl-c1">1.0</span>f0

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mul_round</span>(a, b, RoundNearest)
<span class="pl-c1">1.0</span>f0

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mul_round</span>(a, b, RoundDown)
<span class="pl-c1">0.99999994</span>f0

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mul_round</span>(a, b, RoundToZero)
<span class="pl-c1">0.99999994</span>f0

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mul_round</span>(a, b, RoundFromZero)
<span class="pl-c1">1.0</span>f0

julia<span class="pl-k">&gt;</span> two <span class="pl-k">=</span> <span class="pl-c1">Float64</span>(<span class="pl-c1">2</span>)
<span class="pl-c1">2.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sqrt_round</span>(two, RoundUp)
<span class="pl-c1">1.4142135623730951</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sqrt_round</span>(two, RoundNearest)
<span class="pl-c1">1.4142135623730951</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sqrt_round</span>(two, RoundDown)
<span class="pl-c1">1.414213562373095</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">inv_round</span>(<span class="pl-k">-</span>two, RoundToZero)
<span class="pl-k">-</span><span class="pl-c1">0.5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">inv_round</span>(<span class="pl-k">-</span>two, RoundFromZero)
<span class="pl-k">-</span><span class="pl-c1">0.5000000000000001</span>

julia<span class="pl-k">&gt;</span> ⊙₋(two)  <span class="pl-c"><span class="pl-c">#</span> sqrt(2) rounding down</span>
<span class="pl-c1">1.414213562373095</span>

julia<span class="pl-k">&gt;</span> two ⊘₁ ans  <span class="pl-c"><span class="pl-c">#</span> 2 / (sqrt(2) rounding down) rounding away from zero</span>
<span class="pl-c1">1.4142135623730954</span>
</pre></div>
<hr>
<h2><a id="user-content-conformance" class="anchor" aria-hidden="true" href="#conformance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Conformance</h2>
<p>These functions conform to the requirements of the IEEE Interval Floating Point Standard
for directed rounding, passing their tests as implemented in IntervalArithmetic.jl.</p>
<p>While not required by the IEEE Floating Point Standard, RoundToZero and RoundFromZero modes exist.</p>
<p>The determination of last bit(s) is correct to twice the significance of the rounded value.
We do not provide the equivalent of infinitly precise evaluation when at doubled the given
precision, all least significant bits are zero.  We are accurate and fast.</p>
<p>If you require that RoundUp, RoundDown pairs assure enclosure of the theoretical result
at a precision that exceeds 106 bits when working with Float64s (which have 53 significant bits),
please let me know.  I could force <code>nextfloat</code> and <code>prevfloat</code> calls in those cases, forgoing
the tightest results for the most inclusive.  Those routines run a little slower than these.
Note that those routines may not match the Standard test suite values in those adjusted cases.</p>
</article></div>