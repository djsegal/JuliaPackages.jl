<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-scimlexpectationsjl-expectated-values-of-simulations-and-uncertainty-quantification" class="anchor" aria-hidden="true" href="#scimlexpectationsjl-expectated-values-of-simulations-and-uncertainty-quantification"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SciMLExpectations.jl: Expectated Values of Simulations and Uncertainty Quantification</h1>
<p dir="auto"><a href="https://julialang.zulipchat.com/#narrow/stream/279055-sciml-bridged" rel="nofollow"><img src="https://camo.githubusercontent.com/667867fc71b8b3c9ed350ce154a04d38adca002ecfa38edf519284e0365ee553/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d5a756c6970266d6573736167653d6368617426636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="Join the chat at https://julialang.zulipchat.com #sciml-bridged" data-canonical-src="https://img.shields.io/static/v1?label=Zulip&amp;message=chat&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="https://docs.sciml.ai/SciMLExpectations/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/88037a523f970520933771e764f5abff55de9382efc91cd89dd43ef0bb49a85f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d5363694d4c2d626c75652e737667" alt="Global Docs" data-canonical-src="https://img.shields.io/badge/docs-SciML-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://codecov.io/gh/SciML/SciMLExpectations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/053be92d6140be2a8b766377bffa13df429452d50564f524a4c19b93399054bb/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f5363694d4c4578706563746174696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/SciMLExpectations.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLExpectations.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/SciMLExpectations.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/2496bdc13cbc9c458dfa19a108b1f333353f62917355a4cdee582bbdf8be43cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f722532377325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor%27s%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLStyle"><img src="https://camo.githubusercontent.com/3e16f03bad047817fbc07f49307817ed7919ef79c339dc75ad4ce813012c3e0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d5363694d4c26636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="SciML Code Style" data-canonical-src="https://img.shields.io/static/v1?label=code%20style&amp;message=SciML&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-this-package-is-still-under-heavy-construction-use-at-your-own-risk" class="anchor" aria-hidden="true" href="#this-package-is-still-under-heavy-construction-use-at-your-own-risk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>This package is still under heavy construction. Use at your own risk!</h4>
<p dir="auto">SciMLExpectations.jl is a package for quantifying the uncertainties of simulations by
calculating the expectations of observables with respect to input uncertainties. Its goal
is to make it fast and easy to compute solution moments in a differentiable way in order
to enable fast optimization under uncertainty.</p>
<h2 dir="auto"><a id="user-content-tutorials-and-documentation" class="anchor" aria-hidden="true" href="#tutorials-and-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorials and Documentation</h2>
<p dir="auto">For information on using the package,
<a href="https://docs.sciml.ai/SciMLExpectations/stable/" rel="nofollow">see the stable documentation</a>. Use the
<a href="https://docs.sciml.ai/SciMLExpectations/dev/" rel="nofollow">in-development documentation</a> for the version of
the documentation, which contains the unreleased features.</p>
<h3 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SciMLExpectations, OrdinaryDiffEq, Distributions, IntegralsCubature

function eom!(du, u, p, t, A)
    du .= A * u
end

u0 = [1.0, 1.0]
tspan = (0.0, 3.0)
p = [1.0; 2.0]
A = [0.0 1.0; -p[1] -p[2]]
prob = ODEProblem((du, u, p, t) -&gt; eom!(du, u, p, t, A), u0, tspan, p)
u0s_dist = (Uniform(1, 10), truncated(Normal(3.0, 1), 0.0, 6.0))
gd = GenericDistribution(u0s_dist...)
cov(x, u, p) = x, p

sm = SystemMap(prob, Tsit5(), save_everystep = false)

analytical = (exp(A * tspan[end]) * [mean(d) for d in u0s_dist])
analytical"><pre><span class="pl-k">using</span> SciMLExpectations, OrdinaryDiffEq, Distributions, IntegralsCubature

<span class="pl-k">function</span> <span class="pl-en">eom!</span>(du, u, p, t, A)
    du <span class="pl-k">.=</span> A <span class="pl-k">*</span> u
<span class="pl-k">end</span>

u0 <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>]
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">3.0</span>)
p <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>; <span class="pl-c1">2.0</span>]
A <span class="pl-k">=</span> [<span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span>; <span class="pl-k">-</span>p[<span class="pl-c1">1</span>] <span class="pl-k">-</span>p[<span class="pl-c1">2</span>]]
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>((du, u, p, t) <span class="pl-k">-&gt;</span> <span class="pl-c1">eom!</span>(du, u, p, t, A), u0, tspan, p)
u0s_dist <span class="pl-k">=</span> (<span class="pl-c1">Uniform</span>(<span class="pl-c1">1</span>, <span class="pl-c1">10</span>), <span class="pl-c1">truncated</span>(<span class="pl-c1">Normal</span>(<span class="pl-c1">3.0</span>, <span class="pl-c1">1</span>), <span class="pl-c1">0.0</span>, <span class="pl-c1">6.0</span>))
gd <span class="pl-k">=</span> <span class="pl-c1">GenericDistribution</span>(u0s_dist<span class="pl-k">...</span>)
<span class="pl-en">cov</span>(x, u, p) <span class="pl-k">=</span> x, p

sm <span class="pl-k">=</span> <span class="pl-c1">SystemMap</span>(prob, <span class="pl-c1">Tsit5</span>(), save_everystep <span class="pl-k">=</span> <span class="pl-c1">false</span>)

analytical <span class="pl-k">=</span> (<span class="pl-c1">exp</span>(A <span class="pl-k">*</span> tspan[<span class="pl-c1">end</span>]) <span class="pl-k">*</span> [<span class="pl-c1">mean</span>(d) <span class="pl-k">for</span> d <span class="pl-k">in</span> u0s_dist])
analytical</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; analytical
2-element Vector{Float64}:
  1.5433991194037804
 -1.120209038276938"><pre class="notranslate"><code>julia&gt; analytical
2-element Vector{Float64}:
  1.5433991194037804
 -1.120209038276938
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="g(sol, p) = sol[:, end]
exprob = ExpectationProblem(sm, g, cov, gd; nout = length(u0))
sol = solve(exprob, Koopman(); quadalg = CubatureJLh(),
            ireltol = 1e-3, iabstol = 1e-3)
sol.u # Expectation of the states 1 and 2 at the final time point"><pre><span class="pl-en">g</span>(sol, p) <span class="pl-k">=</span> sol[:, <span class="pl-c1">end</span>]
exprob <span class="pl-k">=</span> <span class="pl-c1">ExpectationProblem</span>(sm, g, cov, gd; nout <span class="pl-k">=</span> <span class="pl-c1">length</span>(u0))
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(exprob, <span class="pl-c1">Koopman</span>(); quadalg <span class="pl-k">=</span> <span class="pl-c1">CubatureJLh</span>(),
            ireltol <span class="pl-k">=</span> <span class="pl-c1">1e-3</span>, iabstol <span class="pl-k">=</span> <span class="pl-c1">1e-3</span>)
sol<span class="pl-k">.</span>u <span class="pl-c"><span class="pl-c">#</span> Expectation of the states 1 and 2 at the final time point</span></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="2-element Vector{Float64}:
  1.5433860531082695
 -1.1201922503747408"><pre class="notranslate"><code>2-element Vector{Float64}:
  1.5433860531082695
 -1.1201922503747408
</code></pre></div>
<h1 dir="auto"><a id="user-content-approximate-error-on-the-expectation" class="anchor" aria-hidden="true" href="#approximate-error-on-the-expectation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Approximate error on the expectation</h1>
<p dir="auto">sol.resid
#=
2-element Vector{Float64}:
7.193424502016654e-5
5.2074632876847327e-5
=#</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content=""><pre class="notranslate"><code></code></pre></div>
</article></div>