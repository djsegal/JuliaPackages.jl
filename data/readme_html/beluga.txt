<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://arzwa.github.io/Beluga.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/arzwa/Beluga.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b90e2e80d35b98fd7bf00cb73579296b3a6c34d30e980d0a9762a08ccf837ace/68747470733a2f2f7472617669732d63692e636f6d2f61727a77612f42656c7567612e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.com/arzwa/Beluga.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Copyright (C) 2020 Arthur Zwaenepoel</p>
<p>VIB/UGent center for plant systems biology - <a href="http://bioinformatics.psb.ugent.be/beg/" rel="nofollow">Bioinformatics &amp; evolutionary genomics group</a></p>
<h1><a id="user-content-beluga" class="anchor" aria-hidden="true" href="#beluga"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Beluga</h1>
<h2><a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dependencies</h2>
<p>Beluga requires unregistered dependencies, to install Beluga, fire up a julia
session, hit <code>]</code> and add the following:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(v1.3) pkg&gt; add https://github.com/arzwa/NewickTree.jl#beluga
(v1.3) pkg&gt; add https://github.com/arzwa/AdaptiveMCMC.jl
(v1.3) pkg&gt; add https://github.com/arzwa/Beluga.jl
"><pre><code>(v1.3) pkg&gt; add https://github.com/arzwa/NewickTree.jl#beluga
(v1.3) pkg&gt; add https://github.com/arzwa/AdaptiveMCMC.jl
(v1.3) pkg&gt; add https://github.com/arzwa/Beluga.jl
</code></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Please refer to the <a href="https://arzwa.github.io/Beluga.jl/dev" rel="nofollow">documentation</a> for
more detailed usage examples.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Beluga, CSV, DataFrames, Parameters

# get some data
tree = readline(&quot;example/9dicots/9dicots.nw&quot;)
df = CSV.read(&quot;example/9dicots/9dicots-f01-25.csv&quot;)

# construct model and profile
λ, μ, η = 1.0, 0.92, 0.66
model, profile = DLWGD(tree, df, λ, μ, η)  

# compute log-likelihood
l = logpdf!(model, profile)

# get model parameters as vector = [λ1, ..., μ1, ..., q1, ..., η])
v = asvector(model)

# construct new model based on the old one and a new parameter vector
x = rand(length(v))
model = model(x)

# compute log likelihood again
l = logpdf!(model, profile)

# change parameters at node 5
Beluga.update!(model[5], (λ=1.5, μ=1.2))

# change η parameter at root
Beluga.update!(model[1], :η, 0.91)

# recompute likelihood efficiently starting from node 5
l = logpdf!(model[5], profile)

# gradient
g = gradient(model, profile)

# add a WGD node above node 6 at a distance 0.01 with q=0.25
addwgd!(model, model[6], 0.01, 0.25)
Beluga.extend!(profile, 6);

# compute the log-likelihood, now for the model with the WGD
logpdf!(model, profile)

# simulate a random phylogenetic profile under the model
rand(model)

# simulate a data set of 100 profiles
rand(model, 100)

# independent rates prior (check &amp; adapt default settings!)
prior = IRRevJumpPrior(Tl=treelength(model))
logpdf(prior, model)

# sample random model from prior
@unpack model, Σ = rand(prior, model)

# reversible jump chain
model, profile = DLWGD(tree, df, λ, μ, η)  
chain = RevJumpChain(data=profile, model=model, prior=prior)

# run chain (fixed dimension - no reversible jump)
init!(chain)
mcmc!(chain, 100, show=1)

# run chain (variable dimensions - with reversible jump)
rjmcmc!(chain, 100, show=1)

"><pre><span class="pl-k">using</span> Beluga, CSV, DataFrames, Parameters

<span class="pl-c"><span class="pl-c">#</span> get some data</span>
tree <span class="pl-k">=</span> <span class="pl-c1">readline</span>(<span class="pl-s"><span class="pl-pds">"</span>example/9dicots/9dicots.nw<span class="pl-pds">"</span></span>)
df <span class="pl-k">=</span> CSV<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>example/9dicots/9dicots-f01-25.csv<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> construct model and profile</span>
λ, μ, η <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, <span class="pl-c1">0.92</span>, <span class="pl-c1">0.66</span>
model, profile <span class="pl-k">=</span> <span class="pl-c1">DLWGD</span>(tree, df, λ, μ, η)  

<span class="pl-c"><span class="pl-c">#</span> compute log-likelihood</span>
l <span class="pl-k">=</span> <span class="pl-c1">logpdf!</span>(model, profile)

<span class="pl-c"><span class="pl-c">#</span> get model parameters as vector = [λ1, ..., μ1, ..., q1, ..., η])</span>
v <span class="pl-k">=</span> <span class="pl-c1">asvector</span>(model)

<span class="pl-c"><span class="pl-c">#</span> construct new model based on the old one and a new parameter vector</span>
x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">length</span>(v))
model <span class="pl-k">=</span> <span class="pl-c1">model</span>(x)

<span class="pl-c"><span class="pl-c">#</span> compute log likelihood again</span>
l <span class="pl-k">=</span> <span class="pl-c1">logpdf!</span>(model, profile)

<span class="pl-c"><span class="pl-c">#</span> change parameters at node 5</span>
Beluga<span class="pl-k">.</span><span class="pl-c1">update!</span>(model[<span class="pl-c1">5</span>], (λ<span class="pl-k">=</span><span class="pl-c1">1.5</span>, μ<span class="pl-k">=</span><span class="pl-c1">1.2</span>))

<span class="pl-c"><span class="pl-c">#</span> change η parameter at root</span>
Beluga<span class="pl-k">.</span><span class="pl-c1">update!</span>(model[<span class="pl-c1">1</span>], <span class="pl-c1">:η</span>, <span class="pl-c1">0.91</span>)

<span class="pl-c"><span class="pl-c">#</span> recompute likelihood efficiently starting from node 5</span>
l <span class="pl-k">=</span> <span class="pl-c1">logpdf!</span>(model[<span class="pl-c1">5</span>], profile)

<span class="pl-c"><span class="pl-c">#</span> gradient</span>
g <span class="pl-k">=</span> <span class="pl-c1">gradient</span>(model, profile)

<span class="pl-c"><span class="pl-c">#</span> add a WGD node above node 6 at a distance 0.01 with q=0.25</span>
<span class="pl-c1">addwgd!</span>(model, model[<span class="pl-c1">6</span>], <span class="pl-c1">0.01</span>, <span class="pl-c1">0.25</span>)
Beluga<span class="pl-k">.</span><span class="pl-c1">extend!</span>(profile, <span class="pl-c1">6</span>);

<span class="pl-c"><span class="pl-c">#</span> compute the log-likelihood, now for the model with the WGD</span>
<span class="pl-c1">logpdf!</span>(model, profile)

<span class="pl-c"><span class="pl-c">#</span> simulate a random phylogenetic profile under the model</span>
<span class="pl-c1">rand</span>(model)

<span class="pl-c"><span class="pl-c">#</span> simulate a data set of 100 profiles</span>
<span class="pl-c1">rand</span>(model, <span class="pl-c1">100</span>)

<span class="pl-c"><span class="pl-c">#</span> independent rates prior (check &amp; adapt default settings!)</span>
prior <span class="pl-k">=</span> <span class="pl-c1">IRRevJumpPrior</span>(Tl<span class="pl-k">=</span><span class="pl-c1">treelength</span>(model))
<span class="pl-c1">logpdf</span>(prior, model)

<span class="pl-c"><span class="pl-c">#</span> sample random model from prior</span>
<span class="pl-c1">@unpack</span> model, Σ <span class="pl-k">=</span> <span class="pl-c1">rand</span>(prior, model)

<span class="pl-c"><span class="pl-c">#</span> reversible jump chain</span>
model, profile <span class="pl-k">=</span> <span class="pl-c1">DLWGD</span>(tree, df, λ, μ, η)  
chain <span class="pl-k">=</span> <span class="pl-c1">RevJumpChain</span>(data<span class="pl-k">=</span>profile, model<span class="pl-k">=</span>model, prior<span class="pl-k">=</span>prior)

<span class="pl-c"><span class="pl-c">#</span> run chain (fixed dimension - no reversible jump)</span>
<span class="pl-c1">init!</span>(chain)
<span class="pl-c1">mcmc!</span>(chain, <span class="pl-c1">100</span>, show<span class="pl-k">=</span><span class="pl-c1">1</span>)

<span class="pl-c"><span class="pl-c">#</span> run chain (variable dimensions - with reversible jump)</span>
<span class="pl-c1">rjmcmc!</span>(chain, <span class="pl-c1">100</span>, show<span class="pl-k">=</span><span class="pl-c1">1</span>)
</pre></div>
<p><strong>Notes:</strong></p>
<ul>
<li>Gradients require NaN-safe mode enabled in ForwardDiff: The
following should work for most people:</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="sed -i 's/NANSAFE_MODE_ENABLED = false/NANSAFE_MODE_ENABLED = true/g' ~/.julia/packages/ForwardDiff/*/src/prelude.jl
"><pre><code>sed -i 's/NANSAFE_MODE_ENABLED = false/NANSAFE_MODE_ENABLED = true/g' ~/.julia/packages/ForwardDiff/*/src/prelude.jl
</code></pre></div>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citation</h2>
<p>Beluga.jl is developed by Arthur Zwaenepoel at the VIB/UGent center for plant
systems biology (bioinformatics and evolutionary genomics group). A preprint on the
reversible-jump sampler for WGD inference implemented in this library can be found
<a href="https://www.biorxiv.org/content/early/2020/01/25/2020.01.24.917997" rel="nofollow">at BioRXiv</a>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@article {zwaenepoel2020,
	author = {Zwaenepoel, Arthur and Van de Peer, Yves},
	title = {Model-based detection of whole-genome duplications in a phylogeny},
	elocation-id = {2020.01.24.917997},
	year = {2020},
	doi = {10.1101/2020.01.24.917997},
	publisher = {Cold Spring Harbor Laboratory},
	URL = {https://www.biorxiv.org/content/early/2020/01/25/2020.01.24.917997},
	eprint = {https://www.biorxiv.org/content/early/2020/01/25/2020.01.24.917997.full.pdf},
	journal = {bioRxiv}
}
"><pre><code>@article {zwaenepoel2020,
	author = {Zwaenepoel, Arthur and Van de Peer, Yves},
	title = {Model-based detection of whole-genome duplications in a phylogeny},
	elocation-id = {2020.01.24.917997},
	year = {2020},
	doi = {10.1101/2020.01.24.917997},
	publisher = {Cold Spring Harbor Laboratory},
	URL = {https://www.biorxiv.org/content/early/2020/01/25/2020.01.24.917997},
	eprint = {https://www.biorxiv.org/content/early/2020/01/25/2020.01.24.917997.full.pdf},
	journal = {bioRxiv}
}
</code></pre></div>
</article></div>