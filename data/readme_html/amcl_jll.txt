<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-amcl_jlljl" class="anchor" aria-hidden="true" href="#amcl_jlljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AMCL_jll.jl</h1>
<p>This is an autogenerated package constructed using <a href="https://github.com/JuliaPackaging/BinaryBuilder.jl"><code>BinaryBuilder.jl</code></a>.</p>
<h2><a id="user-content-products" class="anchor" aria-hidden="true" href="#products"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Products</h2>
<p>The code bindings within this package are autogenerated from the following <code>Products</code> defined within the <code>build_tarballs.jl</code> file that generated this package:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="products = [
    LibraryProduct([&quot;libamcl_pairing_BLS383&quot;], :libamcl_pairing_BLS383),
    LibraryProduct([&quot;libamcl_curve_GOLDILOCKS&quot;], :libamcl_curve_GOLDILOCKS),
    LibraryProduct([&quot;libamcl_mpin_BLS24&quot;], :libamcl_mpin_BLS24),
    LibraryProduct([&quot;libamcl_curve_NUMS256E&quot;], :libamcl_curve_NUMS256E),
    LibraryProduct([&quot;libamcl_bls_BN254&quot;], :libamcl_bls_BN254),
    LibraryProduct([&quot;libamcl_curve_ED25519&quot;], :libamcl_curve_ED25519),
    LibraryProduct([&quot;libamcl_bls_BLS461&quot;], :libamcl_bls_BLS461),
    LibraryProduct([&quot;libamcl_curve_NUMS384E&quot;], :libamcl_curve_NUMS384E),
    LibraryProduct([&quot;libamcl_curve_NUMS512E&quot;], :libamcl_curve_NUMS512E),
    LibraryProduct([&quot;libamcl_mpin_BLS383&quot;], :libamcl_mpin_BLS383),
    LibraryProduct([&quot;libamcl_wcc_BLS48&quot;], :libamcl_wcc_BLS48),
    LibraryProduct([&quot;libamcl_mpin_BLS461&quot;], :libamcl_mpin_BLS461),
    LibraryProduct([&quot;libamcl_curve_BLS48&quot;], :libamcl_curve_BLS48),
    LibraryProduct([&quot;libamcl_curve_SECP256K1&quot;], :libamcl_curve_SECP256K1),
    LibraryProduct([&quot;libamcl_pairing_BLS24&quot;], :libamcl_pairing_BLS24),
    LibraryProduct([&quot;libamcl_curve_BN254CX&quot;], :libamcl_curve_BN254CX),
    LibraryProduct([&quot;libamcl_curve_C41417&quot;], :libamcl_curve_C41417),
    LibraryProduct([&quot;libamcl_mpin_BLS48&quot;], :libamcl_mpin_BLS48),
    LibraryProduct([&quot;libamcl_mpin_BN254&quot;], :libamcl_mpin_BN254),
    LibraryProduct([&quot;libamcl_curve_NIST521&quot;], :libamcl_curve_NIST521),
    LibraryProduct([&quot;libamcl_curve_NUMS512W&quot;], :libamcl_curve_NUMS512W),
    LibraryProduct([&quot;libamcl_pairing_BN254&quot;], :libamcl_pairing_BN254),
    LibraryProduct([&quot;libamcl_curve_NUMS256W&quot;], :libamcl_curve_NUMS256W),
    LibraryProduct([&quot;libamcl_bls_BLS381&quot;], :libamcl_bls_BLS381),
    LibraryProduct([&quot;libamcl_mpin_FP256BN&quot;], :libamcl_mpin_FP256BN),
    LibraryProduct([&quot;libamcl_curve_BLS24&quot;], :libamcl_curve_BLS24),
    LibraryProduct([&quot;libamcl_x509&quot;], :libamcl_x509),
    LibraryProduct([&quot;libamcl_curve_NIST384&quot;], :libamcl_curve_NIST384),
    LibraryProduct([&quot;libamcl_pairing_BLS48&quot;], :libamcl_pairing_BLS48),
    LibraryProduct([&quot;libamcl_bls_BLS24&quot;], :libamcl_bls_BLS24),
    LibraryProduct([&quot;libamcl_bls_FP512BN&quot;], :libamcl_bls_FP512BN),
    LibraryProduct([&quot;libamcl_rsa_3072&quot;], :libamcl_rsa_3072),
    LibraryProduct([&quot;libamcl_bls_FP256BN&quot;], :libamcl_bls_FP256BN),
    LibraryProduct([&quot;libamcl_wcc_BLS383&quot;], :libamcl_wcc_BLS383),
    LibraryProduct([&quot;libamcl_wcc_BN254CX&quot;], :libamcl_wcc_BN254CX),
    LibraryProduct([&quot;libamcl_mpin_BN254CX&quot;], :libamcl_mpin_BN254CX),
    LibraryProduct([&quot;libamcl_rsa_4096&quot;], :libamcl_rsa_4096),
    LibraryProduct([&quot;libamcl_pairing_BLS461&quot;], :libamcl_pairing_BLS461),
    LibraryProduct([&quot;libamcl_mpin_FP512BN&quot;], :libamcl_mpin_FP512BN),
    LibraryProduct([&quot;libamcl_curve_NIST256&quot;], :libamcl_curve_NIST256),
    LibraryProduct([&quot;libamcl_pairing_FP256BN&quot;], :libamcl_pairing_FP256BN),
    LibraryProduct([&quot;libamcl_wcc_FP512BN&quot;], :libamcl_wcc_FP512BN),
    LibraryProduct([&quot;libamcl_bls_BLS383&quot;], :libamcl_bls_BLS383),
    LibraryProduct([&quot;libamcl_curve_BN254&quot;], :libamcl_curve_BN254),
    LibraryProduct([&quot;libamcl_wcc_BLS461&quot;], :libamcl_wcc_BLS461),
    LibraryProduct([&quot;libamcl_curve_C25519&quot;], :libamcl_curve_C25519),
    LibraryProduct([&quot;libamcl_curve_HIFIVE&quot;], :libamcl_curve_HIFIVE),
    LibraryProduct([&quot;libamcl_mpin_BLS381&quot;], :libamcl_mpin_BLS381),
    LibraryProduct([&quot;libamcl_curve_BLS383&quot;], :libamcl_curve_BLS383),
    LibraryProduct([&quot;libamcl_curve_BRAINPOOL&quot;], :libamcl_curve_BRAINPOOL),
    LibraryProduct([&quot;libamcl_pairing_BN254CX&quot;], :libamcl_pairing_BN254CX),
    LibraryProduct([&quot;libamcl_wcc_BN254&quot;], :libamcl_wcc_BN254),
    LibraryProduct([&quot;libamcl_curve_FP256BN&quot;], :libamcl_curve_FP256BN),
    LibraryProduct([&quot;libamcl_curve_BLS381&quot;], :libamcl_curve_BLS381),
    LibraryProduct([&quot;libamcl_core&quot;], :libamcl_core),
    LibraryProduct([&quot;libamcl_curve_ANSSI&quot;], :libamcl_curve_ANSSI),
    LibraryProduct([&quot;libamcl_curve_BLS461&quot;], :libamcl_curve_BLS461),
    LibraryProduct([&quot;libamcl_wcc_FP256BN&quot;], :libamcl_wcc_FP256BN),
    LibraryProduct([&quot;libamcl_bls_BLS48&quot;], :libamcl_bls_BLS48),
    LibraryProduct([&quot;libamcl_curve_NUMS384W&quot;], :libamcl_curve_NUMS384W),
    LibraryProduct([&quot;libamcl_wcc_BLS24&quot;], :libamcl_wcc_BLS24),
    LibraryProduct([&quot;libamcl_curve_FP512BN&quot;], :libamcl_curve_FP512BN),
    LibraryProduct([&quot;libamcl_wcc_BLS381&quot;], :libamcl_wcc_BLS381),
    LibraryProduct([&quot;libamcl_pairing_FP512BN&quot;], :libamcl_pairing_FP512BN),
    LibraryProduct([&quot;libamcl_bls_BN254CX&quot;], :libamcl_bls_BN254CX),
    LibraryProduct([&quot;libamcl_rsa_2048&quot;], :libamcl_rsa_2048),
    LibraryProduct([&quot;libamcl_pairing_BLS381&quot;], :libamcl_pairing_BLS381)
]
"><pre>products <span class="pl-k">=</span> [
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BLS383<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BLS383</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_GOLDILOCKS<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_GOLDILOCKS</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BLS24<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BLS24</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NUMS256E<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NUMS256E</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BN254<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BN254</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_ED25519<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_ED25519</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BLS461<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BLS461</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NUMS384E<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NUMS384E</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NUMS512E<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NUMS512E</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BLS383<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BLS383</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BLS48<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BLS48</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BLS461<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BLS461</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BLS48<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BLS48</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_SECP256K1<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_SECP256K1</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BLS24<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BLS24</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BN254CX<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BN254CX</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_C41417<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_C41417</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BLS48<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BLS48</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BN254<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BN254</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NIST521<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NIST521</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NUMS512W<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NUMS512W</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BN254<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BN254</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NUMS256W<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NUMS256W</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BLS381<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BLS381</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_FP256BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_FP256BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BLS24<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BLS24</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_x509<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_x509</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NIST384<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NIST384</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BLS48<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BLS48</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BLS24<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BLS24</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_FP512BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_FP512BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_rsa_3072<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_rsa_3072</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_FP256BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_FP256BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BLS383<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BLS383</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BN254CX<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BN254CX</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BN254CX<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BN254CX</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_rsa_4096<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_rsa_4096</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BLS461<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BLS461</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_FP512BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_FP512BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NIST256<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NIST256</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_FP256BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_FP256BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_FP512BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_FP512BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BLS383<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BLS383</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BN254<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BN254</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BLS461<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BLS461</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_C25519<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_C25519</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_HIFIVE<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_HIFIVE</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_mpin_BLS381<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_mpin_BLS381</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BLS383<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BLS383</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BRAINPOOL<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BRAINPOOL</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BN254CX<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BN254CX</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BN254<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BN254</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_FP256BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_FP256BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BLS381<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BLS381</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_core<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_core</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_ANSSI<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_ANSSI</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_BLS461<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_BLS461</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_FP256BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_FP256BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BLS48<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BLS48</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_NUMS384W<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_NUMS384W</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BLS24<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BLS24</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_curve_FP512BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_curve_FP512BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_wcc_BLS381<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_wcc_BLS381</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_FP512BN<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_FP512BN</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_bls_BN254CX<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_bls_BN254CX</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_rsa_2048<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_rsa_2048</span>),
    <span class="pl-c1">LibraryProduct</span>([<span class="pl-s"><span class="pl-pds">"</span>libamcl_pairing_BLS381<span class="pl-pds">"</span></span>], <span class="pl-c1">:libamcl_pairing_BLS381</span>)
]</pre></div>
<h2><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage example</h2>
<p>For example purposes, we will assume that the following products were defined in the imaginary package <code>Example_jll</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="products = [
    FileProduct(&quot;src/data.txt&quot;, :data_txt),
    LibraryProduct(&quot;libdataproc&quot;, :libdataproc),
    ExecutableProduct(&quot;mungify&quot;, :mungify_exe)
]
"><pre>products <span class="pl-k">=</span> [
    <span class="pl-c1">FileProduct</span>(<span class="pl-s"><span class="pl-pds">"</span>src/data.txt<span class="pl-pds">"</span></span>, <span class="pl-c1">:data_txt</span>),
    <span class="pl-c1">LibraryProduct</span>(<span class="pl-s"><span class="pl-pds">"</span>libdataproc<span class="pl-pds">"</span></span>, <span class="pl-c1">:libdataproc</span>),
    <span class="pl-c1">ExecutableProduct</span>(<span class="pl-s"><span class="pl-pds">"</span>mungify<span class="pl-pds">"</span></span>, <span class="pl-c1">:mungify_exe</span>)
]</pre></div>
<p>With such products defined, <code>Example_jll</code> would contain <code>data_txt</code>, <code>libdataproc</code> and <code>mungify_exe</code> symbols exported. For <code>FileProduct</code> variables, the exported value is a string pointing to the location of the file on-disk.  For <code>LibraryProduct</code> variables, it is a string corresponding to the <code>SONAME</code> of the desired library (it will have already been <code>dlopen()</code>'ed, so typical <code>ccall()</code> usage applies), and for <code>ExecutableProduct</code> variables, the exported value is a function that can be called to set appropriate environment variables.  Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Example_jll

# For file products, you can access its file location directly:
data_lines = open(data_txt, &quot;r&quot;) do io
    readlines(io)
end

# For library products, you can use the exported variable name in `ccall()` invocations directly
num_chars = ccall((:count_characters, libdataproc), Cint, (Cstring, Cint), data_lines[1], length(data_lines[1]))

# For executable products, you can use the exported variable name as a function that you can call
mungify_exe() do mungify_exe_path
    run(`$mungify_exe_path $num_chars`)
end
"><pre><span class="pl-k">using</span> Example_jll

<span class="pl-c"><span class="pl-c">#</span> For file products, you can access its file location directly:</span>
data_lines <span class="pl-k">=</span> <span class="pl-c1">open</span>(data_txt, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-c1">readlines</span>(io)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> For library products, you can use the exported variable name in `ccall()` invocations directly</span>
num_chars <span class="pl-k">=</span> <span class="pl-c1">ccall</span>((<span class="pl-c1">:count_characters</span>, libdataproc), Cint, (Cstring, Cint), data_lines[<span class="pl-c1">1</span>], <span class="pl-c1">length</span>(data_lines[<span class="pl-c1">1</span>]))

<span class="pl-c"><span class="pl-c">#</span> For executable products, you can use the exported variable name as a function that you can call</span>
<span class="pl-c1">mungify_exe</span>() <span class="pl-k">do</span> mungify_exe_path
    <span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>$mungify_exe_path $num_chars<span class="pl-pds">`</span></span>)
<span class="pl-k">end</span></pre></div>
</article></div>