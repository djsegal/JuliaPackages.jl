<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-eliminategraphs" class="anchor" aria-hidden="true" href="#eliminategraphs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>EliminateGraphs</h1>
<p dir="auto"><a href="https://travis-ci.com/GiggleLiu/EliminateGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9ce82b11e1d1331c48f3de9fb2fec8b5f8107a5d4ef5ce0f09771c1dbfe8a92c/68747470733a2f2f7472617669732d63692e636f6d2f476967676c654c69752f456c696d696e6174654772617068732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/GiggleLiu/EliminateGraphs.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/GiggleLiu/EliminateGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c36d3cf3c4a0fff65c9ccf4816aef25517ee84d3bdcf1388b50c33012c63c2de/68747470733a2f2f636f6465636f762e696f2f67682f476967676c654c69752f456c696d696e6174654772617068732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/GiggleLiu/EliminateGraphs.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Maximum independent set algorithms, e.g. branching, measure and conquer.</p>
<h2 dir="auto"><a id="user-content-to-develop" class="anchor" aria-hidden="true" href="#to-develop"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To develop</h2>
<p dir="auto">Type <code>]</code> in a Julia REPL, then input</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; dev git@github.com:GiggleLiu/EliminateGraphs.jl.git"><pre>pkg<span class="pl-k">&gt;</span> dev git<span class="pl-c1">@github</span><span class="pl-k">.</span>com<span class="pl-k">:</span>GiggleLiu<span class="pl-k">/</span>EliminateGraphs<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<h2 dir="auto"><a id="user-content-to-run-an-example" class="anchor" aria-hidden="true" href="#to-run-an-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To run an example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using EliminateGraphs

julia&gt; eg = rand_eg(60, 0.05);

julia&gt; mis1(eg)  # naive branching algorithm with O(3^(n/3)) complexity.
julia&gt; mis2(eg)  # sophisticated branching algorithm with O(1.2852^N) complexity."><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> EliminateGraphs

julia<span class="pl-k">&gt;</span> eg <span class="pl-k">=</span> <span class="pl-c1">rand_eg</span>(<span class="pl-c1">60</span>, <span class="pl-c1">0.05</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mis1</span>(eg)  <span class="pl-c"><span class="pl-c">#</span> naive branching algorithm with O(3^(n/3)) complexity.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mis2</span>(eg)  <span class="pl-c"><span class="pl-c">#</span> sophisticated branching algorithm with O(1.2852^N) complexity.</span></pre></div>
<p dir="auto">Using <code>EliminateGraph</code>,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; p = K_eg(3,3)
EliminateGraph
  0  0  0  1  1  1
  0  0  0  1  1  1
  0  0  0  1  1  1
  1  1  1  0  0  0
  1  1  1  0  0  0
  1  1  1  0  0  0

julia&gt; q = p \ Neighbors{CLOSED, 1}(3)
EliminateGraph
  0  0  ⋅  ⋅  ⋅  ⋅
  0  0  ⋅  ⋅  ⋅  ⋅
  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅
  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅
  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅
  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅

julia&gt; nv(q), ne(q)
(2, 0)

julia&gt; vertices(q)
2-element VertexIter{EliminateGraph}:
 1
 2

julia&gt; neighbors(p, 3)
NeighborIter{OPEN,1,EliminateGraph}
(4, 5, 6)"><pre>julia<span class="pl-k">&gt;</span> p <span class="pl-k">=</span> <span class="pl-c1">K_eg</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>)
EliminateGraph
  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> q <span class="pl-k">=</span> p <span class="pl-k">\</span> <span class="pl-c1">Neighbors</span><span class="pl-c1">{CLOSED, 1}</span>(<span class="pl-c1">3</span>)
EliminateGraph
  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nv</span>(q), <span class="pl-c1">ne</span>(q)
(<span class="pl-c1">2</span>, <span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">vertices</span>(q)
<span class="pl-c1">2</span><span class="pl-k">-</span>element VertexIter{EliminateGraph}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(p, <span class="pl-c1">3</span>)
NeighborIter{OPEN,<span class="pl-c1">1</span>,EliminateGraph}
(<span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>)</pre></div>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li><a href="http://www.ii.uib.no/~fomin/BookEA/BookEA.pdf" rel="nofollow">Exact Exponential Algorithms</a></li>
</ul>
</article></div>