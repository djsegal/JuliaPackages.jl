<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-seapearlzoo" class="anchor" aria-hidden="true" href="#seapearlzoo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeaPearlZoo</h1>
<p dir="auto">This project provides some examples of <a href="https://github.com/corail-research/SeaPearl.jl">SeaPearl.jl</a>'s utilisation. One will find good practices to run experiences with SeaPearl.jl.</p>
<h2 dir="auto"><a id="user-content-launch-graph-coloring-learning" class="anchor" aria-hidden="true" href="#launch-graph-coloring-learning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Launch graph coloring learning</h2>
<p dir="auto">First, clone SeaPearlZoo locally:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ git clone https://github.com/corail-research/SeaPearlZoo.jl"><pre>$ git clone https://github.com/corail-research/SeaPearlZoo.jl</pre></div>
<p dir="auto">Now, making sure you have Julia 1.7 installed, go to the <a href="https://en.wikipedia.org/wiki/Graph_coloring" rel="nofollow">Graph-Coloring</a> directory.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ cd SeaPearlZoo/learning_cp/graph_coloring"><pre>$ <span class="pl-c1">cd</span> SeaPearlZoo/learning_cp/graph_coloring</pre></div>
<p dir="auto">Now, activate and instantiate (download and install all the packages) the environment:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia
julia&gt; ]
(@v1.7) pkg&gt; activate . 
(graph_coloring) pkg&gt; instantiate"><pre class="notranslate"><code>$ julia
julia&gt; ]
(@v1.7) pkg&gt; activate . 
(graph_coloring) pkg&gt; instantiate
</code></pre></div>
<p dir="auto">Go back to the <a href="https://docs.julialang.org/en/v1/stdlib/REPL/" rel="nofollow">julia REPL</a> by pressing backspace.</p>
<p dir="auto">Finally, you can launch the <code>graph_coloring.jl</code> file :</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;graph_coloring.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>graph_coloring.jl<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Here you should see a ProgressBar showing you the evolution of the training and then the progression of the benchmarking. You will end up with csv files stored in the same directory to measure the performances. The trained weights will also be stored in a BSON file.</p>
<h2 dir="auto"><a id="user-content-repo-organisation" class="anchor" aria-hidden="true" href="#repo-organisation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Repo organisation</h2>
<ul dir="auto">
<li>classic_cp (just constraint programming problems without learning)
<ul dir="auto">
<li>All-interval_Series</li>
<li>graph_coloring</li>
<li>eternity2</li>
<li>jobshop</li>
<li>kidney_exchange</li>
<li>knapsack</li>
<li>latin</li>
<li>nqueens</li>
<li>tsptw</li>
</ul>
</li>
<li>learning_cp (using SeaPearl.jl to have an agent learn a value selection heuristic)
<ul dir="auto">
<li>eternity2</li>
<li>graph_coloring</li>
<li>kidney_exchange</li>
<li>knapsack</li>
<li>latin</li>
<li>nqueens</li>
<li>tsptw</li>
</ul>
</li>
</ul>
</article></div>