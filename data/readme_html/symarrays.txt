<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-symarraysjl" class="anchor" aria-hidden="true" href="#symarraysjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SymArrays.jl</h1>
<p><a href="https://jfeist.github.io/SymArrays.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://jfeist.github.io/SymArrays.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/jfeist/SymArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3e68f4a6111ef565101e74da38836edda1ff8ca9/68747470733a2f2f7472617669732d63692e636f6d2f6a66656973742f53796d4172726179732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jfeist/SymArrays.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/jfeist/SymArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4537f9e42c9eceaf4f4af9071d787dbf72aae742/68747470733a2f2f636f6465636f762e696f2f67682f6a66656973742f53796d4172726179732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/jfeist/SymArrays.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This package provides some tools to efficiently store arrays with exchange symmetries, i.e., arrays where exchanging two indices leaves the value unchanged. It stores the underlying data in a flat vector and provides mappings that allow to address it as a "normal" <code>AbstractArray{T,N}</code>. To generate a new one with undefined data, use</p>
<div class="highlight highlight-source-julia"><pre>S <span class="pl-k">=</span> <span class="pl-c1">SymArray</span><span class="pl-c1">{Nsyms,T}</span>(dims<span class="pl-k">...</span>)</pre></div>
<p>where <code>NSyms</code> is a tuple that indicates the size of each group of exchangeable indices (which have to be adjacent for simplicity), <code>T</code> is the element type (e.g., <code>Float64</code> or <code>ComplexF64</code>), and <code>dims</code> are the dimensions of the array (which have to fulfill <code>length(dims)==sum(Nsyms)</code>. As an example</p>
<div class="highlight highlight-source-julia"><pre>S <span class="pl-k">=</span> <span class="pl-c1">SymArray</span><span class="pl-c1">{(3,1,2,1),Float64}</span>(<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">3</span>,<span class="pl-c1">50</span>,<span class="pl-c1">50</span>,<span class="pl-c1">50</span>)</pre></div>
<p>declares an array <code>S[(i,j,k),l,(m,n),o]</code> where any permutation of <code>(i,j,k)</code> leaves the value unchanged, as does any permutation of <code>(m,n)</code>. Note that interchangeable indices obviously have to have the same size.</p>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODO:</h2>
<ul>
<li>Allow specification and treatment of Hermitian indices, where any permutation conjugates the result (possibly only for 2 indices at a time?).</li>
</ul>
</article></div>