<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-itensorgaussianmps" class="anchor" aria-hidden="true" href="#itensorgaussianmps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ITensorGaussianMPS</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Citation</strong></th>
<th align="center"><strong>Open-access preprint</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://doi.org/10.1103/PhysRevB.92.075132" rel="nofollow"><img src="https://camo.githubusercontent.com/a51e32d41337cf32f34cd926ba3ee172e1c5c5fd4227a6ce2c402d3a8fdc2b4a/687474703a2f2f696d672e736869656c64732e696f2f62616467652f5052422d31302e313130332f50687973526576422e39322e3037353133322d4233314231422e737667" alt="DOI" data-canonical-src="http://img.shields.io/badge/PRB-10.1103/PhysRevB.92.075132-B31B1B.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://arxiv.org/abs/1504.07701" rel="nofollow"><img src="https://camo.githubusercontent.com/dc22fdf152567d9f6079cdfa51c61b4bff71cdd329a0e0c090d1bbdda7ee71f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f61725869762d313530342e30373730312d6233316231622e737667" alt="arXiv" data-canonical-src="https://img.shields.io/badge/arXiv-1504.07701-b31b1b.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>A package for creating the matrix product state of a free fermion (Gaussian) state.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package is currently unregistered. To install it, first install Julia, start the Julia REPL by typing <code>julia</code> at your command line, and run the command:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt;]

pkg&gt; add https://github.com/ITensor/ITensorGaussianMPS.jl#main
"><pre>julia<span class="pl-k">&gt;</span>]

pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>ITensor<span class="pl-k">/</span>ITensorGaussianMPS<span class="pl-k">.</span>jl<span class="pl-c"><span class="pl-c">#</span>main</span></pre></div>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>This can help create starting states for DMRG. For example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ITensors
using ITensorGaussianMPS

# Half filling
N = 20
Nf = N÷2

@show N, Nf

# Hopping
t = 1.0

# Free fermion hopping Hamiltonian
h = Hermitian(diagm(1 =&gt; fill(-t, N-1), -1 =&gt; fill(-t, N-1)))
_, u = eigen(h)

# Get the Slater determinant
Φ = u[:, 1:Nf]

# Create an mps for the free fermion ground state
s = siteinds(&quot;Fermion&quot;, N; conserve_qns = true)
ψ0 = slater_determinant_to_mps(s, Φ; blocksize = 4)

# Make an interacting Hamiltonian
U = 1.0
@show U

ampo = AutoMPO()
for b in 1:N-1
  ampo .+= -t,&quot;Cdag&quot;,b,&quot;C&quot;,b+1
  ampo .+= -t,&quot;Cdag&quot;,b+1,&quot;C&quot;,b
end
for b in 1:N
  ampo .+= U, &quot;Cdag*C&quot;, b
end
H = MPO(ampo, s)

println(&quot;\nFree fermion starting energy&quot;)
@show inner(ψ0, H, ψ0)

# Random starting state
ψr = randomMPS(s, n -&gt; n ≤ Nf ? &quot;1&quot; : &quot;0&quot;)

println(&quot;\nRandom state starting energy&quot;)
@show inner(ψr, H, ψr)

println(&quot;\nRun dmrg with random starting state&quot;)
sweeps = Sweeps(10)
maxdim!(sweeps,10,20,40,60)
cutoff!(sweeps,1E-12)
@time dmrg(H, ψr, sweeps)

println(&quot;\nRun dmrg with free fermion starting state&quot;)
sweeps = Sweeps(4)
maxdim!(sweeps,60)
cutoff!(sweeps,1E-12)
@time dmrg(H, ψ0, sweeps)
"><pre><span class="pl-k">using</span> ITensors
<span class="pl-k">using</span> ITensorGaussianMPS

<span class="pl-c"><span class="pl-c">#</span> Half filling</span>
N <span class="pl-k">=</span> <span class="pl-c1">20</span>
Nf <span class="pl-k">=</span> N<span class="pl-k">÷</span><span class="pl-c1">2</span>

<span class="pl-c1">@show</span> N, Nf

<span class="pl-c"><span class="pl-c">#</span> Hopping</span>
t <span class="pl-k">=</span> <span class="pl-c1">1.0</span>

<span class="pl-c"><span class="pl-c">#</span> Free fermion hopping Hamiltonian</span>
h <span class="pl-k">=</span> <span class="pl-c1">Hermitian</span>(<span class="pl-c1">diagm</span>(<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">fill</span>(<span class="pl-k">-</span>t, N<span class="pl-k">-</span><span class="pl-c1">1</span>), <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">fill</span>(<span class="pl-k">-</span>t, N<span class="pl-k">-</span><span class="pl-c1">1</span>)))
_, u <span class="pl-k">=</span> <span class="pl-c1">eigen</span>(h)

<span class="pl-c"><span class="pl-c">#</span> Get the Slater determinant</span>
Φ <span class="pl-k">=</span> u[:, <span class="pl-c1">1</span><span class="pl-k">:</span>Nf]

<span class="pl-c"><span class="pl-c">#</span> Create an mps for the free fermion ground state</span>
s <span class="pl-k">=</span> <span class="pl-c1">siteinds</span>(<span class="pl-s"><span class="pl-pds">"</span>Fermion<span class="pl-pds">"</span></span>, N; conserve_qns <span class="pl-k">=</span> <span class="pl-c1">true</span>)
ψ0 <span class="pl-k">=</span> <span class="pl-c1">slater_determinant_to_mps</span>(s, Φ; blocksize <span class="pl-k">=</span> <span class="pl-c1">4</span>)

<span class="pl-c"><span class="pl-c">#</span> Make an interacting Hamiltonian</span>
U <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
<span class="pl-c1">@show</span> U

ampo <span class="pl-k">=</span> <span class="pl-c1">AutoMPO</span>()
<span class="pl-k">for</span> b <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>N<span class="pl-k">-</span><span class="pl-c1">1</span>
  ampo <span class="pl-k">.+</span><span class="pl-k">=</span> <span class="pl-k">-</span>t,<span class="pl-s"><span class="pl-pds">"</span>Cdag<span class="pl-pds">"</span></span>,b,<span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>,b<span class="pl-k">+</span><span class="pl-c1">1</span>
  ampo <span class="pl-k">.+</span><span class="pl-k">=</span> <span class="pl-k">-</span>t,<span class="pl-s"><span class="pl-pds">"</span>Cdag<span class="pl-pds">"</span></span>,b<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>,b
<span class="pl-k">end</span>
<span class="pl-k">for</span> b <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>N
  ampo <span class="pl-k">.+</span><span class="pl-k">=</span> U, <span class="pl-s"><span class="pl-pds">"</span>Cdag*C<span class="pl-pds">"</span></span>, b
<span class="pl-k">end</span>
H <span class="pl-k">=</span> <span class="pl-c1">MPO</span>(ampo, s)

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span>Free fermion starting energy<span class="pl-pds">"</span></span>)
<span class="pl-c1">@show</span> <span class="pl-c1">inner</span>(ψ0, H, ψ0)

<span class="pl-c"><span class="pl-c">#</span> Random starting state</span>
ψr <span class="pl-k">=</span> <span class="pl-c1">randomMPS</span>(s, n <span class="pl-k">-&gt;</span> n <span class="pl-k">≤</span> Nf <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>)

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span>Random state starting energy<span class="pl-pds">"</span></span>)
<span class="pl-c1">@show</span> <span class="pl-c1">inner</span>(ψr, H, ψr)

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span>Run dmrg with random starting state<span class="pl-pds">"</span></span>)
sweeps <span class="pl-k">=</span> <span class="pl-c1">Sweeps</span>(<span class="pl-c1">10</span>)
<span class="pl-c1">maxdim!</span>(sweeps,<span class="pl-c1">10</span>,<span class="pl-c1">20</span>,<span class="pl-c1">40</span>,<span class="pl-c1">60</span>)
<span class="pl-c1">cutoff!</span>(sweeps,<span class="pl-c1">1E-12</span>)
<span class="pl-c1">@time</span> <span class="pl-c1">dmrg</span>(H, ψr, sweeps)

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span>Run dmrg with free fermion starting state<span class="pl-pds">"</span></span>)
sweeps <span class="pl-k">=</span> <span class="pl-c1">Sweeps</span>(<span class="pl-c1">4</span>)
<span class="pl-c1">maxdim!</span>(sweeps,<span class="pl-c1">60</span>)
<span class="pl-c1">cutoff!</span>(sweeps,<span class="pl-c1">1E-12</span>)
<span class="pl-c1">@time</span> <span class="pl-c1">dmrg</span>(H, ψ0, sweeps)</pre></div>
<p>This will output something like:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(N, Nf) = (20, 10)
U = 1.0

Free fermion starting energy
inner(ψ0, H, ψ0) = -2.3812770621299357

Random state starting energy
inner(ψr, H, ψr) = 10.0

Run dmrg with random starting state
After sweep 1 energy=6.261701784151 maxlinkdim=2 time=0.041
After sweep 2 energy=2.844954346204 maxlinkdim=5 time=0.056
After sweep 3 energy=0.245282430911 maxlinkdim=14 time=0.071
After sweep 4 energy=-1.439072132586 maxlinkdim=32 time=0.098
After sweep 5 energy=-2.220202191945 maxlinkdim=59 time=0.148
After sweep 6 energy=-2.376787647893 maxlinkdim=60 time=0.186
After sweep 7 energy=-2.381484153892 maxlinkdim=60 time=0.167
After sweep 8 energy=-2.381489999291 maxlinkdim=57 time=0.233
After sweep 9 energy=-2.381489999595 maxlinkdim=49 time=0.175
After sweep 10 energy=-2.381489999595 maxlinkdim=49 time=0.172
  1.349192 seconds (8.94 M allocations: 1.027 GiB, 18.05% gc time)

Run dmrg with free fermion starting state
After sweep 1 energy=-2.381489929965 maxlinkdim=49 time=0.139
After sweep 2 energy=-2.381489999588 maxlinkdim=49 time=0.165
After sweep 3 energy=-2.381489999594 maxlinkdim=48 time=0.161
After sweep 4 energy=-2.381489999594 maxlinkdim=48 time=0.169
  0.637021 seconds (4.59 M allocations: 525.989 MiB, 17.09% gc time)
"><pre>(N, Nf) <span class="pl-k">=</span> (<span class="pl-c1">20</span>, <span class="pl-c1">10</span>)
U <span class="pl-k">=</span> <span class="pl-c1">1.0</span>

Free fermion starting energy
<span class="pl-en">inner</span>(ψ0, H, ψ0) <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">2.3812770621299357</span>

Random state starting energy
<span class="pl-en">inner</span>(ψr, H, ψr) <span class="pl-k">=</span> <span class="pl-c1">10.0</span>

Run dmrg with random starting state
After sweep <span class="pl-c1">1</span> energy<span class="pl-k">=</span><span class="pl-c1">6.261701784151</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">2</span> time<span class="pl-k">=</span><span class="pl-c1">0.041</span>
After sweep <span class="pl-c1">2</span> energy<span class="pl-k">=</span><span class="pl-c1">2.844954346204</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">5</span> time<span class="pl-k">=</span><span class="pl-c1">0.056</span>
After sweep <span class="pl-c1">3</span> energy<span class="pl-k">=</span><span class="pl-c1">0.245282430911</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">14</span> time<span class="pl-k">=</span><span class="pl-c1">0.071</span>
After sweep <span class="pl-c1">4</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1.439072132586</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">32</span> time<span class="pl-k">=</span><span class="pl-c1">0.098</span>
After sweep <span class="pl-c1">5</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.220202191945</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">59</span> time<span class="pl-k">=</span><span class="pl-c1">0.148</span>
After sweep <span class="pl-c1">6</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.376787647893</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">60</span> time<span class="pl-k">=</span><span class="pl-c1">0.186</span>
After sweep <span class="pl-c1">7</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381484153892</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">60</span> time<span class="pl-k">=</span><span class="pl-c1">0.167</span>
After sweep <span class="pl-c1">8</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489999291</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">57</span> time<span class="pl-k">=</span><span class="pl-c1">0.233</span>
After sweep <span class="pl-c1">9</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489999595</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">49</span> time<span class="pl-k">=</span><span class="pl-c1">0.175</span>
After sweep <span class="pl-c1">10</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489999595</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">49</span> time<span class="pl-k">=</span><span class="pl-c1">0.172</span>
  <span class="pl-c1">1.349192</span> seconds (<span class="pl-c1">8.94</span> M allocations<span class="pl-k">:</span> <span class="pl-c1">1.027</span> GiB, <span class="pl-c1">18.05</span><span class="pl-k">%</span> gc time)

Run dmrg with free fermion starting state
After sweep <span class="pl-c1">1</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489929965</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">49</span> time<span class="pl-k">=</span><span class="pl-c1">0.139</span>
After sweep <span class="pl-c1">2</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489999588</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">49</span> time<span class="pl-k">=</span><span class="pl-c1">0.165</span>
After sweep <span class="pl-c1">3</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489999594</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">48</span> time<span class="pl-k">=</span><span class="pl-c1">0.161</span>
After sweep <span class="pl-c1">4</span> energy<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2.381489999594</span> maxlinkdim<span class="pl-k">=</span><span class="pl-c1">48</span> time<span class="pl-k">=</span><span class="pl-c1">0.169</span>
  <span class="pl-c1">0.637021</span> seconds (<span class="pl-c1">4.59</span> M allocations<span class="pl-k">:</span> <span class="pl-c1">525.989</span> MiB, <span class="pl-c1">17.09</span><span class="pl-k">%</span> gc time)</pre></div>
</article></div>