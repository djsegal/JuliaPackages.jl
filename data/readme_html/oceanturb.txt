<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-oceanturbjl" class="anchor" aria-hidden="true" href="#oceanturbjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OceanTurb.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>License</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://glwagner.github.io/OceanTurb.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.com/github/glwagner/OceanTurb.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/85e91816afc5d84e3b5244f111cf9e410069821d/68747470733a2f2f7472617669732d63692e636f6d2f676c7761676e65722f4f6365616e547572622e6a6c2e7376673f6272616e63683d6d6173746572" alt="travis" data-canonical-src="https://travis-ci.com/glwagner/OceanTurb.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://mit-license.org/" rel="nofollow"><img src="https://camo.githubusercontent.com/311762166ef25238116d3cadd22fcb6091edab98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667" alt="MIT license" data-canonical-src="https://img.shields.io/badge/License-MIT-blue.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p><code>OceanTurb.jl</code> provides software for solving one-dimensional
models that approximate the physics of the
ocean's turbulent surface boundary layer.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Open <a href="https://julialang.org" rel="nofollow">julia</a>, press <code>]</code> to enter package manager mode, and type</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add OceanTurb</pre></div>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example(s)</h2>
<p>With <code>OceanTurb.jl</code> installed, try</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> OceanTurb

<span class="pl-c1">@use_pyplot_utils</span> <span class="pl-c"><span class="pl-c">#</span> add utilities for plotting OceanTurb Fields</span>

     N <span class="pl-k">=</span> <span class="pl-c1">128</span>        <span class="pl-c"><span class="pl-c">#</span> Model resolution</span>
     L <span class="pl-k">=</span> <span class="pl-c1">128</span>        <span class="pl-c"><span class="pl-c">#</span> Vertical extent of the model domain</span>
    Qb <span class="pl-k">=</span> <span class="pl-c1">1e-7</span>       <span class="pl-c"><span class="pl-c">#</span> Surface buoyancy flux (positive implies cooling)</span>
  dTdz <span class="pl-k">=</span> <span class="pl-c1">1e-3</span>       <span class="pl-c"><span class="pl-c">#</span> Interior/initial temperature gradient</span>
    Δt <span class="pl-k">=</span> <span class="pl-c1">10</span>minute   <span class="pl-c"><span class="pl-c">#</span> Time step size</span>
tfinal <span class="pl-k">=</span> <span class="pl-c1">8</span>hour      <span class="pl-c"><span class="pl-c">#</span> Final time</span>

<span class="pl-c"><span class="pl-c">#</span> Build the model with a Backward Euler timestepper</span>
model <span class="pl-k">=</span> KPP<span class="pl-k">.</span><span class="pl-c1">Model</span>(N<span class="pl-k">=</span>N, L<span class="pl-k">=</span>L, stepper<span class="pl-k">=</span><span class="pl-c1">:BackwardEuler</span>)

<span class="pl-c"><span class="pl-c">#</span> Set initial condition</span>
<span class="pl-en">T₀</span>(z) <span class="pl-k">=</span> <span class="pl-c1">20</span> <span class="pl-k">+</span> dTdz <span class="pl-k">*</span> z
model<span class="pl-k">.</span>solution<span class="pl-k">.</span>T <span class="pl-k">=</span> T₀

<span class="pl-c"><span class="pl-c">#</span> Set boundary conditions</span>
model<span class="pl-k">.</span>bcs<span class="pl-k">.</span>T<span class="pl-k">.</span>top <span class="pl-k">=</span> <span class="pl-c1">FluxBoundaryCondition</span>(Qb <span class="pl-k">/</span> (model<span class="pl-k">.</span>constants<span class="pl-k">.</span>α <span class="pl-k">*</span> model<span class="pl-k">.</span>constants<span class="pl-k">.</span>g))
model<span class="pl-k">.</span>bcs<span class="pl-k">.</span>T<span class="pl-k">.</span>bottom <span class="pl-k">=</span> <span class="pl-c1">GradientBoundaryCondition</span>(dTdz)

<span class="pl-c"><span class="pl-c">#</span> Run the model</span>
<span class="pl-c1">run_until!</span>(model, Δt, tfinal)

<span class="pl-c1">plot</span>(model<span class="pl-k">.</span>solution<span class="pl-k">.</span>T)
<span class="pl-c1">removespines</span>(<span class="pl-s"><span class="pl-pds">"</span>top<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>right<span class="pl-pds">"</span></span>)
<span class="pl-c1">xlabel</span>(<span class="pl-s"><span class="pl-pds">"</span>Temperature (<span class="pl-cce">\$</span> {}^<span class="pl-cce">\\</span>circ <span class="pl-cce">\\</span>mathrm{C} <span class="pl-cce">\$</span>)<span class="pl-pds">"</span></span>)
<span class="pl-c1">ylabel</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span>z <span class="pl-cce">\,</span> <span class="pl-cce">\m</span>athrm{(m)}<span class="pl-pds">"</span></span>)</pre></div>
<p>to make a plot that looks something like this:</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/figs/kpp_free_convection.png"><img src="examples/figs/kpp_free_convection.png" width="600" style="max-width:100%;"></a></p>
<p>For a more complicated example, see <code>examples/modular_kpp_example.jl</code>
to produce</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/figs/free_convection_intermodel.png"><img src="examples/figs/free_convection_intermodel.png" width="600" style="max-width:100%;"></a></p>
<p>which compares various flavors of the 'KPP' boundary layer model
with one another.</p>
<p>Check our
<a href="https://github.com/glwagner/OceanTurb.jl/blob/master/examples/diffusion_example.ipynb">diffusion examples notebook</a>
and scripts in <code>examples/</code> to get started.</p>
<h1><a id="user-content-the-turbulence-models" class="anchor" aria-hidden="true" href="#the-turbulence-models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The turbulence models</h1>
<p>Check the documentation or <code>src/models/</code> for the latest update
on turbulence models we have implemented.</p>
<h1><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h1>
<p><a href="glwagner.github.io">Gregory Wagner</a>.</p>
</article></div>