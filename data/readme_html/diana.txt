<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p align="center"><a target="_blank" rel="noopener noreferrer" href="diana-banner.png"><img src="diana-banner.png" width="25%" style="max-width:100%;"></a></p>
<p align="center">
<strong>A Julia GraphQL client/server implementation.</strong>
<br><br>
<a href="https://travis-ci.org/codeneomatrix/Diana.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6929411fb63dec4eaf714372eeeb149cb47a99e0/68747470733a2f2f7472617669732d63692e6f72672f636f64656e656f6d61747269782f4469616e612e6a6c2e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/codeneomatrix/Diana.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/codeneomatrix/Diana.jl" rel="nofollow">
  <img src="https://camo.githubusercontent.com/9f2922ea96531ecaf67ad2f685d83541e651907d/68747470733a2f2f636f6465636f762e696f2f67682f636f64656e656f6d61747269782f4469616e612e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" data-canonical-src="https://codecov.io/gh/codeneomatrix/Diana.jl/branch/master/graph/badge.svg" style="max-width:100%;">
</a>
<a href="https://codeneomatrix.github.io/Diana.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://codeneomatrix.github.io/Diana.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/fd7a93e9eedafe6205ebee65c9e3579f44df25b7/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"></a>
<a href="https://raw.githubusercontent.com/codeneomatrix/Diana.jl/master/LICENSE.md" rel="nofollow"><img src="https://camo.githubusercontent.com/311762166ef25238116d3cadd22fcb6091edab98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667" data-canonical-src="https://img.shields.io/badge/License-MIT-blue.svg" style="max-width:100%;"></a>
</p>
<h4><a id="user-content-contributions-welcomed" class="anchor" aria-hidden="true" href="#contributions-welcomed"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributions welcomed!</h4>
<p>This repository is an implementation of a GraphQL server, a query language for API created by Facebook.
See more complete documentation at <a href="http://graphql.org/" rel="nofollow">http://graphql.org/</a></p>
<p>Looking for help? Find resources from the community.</p>
<h3><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Getting Started</h3>
<p>An overview of GraphQL in general is available in the <a href="https://github.com/facebook/graphql/blob/master/README.md">README</a> for the Specification for GraphQL.</p>
<p>This package is intended to help you building GraphQL schemas/types fast and easily.</p>
<ul>
<li><strong>Easy to use:</strong> Diana.jl helps you use GraphQL in Julia without effort.</li>
<li><strong>Data agnostic:</strong> Diana.jl supports any type of data source: SQL, NoSQL, etc. The intent is to provide a complete API and make your data available through GraphQL.</li>
<li><strong>Make queries:</strong> Diana.jl allows queries to graphql schemas.</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">&gt;</span> add Diana
<span class="pl-c"><span class="pl-c">#</span>Release</span>
pkg<span class="pl-k">&gt;</span> add Diana<span class="pl-c"><span class="pl-c">#</span>master</span>
<span class="pl-c"><span class="pl-c">#</span>Development</span></pre></div>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>
<h2><a id="user-content-client" class="anchor" aria-hidden="true" href="#client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Client</h2>
<div class="highlight highlight-source-julia"><pre>query <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">{</span>
<span class="pl-s">  neomatrix{</span>
<span class="pl-s">    nombre</span>
<span class="pl-s">    linkedin</span>
<span class="pl-s">  }</span>
<span class="pl-s">}</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>

r <span class="pl-k">=</span> <span class="pl-c1">Queryclient</span>(<span class="pl-s"><span class="pl-pds">"</span>https://neomatrix.herokuapp.com/graphql<span class="pl-pds">"</span></span>,query)</pre></div>
<div class="highlight highlight-source-julia"><pre>client <span class="pl-k">=</span> <span class="pl-c1">GraphQLClient</span>(<span class="pl-s"><span class="pl-pds">"</span>https://api.graph.cool/simple/v1/movies<span class="pl-pds">"</span></span>,auth<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Bearer my-jwt-token<span class="pl-pds">"</span></span>)

query2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">query getMovie(<span class="pl-cce">\$</span>title: String!) {</span>
<span class="pl-s">  Movie(title:<span class="pl-cce">\$</span>title) {</span>
<span class="pl-s">    releaseDate</span>
<span class="pl-s">    actors {</span>
<span class="pl-s">      name</span>
<span class="pl-s">    }</span>
<span class="pl-s">  }</span>
<span class="pl-s">}</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
r <span class="pl-k">=</span> client<span class="pl-k">.</span><span class="pl-c1">Query</span>(query2,vars<span class="pl-k">=</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Inception<span class="pl-pds">"</span></span>))

r<span class="pl-k">.</span>Data 
<span class="pl-c"><span class="pl-c">#</span> "{\"data\":{\"Movie\":{\"releaseDate\":\"2010-08-28T20:00:00.000Z\",\"actors\":[{\"name\":\"Leonardo DiCaprio\"},{\"name\":\"Ellen Page\"},{\"name\":\"Tom Hardy\"},{\"name\":\"Joseph Gordon-Levitt\"},{\"name\":\"Marion Cotillard\"}]}}}"</span>
</pre></div>
<h2><a id="user-content-server" class="anchor" aria-hidden="true" href="#server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Server</h2>
<p>Here is one example for you to get started:</p>
<div class="highlight highlight-source-julia"><pre>schema <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(
<span class="pl-s"><span class="pl-pds">"</span>query<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Query<span class="pl-pds">"</span></span>

,<span class="pl-s"><span class="pl-pds">"</span>Query<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(
    <span class="pl-s"><span class="pl-pds">"</span>persona<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>tipo<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Persona<span class="pl-pds">"</span></span>)
   ,<span class="pl-s"><span class="pl-pds">"</span>neomatrix<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>tipo<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Persona<span class="pl-pds">"</span></span>)
   )

,<span class="pl-s"><span class="pl-pds">"</span>Persona<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(
    <span class="pl-s"><span class="pl-pds">"</span>edad<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>tipo<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Int<span class="pl-pds">"</span></span>)
   ,<span class="pl-s"><span class="pl-pds">"</span>nombre<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>tipo<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>String<span class="pl-pds">"</span></span>)
  )

)


 resolvers<span class="pl-k">=</span><span class="pl-c1">Dict</span>(
    <span class="pl-s"><span class="pl-pds">"</span>Query<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span>(
        <span class="pl-s"><span class="pl-pds">"</span>neomatrix<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (root,args,ctx,info)<span class="pl-k">-&gt;</span>(<span class="pl-k">return</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>nombre<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>josue<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>edad<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">26</span>))
        ,<span class="pl-s"><span class="pl-pds">"</span>persona<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (root,args,ctx,info)<span class="pl-k">-&gt;</span>(<span class="pl-k">return</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>nombre<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Diana<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>edad<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">25</span>))
    )
    ,<span class="pl-s"><span class="pl-pds">"</span>Persona<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span>(
      <span class="pl-s"><span class="pl-pds">"</span>edad<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (root,args,ctx,info)<span class="pl-k">-&gt;</span>(<span class="pl-k">return</span> root[<span class="pl-s"><span class="pl-pds">"</span>edad<span class="pl-pds">"</span></span>])
    )
)

my_schema <span class="pl-k">=</span> <span class="pl-c1">Schema</span>(schema, resolvers)</pre></div>
<p>Then Querying <code>Diana.Schema</code> is as simple as:</p>
<div class="highlight highlight-source-julia"><pre>query<span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">{</span>
<span class="pl-s">  neomatrix{</span>
<span class="pl-s">  	nombre</span>
<span class="pl-s">  }</span>
<span class="pl-s">}</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
result <span class="pl-k">=</span> my_schema<span class="pl-k">.</span><span class="pl-c1">execute</span>(query)
<span class="pl-c"><span class="pl-c">#</span> "{\"data\":{\"neomatrix\":{\"nombre\":\"josue\"}}}"</span></pre></div>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>TODO</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Client</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Lexer</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Parser</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Query validation</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Schemas / Types</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Query execution
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Arguments</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Scalar types</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Multiple forms of resolution</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Extract variable values</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Complex types (List, Object, etc)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Fragments in queries</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Directives</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Mutation execution</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Subscriptions execution</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Introspection</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Depth of the query</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Middleware</li>
</ul>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p>Documentation and links to additional resources are available at
<a href="https://codeneomatrix.github.io/Diana.jl/v0.2/" rel="nofollow">https://codeneomatrix.github.io/Diana.jl/v0.2/</a></p>
</article></div>