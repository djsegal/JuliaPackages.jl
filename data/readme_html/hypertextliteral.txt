<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hypertextliteraljl" class="anchor" aria-hidden="true" href="#hypertextliteraljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HypertextLiteral.jl</h1>
<p><em>HypertextLiteral is a Julia package for generating <a href="https://en.wikipedia.org/wiki/HTML" rel="nofollow">HTML</a>,
<a href="https://en.wikipedia.org/wiki/Scalable_Vector_Graphics" rel="nofollow">SVG</a>, and other <a href="https://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language" rel="nofollow">SGML</a> tagged content. It works similar to
Julia string interpolation, only that it tracks hypertext escaping needs
and provides handy conversions dependent upon context.</em></p>
<p><a href="https://mechanicalrabbit.github.io/HypertextLiteral.jl/stable/" rel="nofollow"><img src="https://github.com/MechanicalRabbit/HypertextLiteral.jl/workflows/docs-stable/badge.svg" alt="Stable Docs" style="max-width:100%;"></a> <a href="https://mechanicalrabbit.github.io/HypertextLiteral.jl/dev/" rel="nofollow"><img src="https://github.com/MechanicalRabbit/HypertextLiteral.jl/workflows/docs-dev/badge.svg" alt="Dev Docs" style="max-width:100%;"></a> <a href="https://github.com/MechanicalRabbit/HypertextLiteral.jl/actions?query=workflow%3Arelease-ci"><img src="https://github.com/MechanicalRabbit/HypertextLiteral.jl/workflows/release-ci/badge.svg" alt="Release Build" style="max-width:100%;"></a> <a href="https://github.com/MechanicalRabbit/HypertextLiteral.jl/actions?query=workflow%3Anightly-ci"><img src="https://github.com/MechanicalRabbit/HypertextLiteral.jl/workflows/nightly-ci/badge.svg" alt="Nightly Build" style="max-width:100%;"></a> <a href="https://codecov.io/gh/MechanicalRabbit/HypertextLiteral.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/80d0fd427a8450883222bb0234096d3e0baeaaae064e429becbe517fd52eec7b/68747470733a2f2f636f6465636f762e696f2f67682f4d656368616e6963616c5261626269742f4879706572746578744c69746572616c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage" data-canonical-src="https://codecov.io/gh/MechanicalRabbit/HypertextLiteral.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a> <a href="https://julialang.zulipchat.com/#narrow/stream/267585-HypertextLiteral" rel="nofollow"><img src="https://camo.githubusercontent.com/79870c182a82f89b1415d1c14a5a58425743d91949f430723d2426a36da3f6c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6a756c69612d2d7a756c69702d626c7565" alt="Zulip Chat" data-canonical-src="https://img.shields.io/badge/chat-julia--zulip-blue" style="max-width:100%;"></a> <a href="https://raw.githubusercontent.com/MechanicalRabbit/HypertextLiteral.jl/master/LICENSE.md" rel="nofollow"><img src="https://camo.githubusercontent.com/b380e5f588f9ea03f460359407e0ac9786ee1fa8139967d43c7e365c3d60552b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4953432d627269676874677265656e2e737667" alt="ISC License" data-canonical-src="https://img.shields.io/badge/license-ISC-brightgreen.svg" style="max-width:100%;"></a></p>
<blockquote>
<p>This project is inspired by <a href="https://github.com/observablehq/htl">Hypertext Literal</a> by Mike Bostock
(<a href="https://github.com/mbostock">@mbostock</a>) available at <a href="https://observablehq.com/@observablehq/htl" rel="nofollow">here</a>. This work
is based upon a port to Julia written by Michiel Dral with significant
architectural feedback by Kirill Simonov (<a href="https://github.com/xitology">@xitology</a>).</p>
</blockquote>
<p>This package provides the macro <code>@htl</code> which returns an object that can
be rendered to <code>MIME"text/html"</code> displays. This macro provides
contextual interpolation sensible to the needs of HTML construction.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
    using HypertextLiteral

    books = [
     (name=&quot;Who Gets What &amp; Why&quot;, year=2012, authors=[&quot;Alvin Roth&quot;]),
     (name=&quot;Switch&quot;, year=2010, authors=[&quot;Chip Heath&quot;, &quot;Dan Heath&quot;]),
     (name=&quot;Governing The Commons&quot;, year=1990, authors=[&quot;Elinor Ostrom&quot;])]

    render_row(book) = @htl(&quot;&quot;&quot;
      &lt;tr&gt;&lt;td&gt;$(book.name) ($(book.year))&lt;td&gt;$(join(book.authors, &quot; &amp; &quot;))
    &quot;&quot;&quot;)

    render_table(books) = @htl(&quot;&quot;&quot;
      &lt;table&gt;&lt;caption&gt;&lt;h3&gt;Selected Books&lt;/h3&gt;&lt;/caption&gt;
      &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Book&lt;th&gt;Authors&lt;tbody&gt;
      $((render_row(b) for b in books))&lt;/tbody&gt;&lt;/table&gt;&quot;&quot;&quot;)

    display(&quot;text/html&quot;, render_table(books))
    #=&gt;
    &lt;table&gt;&lt;caption&gt;&lt;h3&gt;Selected Books&lt;/h3&gt;&lt;/caption&gt;
    &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Book&lt;th&gt;Authors&lt;tbody&gt;
      &lt;tr&gt;&lt;td&gt;Who Gets What &amp;amp; Why (2012)&lt;td&gt;Alvin Roth
      &lt;tr&gt;&lt;td&gt;Switch (2010)&lt;td&gt;Chip Heath &amp;amp; Dan Heath
      &lt;tr&gt;&lt;td&gt;Governing The Commons (1990)&lt;td&gt;Elinor Ostrom
    &lt;/tbody&gt;&lt;/table&gt;
    =#

"><pre>    <span class="pl-k">using</span> HypertextLiteral

    books <span class="pl-k">=</span> [
     (name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Who Gets What &amp; Why<span class="pl-pds">"</span></span>, year<span class="pl-k">=</span><span class="pl-c1">2012</span>, authors<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Alvin Roth<span class="pl-pds">"</span></span>]),
     (name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Switch<span class="pl-pds">"</span></span>, year<span class="pl-k">=</span><span class="pl-c1">2010</span>, authors<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Chip Heath<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Dan Heath<span class="pl-pds">"</span></span>]),
     (name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Governing The Commons<span class="pl-pds">"</span></span>, year<span class="pl-k">=</span><span class="pl-c1">1990</span>, authors<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Elinor Ostrom<span class="pl-pds">"</span></span>])]

    <span class="pl-en">render_row</span>(book) <span class="pl-k">=</span> <span class="pl-c1">@htl</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">      &lt;tr&gt;&lt;td&gt;<span class="pl-v">$(book<span class="pl-k">.</span>name)</span> (<span class="pl-v">$(book<span class="pl-k">.</span>year)</span>)&lt;td&gt;<span class="pl-v">$(<span class="pl-c1">join</span>(book<span class="pl-k">.</span>authors, <span class="pl-s"><span class="pl-pds">"</span> &amp; <span class="pl-pds">"</span></span>))</span></span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>)

    <span class="pl-en">render_table</span>(books) <span class="pl-k">=</span> <span class="pl-c1">@htl</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">      &lt;table&gt;&lt;caption&gt;&lt;h3&gt;Selected Books&lt;/h3&gt;&lt;/caption&gt;</span>
<span class="pl-s">      &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Book&lt;th&gt;Authors&lt;tbody&gt;</span>
<span class="pl-s">      <span class="pl-v">$((<span class="pl-c1">render_row</span>(b) <span class="pl-k">for</span> b <span class="pl-k">in</span> books))<span class="pl-k">&lt;</span><span class="pl-k">/</span>tbody<span class="pl-k">&gt;&lt;</span><span class="pl-k">/</span>table<span class="pl-k">&gt;</span><span class="pl-s"><span class="pl-pds">"""</span>)</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s"></span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">    display("text/html", render_table(books))</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">    #=&gt;</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">    &lt;table&gt;&lt;caption&gt;&lt;h3&gt;Selected Books&lt;/h3&gt;&lt;/caption&gt;</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">    &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Book&lt;th&gt;Authors&lt;tbody&gt;</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">      &lt;tr&gt;&lt;td&gt;Who Gets What &amp;amp; Why (2012)&lt;td&gt;Alvin Roth</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">      &lt;tr&gt;&lt;td&gt;Switch (2010)&lt;td&gt;Chip Heath &amp;amp; Dan Heath</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">      &lt;tr&gt;&lt;td&gt;Governing The Commons (1990)&lt;td&gt;Elinor Ostrom</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">    &lt;/tbody&gt;&lt;/table&gt;</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">    =#</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s"></span></span></span></pre></div>
<p>This library implements many features for working with HTML data within
the Julia language, including:</p>
<ul>
<li>Performant escaping of interpolated values</li>
<li>Handles boolean valued attributes, such as <code>disabled</code>, <code>checked</code></li>
<li>Serialization of <code>Pair</code> and <code>Tuple</code> objects as attribute pairs</li>
<li>Conversion of <code>snake_case</code> =&gt; <code>camel-case</code> for attribute names</li>
<li>Support for CSS style formatting via <code>Pair</code>, <code>Tuple</code> and <code>Dict</code></li>
<li>Translation of Julia values to Javascript within <code>script</code> tag</li>
<li>Direct inclusion of objects (like <code>HTML</code>) showable by <code>MIME"text/html"</code></li>
<li>Extension API for customizing object display in various contexts</li>
</ul>
<p>When <code>AbstractString</code>, <code>Integer</code> or <code>AbsractFloat</code> values are
interpolated as content, their escaped values are printed to the output.
By default, other values are printed with a <code>&lt;span&gt;</code> wrapper, with its
<code>class</code> reflecting the module and type names.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="    display(&quot;text/html&quot;, @htl(&quot;&lt;div&gt;$missing&lt;/div&gt;&quot;)
    #-&gt; &lt;div&gt;&lt;span class=&quot;Base-Missing&quot;&gt;missing&lt;/span&gt;&lt;/div&gt;
"><pre>    <span class="pl-c1">display</span>(<span class="pl-s"><span class="pl-pds">"</span>text/html<span class="pl-pds">"</span></span>, <span class="pl-c1">@htl</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;div&gt;<span class="pl-v">$missing</span>&lt;/div&gt;<span class="pl-pds">"</span></span>)
    <span class="pl-c"><span class="pl-c">#</span>-&gt; &lt;div&gt;&lt;span class="Base-Missing"&gt;missing&lt;/span&gt;&lt;/div&gt;</span></pre></div>
<p>By default, this will show up as <code>missing</code> in the browser display.
However, a style can be used to change this display.</p>
<div class="highlight highlight-text-html-basic position-relative" data-snippet-clipboard-copy-content="&lt;style&gt;
span.Base-Missing {visibility: collapse;}
span.Base-Missing::before {content: &quot;N/A&quot;; visibility: visible;}
&lt;/style&gt;
"><pre><span class="pl-kos">&lt;</span><span class="pl-ent">style</span><span class="pl-kos">&gt;</span>
<span class="pl-ent">span</span>.<span class="pl-c1">Base-Missing</span> {<span class="pl-c1">visibility</span><span class="pl-kos">:</span> collapse;}
<span class="pl-ent">span</span>.<span class="pl-c1">Base-Missing</span>::<span class="pl-ent">before</span> {<span class="pl-c1">content</span><span class="pl-kos">:</span> <span class="pl-s">"N/A"</span>; <span class="pl-c1">visibility</span><span class="pl-kos">:</span> visible;}
<span class="pl-kos">&lt;/</span><span class="pl-ent">style</span><span class="pl-kos">&gt;</span></pre></div>
<p>For more detail, please see the <a href="https://mechanicalrabbit.github.io/HypertextLiteral.jl/stable/" rel="nofollow">documentation</a> and
join us on <a href="https://julialang.zulipchat.com/#narrow/stream/267585-HypertextLiteral" rel="nofollow">Julia's Zulip</a>.</p>
</article></div>