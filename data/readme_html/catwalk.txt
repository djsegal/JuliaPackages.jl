<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-catwalkjl" class="anchor" aria-hidden="true" href="#catwalkjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Catwalk.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"></a>
<a href="https://tisztamo.github.io/Catwalk.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/tisztamo/Catwalk.jl/actions/workflows/ci.yml"><img src="https://github.com/tisztamo/Catwalk.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width:100%;"></a></p>
<p>Catwalk.jl can speed up long-running Julia processes by minimizing the
overhead of dynamic dispatch. It is a JIT compiler that continuosly
re-optimizes dispatch code based on data collected at runtime.</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/catwalk-speeddemo.gif"><img src="docs/src/assets/catwalk-speeddemo.gif" alt="Speedup demo" style="max-width:100%;"></a>
<a href="https://github.com/tisztamo/Catwalk.jl/blob/main/test/scheduling.jl">source code of this test</a></p>
<p>It profiles user-specified call sites, estimating the distribution of
dynamically dispatched types during runtime, and generates fast
static routes for the most frequent ones on the fly.</p>
<p>The statistical profiler has very low overhead and can be configured
to handle situations where the distribution of dispatched types
changes relatively fast.</p>
<p>To minimize compilation overhead, recompilation only occurs when the
distribution changed enough and the tunable cost model predicts
significant speedup compared to the best version that was previously
compiled.</p>
<p><a href="https://tisztamo.github.io/Catwalk.jl/dev/" rel="nofollow">Documentation (dev)</a></p>
</article></div>