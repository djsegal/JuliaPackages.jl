<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-graphvisualize" class="anchor" aria-hidden="true" href="#graphvisualize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>GraphVisualize</h1>
<p>Graph visualization using <code>GLVisualize.jl</code> by Simon Danisch. Tightly integrated
with <code>LightGraphs.jl</code>.</p>
<p>This is a pre-alpha version.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h2>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaGraphs/GraphVisualize.jl<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>GLVisualize<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>GLAbstraction<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>For the time being only the function</p>
<div class="highlight highlight-source-julia"><pre>    <span class="pl-c1">plot</span>(g<span class="pl-k">::</span><span class="pl-c1">Graph</span>; observe<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p>returning an plot object of graph <code>g</code> and visualizing it in an OpenGL window.</p>
<p>Is <code>observe=true</code> updates to <code>g</code> will be reflected in updates to the plot.</p>
<p>You can left-click and drag a vertex to move it around.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> LightGraphs
<span class="pl-k">using</span> GraphVisualize

g <span class="pl-k">=</span> <span class="pl-c1">erdos_renyi</span>(<span class="pl-c1">10</span>, <span class="pl-c1">20</span>)
plt <span class="pl-k">=</span> <span class="pl-c1">plot</span>(g, observe<span class="pl-k">=</span><span class="pl-c1">true</span>)   <span class="pl-c"><span class="pl-c">#</span> a windows pops up displaying g</span>

<span class="pl-c1">add_edge!</span>(g, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>)      <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-c1">rem_edge!</span>(g, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>)      <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-c1">rem_vertex!</span>(g, <span class="pl-c1">3</span>)       <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-c1">add_vertex!</span>(g)          <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>

<span class="pl-c"><span class="pl-c">#</span> have fun moving the vertex around</span>

<span class="pl-c"><span class="pl-c">#</span> now close the window</span>
g <span class="pl-k">=</span> <span class="pl-c1">WheelGraph</span>(<span class="pl-c1">10</span>) <span class="pl-c"><span class="pl-c">#</span> create a new graph, DON'T ever plot twice the same graph   </span>
plt <span class="pl-k">=</span> <span class="pl-c1">plot</span>(g, observe<span class="pl-k">=</span><span class="pl-c1">false</span>)   <span class="pl-c"><span class="pl-c">#</span> a windows pops up displaying g</span>
<span class="pl-c1">add_edge!</span>(g, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>)      <span class="pl-c"><span class="pl-c">#</span> the plot is NOT updated</span>
<span class="pl-c1">push!</span>(obs, g)           <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-k">...</span>
</pre></div>
</article></div>