<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-graphvisualize" class="anchor" aria-hidden="true" href="#graphvisualize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GraphVisualize</h1>
<p dir="auto">Graph visualization using <code>GLVisualize.jl</code> by Simon Danisch. Tightly integrated
with <code>LightGraphs.jl</code>.</p>
<p dir="auto">This is a pre-alpha version.</p>
<h2 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/JuliaGraphs/GraphVisualize.jl&quot;)
Pkg.checkout(&quot;GLVisualize&quot;)
Pkg.checkout(&quot;GLAbstraction&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaGraphs/GraphVisualize.jl<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>GLVisualize<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>GLAbstraction<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">For the time being only the function</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="    plot(g::Graph; observe=false)"><pre>    <span class="pl-c1">plot</span>(g<span class="pl-k">::</span><span class="pl-c1">Graph</span>; observe<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p dir="auto">returning an plot object of graph <code>g</code> and visualizing it in an OpenGL window.</p>
<p dir="auto">Is <code>observe=true</code> updates to <code>g</code> will be reflected in updates to the plot.</p>
<p dir="auto">You can left-click and drag a vertex to move it around.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using LightGraphs
using GraphVisualize

g = erdos_renyi(10, 20)
plt = plot(g, observe=true)   # a windows pops up displaying g

add_edge!(g, 3, 7)      # the plot is updated
rem_edge!(g, 3, 7)      # the plot is updated
rem_vertex!(g, 3)       # the plot is updated
add_vertex!(g)          # the plot is updated

# have fun moving the vertex around

# now close the window
g = WheelGraph(10) # create a new graph, DON'T ever plot twice the same graph   
plt = plot(g, observe=false)   # a windows pops up displaying g
add_edge!(g, 3, 7)      # the plot is NOT updated
push!(obs, g)           # the plot is updated
...
"><pre><span class="pl-k">using</span> LightGraphs
<span class="pl-k">using</span> GraphVisualize

g <span class="pl-k">=</span> <span class="pl-c1">erdos_renyi</span>(<span class="pl-c1">10</span>, <span class="pl-c1">20</span>)
plt <span class="pl-k">=</span> <span class="pl-c1">plot</span>(g, observe<span class="pl-k">=</span><span class="pl-c1">true</span>)   <span class="pl-c"><span class="pl-c">#</span> a windows pops up displaying g</span>

<span class="pl-c1">add_edge!</span>(g, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>)      <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-c1">rem_edge!</span>(g, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>)      <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-c1">rem_vertex!</span>(g, <span class="pl-c1">3</span>)       <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-c1">add_vertex!</span>(g)          <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>

<span class="pl-c"><span class="pl-c">#</span> have fun moving the vertex around</span>

<span class="pl-c"><span class="pl-c">#</span> now close the window</span>
g <span class="pl-k">=</span> <span class="pl-c1">WheelGraph</span>(<span class="pl-c1">10</span>) <span class="pl-c"><span class="pl-c">#</span> create a new graph, DON'T ever plot twice the same graph   </span>
plt <span class="pl-k">=</span> <span class="pl-c1">plot</span>(g, observe<span class="pl-k">=</span><span class="pl-c1">false</span>)   <span class="pl-c"><span class="pl-c">#</span> a windows pops up displaying g</span>
<span class="pl-c1">add_edge!</span>(g, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>)      <span class="pl-c"><span class="pl-c">#</span> the plot is NOT updated</span>
<span class="pl-c1">push!</span>(obs, g)           <span class="pl-c"><span class="pl-c">#</span> the plot is updated</span>
<span class="pl-k">...</span>
</pre></div>
</article></div>