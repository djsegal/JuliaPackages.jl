<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-polylinejl" class="anchor" aria-hidden="true" href="#polylinejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Polyline.jl</h1>
<p dir="auto"><a href="https://travis-ci.com/NikStoyanov/Polyline.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/35cfff6a990eed12bdc1bd7e97a02cb3448e6916b7739790ea53ab44da2fa3f0/68747470733a2f2f7472617669732d63692e636f6d2f4e696b53746f79616e6f762f506f6c796c696e652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/NikStoyanov/Polyline.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/NikStoyanov/Polyline.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8433e4cca505bd15de30ebe121909ee13e2402ba52bb4a4eff25bb3fc96075f4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4e696b53746f79616e6f762f506f6c796c696e652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/NikStoyanov/Polyline.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia implementation of the algorithm described in <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm" rel="nofollow">Google's Encoded Polyline Format</a>
to encode/decode polylines and plot them using Google Maps.</p>
<h2 dir="auto"><a id="user-content-polylinejl-with-google-maps" class="anchor" aria-hidden="true" href="#polylinejl-with-google-maps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Polyline.jl with Google Maps</h2>
<p dir="auto">Parse a GPX file.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Polyline

# Load gpx file and parse.
gpxFile = readGPX(&quot;./examples/route.gpx&quot;)
gpxRoute = parseGPX(gpxFile)"><pre><span class="pl-k">using</span> Polyline

<span class="pl-c"><span class="pl-c">#</span> Load gpx file and parse.</span>
gpxFile <span class="pl-k">=</span> <span class="pl-c1">readGPX</span>(<span class="pl-s"><span class="pl-pds">"</span>./examples/route.gpx<span class="pl-pds">"</span></span>)
gpxRoute <span class="pl-k">=</span> <span class="pl-c1">parseGPX</span>(gpxFile)</pre></div>
<p dir="auto">Encode/decode polyline.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Encode polyline
polyline = encodePolyline(gpxRoute)

# Decode polyline
route = decodePolyline(polyline)"><pre><span class="pl-c"><span class="pl-c">#</span> Encode polyline</span>
polyline <span class="pl-k">=</span> <span class="pl-c1">encodePolyline</span>(gpxRoute)

<span class="pl-c"><span class="pl-c">#</span> Decode polyline</span>
route <span class="pl-k">=</span> <span class="pl-c1">decodePolyline</span>(polyline)</pre></div>
<p dir="auto">Plot using Google Maps. You need to obtain a token from the static maps API which you can find here:
<a href="https://developers.google.com/maps/documentation/maps-static/get-api-key" rel="nofollow">https://developers.google.com/maps/documentation/maps-static/get-api-key</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Then either set the token as the environment variable GOOGLE_MAPS_API
# url = mapsURL(polyline)

# Or pass the API token as an argument.
url = mapsURL(polyline; token=&quot;...&quot;)

# With the defaults you can plot the route.
getMapImage(url; pathFig=&quot;/tmp/fig1.png&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> Then either set the token as the environment variable GOOGLE_MAPS_API</span>
<span class="pl-c"><span class="pl-c">#</span> url = mapsURL(polyline)</span>

<span class="pl-c"><span class="pl-c">#</span> Or pass the API token as an argument.</span>
url <span class="pl-k">=</span> <span class="pl-c1">mapsURL</span>(polyline; token<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>...<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> With the defaults you can plot the route.</span>
<span class="pl-c1">getMapImage</span>(url; pathFig<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/tmp/fig1.png<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./examples/fig1.png"><img src="./examples/fig1.png" alt="Default" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Full customization.
url = mapsURL(polyline; token=&quot;...&quot;,
              type = &quot;roadmap&quot;, # https://developers.google.com/maps/documentation/maps-static/dev-guide#MapTypes
              size = 1000,
              scale = 2, # https://developers.google.com/maps/documentation/maps-static/dev-guide#scale_values
              MarkersStart = (gpxRoute[1, 1], gpxRoute[1, 2]),
              MarkersEnd = (gpxRoute[end, 1], gpxRoute[end, 2]))

getMapImage(url; pathFig=&quot;/tmp/fig2.png&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> Full customization.</span>
url <span class="pl-k">=</span> <span class="pl-c1">mapsURL</span>(polyline; token<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>...<span class="pl-pds">"</span></span>,
              type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>roadmap<span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span> https://developers.google.com/maps/documentation/maps-static/dev-guide#MapTypes</span>
              size <span class="pl-k">=</span> <span class="pl-c1">1000</span>,
              scale <span class="pl-k">=</span> <span class="pl-c1">2</span>, <span class="pl-c"><span class="pl-c">#</span> https://developers.google.com/maps/documentation/maps-static/dev-guide#scale_values</span>
              MarkersStart <span class="pl-k">=</span> (gpxRoute[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], gpxRoute[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]),
              MarkersEnd <span class="pl-k">=</span> (gpxRoute[<span class="pl-c1">end</span>, <span class="pl-c1">1</span>], gpxRoute[<span class="pl-c1">end</span>, <span class="pl-c1">2</span>]))

<span class="pl-c1">getMapImage</span>(url; pathFig<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/tmp/fig2.png<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./examples/fig2.png"><img src="./examples/fig2.png" alt="Modified" style="max-width: 100%;"></a></p>
</article></div>