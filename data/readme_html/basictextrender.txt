<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-basictextrenderjl" class="anchor" aria-hidden="true" href="#basictextrenderjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>BasicTextRender.jl</h1>
<p>Warning.. very basic.. More of an experiment.. Concatenates characters from pre-rendered lookup images, then resizes and colors. 100% julia, no libs. Gets blurry if font height is greater than ~90 pixels.</p>
<p>Provides <code>rendertext</code> for generating a rendered image of a string and
<code>overlaytext!</code> for directly overlaying text on a loaded image.</p>
<p>Currently built to support truly monospaced fonts only, and Courier is the only font that is provided.
(other open source licensed fonts welcome via PR, see <code>gen/makeCharLookups.jl</code>)</p>
<h2><a id="user-content-generating-rendered-text" class="anchor" aria-hidden="true" href="#generating-rendered-text"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Generating rendered text</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="&gt; using BasicTextRender
&gt; img = rendertext(&quot;Hello world&quot;, height=50)
50×316 Array{RGBA{Float64},2} with eltype RGBA{Float64}:
...
&gt; using FileIO
&gt; save(&quot;img.png&quot;, img)
"><pre><span class="pl-k">&gt;</span> <span class="pl-k">using</span> BasicTextRender
<span class="pl-k">&gt;</span> img <span class="pl-k">=</span> <span class="pl-c1">rendertext</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world<span class="pl-pds">"</span></span>, height<span class="pl-k">=</span><span class="pl-c1">50</span>)
<span class="pl-c1">50</span><span class="pl-k">×</span><span class="pl-c1">316</span> Array{RGBA{Float64},<span class="pl-c1">2</span>} with eltype RGBA{Float64}<span class="pl-k">:</span>
<span class="pl-k">...</span>
<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FileIO
<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>img.png<span class="pl-pds">"</span></span>, img)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="img.png"><img src="img.png" alt="img" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using BasicTextRender, ColorTypes
img = rendertext(&quot;Hello world&quot;, height=30, color=RGBA(1.0,0.0,0.0,1.0), backgroundColor=RGBA(1.0,1.0,0.0,1.0))
"><pre><span class="pl-k">using</span> BasicTextRender, ColorTypes
img <span class="pl-k">=</span> <span class="pl-c1">rendertext</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world<span class="pl-pds">"</span></span>, height<span class="pl-k">=</span><span class="pl-c1">30</span>, color<span class="pl-k">=</span><span class="pl-c1">RGBA</span>(<span class="pl-c1">1.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>), backgroundColor<span class="pl-k">=</span><span class="pl-c1">RGBA</span>(<span class="pl-c1">1.0</span>,<span class="pl-c1">1.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="img2.png"><img src="img2.png" alt="img" style="max-width:100%;"></a></p>
<h2><a id="user-content-overlaying-text-on-a-loaded-image" class="anchor" aria-hidden="true" href="#overlaying-text-on-a-loaded-image"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overlaying text on a loaded image</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="img = rand(RGBA{Float64},80,700)
overlaytext!(img, &quot;BasicTextRender.jl&quot;, 60, (10,40))
save(&quot;logo.png&quot;, img)
"><pre>img <span class="pl-k">=</span> <span class="pl-c1">rand</span>(RGBA{Float64},<span class="pl-c1">80</span>,<span class="pl-c1">700</span>)
<span class="pl-c1">overlaytext!</span>(img, <span class="pl-s"><span class="pl-pds">"</span>BasicTextRender.jl<span class="pl-pds">"</span></span>, <span class="pl-c1">60</span>, (<span class="pl-c1">10</span>,<span class="pl-c1">40</span>))
<span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>logo.png<span class="pl-pds">"</span></span>, img)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="logo.png"><img src="logo.png" alt="logo" style="max-width:100%;"></a></p>
<h2><a id="user-content-speed-slow-then-fast-ish" class="anchor" aria-hidden="true" href="#speed-slow-then-fast-ish"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Speed (slow then fast-ish)</h2>
<p>The first time <code>rendertext</code> runs it should take about 5 seconds, as it loads the
character lookup table, but subsequent calls for the same scale and font will be fast.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using BenchmarkTools
@btime rendertext(&quot;Hello world&quot;, height=30) #599.991 μs (352 allocations: 2.28 MiB)
"><pre><span class="pl-k">using</span> BenchmarkTools
<span class="pl-c1">@btime</span> <span class="pl-c1">rendertext</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world<span class="pl-pds">"</span></span>, height<span class="pl-k">=</span><span class="pl-c1">30</span>) <span class="pl-c"><span class="pl-c">#</span>599.991 μs (352 allocations: 2.28 MiB)</span></pre></div>
</article></div>