<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-twentyfour" class="anchor" aria-hidden="true" href="#twentyfour"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TwentyFour</h1>
<p dir="auto"><a href="https://travis-ci.com/scheinerman/TwentyFour.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7abc7d639e14ac80a1abd32142a4885a67813a1961d7aec25e9373b32a5efa47/68747470733a2f2f7472617669732d63692e636f6d2f73636865696e65726d616e2f5477656e7479466f75722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/scheinerman/TwentyFour.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="http://codecov.io/github/scheinerman/TwentyFour.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0566a171e865820a4be7e73d5051368a05c2e542a99e29db4df391c15b9774ff/687474703a2f2f636f6465636f762e696f2f6769746875622f73636865696e65726d616e2f5477656e7479466f75722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/scheinerman/TwentyFour.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://www.24game.com/" rel="nofollow">Twenty Four</a> is a number game. The player is presented with a card
containing four numbers. The object is to use those four numbers to make
the value 24 using the four standard arithmetic operations
(plus, minus, times, divide). This Julia module provide solves these
puzzles.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Use the <code>solve</code> function to find solutions to <em>Twenty Four</em> puzzles.
Simply provide two or more values (either integers or rationals).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; solve(3,4,5,8)
&quot;(4*8)-(3+5)&quot;

julia&gt; solve(5,5,5,1)
&quot;5*(5-(1/5))&quot;

julia&gt; solve(5,5,5,2)
&quot;No solution&quot;

julia&gt; solve(1//2, 1//3, 7, 3)
&quot;(7-3)/(1/2-1/3)&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">solve</span>(<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">8</span>)
<span class="pl-s"><span class="pl-pds">"</span>(4*8)-(3+5)<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">solve</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">1</span>)
<span class="pl-s"><span class="pl-pds">"</span>5*(5-(1/5))<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">solve</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">2</span>)
<span class="pl-s"><span class="pl-pds">"</span>No solution<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">solve</span>(<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>, <span class="pl-c1">7</span>, <span class="pl-c1">3</span>)
<span class="pl-s"><span class="pl-pds">"</span>(7-3)/(1/2-1/3)<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-to-do-list" class="anchor" aria-hidden="true" href="#to-do-list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To do list</h2>
<ul dir="auto">
<li>Permit alternative goals besides 24.</li>
<li>Our code might give a solution in which some of the intermediate
values are negative. One can prove this can always be avoided
(assuming the given numbers are all positive). Modify the code
so all intermediate values are nonnegative.</li>
</ul>
</article></div>