<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-testparticlejl" class="anchor" aria-hidden="true" href="#testparticlejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TestParticle.jl</h1>
<p dir="auto"><a href="https://henry2004y.github.io/TestParticle.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/henry2004y/TestParticle.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/henry2004y/TestParticle.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/henry2004y/TestParticle.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/476e037422e45725944f623409d7bac44cbc22592025ae7eee3d6e011de6f3c9/68747470733a2f2f636f6465636f762e696f2f67682f68656e727932303034792f546573745061727469636c652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/henry2004y/TestParticle.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides test particle tracing in an analytic or numerical electromagnetic field via <a href="https://diffeq.sciml.ai/stable/" rel="nofollow">DifferentialEquations.jl</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">In the Julia REPL,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add TestParticle"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add TestParticle</pre></div>
<p dir="auto">Visualization via <a href="https://makie.juliaplots.org/stable/" rel="nofollow">Makie</a>, <a href="https://docs.juliaplots.org/stable/" rel="nofollow">Plots</a>, and <a href="https://github.com/JuliaPy/PyPlot.jl">PyPlot</a> are supported. Please refer to each visualization library's documentation for installations.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">TestParticle.jl is designed to work together with <a href="https://github.com/SciML/OrdinaryDiffEq.jl">OrdinaryDiffEq.jl</a>.</p>
<p dir="auto">A proton trajectory in a static magnetic field can be traced via</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TestParticle, OrdinaryDiffEq, StaticArrays
# Magnetic field
B(x) = SA[0, 0, 1e-8]
# Electric field
E(x) = SA[0, 0, 0]
# Initial conditions
x0 = [1.0, 0.0, 0.0]
v0 = [0.0, 1.0, 0.1]
stateinit = [x0..., v0...]
tspan = (0, 20)
# Assemble particle + fields
param = prepare(E, B, species=Proton)
prob = ODEProblem(trace!, stateinit, tspan, param)
# Trace trajectory and save positions &amp; velocities
sol = solve(prob, Tsit5(); save_idxs=[1,2,3,4,5,6])"><pre><span class="pl-k">using</span> TestParticle, OrdinaryDiffEq, StaticArrays
<span class="pl-c"><span class="pl-c">#</span> Magnetic field</span>
<span class="pl-en">B</span>(x) <span class="pl-k">=</span> SA[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1e-8</span>]
<span class="pl-c"><span class="pl-c">#</span> Electric field</span>
<span class="pl-en">E</span>(x) <span class="pl-k">=</span> SA[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>]
<span class="pl-c"><span class="pl-c">#</span> Initial conditions</span>
x0 <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]
v0 <span class="pl-k">=</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">1.0</span>, <span class="pl-c1">0.1</span>]
stateinit <span class="pl-k">=</span> [x0<span class="pl-k">...</span>, v0<span class="pl-k">...</span>]
tspan <span class="pl-k">=</span> (<span class="pl-c1">0</span>, <span class="pl-c1">20</span>)
<span class="pl-c"><span class="pl-c">#</span> Assemble particle + fields</span>
param <span class="pl-k">=</span> <span class="pl-c1">prepare</span>(E, B, species<span class="pl-k">=</span>Proton)
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(trace!, stateinit, tspan, param)
<span class="pl-c"><span class="pl-c">#</span> Trace trajectory and save positions &amp; velocities</span>
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob, <span class="pl-c1">Tsit5</span>(); save_idxs<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>])</pre></div>
<p dir="auto">For plotting with Makie,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TestParticleMakie, GLMakie

plot(sol)"><pre><span class="pl-k">using</span> TestParticleMakie, GLMakie

<span class="pl-c1">plot</span>(sol)</pre></div>
<p dir="auto">More tutorials and examples can be found in <a href="https://henry2004y.github.io/TestParticle.jl/dev/" rel="nofollow">the doc</a>.</p>
</article></div>