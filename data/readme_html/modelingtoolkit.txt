<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-modelingtoolkitjl" class="anchor" aria-hidden="true" href="#modelingtoolkitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ModelingToolkit.jl</h1>
<p dir="auto"><a href="https://julialang.zulipchat.com/#narrow/stream/279055-sciml-bridged" rel="nofollow"><img src="https://camo.githubusercontent.com/667867fc71b8b3c9ed350ce154a04d38adca002ecfa38edf519284e0365ee553/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d5a756c6970266d6573736167653d6368617426636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="Join the chat at https://julialang.zulipchat.com #sciml-bridged" data-canonical-src="https://img.shields.io/static/v1?label=Zulip&amp;message=chat&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="https://docs.sciml.ai/ModelingToolkit/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/88037a523f970520933771e764f5abff55de9382efc91cd89dd43ef0bb49a85f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d5363694d4c2d626c75652e737667" alt="Global Docs" data-canonical-src="https://img.shields.io/badge/docs-SciML-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://codecov.io/gh/SciML/ModelingToolkit.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2c2605a2d792a4bf90c735e023ee3858391e5494f5e69f22aa87eccf7960143c/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f4d6f64656c696e67546f6f6c6b69742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/ModelingToolkit.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/SciML/ModelingToolkit.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1f8a7c52927344d358b57878c6dc81e3da409dc23a70d1420d44864907038a63/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5363694d4c2f4d6f64656c696e67546f6f6c6b69742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/SciML/ModelingToolkit.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ModelingToolkit.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/ModelingToolkit.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/2496bdc13cbc9c458dfa19a108b1f333353f62917355a4cdee582bbdf8be43cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f722532377325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor%27s%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLStyle"><img src="https://camo.githubusercontent.com/3e16f03bad047817fbc07f49307817ed7919ef79c339dc75ad4ce813012c3e0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d5363694d4c26636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="SciML Code Style" data-canonical-src="https://img.shields.io/static/v1?label=code%20style&amp;message=SciML&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a></p>
<p dir="auto">ModelingToolkit.jl is a modeling framework for high-performance symbolic-numeric computation
in scientific computing  and scientific machine learning.
It allows for users to give a high-level description of a model for
symbolic preprocessing to analyze and enhance the model. ModelingToolkit can
automatically generate fast functions for model components like Jacobians
and Hessians, along with automatically sparsifying and parallelizing the
computations. Automatic transformations, such as index reduction, can be applied
to the model to make it easier for numerical solvers to handle.</p>
<p dir="auto">For information on using the package,
<a href="https://docs.sciml.ai/ModelingToolkit/stable/" rel="nofollow">see the stable documentation</a>. Use the
<a href="https://docs.sciml.ai/ModelingToolkit/dev/" rel="nofollow">in-development documentation</a> for the version of
the documentation which contains the unreleased features.</p>
<h2 dir="auto"><a id="user-content-standard-library" class="anchor" aria-hidden="true" href="#standard-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Standard Library</h2>
<p dir="auto">For a standard library of ModelingToolkit components and blocks, check out the
<a href="https://docs.sciml.ai/ModelingToolkitStandardLibrary/stable/" rel="nofollow">ModelingToolkitStandardLibrary</a></p>
<h2 dir="auto"><a id="user-content-high-level-examples" class="anchor" aria-hidden="true" href="#high-level-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>High-Level Examples</h2>
<p dir="auto">First, let's define a second order riff on the Lorenz equations, symbolically
lower it to a first order system, symbolically generate the Jacobian function
for the numerical integrator, and solve it.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DifferentialEquations, ModelingToolkit

@parameters t σ ρ β
@variables x(t) y(t) z(t)
D = Differential(t)

eqs = [D(D(x)) ~ σ * (y - x),
    D(y) ~ x * (ρ - z) - y,
    D(z) ~ x * y - β * z]

@named sys = ODESystem(eqs)
sys = structural_simplify(sys)

u0 = [D(x) =&gt; 2.0,
    x =&gt; 1.0,
    y =&gt; 0.0,
    z =&gt; 0.0]

p = [σ =&gt; 28.0,
    ρ =&gt; 10.0,
    β =&gt; 8 / 3]

tspan = (0.0, 100.0)
prob = ODEProblem(sys, u0, tspan, p, jac = true)
sol = solve(prob)
using Plots
plot(sol, idxs = (x, y))"><pre><span class="pl-k">using</span> DifferentialEquations, ModelingToolkit

<span class="pl-c1">@parameters</span> t σ ρ β
<span class="pl-c1">@variables</span> <span class="pl-c1">x</span>(t) <span class="pl-c1">y</span>(t) <span class="pl-c1">z</span>(t)
D <span class="pl-k">=</span> <span class="pl-c1">Differential</span>(t)

eqs <span class="pl-k">=</span> [<span class="pl-c1">D</span>(<span class="pl-c1">D</span>(x)) <span class="pl-k">~</span> σ <span class="pl-k">*</span> (y <span class="pl-k">-</span> x),
    <span class="pl-c1">D</span>(y) <span class="pl-k">~</span> x <span class="pl-k">*</span> (ρ <span class="pl-k">-</span> z) <span class="pl-k">-</span> y,
    <span class="pl-c1">D</span>(z) <span class="pl-k">~</span> x <span class="pl-k">*</span> y <span class="pl-k">-</span> β <span class="pl-k">*</span> z]

<span class="pl-c1">@named</span> sys <span class="pl-k">=</span> <span class="pl-c1">ODESystem</span>(eqs)
sys <span class="pl-k">=</span> <span class="pl-c1">structural_simplify</span>(sys)

u0 <span class="pl-k">=</span> [<span class="pl-c1">D</span>(x) <span class="pl-k">=&gt;</span> <span class="pl-c1">2.0</span>,
    x <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span>,
    y <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>,
    z <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>]

p <span class="pl-k">=</span> [σ <span class="pl-k">=&gt;</span> <span class="pl-c1">28.0</span>,
    ρ <span class="pl-k">=&gt;</span> <span class="pl-c1">10.0</span>,
    β <span class="pl-k">=&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">/</span> <span class="pl-c1">3</span>]

tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">100.0</span>)
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(sys, u0, tspan, p, jac <span class="pl-k">=</span> <span class="pl-c1">true</span>)
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob)
<span class="pl-k">using</span> Plots
<span class="pl-c1">plot</span>(sol, idxs <span class="pl-k">=</span> (x, y))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/1814174/79118645-744eb580-7d5c-11ea-9c37-13c4efd585ca.png"><img src="https://user-images.githubusercontent.com/1814174/79118645-744eb580-7d5c-11ea-9c37-13c4efd585ca.png" alt="Lorenz2" style="max-width: 100%;"></a></p>
<p dir="auto">This automatically will have generated fast Jacobian functions, making
it more optimized than directly building a function. In addition, we can then
use ModelingToolkit to compose multiple ODE subsystems. Now, let's define two
interacting Lorenz equations and simulate the resulting Differential-Algebraic
Equation (DAE):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DifferentialEquations, ModelingToolkit

@parameters t σ ρ β
@variables x(t) y(t) z(t)
D = Differential(t)

eqs = [D(x) ~ σ * (y - x),
    D(y) ~ x * (ρ - z) - y,
    D(z) ~ x * y - β * z]

@named lorenz1 = ODESystem(eqs)
@named lorenz2 = ODESystem(eqs)

@variables a(t)
@parameters γ
connections = [0 ~ lorenz1.x + lorenz2.y + a * γ]
@named connected = ODESystem(connections, t, [a], [γ], systems = [lorenz1, lorenz2])
sys = structural_simplify(connected)

u0 = [lorenz1.x =&gt; 1.0,
    lorenz1.y =&gt; 0.0,
    lorenz1.z =&gt; 0.0,
    lorenz2.x =&gt; 0.0,
    lorenz2.y =&gt; 1.0,
    lorenz2.z =&gt; 0.0,
    a =&gt; 2.0]

p = [lorenz1.σ =&gt; 10.0,
    lorenz1.ρ =&gt; 28.0,
    lorenz1.β =&gt; 8 / 3,
    lorenz2.σ =&gt; 10.0,
    lorenz2.ρ =&gt; 28.0,
    lorenz2.β =&gt; 8 / 3,
    γ =&gt; 2.0]

tspan = (0.0, 100.0)
prob = ODEProblem(sys, u0, tspan, p)
sol = solve(prob)

using Plots
plot(sol, idxs = (a, lorenz1.x, lorenz2.z))"><pre><span class="pl-k">using</span> DifferentialEquations, ModelingToolkit

<span class="pl-c1">@parameters</span> t σ ρ β
<span class="pl-c1">@variables</span> <span class="pl-c1">x</span>(t) <span class="pl-c1">y</span>(t) <span class="pl-c1">z</span>(t)
D <span class="pl-k">=</span> <span class="pl-c1">Differential</span>(t)

eqs <span class="pl-k">=</span> [<span class="pl-c1">D</span>(x) <span class="pl-k">~</span> σ <span class="pl-k">*</span> (y <span class="pl-k">-</span> x),
    <span class="pl-c1">D</span>(y) <span class="pl-k">~</span> x <span class="pl-k">*</span> (ρ <span class="pl-k">-</span> z) <span class="pl-k">-</span> y,
    <span class="pl-c1">D</span>(z) <span class="pl-k">~</span> x <span class="pl-k">*</span> y <span class="pl-k">-</span> β <span class="pl-k">*</span> z]

<span class="pl-c1">@named</span> lorenz1 <span class="pl-k">=</span> <span class="pl-c1">ODESystem</span>(eqs)
<span class="pl-c1">@named</span> lorenz2 <span class="pl-k">=</span> <span class="pl-c1">ODESystem</span>(eqs)

<span class="pl-c1">@variables</span> <span class="pl-c1">a</span>(t)
<span class="pl-c1">@parameters</span> γ
connections <span class="pl-k">=</span> [<span class="pl-c1">0</span> <span class="pl-k">~</span> lorenz1<span class="pl-k">.</span>x <span class="pl-k">+</span> lorenz2<span class="pl-k">.</span>y <span class="pl-k">+</span> a <span class="pl-k">*</span> γ]
<span class="pl-c1">@named</span> connected <span class="pl-k">=</span> <span class="pl-c1">ODESystem</span>(connections, t, [a], [γ], systems <span class="pl-k">=</span> [lorenz1, lorenz2])
sys <span class="pl-k">=</span> <span class="pl-c1">structural_simplify</span>(connected)

u0 <span class="pl-k">=</span> [lorenz1<span class="pl-k">.</span>x <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span>,
    lorenz1<span class="pl-k">.</span>y <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>,
    lorenz1<span class="pl-k">.</span>z <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>,
    lorenz2<span class="pl-k">.</span>x <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>,
    lorenz2<span class="pl-k">.</span>y <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span>,
    lorenz2<span class="pl-k">.</span>z <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>,
    a <span class="pl-k">=&gt;</span> <span class="pl-c1">2.0</span>]

p <span class="pl-k">=</span> [lorenz1<span class="pl-k">.</span>σ <span class="pl-k">=&gt;</span> <span class="pl-c1">10.0</span>,
    lorenz1<span class="pl-k">.</span>ρ <span class="pl-k">=&gt;</span> <span class="pl-c1">28.0</span>,
    lorenz1<span class="pl-k">.</span>β <span class="pl-k">=&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">/</span> <span class="pl-c1">3</span>,
    lorenz2<span class="pl-k">.</span>σ <span class="pl-k">=&gt;</span> <span class="pl-c1">10.0</span>,
    lorenz2<span class="pl-k">.</span>ρ <span class="pl-k">=&gt;</span> <span class="pl-c1">28.0</span>,
    lorenz2<span class="pl-k">.</span>β <span class="pl-k">=&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">/</span> <span class="pl-c1">3</span>,
    γ <span class="pl-k">=&gt;</span> <span class="pl-c1">2.0</span>]

tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">100.0</span>)
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(sys, u0, tspan, p)
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob)

<span class="pl-k">using</span> Plots
<span class="pl-c1">plot</span>(sol, idxs <span class="pl-k">=</span> (a, lorenz1<span class="pl-k">.</span>x, lorenz2<span class="pl-k">.</span>z))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/17304743/187790221-528046c3-dbdb-4853-b977-799596c147f3.png"><img src="https://user-images.githubusercontent.com/17304743/187790221-528046c3-dbdb-4853-b977-799596c147f3.png" alt="" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citation</h1>
<p dir="auto">If you use ModelingToolkit.jl in your research, please cite <a href="https://arxiv.org/abs/2103.05244" rel="nofollow">this paper</a>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@misc{ma2021modelingtoolkit,
      title={ModelingToolkit: A Composable Graph Transformation System For Equation-Based Modeling},
      author={Yingbo Ma and Shashi Gowda and Ranjan Anantharaman and Chris Laughman and Viral Shah and Chris Rackauckas},
      year={2021},
      eprint={2103.05244},
      archivePrefix={arXiv},
      primaryClass={cs.MS}
}"><pre class="notranslate"><code>@misc{ma2021modelingtoolkit,
      title={ModelingToolkit: A Composable Graph Transformation System For Equation-Based Modeling},
      author={Yingbo Ma and Shashi Gowda and Ranjan Anantharaman and Chris Laughman and Viral Shah and Chris Rackauckas},
      year={2021},
      eprint={2103.05244},
      archivePrefix={arXiv},
      primaryClass={cs.MS}
}
</code></pre></div>
</article></div>