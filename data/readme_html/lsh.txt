<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lsh" class="anchor" aria-hidden="true" href="#lsh"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LSH</h1>
<p><a href="https://travis-ci.org/Keno/LSH.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9ee9a341c66a8b8a15e7d766f2598568b16ec973361295e840f7691c45215480/68747470733a2f2f7472617669732d63692e6f72672f4b656e6f2f4c53482e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Keno/LSH.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<p>This package requires julia version 0.4 which is currently under development. See <a href="http://julialang.org/downloads/" rel="nofollow">http://julialang.org/downloads/</a> for instructions on how to download a latest nightly release for all major platforms.</p>
<p>After installing julia, this package can be installed with:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/Keno/LSH.jl&quot;)
# This is currently needed while changes to DataStructures.jl are awaiting upstreaming
Pkg.checkout(&quot;DataStructures&quot;,&quot;kf/lsh&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Keno/LSH.jl<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> This is currently needed while changes to DataStructures.jl are awaiting upstreaming</span>
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>DataStructures<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>kf/lsh<span class="pl-pds">"</span></span>)</pre></div>
<h1><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h1>
<h2><a id="user-content-lshtable" class="anchor" aria-hidden="true" href="#lshtable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LSHTable</h2>
<p>The main entry point to this package is the <code>LSHTable</code> struct, which can be constructed as</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="T = LSHTable(R,hashes,data; progress=true)
"><pre><code>T = LSHTable(R,hashes,data; progress=true)
</code></pre></div>
<p>where <code>R</code> is the desired query radius, i.e. the <code>R</code> in an <code>R</code>-NN data structure, hashes is an array of locality sensitive hash function (see below for how to create these) and <code>data</code> is the data set to be added to the locality sensitive hash table. <code>data</code> can be specified either as a Vector of vectors, with each contained vector representing a data point, or as a matrix with the coordinates of the points given by the rows of the matrix.</p>
<p>The data structure can be queried via it's <code>getindex</code> method:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="found_points = T[q]
"><pre><code>found_points = T[q]
</code></pre></div>
<p>where q is the coordinate vector of query points and found_points is the list of found points.</p>
<h2><a id="user-content-hashes" class="anchor" aria-hidden="true" href="#hashes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hashes</h2>
<p>Currently this package supports two kinds of hash functions, both as defined in [AM04]. Both kinds are made up of tuples of hash functions based on <code>p</code>-stable distributions, though the first method (dubbed <code>g</code>-functions) requires O(kdL) compute whereas the second method (dubbed <code>u</code>-functions) can be constructed in O(kdm) where m is appriximately <code>sqrt(L)</code>. The hash arrays can be constructed using:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="hashesg = createHashesAM04(d,w,k,L,R) # Create g functions with the given parameters
hashesu = createUHashesAM04(d,w,k,L,R) # Create u functions with the given parameters
"><pre><code>hashesg = createHashesAM04(d,w,k,L,R) # Create g functions with the given parameters
hashesu = createUHashesAM04(d,w,k,L,R) # Create u functions with the given parameters
</code></pre></div>
</article></div>