<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-freeparametersjl" class="anchor" aria-hidden="true" href="#freeparametersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FreeParameters.jl</h1>
<p>Infrastructure for annotating, collecting, and distributing free parameters.</p>
<table>
<thead>
<tr>
<th align="right"></th>
<th align="left"></th>
</tr>
</thead>
<tbody>
<tr>
<td align="right"><strong>Documentation</strong></td>
<td align="left"><a href="https://climate-machine.github.io/FreeParameters.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Azure Build</strong></td>
<td align="left"><a href="https://dev.azure.com/climate-machine/FreeParameters.jl/_build/latest?definitionId=1&amp;branchName=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5e5574f67fc0b8e511a2acd9f01ebc2fd491448a/68747470733a2f2f6465762e617a7572652e636f6d2f636c696d6174652d6d616368696e652f46726565506172616d65746572732e6a6c2f5f617069732f6275696c642f7374617475732f636c696d6174652d6d616368696e652e46726565506172616d65746572732e6a6c3f6272616e63684e616d653d6d6173746572" alt="azure" data-canonical-src="https://dev.azure.com/climate-machine/FreeParameters.jl/_apis/build/status/climate-machine.FreeParameters.jl?branchName=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Code Coverage</strong></td>
<td align="left"><a href="https://codecov.io/gh/climate-machine/FreeParameters.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f6667518d190c11a980dfb50474ba31ff9f89ef1/68747470733a2f2f636f6465636f762e696f2f67682f636c696d6174652d6d616368696e652f46726565506172616d65746572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/climate-machine/FreeParameters.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Bors</strong></td>
<td align="left"><a href="https://app.bors.tech/repositories/22860" rel="nofollow"><img src="https://camo.githubusercontent.com/572b2eeac79ed01443b755fdb24c6dd561058512/68747470733a2f2f626f72732e746563682f696d616765732f62616467655f736d616c6c2e737667" alt="Bors enabled" data-canonical-src="https://bors.tech/images/badge_small.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h1>
<p>FreeParameters.jl is registered in the general Julia registry. To install, enter the package manager by typing <code>]</code> in the Julia REPL, and then type:</p>
<div class="highlight highlight-source-julia"><pre>(v1<span class="pl-k">.</span>x<span class="pl-k">.</span>y) pkg<span class="pl-k">&gt;</span> add FreeParameters</pre></div>
<p>Then, to use</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FreeParameters</pre></div>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FreeParameters
<span class="pl-k">using</span> Distributions
<span class="pl-k">using</span> Test

<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    update_free_parameters!(fp, val)</span>
<span class="pl-s"></span>
<span class="pl-s">Update free parameters vector `fp` with value `val`</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">update_free_parameters!</span>(fp, val)
  <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">eachindex</span>(fp)
    fp[i]<span class="pl-k">.</span>val <span class="pl-k">=</span> <span class="pl-c1">typeof</span>(fp[i]<span class="pl-k">.</span>val)(val)
  <span class="pl-k">end</span>
  <span class="pl-k">return</span> <span class="pl-c1">nothing</span>
<span class="pl-k">end</span>

<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    Model</span>
<span class="pl-s"></span>
<span class="pl-s">module for model.</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">module</span> Model
<span class="pl-k">struct</span> Bar{FT,I}
  x<span class="pl-k">::</span><span class="pl-c1">FT</span>
  i<span class="pl-k">::</span><span class="pl-c1">I</span>
<span class="pl-k">end</span>
<span class="pl-k">struct</span> Foo{FT,I}
  x<span class="pl-k">::</span><span class="pl-c1">FT</span>
  a<span class="pl-k">::</span><span class="pl-c1">Bar{FT,I}</span>
<span class="pl-k">end</span>
m <span class="pl-k">=</span> <span class="pl-c1">Foo</span>(<span class="pl-c1">3.0</span>, <span class="pl-c1">Bar</span>(<span class="pl-c1">1.0</span>, <span class="pl-c1">2</span>))
<span class="pl-k">end</span>


<span class="pl-c"><span class="pl-c">#</span> Get instance of your model</span>
pmodel <span class="pl-k">=</span> Model<span class="pl-k">.</span>m

<span class="pl-c"><span class="pl-c">#</span> Convert module to dictionary</span>
D <span class="pl-k">=</span> <span class="pl-c1">@struct_2_dict</span>(pmodel)

<span class="pl-c"><span class="pl-c">#</span> Test the dictionary matches the parametric model</span>
<span class="pl-c1">@test</span> D[<span class="pl-s"><span class="pl-pds">"</span>pmodel.x<span class="pl-pds">"</span></span>]   <span class="pl-k">≈</span>  pmodel<span class="pl-k">.</span>x
<span class="pl-c1">@test</span> D[<span class="pl-s"><span class="pl-pds">"</span>pmodel.a.x<span class="pl-pds">"</span></span>] <span class="pl-k">≈</span>  pmodel<span class="pl-k">.</span>a<span class="pl-k">.</span>x
<span class="pl-c1">@test</span> D[<span class="pl-s"><span class="pl-pds">"</span>pmodel.a.i<span class="pl-pds">"</span></span>] <span class="pl-k">==</span> pmodel<span class="pl-k">.</span>a<span class="pl-k">.</span>i

<span class="pl-c"><span class="pl-c">#</span> Annotate which parameters are "free"</span>
<span class="pl-c1">@free</span> D[<span class="pl-s"><span class="pl-pds">"</span>pmodel.x<span class="pl-pds">"</span></span>] Distributions<span class="pl-k">.</span>Normal
<span class="pl-c1">@free</span> D[<span class="pl-s"><span class="pl-pds">"</span>pmodel.a.x<span class="pl-pds">"</span></span>]
<span class="pl-c1">@free</span> D[<span class="pl-s"><span class="pl-pds">"</span>pmodel.a.i<span class="pl-pds">"</span></span>]

<span class="pl-c"><span class="pl-c">#</span> Extract pointers to `FreeParameter`'s</span>
fp <span class="pl-k">=</span> <span class="pl-c1">extract_free_parameters</span>(D)

<span class="pl-c"><span class="pl-c">#</span> Test free parameters match their annotated values</span>
<span class="pl-c1">@test</span> fp[<span class="pl-c1">1</span>]<span class="pl-k">.</span>val <span class="pl-k">≈</span> <span class="pl-c1">1.0</span>
<span class="pl-c1">@test</span> fp[<span class="pl-c1">2</span>]<span class="pl-k">.</span>val <span class="pl-k">≈</span> <span class="pl-c1">3.0</span>
<span class="pl-c1">@test</span> fp[<span class="pl-c1">2</span>]<span class="pl-k">.</span>prior <span class="pl-k">==</span> Normal
<span class="pl-c1">@test</span> fp[<span class="pl-c1">3</span>]<span class="pl-k">.</span>val <span class="pl-k">≈</span> <span class="pl-c1">2</span>

<span class="pl-c"><span class="pl-c">#</span> Update free parameters (in UQ)</span>
new_params_val <span class="pl-k">=</span> <span class="pl-c1">10.0</span>
<span class="pl-c1">update_free_parameters!</span>(fp, new_params_val)

<span class="pl-c"><span class="pl-c">#</span> Get new instantiation</span>
pmodel_new <span class="pl-k">=</span> <span class="pl-c1">instantiate</span>(pmodel, D, <span class="pl-c1">EntireStruct</span>())

<span class="pl-c"><span class="pl-c">#</span> Test model is updated</span>
<span class="pl-c1">@test</span> pmodel_new<span class="pl-k">.</span>x   <span class="pl-k">≈</span>  new_params_val
<span class="pl-c1">@test</span> pmodel_new<span class="pl-k">.</span>a<span class="pl-k">.</span>x <span class="pl-k">≈</span>  new_params_val
<span class="pl-c1">@test</span> pmodel_new<span class="pl-k">.</span>a<span class="pl-k">.</span>i <span class="pl-k">==</span> new_params_val</pre></div>
</article></div>