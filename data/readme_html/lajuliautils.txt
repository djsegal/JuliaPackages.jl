<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lajuliautils" class="anchor" aria-hidden="true" href="#lajuliautils"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LAJuliaUtils</h1>
<p>Various utility functions for Julia.</p>
<p><a href="https://travis-ci.com/sylvaticus/LAJuliaUtils.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3d23ec4f11e7b32876a5e52d1984fc36e1024a0883de08855f959f863eeebae7/68747470733a2f2f7472617669732d63692e636f6d2f73796c766174696375732f4c414a756c69615574696c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/sylvaticus/LAJuliaUtils.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/sylvaticus/LAJuliaUtils.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/92520c11cabeab2aca2cc2063a19c62281b0a7faf1a9125be6ec51b32a3bb963/687474703a2f2f636f6465636f762e696f2f6769746875622f73796c766174696375732f4c414a756c69615574696c732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/sylvaticus/LAJuliaUtils.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Read more about them using the <code>?function</code> syntax (after the package has been installed and imported).</p>
<p>This is NOT (yet) a Julia registered package:</p>
<ul>
<li>install it with <code>] add https://github.com/sylvaticus/LAJuliaUtils.jl.git</code></li>
<li>import it with <code>using LAJuliaUtils</code></li>
</ul>
<p>Provided functions:</p>
<ul>
<li><code>addCols!(df, colsName, colsType)</code> - Adds to the DataFrame empty column(s) colsName of type(s) colsType</li>
<li><code>customSort!(df, sortops)</code>         - Sort a DataFrame by multiple cols, each specifying sort direction and custom sort order</li>
<li><code>findall(pattern,string,caseSensitive=true)</code>          - Find all the occurrences of <code>pattern</code> in <code>string</code></li>
<li><code>pivot(df::AbstractDataFrame, rowFields, colField, valuesField; &lt;kwd args&gt;)</code> - Pivot and optionally filter and sort in a single function</li>
<li><code>toDict(df, dimCols, valueCol)</code>    - Convert a DataFrame in a dictionary, specifying the dimensions to be used as key and the one to be used as value.</li>
<li><code>unzip(unzip(file,exdir="")</code>       - Unzip a zipped archive using ZipFile</li>
<li><code>addIfNeeded(pkgs...)</code>             - Add (if needed) the packages in the argument list (given as strings)</li>
<li><code>installAndUse(pkgs...)</code>           - Add (if needed) and use the packages in the argument list (given as strings)</li>
</ul>
<p>Julia 0.6 only:</p>
<ul>
<li><code>toDataFrame(t)</code>                   - <strong>(Julia 0.6 only)</strong> Convert an IndexedTable NDSparse table to a DataFrame, maintaining column types and (eventual) column names.</li>
<li><code>defEmptyIT(dimNames, dimTypes; &lt;kwd args&gt;)</code> - <strong>(Julia 0.6 only)</strong> Define empty IndexedTable(s) with the specific dimension(s) and type(s).</li>
<li><code>defVars(vars, df, dimensions;&lt;kwd args&gt;)</code>   - <strong>(Julia 0.6 only)</strong> Create the required IndexedTables from a common DataFrame while specifing the dimensional columns.</li>
<li><code>fillMissings!(vars, value, dimensions)</code> - <strong>(Julia 0.6 only)</strong> For each values in the specified dimensions, fill the values of IndexedTable(s) without a corresponding key.</li>
</ul>
</article></div>