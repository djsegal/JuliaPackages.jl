<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-particlefiltertreesjl" class="anchor" aria-hidden="true" href="#particlefiltertreesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ParticleFilterTrees.jl</h1>
<p dir="auto"><a href="https://github.com/WhiffleFish/ParticleFilterTrees.jl/actions/workflows/CI.yml"><img src="https://github.com/WhiffleFish/ParticleFilterTrees.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a><a href="https://codecov.io/gh/WhiffleFish/ParticleFilterTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/955dc4f4a0b46fb6eef76e977fdd57c24150522141e5d1a7843a4b20961c90e1/68747470733a2f2f636f6465636f762e696f2f67682f57686966666c65466973682f5061727469636c6546696c74657254726565732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d39484b30463241553252" alt="codecov" data-canonical-src="https://codecov.io/gh/WhiffleFish/ParticleFilterTrees.jl/branch/main/graph/badge.svg?token=9HK0F2AU2R" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-particle-filter-trees-with-double-progressive-widening" class="anchor" aria-hidden="true" href="#particle-filter-trees-with-double-progressive-widening"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Particle Filter Trees with Double Progressive Widening</h2>
<h2 dir="auto"><a id="user-content-parameters" class="anchor" aria-hidden="true" href="#parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parameters</h2>
<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>max_depth</code></td>
<td><code>Int</code></td>
<td><code>20</code></td>
<td>Maximum tree search depth</td>
</tr>
<tr>
<td><code>n_particles</code></td>
<td><code>Int</code></td>
<td><code>100</code></td>
<td>Number of particles representing tree node belief</td>
</tr>
<tr>
<td><code>criterion</code></td>
<td><code>Any</code></td>
<td><code>PolyUCB(1.)</code></td>
<td>Action selection criterion</td>
</tr>
<tr>
<td><code>k_o</code></td>
<td><code>Float64</code></td>
<td><code>10.0</code></td>
<td>Initial observation widening parameter</td>
</tr>
<tr>
<td><code>alpha_o</code></td>
<td><code>Float64</code></td>
<td><code>0.0</code></td>
<td>Observation progressive widening parameter</td>
</tr>
<tr>
<td><code>k_a</code></td>
<td><code>Float64</code></td>
<td><code>5.0</code></td>
<td>Initial action widening parameter</td>
</tr>
<tr>
<td><code>alpha_a</code></td>
<td><code>Float64</code></td>
<td><code>0.0</code></td>
<td>Action progressive widening parameter</td>
</tr>
<tr>
<td><code>tree_queries</code></td>
<td><code>Int</code></td>
<td><code>1_000</code></td>
<td>Maximum number of tree search iterations</td>
</tr>
<tr>
<td><code>max_time</code></td>
<td><code>Float64</code></td>
<td><code>Inf</code></td>
<td>Maximum tree search time (in seconds)</td>
</tr>
<tr>
<td><code>rng</code></td>
<td><code>AbstractRNG</code></td>
<td><code>Random.default_rng()</code></td>
<td>Random number generator</td>
</tr>
<tr>
<td><code>value_estimator</code></td>
<td><code>Any</code></td>
<td><code>FastRandomSolver()</code></td>
<td>Belief node value estimator</td>
</tr>
<tr>
<td><code>check_repeat_obs</code></td>
<td><code>Bool</code></td>
<td><code>true</code></td>
<td>Check that repeat observations do not overwrite beliefs (added dictionary overhead)</td>
</tr>
<tr>
<td><code>enable_action_pw</code></td>
<td><code>Bool</code></td>
<td><code>false</code></td>
<td>Incrementally sample and add actions if true; add all actions at once if false</td>
</tr>
<tr>
<td><code>beliefcache_size</code></td>
<td><code>Int</code></td>
<td><code>1_000</code></td>
<td>Number of particle/weight vectors to cache offline (reduces online array allocations)</td>
</tr>
<tr>
<td><code>treecache_size</code></td>
<td><code>Int</code></td>
<td><code>1_000</code></td>
<td>Number of belief/action nodes to preallocate in tree (reduces <code>Base._growend!</code> calls)</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using POMDPs, POMDPModels
using ParticleFilterTrees

pomdp = LightDark1D()
b0 = initialstate(pomdp)
solver = PFTDPWSolver(tree_queries=10_000, check_repeat_obs=false)
planner = solve(solver, pomdp)
a = action(planner, b0)"><pre><span class="pl-k">using</span> POMDPs, POMDPModels
<span class="pl-k">using</span> ParticleFilterTrees

pomdp <span class="pl-k">=</span> <span class="pl-c1">LightDark1D</span>()
b0 <span class="pl-k">=</span> <span class="pl-c1">initialstate</span>(pomdp)
solver <span class="pl-k">=</span> <span class="pl-c1">PFTDPWSolver</span>(tree_queries<span class="pl-k">=</span><span class="pl-c1">10_000</span>, check_repeat_obs<span class="pl-k">=</span><span class="pl-c1">false</span>)
planner <span class="pl-k">=</span> <span class="pl-c1">solve</span>(solver, pomdp)
a <span class="pl-k">=</span> <span class="pl-c1">action</span>(planner, b0)</pre></div>
</article></div>