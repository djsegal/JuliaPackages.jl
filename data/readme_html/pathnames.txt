<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pathnames" class="anchor" aria-hidden="true" href="#pathnames"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pathnames</h1>
<p dir="auto">Do you hate writing <code>joinpath(prefix, libdir, libsudbir, libname)</code>? Use <code>Pathnames</code> and you won't have to.</p>
<p dir="auto">If you find this package useful, please give it a star.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;https://github.com/carlocab/Pathnames.jl&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/carlocab/Pathnames.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><code>Pathnames</code> is a small library designed to make working with paths in the file system easier. Here's a quick REPL-based summary:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pathnames

julia&gt; prefix = p&quot;/usr/local&quot;
p&quot;/usr/local&quot;

julia&gt; prefix isa Pathname
true

julia&gt; prefix === pathname(&quot;/usr/local&quot;)
true

julia&gt; julia_bin = p&quot;bin/julia&quot;
p&quot;bin/julia&quot;

julia&gt; path = prefix/julia_bin
p&quot;/usr/local/bin/julia&quot;

julia&gt; path isa Pathname
true

julia&gt; path === joinpath(prefix, julia_bin) === pathname(&quot;/usr/local&quot;, &quot;bin/julia&quot;) === prefix/&quot;bin/julia&quot;
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pathnames

julia<span class="pl-k">&gt;</span> prefix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/usr/local<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/usr/local<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> prefix <span class="pl-k">isa</span> Pathname
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> prefix <span class="pl-k">===</span> <span class="pl-c1">pathname</span>(<span class="pl-s"><span class="pl-pds">"</span>/usr/local<span class="pl-pds">"</span></span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> julia_bin <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>bin/julia<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>bin/julia<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> path <span class="pl-k">=</span> prefix<span class="pl-k">/</span>julia_bin
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/usr/local/bin/julia<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> path <span class="pl-k">isa</span> Pathname
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> path <span class="pl-k">===</span> <span class="pl-c1">joinpath</span>(prefix, julia_bin) <span class="pl-k">===</span> <span class="pl-c1">pathname</span>(<span class="pl-s"><span class="pl-pds">"</span>/usr/local<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bin/julia<span class="pl-pds">"</span></span>) <span class="pl-k">===</span> prefix<span class="pl-k">/</span><span class="pl-s"><span class="pl-pds">"</span>bin/julia<span class="pl-pds">"</span></span>
<span class="pl-c1">true</span></pre></div>
<p dir="auto"><code>Pathnames</code> exports:</p>
<ol dir="auto">
<li>a <code>Pathname</code> type, which represents the name of a file or directory in the file system;</li>
<li>a <code>pathname</code> function, analogous to the <code>string</code> function in <code>Base</code>;</li>
<li>a <code>PathnameWrapper</code> module which provides alternate definitions of some functions in <code>Base</code>; and,</li>
<li>a <code>p"..."</code> macro to simplify the definition of <code>Pathname</code>s.</li>
</ol>
<p dir="auto">We add methods to functions in <code>Base.Filesystem</code>. Nearly all of these methods have the same semantics as the ones they replace. The sole exception is <code>/</code>, the default Unix path-separator, which we use <code>/</code> as shorthand for <code>joinpath</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; path = p&quot;/tmp&quot;
p&quot;/tmp&quot;

julia&gt; path/&quot;foo&quot; === pathname(path, &quot;foo&quot;)
true"><pre>julia<span class="pl-k">&gt;</span> path <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/tmp<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/tmp<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> path<span class="pl-k">/</span><span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span> <span class="pl-k">===</span> <span class="pl-c1">pathname</span>(path, <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>)
<span class="pl-c1">true</span></pre></div>
<p dir="auto"><code>Pathname</code>s are <code>AbstractString</code>s. The term <code>Pathname</code> is borrowed from the <a href="https://ruby-doc.org/stdlib-3.0.2/libdoc/pathname/rdoc/Pathname.html" rel="nofollow">Ruby class of the same name</a>, but, at the time of writing, the only similarity is our definition of the <code>/</code> operator.</p>
<p dir="auto">Let <code>f</code> be a function defined in <code>Base.Filesystem</code> and documented in the <a href="https://docs.julialang.org" rel="nofollow">Julia Documentation</a> (e.g. <code>joinpath</code>). There are two design principles we use for defining methods for <code>f</code>:</p>
<ol dir="auto">
<li>If <code>f</code> takes an <code>AbstractString</code> and returns an <code>AbstractString</code>, then <code>f</code> returns a <code>Pathname</code> when given a <code>Pathname</code>.</li>
<li>If <code>f</code> takes multiple <code>AbstractString</code>s and returns an <code>AbstractString</code>, then <code>f</code> returns a <code>Pathname</code> when given a <code>Pathname</code> as its first or second argument.</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; touch(p&quot;/tmp/foo&quot;) isa Pathname
true

julia&gt; joinpath(p&quot;/tmp&quot;, &quot;foo&quot;) isa Pathname
true

julia&gt; joinpath(&quot;/tmp&quot;, p&quot;foo&quot;) isa Pathname
true

julia&gt; joinpath(&quot;/tmp&quot;, &quot;foo&quot;, p&quot;bar&quot;) isa Pathname
false"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">touch</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/tmp/foo<span class="pl-pds">"</span></span>) <span class="pl-k">isa</span> Pathname
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">joinpath</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/tmp<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>) <span class="pl-k">isa</span> Pathname
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">joinpath</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>foo<span class="pl-pds">"</span></span>) <span class="pl-k">isa</span> Pathname
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">joinpath</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>bar<span class="pl-pds">"</span></span>) <span class="pl-k">isa</span> Pathname
<span class="pl-c1">false</span></pre></div>
<p dir="auto">We dispatch to <code>Pathname</code> methods on the second argument to enable use with Julia-provided constants.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Sys.BINDIR/p&quot;julia&quot;
p&quot;/usr/local/bin/julia&quot;"><pre>julia<span class="pl-k">&gt;</span> Sys<span class="pl-k">.</span>BINDIR<span class="pl-k">/</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>julia<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/usr/local/bin/julia<span class="pl-pds">"</span></span></pre></div>
<p dir="auto"><code>PathnameWrapper</code> is a module that exports no functions but provides alternate definitions for functions in <code>Base</code> that don't give us the opportunity to exploit multiple dispatch.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pathnames: PathnameWrapper as p

julia&gt; p.pwd()
p&quot;/Users/carlocab/.julia/dev/Pathnames&quot;

julia&gt; p.homedir()
p&quot;/Users/carlocab&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pathnames<span class="pl-k">:</span> PathnameWrapper <span class="pl-k">as</span> p

julia<span class="pl-k">&gt;</span> p<span class="pl-k">.</span><span class="pl-c1">pwd</span>()
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/Users/carlocab/.julia/dev/Pathnames<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> p<span class="pl-k">.</span><span class="pl-c1">homedir</span>()
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>/Users/carlocab<span class="pl-pds">"</span></span></pre></div>
</article></div>