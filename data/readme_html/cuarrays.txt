<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cuarraysjl-deprecated-use-cudajl-instead" class="anchor" aria-hidden="true" href="#cuarraysjl-deprecated-use-cudajl-instead"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><del>CuArrays.jl</del>: DEPRECATED, use <a href="https://github.com/JuliaGPU/CUDA.jl">CUDA.jl</a> instead!</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://juliagpu.gitlab.io/CUDA.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/afcc1bbab4bcbaf9678e692167f87a6893327e2b51df9f9ed14e0b2830e55681/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d75736167652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-usage-blue.svg" style="max-width: 100%;"></a> <a href="https://juliagpu.gitlab.io/CuArrays.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/61e9a07a738b09099c6a8882712aed6dd9c832dca9120be3ec4224f721e98f3f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6170692d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-api-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://gitlab.com/JuliaGPU/CuArrays.jl/commits/master" rel="nofollow"><img src="https://camo.githubusercontent.com/b64e7f024e56518003f5ce68ca03778c1067ad91551a8451e91b0537dfdb0afc/68747470733a2f2f6769746c61622e636f6d2f4a756c69614750552f43754172726179732e6a6c2f6261646765732f6d61737465722f706970656c696e652e737667" alt="" data-canonical-src="https://gitlab.com/JuliaGPU/CuArrays.jl/badges/master/pipeline.svg" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/JuliaGPU/CuArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e47e19cad738f18b487fe1c190eabf80b712f58652061364f78fb958b8ca9ae0/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614750552f43754172726179732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaGPU/CuArrays.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">CuArrays provides a fully-functional GPU array, which can give significant speedups over
normal arrays without code changes. CuArrays are implemented fully in Julia, making the
implementation <a href="http://mikeinnes.github.io/2017/08/24/cudanative.html" rel="nofollow">elegant and extremely
generic</a>.</p>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">The package can be installed with the Julia package manager.
From the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add CuArrays"><pre class="notranslate"><code>pkg&gt; add CuArrays
</code></pre></div>
<p dir="auto">Or, equivalently, via the <code>Pkg</code> API:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;CuArrays&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CuArrays<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">For usage instructions and other information, check-out the <a href="https://juliagpu.gitlab.io/CUDA.jl/" rel="nofollow">CUDA.jl
documentation</a>.</p>
<h2 dir="auto"><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Project Status</h2>
<p dir="auto">The package is tested against, and being developed for, Julia <code>1.0</code> and above. Main
development and testing happens on Linux, but the package is expected to work on macOS and
Windows as well.</p>
<h2 dir="auto"><a id="user-content-questions-and-contributions" class="anchor" aria-hidden="true" href="#questions-and-contributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Questions and Contributions</h2>
<p dir="auto">Usage questions can be posted on the <a href="https://discourse.julialang.org/c/domain/gpu" rel="nofollow">Julia Discourse
forum</a> under the GPU domain and/or in the #gpu
channel of the <a href="https://julialang.org/community/" rel="nofollow">Julia Slack</a>.</p>
<p dir="auto">Contributions are very welcome, as are feature requests and suggestions. Please open an
<a href="https://github.com/JuliaGPU/CuArrays.jl/issues">issue</a> if you encounter any problems.</p>
</article></div>