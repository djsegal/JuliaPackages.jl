<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-crossdecomposition" class="anchor" aria-hidden="true" href="#crossdecomposition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CrossDecomposition</h1>
<p><a href="https://travis-ci.org/simonster/CrossDecomposition.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f8499d3e8d45d2f6b085ff2c2884c0046c1c26fe/68747470733a2f2f7472617669732d63692e6f72672f73696d6f6e737465722f43726f73734465636f6d706f736974696f6e2e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/simonster/CrossDecomposition.jl.png" style="max-width:100%;"></a></p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p>This package implements canonical correlation in Julia. Someday it will also implement partial least squares. (If you'd like to contribute, please let me know!)</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>To perform canonical correlation analysis between matrices <code>X</code> and <code>Y</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CrossDecomposition
cc <span class="pl-k">=</span> <span class="pl-c1">canoncor</span>(X, Y)</pre></div>
<p><code>cc</code> is a <code>CanonicalCorrelation</code> object that implements the following methods:</p>
<ul>
<li><code>coef(cc)</code> returns the canonical coefficients (loadings) of <code>X</code> and <code>Y</code> as a tuple of two matrices. The coefficients are scaled so that the scores have identity covariance.</li>
<li><code>cor(cc)</code> returns the vector of canonical correlations.</li>
<li><code>scores(cc)</code> returns the canonical variables (component scores) of <code>X</code> and <code>Y</code> as a tuple of two matrices.</li>
</ul>
</article></div>