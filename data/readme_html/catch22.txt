<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-catch22jl" class="anchor" aria-hidden="true" href="#catch22jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Catch22.jl</h1>
<p dir="auto"><a href="https://brendanjohnharris.github.io/Catch22.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/342070622" rel="nofollow"><img src="https://camo.githubusercontent.com/7256c25fd812b3cacb31420c50cda64e492cc89b621e9d7af1510c9777a40136/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3334323037303632322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/342070622.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/brendanjohnharris/Catch22.jl/actions/workflows/CI.yml/badge.svg"><img src="https://github.com/brendanjohnharris/Catch22.jl/actions/workflows/CI.yml/badge.svg" alt="build" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia package wrapping <a href="https://www.github.com/chlubba/catch22"><em>catch22</em></a>, which is a set of 22 time-series features shown by <a href="https://doi.org/10.1007/s10618-019-00647-x" rel="nofollow">Lubba et al. (2019)</a> to be performant in a range of time-series classification problems.</p>
<p dir="auto">The <a href="https://www.github.com/chlubba/catch22"><em>catch22</em></a> repository provides these 22 features, originally coded in Matlab as part of the <a href="https://github.com/benfulcher/hctsa"><em>hctsa</em></a> toolbox, as C functions (in addition to Matlab and Python wrappers). This package simply uses Julia's <code>ccall</code> to wrap these C functions from a shared library that is accessed through <a href="https://github.com/JuliaBinaryWrappers/catch22_jll.jl">catch22_jll</a> and compiled by the fantastic <a href="https://github.com/JuliaPackaging/BinaryBuilder.jl">BinaryBuilder</a> package.</p>
<br>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;Catch22&quot;)
using Catch22"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Catch22<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> Catch22</pre></div>
<h2 dir="auto"><a id="user-content-input-time-series" class="anchor" aria-hidden="true" href="#input-time-series"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Input time series</h2>
<p dir="auto">The input time series can be provided as a <code>Vector{Float64}</code> or <code>Array{Float64, 2}</code>. If an array is provided, the time series must occupy its <em>columns</em>. For example, this package contains a few test time series from <a href="https://www.github.com/chlubba/catch22"><em>catch22</em></a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="𝐱 = Catch22.testdata[:testSinusoid] # a Vector{Float64}
X = randn(1000, 10) # an Array{Float64, 2} with 10 time series"><pre>𝐱 <span class="pl-k">=</span> Catch22<span class="pl-k">.</span>testdata[<span class="pl-c1">:testSinusoid</span>] <span class="pl-c"><span class="pl-c">#</span> a Vector{Float64}</span>
X <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">10</span>) <span class="pl-c"><span class="pl-c">#</span> an Array{Float64, 2} with 10 time series</span></pre></div>
<h2 dir="auto"><a id="user-content-evaluating-a-feature" class="anchor" aria-hidden="true" href="#evaluating-a-feature"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Evaluating a feature</h2>
<p dir="auto">A list of features (as symbols) can be obtained with <code>getnames(catch22)</code> and their short descriptions with <code>getdescriptions(catch22)</code>. Each feature can be evaluated for a time series array or vector with the <code>catch22</code> <code>FeatureSet</code>. For example, the feature <code>DN_HistogramMode_5</code> can be evaluated using:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="f = catch22[:DN_HistogramMode_5](𝐱) # Returns a scalar Float64
𝐟 = catch22[1](X) # Returns a 1×10 Matrix{Float64}"><pre>f <span class="pl-k">=</span> catch22[<span class="pl-c1">:DN_HistogramMode_5</span>](𝐱) <span class="pl-c"><span class="pl-c">#</span> Returns a scalar Float64</span>
𝐟 <span class="pl-k">=</span> catch22[<span class="pl-c1">1</span>](X) <span class="pl-c"><span class="pl-c">#</span> Returns a 1×10 Matrix{Float64}</span></pre></div>
<p dir="auto">All features are returned as Float64's, even though some may be constrained to the integers.</p>
<p dir="auto">Alternatively, functions that calculate each feature individually are exported. <code>DN_HistogramMode_5</code> can be evaluated with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="f = DN_HistogramMode_5(𝐱)"><pre>f <span class="pl-k">=</span> <span class="pl-c1">DN_HistogramMode_5</span>(𝐱)</pre></div>
<h2 dir="auto"><a id="user-content-evaluating-a-feature-set" class="anchor" aria-hidden="true" href="#evaluating-a-feature-set"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Evaluating a feature set</h2>
<p dir="auto">All <em>catch22</em> features can be evaluated with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="𝐟 = catch22(𝐱)
F = catch22(X)"><pre>𝐟 <span class="pl-k">=</span> <span class="pl-c1">catch22</span>(𝐱)
F <span class="pl-k">=</span> <span class="pl-c1">catch22</span>(X)</pre></div>
<p dir="auto">If an array is provided, containing one time series in each of N columns, then a 22×N <code>FeatureArray</code> of feature values will be returned (a subtype of <a href="https://github.com/rafaqz/DimensionalData.jl">AbstractDimArray</a>).
A <code>FeatureArray</code> has most of the properties and methods of an Array but is annotated with feature names that can be accessed with <code>getnames(F)</code>.
If a vector is provided (a single time series) then a vector of feature values will be returned as a <code>FeatureVector</code>, a one-dimensional <code>FeatureArray</code>.</p>
<p dir="auto">Finally, note that since <code>catch22</code> is a <code>FeatureSet</code> it can be indexed with a vector of feature names as symbols to calculate a <code>FeatureArray</code> for a subset of <em>catch22</em>. For details on the <code>Feature</code>, <code>FeatureSet</code> and <code>FeatureArray</code> types check out the package docs.</p>
<br>
<h1 dir="auto"><a id="user-content-single-threaded-performance" class="anchor" aria-hidden="true" href="#single-threaded-performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Single-threaded performance</h1>
<p dir="auto">Calculating features for a single time series of a given length:
<a target="_blank" rel="noopener noreferrer" href="scaling.png"><img src="scaling.png" alt="scaling" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-multithreaded-performance" class="anchor" aria-hidden="true" href="#multithreaded-performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multithreaded performance</h1>
<p dir="auto">Calculating features for 100 time series of a given length:
<a target="_blank" rel="noopener noreferrer" href="multithread_scaling.png"><img src="multithread_scaling.png" alt="multithread_scaling" style="max-width: 100%;"></a></p>
</article></div>