<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-kdotpjl" class="anchor" aria-hidden="true" href="#kdotpjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>KdotP.jl</h1>
<p dir="auto"><a href="https://thchr.github.io/KdotP.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="API (development)" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Determine the allowable <strong>k</strong> ⋅ <strong>p</strong> models associated with a given small irrep of a little group, up to arbitrary order in <strong>k</strong>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">KdotP.jl is not currently registered in the general registry but can be installed directly from the REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg
julia&gt; Pkg.add(url=&quot;https://github.com/thchr/KdotP.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/thchr/KdotP.jl<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">To get access to relevant irrep data, KdotP.jl is assumed to be used in combination with <a href="https://github.com/thchr/Crystalline.jl">Crystalline.jl</a>, which can be added via:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg
julia&gt; Pkg.add(&quot;Crystalline&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Crystalline<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">The main functionality of KdotP.jl is exposed in the function <code>kdotp(::LGIrrep)</code>. To illustrate this, we calculate the allowed terms in the leading-order <strong>k</strong> ⋅ <strong>p</strong> expansion of a few different examples, using <a href="https://github.com/thchr/Crystalline.jl">Crystalline.jl</a> to access the small irreps of little groups (of type <code>LGIrrep</code>).</p>
<p dir="auto">As a first example, we may consider the W₁ irrep in space group 24. The associated <strong>k</strong> ⋅ <strong>p</strong> model is a general (charge-1) Weyl Hamiltonian:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Crystalline, KdotP
julia&gt; lgirs = lgirreps(24)[&quot;W&quot;]
julia&gt; characters(lgirs)
CharacterTable{3}: ⋕24 (I2₁2₁2₁) at W = [1/2, 1/2, 1/2]
──────────────┬────
              │ W₁
──────────────┼────
            1 │  2
 {2₁₀₀|0,0,½} │  0
 {2₀₁₀|½,0,0} │  0
 {2₀₀₁|0,½,0} │  0
──────────────┴────

julia&gt; kdotp(lgirs[1])
HamiltonianExpansion{3} up to degree 1 for 2D irrep (W₁):
┌ MonomialHamiltonian{3} of degree 1 with 3 basis elements:
│ ₁₎ ┌       ┐
│    │ 1   · │x
│    │ ·  -1 │
│    └       ┘
│ ₂₎ ┌       ┐
│    │ ·  -i │y
│    │ i   · │
│    └       ┘
│ ₃₎ ┌      ┐
│    │ ·  1 │z
│    │ 1  · │
└    └      ┘"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Crystalline, KdotP
julia<span class="pl-k">&gt;</span> lgirs <span class="pl-k">=</span> <span class="pl-c1">lgirreps</span>(<span class="pl-c1">24</span>)[<span class="pl-s"><span class="pl-pds">"</span>W<span class="pl-pds">"</span></span>]
julia<span class="pl-k">&gt;</span> <span class="pl-c1">characters</span>(lgirs)
CharacterTable{<span class="pl-c1">3</span>}<span class="pl-k">:</span> ⋕<span class="pl-c1">24</span> (I2₁2₁2₁) at W <span class="pl-k">=</span> [<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>]
──────────────┬────
              │ W₁
──────────────┼────
            <span class="pl-c1">1</span> │  <span class="pl-c1">2</span>
 {<span class="pl-c1">2</span>₁₀₀<span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-c1">0</span>,½} │  <span class="pl-c1">0</span>
 {<span class="pl-c1">2</span>₀₁₀<span class="pl-k">|</span>½,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>} │  <span class="pl-c1">0</span>
 {<span class="pl-c1">2</span>₀₀₁<span class="pl-k">|</span><span class="pl-c1">0</span>,½,<span class="pl-c1">0</span>} │  <span class="pl-c1">0</span>
──────────────┴────

julia<span class="pl-k">&gt;</span> <span class="pl-c1">kdotp</span>(lgirs[<span class="pl-c1">1</span>])
HamiltonianExpansion{<span class="pl-c1">3</span>} up to degree <span class="pl-c1">1</span> <span class="pl-k">for</span> <span class="pl-c1">2</span>D irrep (W₁)<span class="pl-k">:</span>
┌ MonomialHamiltonian{<span class="pl-c1">3</span>} of degree <span class="pl-c1">1</span> with <span class="pl-c1">3</span> basis elements<span class="pl-k">:</span>
│ ₁₎ ┌       ┐
│    │ <span class="pl-c1">1</span>   · │x
│    │ ·  <span class="pl-k">-</span><span class="pl-c1">1</span> │
│    └       ┘
│ ₂₎ ┌       ┐
│    │ ·  <span class="pl-k">-</span>i │y
│    │ i   · │
│    └       ┘
│ ₃₎ ┌      ┐
│    │ ·  <span class="pl-c1">1</span> │z
│    │ <span class="pl-c1">1</span>  · │
└    └      ┘</pre></div>
<p dir="auto">The components of the <strong>k</strong>-vectors are indicated by <code>x</code>, <code>y</code>, and <code>z</code>, giving the <strong>k</strong>-vector components referred to the reciprocal lattice vectors associated with the conventional basis choice for the corresponding space group (note that this choice is different from the Cartesian basis, except for cubic groups; the conventional basis choices are listed in the International Tables of Crystallography, Volume A).</p>
<p dir="auto">In general, an arbitrary little group may support multiple irreps. For instance, the A point in space group 92 supports two irreps:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; lgirs = lgirreps(92)[&quot;A&quot;]
julia&gt; characters(lgirs)
CharacterTable{3}: ⋕92 (P4₁2₁2) at A = [1/2, 1/2, 1/2]
───────────────┬──────────────────────────
               │          A₁           A₂
───────────────┼──────────────────────────
             1 │           2            2
  {2₁₀₀|½,½,¾} │           0            0
  {2₀₁₀|½,½,¼} │           0            0
  {2₀₀₁|0,0,½} │           0            0
 {4₀₀₁⁺|½,½,¼} │ -1.414214im   1.414214im
 {4₀₀₁⁻|½,½,¾} │  1.414214im  -1.414214im
          2₁₁₀ │           0            0
 {2₋₁₁₀|0,0,½} │           0            0
───────────────┴──────────────────────────"><pre>julia<span class="pl-k">&gt;</span> lgirs <span class="pl-k">=</span> <span class="pl-c1">lgirreps</span>(<span class="pl-c1">92</span>)[<span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>]
julia<span class="pl-k">&gt;</span> <span class="pl-c1">characters</span>(lgirs)
CharacterTable{<span class="pl-c1">3</span>}<span class="pl-k">:</span> ⋕<span class="pl-c1">92</span> (P4₁2₁2) at A <span class="pl-k">=</span> [<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>]
───────────────┬──────────────────────────
               │          A₁           A₂
───────────────┼──────────────────────────
             <span class="pl-c1">1</span> │           <span class="pl-c1">2</span>            <span class="pl-c1">2</span>
  {<span class="pl-c1">2</span>₁₀₀<span class="pl-k">|</span>½,½,¾} │           <span class="pl-c1">0</span>            <span class="pl-c1">0</span>
  {<span class="pl-c1">2</span>₀₁₀<span class="pl-k">|</span>½,½,¼} │           <span class="pl-c1">0</span>            <span class="pl-c1">0</span>
  {<span class="pl-c1">2</span>₀₀₁<span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-c1">0</span>,½} │           <span class="pl-c1">0</span>            <span class="pl-c1">0</span>
 {<span class="pl-c1">4</span>₀₀₁⁺<span class="pl-k">|</span>½,½,¼} │ <span class="pl-k">-</span><span class="pl-c1">1.414214im</span>   <span class="pl-c1">1.414214im</span>
 {<span class="pl-c1">4</span>₀₀₁⁻<span class="pl-k">|</span>½,½,¾} │  <span class="pl-c1">1.414214im</span>  <span class="pl-k">-</span><span class="pl-c1">1.414214im</span>
          <span class="pl-c1">2</span>₁₁₀ │           <span class="pl-c1">0</span>            <span class="pl-c1">0</span>
 {<span class="pl-c1">2</span>₋₁₁₀<span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-c1">0</span>,½} │           <span class="pl-c1">0</span>            <span class="pl-c1">0</span>
───────────────┴──────────────────────────</pre></div>
<p dir="auto">In the absence of time-reversal, both A₁ and A₂ must be (charge-1) Weyl points:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; kdotp(lgirs[1]; timereversal=false)
HamiltonianExpansion{3} up to degree 1 for 2D irrep (A₁):
┌ MonomialHamiltonian{3} of degree 1 with 2 basis elements:
│ ₁₎ ┌      ┐    ┌       ┐
│    │ ·  1 │x + │ ·  -i │(-y)
│    │ 1  · │    │ i   · │
│    └      ┘    └       ┘
│ ₂₎ ┌       ┐
│    │ 1   · │z
│    │ ·  -1 │
└    └       ┘

julia&gt; kdotp(lgirs[2]; timereversal=false)
HamiltonianExpansion{3} up to degree 1 for 2D irrep (A₂):
┌ MonomialHamiltonian{3} of degree 1 with 2 basis elements:
│ ₁₎ ┌      ┐    ┌       ┐
│    │ ·  1 │x + │ ·  -i │y
│    │ 1  · │    │ i   · │
│    └      ┘    └       ┘
│ ₂₎ ┌       ┐
│    │ 1   · │z
│    │ ·  -1 │
└    └       ┘"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">kdotp</span>(lgirs[<span class="pl-c1">1</span>]; timereversal<span class="pl-k">=</span><span class="pl-c1">false</span>)
HamiltonianExpansion{<span class="pl-c1">3</span>} up to degree <span class="pl-c1">1</span> <span class="pl-k">for</span> <span class="pl-c1">2</span>D irrep (A₁)<span class="pl-k">:</span>
┌ MonomialHamiltonian{<span class="pl-c1">3</span>} of degree <span class="pl-c1">1</span> with <span class="pl-c1">2</span> basis elements<span class="pl-k">:</span>
│ ₁₎ ┌      ┐    ┌       ┐
│    │ ·  <span class="pl-c1">1</span> │x <span class="pl-k">+</span> │ ·  <span class="pl-k">-</span>i <span class="pl-c1">│</span>(<span class="pl-k">-</span>y)
│    │ <span class="pl-c1">1</span>  · │    │ i   · │
│    └      ┘    └       ┘
│ ₂₎ ┌       ┐
│    │ <span class="pl-c1">1</span>   · │z
│    │ ·  <span class="pl-k">-</span><span class="pl-c1">1</span> │
└    └       ┘

julia<span class="pl-k">&gt;</span> <span class="pl-c1">kdotp</span>(lgirs[<span class="pl-c1">2</span>]; timereversal<span class="pl-k">=</span><span class="pl-c1">false</span>)
HamiltonianExpansion{<span class="pl-c1">3</span>} up to degree <span class="pl-c1">1</span> <span class="pl-k">for</span> <span class="pl-c1">2</span>D irrep (A₂)<span class="pl-k">:</span>
┌ MonomialHamiltonian{<span class="pl-c1">3</span>} of degree <span class="pl-c1">1</span> with <span class="pl-c1">2</span> basis elements<span class="pl-k">:</span>
│ ₁₎ ┌      ┐    ┌       ┐
│    │ ·  <span class="pl-c1">1</span> │x <span class="pl-k">+</span> │ ·  <span class="pl-k">-</span>i │y
│    │ <span class="pl-c1">1</span>  · │    │ i   · │
│    └      ┘    └       ┘
│ ₂₎ ┌       ┐
│    │ <span class="pl-c1">1</span>   · │z
│    │ ·  <span class="pl-k">-</span><span class="pl-c1">1</span> │
└    └       ┘</pre></div>
<p dir="auto">Under time-reversal, however, the two 2D irreps A₁ and A₂ glue together to form the 4D irrep A₁A₂, whose <strong>k</strong> ⋅ <strong>p</strong> model is a (charge-2) Dirac Hamiltonian:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; lgirs′ = realify(lgirs) # form the corepresentations, i.e. incorporate time-reversal
julia&gt; characters(lgirs′)
CharacterTable{3}: ⋕92 (P4₁2₁2) at A = [1/2, 1/2, 1/2]
───────────────┬──────
               │ A₁A₂
───────────────┼──────
             1 │    4
  {2₁₀₀|½,½,¾} │    0
  {2₀₁₀|½,½,¼} │    0
  {2₀₀₁|0,0,½} │    0
 {4₀₀₁⁺|½,½,¼} │    0
 {4₀₀₁⁻|½,½,¾} │    0
          2₁₁₀ │    0
 {2₋₁₁₀|0,0,½} │    0
───────────────┴──────

julia&gt; kdotp(lgirs′[1]; timereversal=true)
HamiltonianExpansion{3} up to degree 1 for 4D irrep (A₁A₂):
┌ MonomialHamiltonian{3} of degree 1 with 2 basis elements:
│ ₁₎ ┌            ┐       ┌             ┐    ┌            ┐    ┌             ┐
│    │ ·  1  ·  · │       │ ·  -i  ·  · │    │ ·  ·  ·  · │    │ ·  ·  ·   · │
│    │ 1  ·  ·  · │(-x) + │ i   ·  ·  · │y + │ ·  ·  ·  · │x + │ ·  ·  ·   · │y
│    │ ·  ·  ·  · │       │ ·   ·  ·  · │    │ ·  ·  ·  1 │    │ ·  ·  ·  -i │
│    │ ·  ·  ·  · │       │ ·   ·  ·  · │    │ ·  ·  1  · │    │ ·  ·  i   · │
│    └            ┘       └             ┘    └            ┘    └             ┘
│ ₂₎ ┌             ┐     ┌             ┐    ┌             ┐
│    │ 1   ·  ·  · │     │ 1  ·   ·  · │    │ 1  ·  ·   · │
│    │ ·  -1  ·  · │3z + │ ·  1   ·  · │z + │ ·  1  ·   · │(-z)
│    │ ·   ·  ·  · │     │ ·  ·  -2  · │    │ ·  ·  1   · │
│    │ ·   ·  ·  · │     │ ·  ·   ·  · │    │ ·  ·  ·  -3 │
└    └             ┘     └             ┘    └             ┘"><pre>julia<span class="pl-k">&gt;</span> lgirs′ <span class="pl-k">=</span> <span class="pl-c1">realify</span>(lgirs) <span class="pl-c"><span class="pl-c">#</span> form the corepresentations, i.e. incorporate time-reversal</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">characters</span>(lgirs′)
CharacterTable{<span class="pl-c1">3</span>}<span class="pl-k">:</span> ⋕<span class="pl-c1">92</span> (P4₁2₁2) at A <span class="pl-k">=</span> [<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>]
───────────────┬──────
               │ A₁A₂
───────────────┼──────
             <span class="pl-c1">1</span> │    <span class="pl-c1">4</span>
  {<span class="pl-c1">2</span>₁₀₀<span class="pl-k">|</span>½,½,¾} │    <span class="pl-c1">0</span>
  {<span class="pl-c1">2</span>₀₁₀<span class="pl-k">|</span>½,½,¼} │    <span class="pl-c1">0</span>
  {<span class="pl-c1">2</span>₀₀₁<span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-c1">0</span>,½} │    <span class="pl-c1">0</span>
 {<span class="pl-c1">4</span>₀₀₁⁺<span class="pl-k">|</span>½,½,¼} │    <span class="pl-c1">0</span>
 {<span class="pl-c1">4</span>₀₀₁⁻<span class="pl-k">|</span>½,½,¾} │    <span class="pl-c1">0</span>
          <span class="pl-c1">2</span>₁₁₀ │    <span class="pl-c1">0</span>
 {<span class="pl-c1">2</span>₋₁₁₀<span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-c1">0</span>,½} │    <span class="pl-c1">0</span>
───────────────┴──────

julia<span class="pl-k">&gt;</span> <span class="pl-c1">kdotp</span>(lgirs′[<span class="pl-c1">1</span>]; timereversal<span class="pl-k">=</span><span class="pl-c1">true</span>)
HamiltonianExpansion{<span class="pl-c1">3</span>} up to degree <span class="pl-c1">1</span> <span class="pl-k">for</span> <span class="pl-c1">4</span>D irrep (A₁A₂)<span class="pl-k">:</span>
┌ MonomialHamiltonian{<span class="pl-c1">3</span>} of degree <span class="pl-c1">1</span> with <span class="pl-c1">2</span> basis elements<span class="pl-k">:</span>
│ ₁₎ ┌            ┐       ┌             ┐    ┌            ┐    ┌             ┐
│    │ ·  <span class="pl-c1">1</span>  ·  · │       │ ·  <span class="pl-k">-</span>i  ·  · │    │ ·  ·  ·  · │    │ ·  ·  ·   · │
│    │ <span class="pl-c1">1</span>  ·  ·  · <span class="pl-c1">│</span>(<span class="pl-k">-</span>x) <span class="pl-k">+</span> │ i   ·  ·  · │y <span class="pl-k">+</span> │ ·  ·  ·  · │x <span class="pl-k">+</span> │ ·  ·  ·   · │y
│    │ ·  ·  ·  · │       │ ·   ·  ·  · │    │ ·  ·  ·  <span class="pl-c1">1</span> │    │ ·  ·  ·  <span class="pl-k">-</span>i │
│    │ ·  ·  ·  · │       │ ·   ·  ·  · │    │ ·  ·  <span class="pl-c1">1</span>  · │    │ ·  ·  i   · │
│    └            ┘       └             ┘    └            ┘    └             ┘
│ ₂₎ ┌             ┐     ┌             ┐    ┌             ┐
│    │ <span class="pl-c1">1</span>   ·  ·  · │     │ <span class="pl-c1">1</span>  ·   ·  · │    │ <span class="pl-c1">1</span>  ·  ·   · │
│    │ ·  <span class="pl-k">-</span><span class="pl-c1">1</span>  ·  · │3z <span class="pl-k">+</span> │ ·  <span class="pl-c1">1</span>   ·  · │z <span class="pl-k">+</span> │ ·  <span class="pl-c1">1</span>  ·   · <span class="pl-c1">│</span>(<span class="pl-k">-</span>z)
│    │ ·   ·  ·  · │     │ ·  ·  <span class="pl-k">-</span><span class="pl-c1">2</span>  · │    │ ·  ·  <span class="pl-c1">1</span>   · │
│    │ ·   ·  ·  · │     │ ·  ·   ·  · │    │ ·  ·  ·  <span class="pl-k">-</span><span class="pl-c1">3</span> │
└    └             ┘     └             ┘    └             ┘</pre></div>
<p dir="auto">By default, <code>kdotp</code> will set the keyword argument <code>timereversal=true</code>. If an irrep is complex or pseudoreal and not yet paired up with a time-reversal partner (via <code>realify</code>), the keyword argument most be toggled to <code>false</code>.</p>
<p dir="auto">By default, <code>kdotp</code> will return only the leading-degree allowed monomial terms in <strong>k</strong>. In the above examples, the leading order term had degree 1. To change the maximum considered degree, we can use the <code>degree</code> keyword argument. E.g., to include second-order terms in <strong>k</strong> in the expansion of the A₁ example from above:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; kdotp(lgirs[1]; timereversal=false, degree=2)
HamiltonianExpansion{3} up to degree 2 for 2D irrep (A₁):
┌ MonomialHamiltonian{3} of degree 1 with 2 basis elements:
│ ₁₎ ┌      ┐    ┌       ┐
│    │ ·  1 │x + │ ·  -i │(-y)
│    │ 1  · │    │ i   · │
│    └      ┘    └       ┘
│ ₂₎ ┌       ┐
│    │ 1   · │z
│    │ ·  -1 │
└    └       ┘
┌ MonomialHamiltonian{3} of degree 2 with 3 basis elements:
│ ₁₎ ┌      ┐
│    │ 1  · │(x²+y²)
│    │ ·  1 │
│    └      ┘
│ ₂₎ ┌      ┐     ┌       ┐
│    │ ·  1 │yz + │ ·  -i │xz
│    │ 1  · │     │ i   · │
│    └      ┘     └       ┘
│ ₃₎ ┌      ┐
│    │ 1  · │z²
│    │ ·  1 │
└    └      ┘"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">kdotp</span>(lgirs[<span class="pl-c1">1</span>]; timereversal<span class="pl-k">=</span><span class="pl-c1">false</span>, degree<span class="pl-k">=</span><span class="pl-c1">2</span>)
HamiltonianExpansion{<span class="pl-c1">3</span>} up to degree <span class="pl-c1">2</span> <span class="pl-k">for</span> <span class="pl-c1">2</span>D irrep (A₁)<span class="pl-k">:</span>
┌ MonomialHamiltonian{<span class="pl-c1">3</span>} of degree <span class="pl-c1">1</span> with <span class="pl-c1">2</span> basis elements<span class="pl-k">:</span>
│ ₁₎ ┌      ┐    ┌       ┐
│    │ ·  <span class="pl-c1">1</span> │x <span class="pl-k">+</span> │ ·  <span class="pl-k">-</span>i <span class="pl-c1">│</span>(<span class="pl-k">-</span>y)
│    │ <span class="pl-c1">1</span>  · │    │ i   · │
│    └      ┘    └       ┘
│ ₂₎ ┌       ┐
│    │ <span class="pl-c1">1</span>   · │z
│    │ ·  <span class="pl-k">-</span><span class="pl-c1">1</span> │
└    └       ┘
┌ MonomialHamiltonian{<span class="pl-c1">3</span>} of degree <span class="pl-c1">2</span> with <span class="pl-c1">3</span> basis elements<span class="pl-k">:</span>
│ ₁₎ ┌      ┐
│    │ <span class="pl-c1">1</span>  · <span class="pl-c1">│</span>(x²<span class="pl-k">+</span>y²)
│    │ ·  <span class="pl-c1">1</span> │
│    └      ┘
│ ₂₎ ┌      ┐     ┌       ┐
│    │ ·  <span class="pl-c1">1</span> │yz <span class="pl-k">+</span> │ ·  <span class="pl-k">-</span>i │xz
│    │ <span class="pl-c1">1</span>  · │     │ i   · │
│    └      ┘     └       ┘
│ ₃₎ ┌      ┐
│    │ <span class="pl-c1">1</span>  · │z²
│    │ ·  <span class="pl-c1">1</span> │
└    └      ┘</pre></div>
</article></div>