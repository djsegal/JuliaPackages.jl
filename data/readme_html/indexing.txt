<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-indexing" class="anchor" aria-hidden="true" href="#indexing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Indexing</h1>
<p><em>Generalized indexing for Julia</em></p>
<p><a href="https://travis-ci.org/andyferris/Indexing.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/310d00c35b63e33e4d0448058a9673b6cc699c7c/68747470733a2f2f7472617669732d63692e6f72672f616e64796665727269732f496e646578696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/andyferris/Indexing.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/andyferris/indexing-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5fe2faa818bcc3a6fb5dd521598ea867af6340b2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f31766d356b366379346a6974666e73373f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/1vm5k6cy4jitfns7?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/andyferris/Indexing.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6c0ff1a641579fbf01a2c3b6e7709981c8a3abf4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f616e64796665727269732f496e646578696e672e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/andyferris/Indexing.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/andyferris/Indexing.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/443b1b42818fb69dfcfc46f6ed5edb1dd9618ca4/687474703a2f2f636f6465636f762e696f2f6769746875622f616e64796665727269732f496e646578696e672e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/andyferris/Indexing.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<hr>
<p>This package defines functions for getting multiple indices out of dictionaries, tuples,
etc, extending this ability beyond <code>AbstractArray</code>.</p>
<p>To acheive this, we introduce new functions and methods:</p>
<ul>
<li><code>getindices(container, indices)</code> - generalizes <code>getindex(container, index)</code> to multiple indices.</li>
<li><code>setindices!(container, value, indices)</code> - generalizes <code>setindex!(container, value, index)</code> to multiple indices. The same <code>value</code> is set for
each index in <code>indices</code>.</li>
<li><code>view(container, indices)</code> - lazy versions of <code>getindices(container, indices)</code> defined for dictionaries.</li>
</ul>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick start</h2>
<p>Please note that this package is still under development. However, you can check it out with
Julia v0.6 or greater, and use it like so:</p>
<pre><code>julia&gt; Pkg.clone("https://github.com/andyferris/Indexing.jl")

julia&gt; using Indexing

julia&gt; d = Dict(:a =&gt; "Alice", :b =&gt; "Bob", :c =&gt; "Charlie")
Dict{Symbol,String} with 3 entries:
  :a =&gt; "Alice"
  :b =&gt; "Bob"
  :c =&gt; "Charlie"

julia&gt; getindices(d, [:a, :c]) # Preserves type/keys of index collection - an array of length 2
2-element Array{String,1}:
 "Alice"  
 "Charlie"

julia&gt; getindices(d, (:a, :c)) # Preserves type/keys of index collection - a tuple of length 2
("Alice", "Charlie")

julia&gt; getindices(d, Dict("Wife" =&gt; :a, "Husband" =&gt; :c)) # Preserves type/keys of index collection - a dictionary with keys "Wife" and "Husband"
Dict{String,String} with 2 entries:
  "Wife"    =&gt; "Alice"
  "Husband" =&gt; "Charlie"
</code></pre>
<p>Similarly, <code>view</code> works as a lazy version of <code>getindices</code>, and <code>setindices!</code> works by
setting <em>the same</em> value to each specified index.</p>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>TODO</h2>
<p>This package is a work-in-progress. To complete the package, we need to:</p>
<ul>
<li>Performance improvements and propagation of <code>@inbounds</code> annotations.</li>
</ul>
<h2><a id="user-content-future-thoughts" class="anchor" aria-hidden="true" href="#future-thoughts"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Future thoughts</h2>
<p>Perhaps these could be intergrated into future Julia syntax. One suggestion:</p>
<div class="highlight highlight-source-julia"><pre>a[i]               <span class="pl-k">--&gt;</span> <span class="pl-c1">getindex</span>(a, i)       <span class="pl-c"><span class="pl-c">#</span> scalar only</span>
a.[inds]           <span class="pl-k">--&gt;</span> <span class="pl-c1">getindices</span>(a, inds)
a[i] <span class="pl-k">=</span> v           <span class="pl-k">--&gt;</span> <span class="pl-c1">setindex!</span>(a, v, i)   <span class="pl-c"><span class="pl-c">#</span> scalar only</span>
a.[inds] <span class="pl-k">=</span> v       <span class="pl-k">--&gt;</span> <span class="pl-c1">setindices!</span>(a, v, inds)
a[i] <span class="pl-k">.=</span> v          <span class="pl-k">--&gt;</span> <span class="pl-c1">broadcast!</span>(identity, a[i], v)
a.[inds] <span class="pl-k">.=</span> values <span class="pl-k">--&gt;</span> <span class="pl-c1">broadcast!</span>(identity, <span class="pl-c1">view</span>(a, inds), values)</pre></div>
<p>Note the lack of <code>dotview</code> and <code>maybeview</code>. The last two could support dot-fusion on the RHS.
Also, the default for <code>a.[inds]</code> could potentially move to <code>view</code>.</p>
</article></div>