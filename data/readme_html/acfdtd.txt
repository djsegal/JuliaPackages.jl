<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-acfdtd-this-library-is-unmantained" class="anchor" aria-hidden="true" href="#acfdtd-this-library-is-unmantained"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AcFDTD (this library is unmantained)</h1>
<p>Finite Difference Time Domain (FDTD) method for room acoustic simulation</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>From the Julia command line hit:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/nantonel/AcFDTD.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<p>Once the package is installed you can update it along with the others issuing <code>Pkg.update()</code> in the command line.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>Import the package by typing <code>using AcFDTD</code>.
First you need to specify an acoustic environment
and FDTD scheme:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AcFDTD
X <span class="pl-k">=</span> <span class="pl-c1">0.1</span>                   <span class="pl-c"><span class="pl-c">#</span> spatial sampling</span>
env <span class="pl-k">=</span> <span class="pl-c1">FDTDEnv</span>(X,<span class="pl-c1">IISO</span>())   <span class="pl-c"><span class="pl-c">#</span> create new acoustic env with default values</span></pre></div>
<p>where <code>IISO()</code> returns the Interpolated Isotropic scheme.
Alternatively one can choose a samplng frequency
instead of a spatial sampling:</p>
<div class="highlight highlight-source-julia"><pre>Fs <span class="pl-k">=</span> <span class="pl-c1">2000.</span>                          <span class="pl-c"><span class="pl-c">#</span> sampling frequency in Hz</span>
env <span class="pl-k">=</span> <span class="pl-c1">FDTDEnv</span>(<span class="pl-c1">IISO</span>(),Fs; c <span class="pl-k">=</span> <span class="pl-c1">340</span>)   <span class="pl-c"><span class="pl-c">#</span> create new acoustic env with default values</span></pre></div>
<p>notice that in the latter line the speed of sound was
chosen to be <code>340</code> m/s.
By default this is set to <code>343</code> m/s.
Set the acoustic impedance <code>ξ</code> and room geometry room geometry:</p>
<div class="highlight highlight-source-julia"><pre>ξ <span class="pl-k">=</span> [<span class="pl-c1">50.</span>;<span class="pl-c1">50.</span>;<span class="pl-c1">100.</span>;<span class="pl-c1">30.</span>;<span class="pl-c1">50.</span>;<span class="pl-c1">50.</span>]; <span class="pl-c"><span class="pl-c">#</span> [   ξx1    ;    ξx2   ;    ξy1   ;    ξy2    ;  ξz1 ;   ξz2  ]</span>
                                <span class="pl-c"><span class="pl-c">#</span> [front wall; rear wall; left wall; right wall; floor; ceiling]</span>
geo <span class="pl-k">=</span> <span class="pl-c1">CuboidRoom</span>(<span class="pl-c1">10</span>, <span class="pl-c1">11</span>, <span class="pl-c1">12</span>, ξ, env)</pre></div>
<p>The first three parameters
indicate the number of spatial samples
of the <code>x</code>, <code>y</code> and <code>z</code> directions.<br>
Alternatively one can specify
the room dimensions in meters:</p>
<div class="highlight highlight-source-julia"><pre>geo <span class="pl-k">=</span> <span class="pl-c1">CuboidRoom</span>(<span class="pl-c1">4.</span>, <span class="pl-c1">5.</span>, <span class="pl-c1">3.</span>, ξ, env)</pre></div>
<p>which are then approximated on the grid.
Set the number of time steps <code>Nt</code>
Create a band-limited sound source
with e.g. the <code>DSP</code> package:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DSP
Nt <span class="pl-k">=</span> <span class="pl-c1">round</span>(Int,env<span class="pl-k">.</span>Fs)         <span class="pl-c"><span class="pl-c">#</span> number of time steps (1 sec)</span>
s <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Nt)                    <span class="pl-c"><span class="pl-c">#</span> source signal</span>
s[<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>
f2 <span class="pl-k">=</span> geo<span class="pl-k">.</span>env<span class="pl-k">.</span>Fs<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">0.175</span>          <span class="pl-c"><span class="pl-c">#</span> cut-off frequency of source</span>
<span class="pl-c1">filt!</span>(s,<span class="pl-c1">digitalfilter</span>(<span class="pl-c1">Bandpass</span>(<span class="pl-c1">10</span>,f2;fs <span class="pl-k">=</span> geo<span class="pl-k">.</span>env<span class="pl-k">.</span>Fs),<span class="pl-c1">Butterworth</span>(<span class="pl-c1">5</span>)),s)</pre></div>
<p>Define the position of microphone
and sound sources:</p>
<div class="highlight highlight-source-julia"><pre>xr <span class="pl-k">=</span> [(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>), (<span class="pl-c1">2</span>, geo<span class="pl-k">.</span>Ny<span class="pl-k">-</span><span class="pl-c1">1</span>, geo<span class="pl-k">.</span>Nz<span class="pl-k">-</span><span class="pl-c1">1</span>)] <span class="pl-c"><span class="pl-c">#</span> mic positions</span>
xs <span class="pl-k">=</span> (geo<span class="pl-k">.</span>Nx<span class="pl-k">-</span><span class="pl-c1">1</span>, geo<span class="pl-k">.</span>Ny<span class="pl-k">-</span><span class="pl-c1">1</span>, geo<span class="pl-k">.</span>Nz<span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> sound source position</span>
<span class="pl-c"><span class="pl-c">#</span>positions must be Tuple{Int,Int,Int} or Array{Tuple{Int,Int,Int},1} </span></pre></div>
<p>Now type:</p>
<div class="highlight highlight-source-julia"><pre>p <span class="pl-k">=</span> <span class="pl-c1">fdtd</span>(xr,xs,Nt,geo,s)</pre></div>
<p>to obtain the sound pressure of the microphones.</p>
<p>For more details on the methods type:</p>
<div class="highlight highlight-source-julia"><pre>?fdtd</pre></div>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Credits</h2>
<p>AcFDTD.jl is developed by <a href="http://homes.esat.kuleuven.be/~nantonel/" rel="nofollow">Niccolò Antonello</a> at <a href="https://www.esat.kuleuven.be/stadius/" rel="nofollow">KU Leuven, ESAT/Stadius</a>.</p>
</article></div>