<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hydna-julia-client-library" class="anchor" aria-hidden="true" href="#hydna-julia-client-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hydna Julia Client Library</h1>
<p>This first version of our client library for Julia implements support for the
Hydna Push API. Future versions will include support for the full set of
features.</p>
<p>More info: <a href="https://www.hydna.com/" rel="nofollow">https://www.hydna.com/</a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The exported APIs from module Hydna are:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Hydna

# send a message
result = Hydna.send('public.hydna.net/julia-test', 'hello world')
@test result.success

# send message with priority 3
result = Hydna.send('public.hydna.net/julia-test',
                    'hello world',
                    SendOptions(priority=3))
@test result.success

# send a non-blocking message
ref = Hydna.send('public.hydna.net/julia-test',
                 'hello world',
                 SendOptions(blocking=false))
result = fetch(ref)
@test result.success

# emit a signal
result = Hydna.emit('public.hydna.net/julia-test', 'hello world signal')
@test result.success

# emit a non-blocking signal
ref = Hydna.emit('public.hydna.net/julia-test',
                 'hello world',
                 EmitOptions(blocking=false))
result = fetch(ref)
@test result.success
"><pre><code>using Hydna

# send a message
result = Hydna.send('public.hydna.net/julia-test', 'hello world')
@test result.success

# send message with priority 3
result = Hydna.send('public.hydna.net/julia-test',
                    'hello world',
                    SendOptions(priority=3))
@test result.success

# send a non-blocking message
ref = Hydna.send('public.hydna.net/julia-test',
                 'hello world',
                 SendOptions(blocking=false))
result = fetch(ref)
@test result.success

# emit a signal
result = Hydna.emit('public.hydna.net/julia-test', 'hello world signal')
@test result.success

# emit a non-blocking signal
ref = Hydna.emit('public.hydna.net/julia-test',
                 'hello world',
                 EmitOptions(blocking=false))
result = fetch(ref)
@test result.success
</code></pre></div>
</article></div>