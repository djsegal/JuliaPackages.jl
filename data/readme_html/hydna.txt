<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-hydna-julia-client-library" class="anchor" aria-hidden="true" href="#hydna-julia-client-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Hydna Julia Client Library</h1>
<p>This first version of our client library for Julia implements support for the
Hydna Push API. Future versions will include support for the full set of
features.</p>
<p>More info: <a href="https://www.hydna.com/" rel="nofollow">https://www.hydna.com/</a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>The exported APIs from module Hydna are:</p>
<pre><code>using Hydna

# send a message
result = Hydna.send('public.hydna.net/julia-test', 'hello world')
@test result.success

# send message with priority 3
result = Hydna.send('public.hydna.net/julia-test',
                    'hello world',
                    SendOptions(priority=3))
@test result.success

# send a non-blocking message
ref = Hydna.send('public.hydna.net/julia-test',
                 'hello world',
                 SendOptions(blocking=false))
result = fetch(ref)
@test result.success

# emit a signal
result = Hydna.emit('public.hydna.net/julia-test', 'hello world signal')
@test result.success

# emit a non-blocking signal
ref = Hydna.emit('public.hydna.net/julia-test',
                 'hello world',
                 EmitOptions(blocking=false))
result = fetch(ref)
@test result.success
</code></pre>
</article></div>