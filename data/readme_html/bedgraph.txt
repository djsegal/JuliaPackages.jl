<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-bedgraphjl" class="anchor" aria-hidden="true" href="#bedgraphjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bedgraph.jl</h1>
<p><a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/695935dc7a39fbee68b14bede34c6e31924729ca136f3864d9b61e3e09c49786/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP â€“ Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/CiaranOMara/Bedgraph.jl/workflows/Unit%20Tests/badge.svg?branch=master"><img src="https://github.com/CiaranOMara/Bedgraph.jl/workflows/Unit%20Tests/badge.svg?branch=master" alt="Unit Tests" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/CiaranOMara/Bedgraph.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/54344fc6fa5f897f1ec766b9ed364522a331e55823e5889f4b27dad7683c02fa/68747470733a2f2f636f6465636f762e696f2f67682f43696172616e4f4d6172612f42656467726170682e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f6272616e63683d6d6173746572" alt="codecov" data-canonical-src="https://codecov.io/gh/CiaranOMara/Bedgraph.jl/branch/master/graph/badge.svg?branch=master" style="max-width:100%;"></a></p>
<blockquote>
<p>This project follows the <a href="http://semver.org" rel="nofollow">semver</a> pro forma and uses the <a href="http://nvie.com/git-model" title="original
blog post" rel="nofollow">git-flow branching model</a>.</p>
</blockquote>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>This package provides read and write support for <a href="https://genome.ucsc.edu/goldenPath/help/bedgraph.html" rel="nofollow">Bedgraph files</a>.</p>
<blockquote>
<p><strong>Note:</strong>  this package does not currently handle bedGraph meta data such as the track definition or browser lines.</p>
</blockquote>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>You can install Bedgraph from the <a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow">Julia REPL</a>.
Press <code>]</code> to enter <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">pkg mode</a>, then enter the following:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="add Bedgraph
"><pre>add Bedgraph</pre></div>
<p>If you are interested in the cutting edge of the development, please check out the <a href="https://github.com/CiaranOMara/Bedgraph.jl/tree/develop">develop branch</a> to try new features before release.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-reading-and-writing-bedgraph-files" class="anchor" aria-hidden="true" href="#reading-and-writing-bedgraph-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reading and writing bedGraph files</h3>
<blockquote>
<p>See source for optional <code>bump_back</code>, <code>bump_forward</code>, and <code>right_open</code> key values. These options are included in the pertinent read/write functions to handle quirks of the zero-based and half-open nature of the bedGraph format.</p>
</blockquote>
<h4><a id="user-content-read-headermeta" class="anchor" aria-hidden="true" href="#read-headermeta"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Read header/meta</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Bedgraph

header = read(file, BedgraphHeader{Vector{String}})
"><pre><span class="pl-k">using</span> Bedgraph

header <span class="pl-k">=</span> <span class="pl-c1">read</span>(file, BedgraphHeader{Vector{String}})</pre></div>
<h4><a id="user-content-read-records" class="anchor" aria-hidden="true" href="#read-records"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Read records</h4>
<p>Read all records at once.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Bedgraph

records = read(file, Vector{Bedgraph.Record})
"><pre><span class="pl-k">using</span> Bedgraph

records <span class="pl-k">=</span> <span class="pl-c1">read</span>(file, Vector{Bedgraph<span class="pl-k">.</span>Record})</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Bedgraph

records = open(file, &quot;r&quot;) do io
    return read(io, Vector{Bedgraph.Record})
end
"><pre><span class="pl-k">using</span> Bedgraph

records <span class="pl-k">=</span> <span class="pl-c1">open</span>(file, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-k">return</span> <span class="pl-c1">read</span>(io, Vector{Bedgraph<span class="pl-k">.</span>Record})
<span class="pl-k">end</span></pre></div>
<p>Alternatively you may want to read and process records individually.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="open(file, &quot;r&quot;) do io
    while !eof(seek(io, Bedgraph.Record))
        record = read(io, Bedgraph.Record) #Note: no protection.
        # Process record.
    end
end
"><pre><span class="pl-c1">open</span>(file, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-k">while</span> <span class="pl-k">!</span><span class="pl-c1">eof</span>(<span class="pl-c1">seek</span>(io, Bedgraph<span class="pl-k">.</span>Record))
        record <span class="pl-k">=</span> <span class="pl-c1">read</span>(io, Bedgraph<span class="pl-k">.</span>Record) <span class="pl-c"><span class="pl-c">#</span>Note: no protection.</span>
        <span class="pl-c"><span class="pl-c">#</span> Process record.</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<h4><a id="user-content-write-a-bedgraph-file" class="anchor" aria-hidden="true" href="#write-a-bedgraph-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Write a bedGraph file</h4>
<p>Bedgraph.jl currently provides two write functions: one for <code>Bedgraph.BedgraphHeader</code>, and one for <code>Bedgraph.Record</code>, which also accepts <code>Vector{Bedgraph.Record}</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Bedgraph

const chroms = [&quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;, &quot;chr19&quot;]
const firsts = [49302000, 49302300, 49302600, 49302900, 49303200, 49303500, 49303800, 49304100, 49304400]
const lasts = [49302300, 49302600, 49302900, 49303200, 49303500, 49303800, 49304100, 49304400, 49304700]
const values = [-1.0, -0.75, -0.50, -0.25, 0.0, 0.25, 0.50, 0.75, 1.00]

records = Bedgraph.Record.(chroms, firsts, lasts, values)

sort!(records)

header = Bedgraph.generate_basic_header(records)

write(&quot;data.bedgraph&quot;, header, records)
"><pre><span class="pl-k">using</span> Bedgraph

<span class="pl-k">const</span> chroms <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>]
<span class="pl-k">const</span> firsts <span class="pl-k">=</span> [<span class="pl-c1">49302000</span>, <span class="pl-c1">49302300</span>, <span class="pl-c1">49302600</span>, <span class="pl-c1">49302900</span>, <span class="pl-c1">49303200</span>, <span class="pl-c1">49303500</span>, <span class="pl-c1">49303800</span>, <span class="pl-c1">49304100</span>, <span class="pl-c1">49304400</span>]
<span class="pl-k">const</span> lasts <span class="pl-k">=</span> [<span class="pl-c1">49302300</span>, <span class="pl-c1">49302600</span>, <span class="pl-c1">49302900</span>, <span class="pl-c1">49303200</span>, <span class="pl-c1">49303500</span>, <span class="pl-c1">49303800</span>, <span class="pl-c1">49304100</span>, <span class="pl-c1">49304400</span>, <span class="pl-c1">49304700</span>]
<span class="pl-k">const</span> values <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">1.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.75</span>, <span class="pl-k">-</span><span class="pl-c1">0.50</span>, <span class="pl-k">-</span><span class="pl-c1">0.25</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.25</span>, <span class="pl-c1">0.50</span>, <span class="pl-c1">0.75</span>, <span class="pl-c1">1.00</span>]

records <span class="pl-k">=</span> Bedgraph<span class="pl-k">.</span><span class="pl-c1">Record</span>.(chroms, firsts, lasts, values)

<span class="pl-c1">sort!</span>(records)

header <span class="pl-k">=</span> Bedgraph<span class="pl-k">.</span><span class="pl-c1">generate_basic_header</span>(records)

<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>data.bedgraph<span class="pl-pds">"</span></span>, header, records)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Bedgraph

records = [Record(&quot;chr19&quot;, 49302000, 49302300, -1.0), Record(&quot;chr19&quot;, 49302300, 49302600, -1.75)]
header = Bedgraph.generate_basic_header(&quot;chr19&quot;, records[1].first, records[end].last, bump_forward=false)

open(output_file, &quot;w&quot;) do io
    write(io, header, records)
end

"><pre><span class="pl-k">using</span> Bedgraph

records <span class="pl-k">=</span> [<span class="pl-c1">Record</span>(<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-c1">49302000</span>, <span class="pl-c1">49302300</span>, <span class="pl-k">-</span><span class="pl-c1">1.0</span>), <span class="pl-c1">Record</span>(<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-c1">49302300</span>, <span class="pl-c1">49302600</span>, <span class="pl-k">-</span><span class="pl-c1">1.75</span>)]
header <span class="pl-k">=</span> Bedgraph<span class="pl-k">.</span><span class="pl-c1">generate_basic_header</span>(<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, records[<span class="pl-c1">1</span>]<span class="pl-k">.</span>first, records[<span class="pl-c1">end</span>]<span class="pl-k">.</span>last, bump_forward<span class="pl-k">=</span><span class="pl-c1">false</span>)

<span class="pl-c1">open</span>(output_file, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-c1">write</span>(io, header, records)
<span class="pl-k">end</span>
</pre></div>
</article></div>