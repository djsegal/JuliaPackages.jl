<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-bedgraphjl" class="anchor" aria-hidden="true" href="#bedgraphjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Bedgraph.jl</h1>
<p><a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/0749f25183695b4417d8b995933f3528de416a49/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP â€“ Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/CiaranOMara/Bedgraph.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b69c57ea575b1377576b3325ffbab2b71ffb2c69/68747470733a2f2f7472617669732d63692e636f6d2f43696172616e4f4d6172612f42656467726170682e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/CiaranOMara/Bedgraph.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/CiaranOMara/bedgraph-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/78fde148309741c46b208e128445d0137b3047aa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7530656e6e32386934656131663734342f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/u0enn28i4ea1f744/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://cirrus-ci.com/github/CiaranOMara/Bedgraph.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6086dc7891b6dd79da8835182e631dbefd6916ec/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f43696172616e4f4d6172612f42656467726170682e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/CiaranOMara/Bedgraph.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/CiaranOMara/Bedgraph.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/538b922012b752a7590c3ab3724ec3cea0a38e51/687474703a2f2f636f6465636f762e696f2f6769746875622f43696172616e4f4d6172612f42656467726170682e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/CiaranOMara/Bedgraph.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<blockquote>
<p>This project follows the <a href="http://semver.org" rel="nofollow">semver</a> pro forma and uses the <a href="http://nvie.com/git-model" title="original
blog post" rel="nofollow">git-flow branching model</a>.</p>
</blockquote>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Description</h2>
<p>This package provides read and write support for <a href="https://genome.ucsc.edu/goldenPath/help/bedgraph.html" rel="nofollow">Bedgraph files</a>.</p>
<blockquote>
<p><strong>Note:</strong>  this package does not currently handle bedGraph meta data such as the track definition or browser lines.</p>
</blockquote>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>You can install Bedgraph from the <a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow">Julia REPL</a>.
Press <code>]</code> to enter <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">pkg mode</a>, then enter the following:</p>
<div class="highlight highlight-source-julia"><pre>add Bedgraph</pre></div>
<p>If you are interested in the cutting edge of the development, please check out the <a href="https://github.com/CiaranOMara/Bedgraph.jl/tree/develop">develop branch</a> to try new features before release.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<h3><a id="user-content-reading-and-writing-bedgraph-files" class="anchor" aria-hidden="true" href="#reading-and-writing-bedgraph-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reading and writing bedGraph files</h3>
<blockquote>
<p>See source for optional <code>bump_back</code>, <code>bump_forward</code>, and <code>right_open</code> key values. These options are included in the pertinent read/write functions to handle quirks of the zero-based and half-open nature of the bedGraph format.</p>
</blockquote>
<h4><a id="user-content-read-headermeta" class="anchor" aria-hidden="true" href="#read-headermeta"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Read header/meta</h4>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Bedgraph

header <span class="pl-k">=</span> <span class="pl-c1">read</span>(file, BedgraphHeader{Vector{String}})</pre></div>
<h4><a id="user-content-read-records" class="anchor" aria-hidden="true" href="#read-records"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Read records</h4>
<p>Read all records at once.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Bedgraph

records <span class="pl-k">=</span> <span class="pl-c1">read</span>(file, Vector{Bedgraph<span class="pl-k">.</span>Record})</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Bedgraph

records <span class="pl-k">=</span> <span class="pl-c1">open</span>(file, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-k">return</span> <span class="pl-c1">read</span>(io, Vector{Bedgraph<span class="pl-k">.</span>Record})
<span class="pl-k">end</span></pre></div>
<p>Alternatively you may want to read and process records individually.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">open</span>(file, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-k">while</span> <span class="pl-k">!</span><span class="pl-c1">eof</span>(<span class="pl-c1">seek</span>(io, Bedgraph<span class="pl-k">.</span>Record))
        record <span class="pl-k">=</span> <span class="pl-c1">read</span>(io, Bedgraph<span class="pl-k">.</span>Record) <span class="pl-c"><span class="pl-c">#</span>Note: no protection.</span>
        <span class="pl-c"><span class="pl-c">#</span> Process record.</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<h4><a id="user-content-write-a-bedgraph-file" class="anchor" aria-hidden="true" href="#write-a-bedgraph-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Write a bedGraph file</h4>
<p>Bedgraph.jl currently provides two write functions: one for <code>Bedgraph.BedgraphHeader</code>, and one for <code>Bedgraph.Record</code>, which also accepts <code>Vector{Bedgraph.Record}</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Bedgraph

<span class="pl-k">const</span> chroms <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>]
<span class="pl-k">const</span> firsts <span class="pl-k">=</span> [<span class="pl-c1">49302000</span>, <span class="pl-c1">49302300</span>, <span class="pl-c1">49302600</span>, <span class="pl-c1">49302900</span>, <span class="pl-c1">49303200</span>, <span class="pl-c1">49303500</span>, <span class="pl-c1">49303800</span>, <span class="pl-c1">49304100</span>, <span class="pl-c1">49304400</span>]
<span class="pl-k">const</span> lasts <span class="pl-k">=</span> [<span class="pl-c1">49302300</span>, <span class="pl-c1">49302600</span>, <span class="pl-c1">49302900</span>, <span class="pl-c1">49303200</span>, <span class="pl-c1">49303500</span>, <span class="pl-c1">49303800</span>, <span class="pl-c1">49304100</span>, <span class="pl-c1">49304400</span>, <span class="pl-c1">49304700</span>]
<span class="pl-k">const</span> values <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">1.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.75</span>, <span class="pl-k">-</span><span class="pl-c1">0.50</span>, <span class="pl-k">-</span><span class="pl-c1">0.25</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.25</span>, <span class="pl-c1">0.50</span>, <span class="pl-c1">0.75</span>, <span class="pl-c1">1.00</span>]

records <span class="pl-k">=</span> Bedgraph<span class="pl-k">.</span><span class="pl-c1">Record</span>.(chroms, firsts, lasts, values)

<span class="pl-c1">sort!</span>(records)

header <span class="pl-k">=</span> Bedgraph<span class="pl-k">.</span><span class="pl-c1">generate_basic_header</span>(records)

<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>data.bedgraph<span class="pl-pds">"</span></span>, header, records)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Bedgraph

records <span class="pl-k">=</span> [<span class="pl-c1">Record</span>(<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-c1">49302000</span>, <span class="pl-c1">49302300</span>, <span class="pl-k">-</span><span class="pl-c1">1.0</span>), <span class="pl-c1">Record</span>(<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, <span class="pl-c1">49302300</span>, <span class="pl-c1">49302600</span>, <span class="pl-k">-</span><span class="pl-c1">1.75</span>)]
header <span class="pl-k">=</span> Bedgraph<span class="pl-k">.</span><span class="pl-c1">generate_basic_header</span>(<span class="pl-s"><span class="pl-pds">"</span>chr19<span class="pl-pds">"</span></span>, records[<span class="pl-c1">1</span>]<span class="pl-k">.</span>first, records[<span class="pl-c1">end</span>]<span class="pl-k">.</span>last, bump_forward<span class="pl-k">=</span><span class="pl-c1">false</span>)

<span class="pl-c1">open</span>(output_file, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    <span class="pl-c1">write</span>(io, header, records)
<span class="pl-k">end</span>
</pre></div>
</article></div>