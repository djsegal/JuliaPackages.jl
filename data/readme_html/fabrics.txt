<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fabricsjl" class="anchor" aria-hidden="true" href="#fabricsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fabrics.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/fabrics.gif"><img src="media/fabrics.gif" width="200" height="180" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">Julia implementation of <a href="https://arxiv.org/abs/2010.14750" rel="nofollow">Geometric Fabrics for the Acceleration-based Design of Robotic Motion</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<ol dir="auto">
<li>Open your Julia REPL by typing  <code>julia</code> in your terminal.</li>
<li>Press <code>]</code> on your keyboard to enter the package manager</li>
<li>Enter command <code>add https://github.com/adubredu/Fabrics.jl</code> and press
<code>Enter</code> on your keyboard to install this package.</li>
<li>Press the <code>Backspace</code> key on your keyboard to return to the REPL</li>
</ol>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">I implement Geometric Fabrics for 3 Planar robot systems viz; A point mass, A planar robot arm and PickleRick, a planar humanoid robot.</p>
<p dir="auto">Example usage scripts can be found in the <a href="examples">examples</a> folder.
To run an example as it is, go back to your Julia REPL, activate the environment where you installed this packagage and run the following commands:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Fabrics
path = pathof(Fabrics)
include(joinpath(path, &quot;../../examples/&lt;example script filename&gt;&quot;))"><pre class="notranslate"><code>using Fabrics
path = pathof(Fabrics)
include(joinpath(path, "../../examples/&lt;example script filename&gt;"))
</code></pre></div>
<p dir="auto">To alter certain parameters of the dynamical system, you'll have to create a new Julia script, copy the specific example code and alter the parameters as you see fit. Note that before you run the Julia script, you should activate the Julia environment where you installed this package.</p>
<h3 dir="auto"><a id="user-content-point-mass-navigator-fabric" class="anchor" aria-hidden="true" href="#point-mass-navigator-fabric"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Point Mass Navigator fabric</h3>
<p dir="auto">Here's an example script to run the Point Mass navigator fabric :</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Fabrics

x = [5.5, 0.0]
ẋ = [0.0, 0.0] 
O = [[-2.0, 0.0], [2.5, -2.5], [-2.0, 4.5], [2.5, 2.5]]
g = [-5.0, 0.0]
or = 1.75*ones(length(O))
r = 0.5

env = PointMass(x, ẋ, r, O, or, g)
env.show_tail = true
env.dynamic = false
env.obstacle_speed = 0.017 #17 mm/sec
ax, fig = visualize_system!(env)
horizon = 10000

for i=1:horizon
    global x, ẋ
    if env.dynamic move_obstacles!(env) end
    ẍ = pointmass_fabric_solve(x, ẋ, env)
    step!(ẍ, env)
    x = env.x
    ẋ = env.ẋ
    sleep(env.Δt/horizon)
end"><pre><span class="pl-k">using</span> Fabrics

x <span class="pl-k">=</span> [<span class="pl-c1">5.5</span>, <span class="pl-c1">0.0</span>]
ẋ <span class="pl-k">=</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>] 
O <span class="pl-k">=</span> [[<span class="pl-k">-</span><span class="pl-c1">2.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">2.5</span>, <span class="pl-k">-</span><span class="pl-c1">2.5</span>], [<span class="pl-k">-</span><span class="pl-c1">2.0</span>, <span class="pl-c1">4.5</span>], [<span class="pl-c1">2.5</span>, <span class="pl-c1">2.5</span>]]
g <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">5.0</span>, <span class="pl-c1">0.0</span>]
or <span class="pl-k">=</span> <span class="pl-c1">1.75</span><span class="pl-k">*</span><span class="pl-c1">ones</span>(<span class="pl-c1">length</span>(O))
r <span class="pl-k">=</span> <span class="pl-c1">0.5</span>

env <span class="pl-k">=</span> <span class="pl-c1">PointMass</span>(x, ẋ, r, O, or, g)
env<span class="pl-k">.</span>show_tail <span class="pl-k">=</span> <span class="pl-c1">true</span>
env<span class="pl-k">.</span>dynamic <span class="pl-k">=</span> <span class="pl-c1">false</span>
env<span class="pl-k">.</span>obstacle_speed <span class="pl-k">=</span> <span class="pl-c1">0.017</span> <span class="pl-c"><span class="pl-c">#</span>17 mm/sec</span>
ax, fig <span class="pl-k">=</span> <span class="pl-c1">visualize_system!</span>(env)
horizon <span class="pl-k">=</span> <span class="pl-c1">10000</span>

<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>horizon
    <span class="pl-k">global</span> x, ẋ
    <span class="pl-k">if</span> env<span class="pl-k">.</span>dynamic <span class="pl-c1">move_obstacles!</span>(env) <span class="pl-k">end</span>
    ẍ <span class="pl-k">=</span> <span class="pl-c1">pointmass_fabric_solve</span>(x, ẋ, env)
    <span class="pl-c1">step!</span>(ẍ, env)
    x <span class="pl-k">=</span> env<span class="pl-k">.</span>x
    ẋ <span class="pl-k">=</span> env<span class="pl-k">.</span>ẋ
    <span class="pl-c1">sleep</span>(env<span class="pl-k">.</span>Δt<span class="pl-k">/</span>horizon)
<span class="pl-k">end</span></pre></div>
<p dir="auto">You should see the visualization below:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/nav_static.gif"><img src="media/nav_static.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">To make the obstacles dynamic, change the <code>env.dynamic</code> parameter to true as in this script below. I use different initial obstacle positions to make things interesting:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Fabrics

x = [5.5, 0.0]
ẋ = [0.0, 0.0]
O = [[-2.0, 5.0], [2.5, -7.5], [-2.0, 9.5], [2.5, 7.5]] 
g = [-5.0, 0.0]
or = 1.75*ones(length(O))
r = 0.5

env = PointMass(x, ẋ, r, O, or, g)
env.show_tail = true
env.dynamic = true
env.obstacle_speed = 0.017 #17 mm/sec
ax, fig = visualize_system!(env)
horizon = 10000

for i=1:horizon
    global x, ẋ
    if env.dynamic move_obstacles!(env) end
    ẍ = pointmass_fabric_solve(x, ẋ, env)
    step!(ẍ, env)
    x = env.x
    ẋ = env.ẋ
    sleep(env.Δt/horizon)
end"><pre><span class="pl-k">using</span> Fabrics

x <span class="pl-k">=</span> [<span class="pl-c1">5.5</span>, <span class="pl-c1">0.0</span>]
ẋ <span class="pl-k">=</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]
O <span class="pl-k">=</span> [[<span class="pl-k">-</span><span class="pl-c1">2.0</span>, <span class="pl-c1">5.0</span>], [<span class="pl-c1">2.5</span>, <span class="pl-k">-</span><span class="pl-c1">7.5</span>], [<span class="pl-k">-</span><span class="pl-c1">2.0</span>, <span class="pl-c1">9.5</span>], [<span class="pl-c1">2.5</span>, <span class="pl-c1">7.5</span>]] 
g <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">5.0</span>, <span class="pl-c1">0.0</span>]
or <span class="pl-k">=</span> <span class="pl-c1">1.75</span><span class="pl-k">*</span><span class="pl-c1">ones</span>(<span class="pl-c1">length</span>(O))
r <span class="pl-k">=</span> <span class="pl-c1">0.5</span>

env <span class="pl-k">=</span> <span class="pl-c1">PointMass</span>(x, ẋ, r, O, or, g)
env<span class="pl-k">.</span>show_tail <span class="pl-k">=</span> <span class="pl-c1">true</span>
env<span class="pl-k">.</span>dynamic <span class="pl-k">=</span> <span class="pl-c1">true</span>
env<span class="pl-k">.</span>obstacle_speed <span class="pl-k">=</span> <span class="pl-c1">0.017</span> <span class="pl-c"><span class="pl-c">#</span>17 mm/sec</span>
ax, fig <span class="pl-k">=</span> <span class="pl-c1">visualize_system!</span>(env)
horizon <span class="pl-k">=</span> <span class="pl-c1">10000</span>

<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>horizon
    <span class="pl-k">global</span> x, ẋ
    <span class="pl-k">if</span> env<span class="pl-k">.</span>dynamic <span class="pl-c1">move_obstacles!</span>(env) <span class="pl-k">end</span>
    ẍ <span class="pl-k">=</span> <span class="pl-c1">pointmass_fabric_solve</span>(x, ẋ, env)
    <span class="pl-c1">step!</span>(ẍ, env)
    x <span class="pl-k">=</span> env<span class="pl-k">.</span>x
    ẋ <span class="pl-k">=</span> env<span class="pl-k">.</span>ẋ
    <span class="pl-c1">sleep</span>(env<span class="pl-k">.</span>Δt<span class="pl-k">/</span>horizon)
<span class="pl-k">end</span></pre></div>
<p dir="auto">You should see the visualization below:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/nav_dynamic.gif"><img src="media/nav_dynamic.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-2-dof-planar-arm-fabric" class="anchor" aria-hidden="true" href="#2-dof-planar-arm-fabric"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2-DOF Planar Arm Fabric</h3>
<p dir="auto">To run the 2 Dof Planar Arm example, go back to your Julia REPL, activate the environment where you installed this packagage and run the following commands:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Fabrics
path = pathof(Fabrics)
include(joinpath(path, &quot;../../examples/planararm_eg.jl&quot;))"><pre class="notranslate"><code>using Fabrics
path = pathof(Fabrics)
include(joinpath(path, "../../examples/planararm_eg.jl"))
</code></pre></div>
<p dir="auto">You should see the visualization below:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/2dof_arm.gif"><img src="media/2dof_arm.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-10-dof-planar-arm-fabric" class="anchor" aria-hidden="true" href="#10-dof-planar-arm-fabric"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>10-DOF Planar Arm Fabric</h3>
<p dir="auto">To run the 10 Dof Planar Arm example, go back to your Julia REPL, activate the environment where you installed this packagage and run the following commands:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Fabrics
path = pathof(Fabrics)
include(joinpath(path, &quot;../../examples/multiplanararm_eg.jl&quot;))"><pre class="notranslate"><code>using Fabrics
path = pathof(Fabrics)
include(joinpath(path, "../../examples/multiplanararm_eg.jl"))
</code></pre></div>
<p dir="auto">You should see the visualization below:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/10dof_arm.gif"><img src="media/10dof_arm.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-picklerick-bullet-dodging-fabric" class="anchor" aria-hidden="true" href="#picklerick-bullet-dodging-fabric"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PickleRick Bullet-Dodging Fabric</h3>
<p dir="auto">To run the PickleRick Bullet-Dodging Fabric example, go back to your Julia- REPL, activate the environment where you installed this packagage and run the following commands:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Fabrics
path = pathof(Fabrics)
include(joinpath(path, &quot;../../examples/picklerick_eg.jl&quot;))"><pre class="notranslate"><code>using Fabrics
path = pathof(Fabrics)
include(joinpath(path, "../../examples/picklerick_eg.jl"))
</code></pre></div>
<p dir="auto">You should see the visualization below:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/picklerick.gif"><img src="media/picklerick.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
</article></div>