<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-markdownast" class="anchor" aria-hidden="true" href="#markdownast"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MarkdownAST</h1>
<p dir="auto"><a href="https://juliahub.com/ui/Packages/MarkdownAST/6YkiC" rel="nofollow"><img src="https://camo.githubusercontent.com/e9f1864bd80b93a1f3855b94aaf904e064b62fb9512d15a63ffb5921afda29c7/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4d61726b646f776e4153542f76657273696f6e2e737667" alt="Version" data-canonical-src="https://juliahub.com/docs/MarkdownAST/version.svg" style="max-width: 100%;"></a>
<a href="https://markdownast.juliadocs.org/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/ce767b3816248c8ee6de2b50678477d880d34f40489cfeee2446193f78f02402/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/documentation-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaDocs/MarkdownAST.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaDocs/MarkdownAST.jl/actions/workflows/CI.yml/badge.svg" alt="GitHub Actions CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaDocs/MarkdownAST.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0089f386a4ba59901e873b099b22b1ecb366154c971d71e344d3d7963cc629d7/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961446f63732f4d61726b646f776e4153542e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d39315850554151325745" alt="CodeCov" data-canonical-src="https://codecov.io/gh/JuliaDocs/MarkdownAST.jl/branch/main/graph/badge.svg?token=91XPUAQ2WE" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia package for working with Markdown documents in an <a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree" rel="nofollow">abstract syntax tree</a> representation.
As an example, the following Markdown</p>
<div class="highlight highlight-source-gfm notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Markdown document

Hello [world](https://example.com/)!"><pre><span class="pl-mh"><span class="pl-mh">#</span><span class="pl-mh"> </span>Markdown document</span>

Hello [<span class="pl-e">world</span>](https://example.com/)!</pre></div>
<p dir="auto">can be represented as the following tree (in the <a href="https://markdownast.juliadocs.org/stable/astmacro/#MarkdownAST.@ast" rel="nofollow"><code>@ast</code> macro DSL</a>) using MarkdownAST</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MarkdownAST: @ast, Document, Heading, Paragraph, Link
ast = @ast Document() do
    Heading(1) do
        &quot;Markdown document&quot;
    end
    Paragraph() do
        &quot;Hello &quot;
        Link(&quot;https://example.com/&quot;, &quot;&quot;) do
            &quot;world&quot;
        end
        &quot;!&quot;
    end
end"><pre><span class="pl-k">using</span> MarkdownAST<span class="pl-k">:</span> <span class="pl-c1">@ast</span>, Document, Heading, Paragraph, Link
ast <span class="pl-k">=</span> <span class="pl-c1">@ast</span> <span class="pl-c1">Document</span>() <span class="pl-k">do</span>
    <span class="pl-c1">Heading</span>(<span class="pl-c1">1</span>) <span class="pl-k">do</span>
        <span class="pl-s"><span class="pl-pds">"</span>Markdown document<span class="pl-pds">"</span></span>
    <span class="pl-k">end</span>
    <span class="pl-c1">Paragraph</span>() <span class="pl-k">do</span>
        <span class="pl-s"><span class="pl-pds">"</span>Hello <span class="pl-pds">"</span></span>
        <span class="pl-c1">Link</span>(<span class="pl-s"><span class="pl-pds">"</span>https://example.com/<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>) <span class="pl-k">do</span>
            <span class="pl-s"><span class="pl-pds">"</span>world<span class="pl-pds">"</span></span>
        <span class="pl-k">end</span>
        <span class="pl-s"><span class="pl-pds">"</span>!<span class="pl-pds">"</span></span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">and the resulting <a href="https://markdownast.juliadocs.org/stable/node/#MarkdownAST.Node" rel="nofollow"><code>Node</code> object</a> that contains information about the whole tree can be accessed, traversed, and, if need be, modified, e.g.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; for node in ast.children
           println(&quot;$(node.element) with $(length(node.children)) child nodes&quot;)
       end
Heading(1) with 1 child nodes
Paragraph() with 3 child nodes"><pre lang="julia-repl" class="notranslate"><code>julia&gt; for node in ast.children
           println("$(node.element) with $(length(node.children)) child nodes")
       end
Heading(1) with 1 child nodes
Paragraph() with 3 child nodes
</code></pre></div>
<p dir="auto">See the <a href="https://markdownast.juliadocs.org/stable/" rel="nofollow">documentation</a> for the full descriptions of the APIs that are available.</p>
<h2 dir="auto"><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Credits</h2>
<p dir="auto">The core parts of this package heavily derive from the <a href="https://github.com/MichaelHatherly/CommonMark.jl">CommonMark.jl</a> package.
Also, this packages does not provide a parser, and the users are encouraged to check out CommonMark.jl for that purpose.</p>
</article></div>