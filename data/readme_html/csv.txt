<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-csv" class="anchor" aria-hidden="true" href="#csv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CSV</h1>
<p dir="auto"><a href="https://github.com/JuliaData/CSV.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaData/CSV.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaData/CSV.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/187814e2160986d98840a45c017e3288ced1045637e2b3d09a9166d1f6dd5110/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961446174612f4353562e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaData/CSV.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/CSV/HHBkp?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/90df385e6c36210d1cd90b38c517180ef8e446887dec1b79ef4e2865d563a5b1/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4353562f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/CSV/deps.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/CSV/HHBkp" rel="nofollow"><img src="https://camo.githubusercontent.com/1ae069023732a73dee451b04f86ae6be4607dfadad669e2b2c56e23686d7c869/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4353562f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/CSV/version.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/CSV/HHBkp" rel="nofollow"><img src="https://camo.githubusercontent.com/664d4e6e79c5f455294e85ce09bffaa27b85724a3e9b33ffa03172a58b44a2b6/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4353562f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/CSV/pkgeval.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><em>A fast, flexible delimited file reader/writer for Julia.</em></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package is registered in the <a href="https://github.com/JuliaRegistries/General"><code>General</code></a> registry and so can be installed at the REPL with <code>] add CSV</code>.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<ul dir="auto">
<li><a href="https://JuliaData.github.io/CSV.jl/stable" rel="nofollow"><strong>STABLE</strong></a> — <strong>most recently tagged version of the documentation.</strong></li>
<li><a href="https://JuliaData.github.io/CSV.jl/latest" rel="nofollow"><strong>LATEST</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
<h2 dir="auto"><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Project Status</h2>
<p dir="auto">The package is tested against Julia <code>1.0</code>, current stable release, and nightly on Linux, OS X, and Windows.</p>
<h2 dir="auto"><a id="user-content-contributing-and-questions" class="anchor" aria-hidden="true" href="#contributing-and-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing and Questions</h2>
<p dir="auto">Contributions are very welcome, as are feature requests and suggestions. Please open an
<a href="https://github.com/JuliaData/CSV.jl/issues">issue</a> if you encounter any problems or would just like to ask a question.</p>
<h2 dir="auto"><a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Alternatives</h2>
<p dir="auto">There are several other packages for reading CSV files in Julia, which may suit your needs better:</p>
<ul dir="auto">
<li>
<p dir="auto">The standard library contains <a href="https://docs.julialang.org/en/v1/stdlib/DelimitedFiles/" rel="nofollow">DelimitedFiles.jl</a>, at least until Julia 1.8.
This returns a <code>Matrix</code> rather than a <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a>-style container, thus works best for files of homogeneous element type.
On large files, CSV.jl will be much faster.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/queryverse/CSVFiles.jl">CSVFiles.jl</a> uses the <a href="https://github.com/JuliaIO/FileIO.jl">FileIO.jl</a>'s <code>load</code> / <code>save</code> API,
but otherwise has similar goals. Like CSV.jl, it works with <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> objects such as DataFrames.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sl-solution/DLMReader.jl">DLMReader.jl</a> also aims to be fast for large files,
closely associated with <a href="https://github.com/sl-solution/InMemoryDatasets.jl">InMemoryDatasets.jl</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/JuliaPy/Pandas.jl">Pandas.jl</a> wraps Python's <a href="https://pandas.pydata.org" rel="nofollow">pandas</a> library (using <a href="https://github.com/JuliaPy/PyCall.jl">PyCall.jl</a>).
This is a closer cousin of <a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a>, but builds in the ability to read/write CSV files.</p>
</li>
</ul>
</article></div>