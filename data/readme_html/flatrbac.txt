<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-flatrbac" class="anchor" aria-hidden="true" href="#flatrbac"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FlatRBAC</h1>
<p dir="auto">FlatRBAC provides a Julia implementation for the <a href="https://www.nist.gov/publications/nist-model-role-based-access-control-towards-unified-standard" rel="nofollow">first level of the NIST model for role based access control</a> and aims to ease the process of defining, enforcing and maintaining security policies.</p>
<p dir="auto">The package <em>embodies the essential aspects of RBAC</em>, as described in the model:</p>
<ul dir="auto">
<li>Many to many subject-role assignment</li>
<li>Many to many permission-role assignment</li>
<li>Subjects acquire permissions through roles</li>
<li>Subject-role assignment review</li>
<li>Subjects may exercise permissions of multiple roles</li>
</ul>
<p dir="auto">and it also adds some <strong>additional features</strong>:</p>
<ul dir="auto">
<li>Multi-action, multi-resource permissions</li>
<li>Define and exert access control on domains</li>
</ul>
<p dir="auto">In the context of this package, neither active role restrictions, hierarchy, nor sessions are implemented.</p>
<h2 dir="auto"><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Project status</h2>
<p dir="auto">The package is under active development and changes may occur.</p>
<h2 dir="auto"><a id="user-content-contributions-suggestions-questions" class="anchor" aria-hidden="true" href="#contributions-suggestions-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributions, suggestions, questions</h2>
<p dir="auto">All are welcome, as well as feature requests and bug reports. Please open an issue or a PR.</p>
<h2 dir="auto"><a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Table of Contents</h2>
<ol dir="auto">
<li><a href="#installation">Installation</a></li>
<li><a href="#usage-example">Usage example</a></li>
<li><a href="#concept-overview">Concept overview</a><br>
<ul dir="auto">
<li><a href="#permission">Permission</a><br></li>
<li><a href="#scope">Scope</a><br></li>
<li><a href="#role">Role</a><br></li>
<li><a href="#subject">Subject</a></li>
<li><a href="#authorisation">Authorisation</a></li>
</ul>
</li>
<li><a href="#additional-examples">Additional examples</a></li>
</ol>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed via package manager</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add FlatRBAC"><pre class="notranslate"><code>pkg&gt; add FlatRBAC
</code></pre></div>
<p dir="auto">It can also be installed by <a href="https://pkgdocs.julialang.org/v1/managing-packages/#Adding-unregistered-packages" rel="nofollow">providing a URL to the repository</a></p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/charlieIT/flatrbac.jl"><pre>pkg<span class="pl-k">&gt;</span> add https://github.com/charlieIT/flatrbac.jl</pre></div>
<h2 dir="auto"><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FlatRBAC"><pre><span class="pl-k">using</span> FlatRBAC</pre></div>
<p dir="auto"><strong>Define subjects</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="third_party = Subject(id=&quot;3rdPartySystem&quot;)"><pre>third_party <span class="pl-k">=</span> <span class="pl-c1">Subject</span>(id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>3rdPartySystem<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><strong>Define permissions</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="read_database = Permission(name=&quot;read_db&quot;, resources=[&quot;database&quot;], actions=[&quot;read&quot;, &quot;list&quot;])
create_key    = Permission(&quot;create-key:api-key:create&quot;) # `name:resources:actions`"><pre>read_database <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>read_db<span class="pl-pds">"</span></span>, resources<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>database<span class="pl-pds">"</span></span>], actions<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>read<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>list<span class="pl-pds">"</span></span>])
create_key    <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>create-key:api-key:create<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> `name:resources:actions`</span></pre></div>
<p dir="auto"><strong>Create roles and grant permissions</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="third_party_role = Role(name=&quot;3rdPartyApi&quot;)
grant!(third_party_role, read_database, create_key)

# Alternatively, 
third_party_role = Role(name=&quot;3rdPartyApi&quot;, permissions=[read_database, create_key])"><pre>third_party_role <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>3rdPartyApi<span class="pl-pds">"</span></span>)
<span class="pl-c1">grant!</span>(third_party_role, read_database, create_key)

<span class="pl-c"><span class="pl-c">#</span> Alternatively, </span>
third_party_role <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>3rdPartyApi<span class="pl-pds">"</span></span>, permissions<span class="pl-k">=</span>[read_database, create_key])</pre></div>
<p dir="auto"><strong>Grant roles to a subject</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="grant!(third_party, third_party_role)"><pre><span class="pl-c1">grant!</span>(third_party, third_party_role)</pre></div>
<p dir="auto"><strong>Check if a subject is authorised</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="isauthorised(third_party, &quot;:database:read&quot;)   # true
isauthorised(third_party, &quot;:api-key:create&quot;)  # true
isauthorised(third_party, &quot;:database:delete&quot;) # false"><pre><span class="pl-c1">isauthorised</span>(third_party, <span class="pl-s"><span class="pl-pds">"</span>:database:read<span class="pl-pds">"</span></span>)   <span class="pl-c"><span class="pl-c">#</span> true</span>
<span class="pl-c1">isauthorised</span>(third_party, <span class="pl-s"><span class="pl-pds">"</span>:api-key:create<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> true</span>
<span class="pl-c1">isauthorised</span>(third_party, <span class="pl-s"><span class="pl-pds">"</span>:database:delete<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> false</span></pre></div>
<h2 dir="auto"><a id="user-content-concept-overview" class="anchor" aria-hidden="true" href="#concept-overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Concept overview</h2>
<h3 dir="auto"><a id="user-content-permission" class="anchor" aria-hidden="true" href="#permission"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">Permission</a></h3>
<p dir="auto">A <code>Permission</code> is a mechanism for authorisation, specifying <code>actions</code> a given <code>subject</code> can perform over <code>resources</code>.</p>
<p dir="auto">Permissions may be defined in <code>shorthand</code> form as <code>&lt;name&gt;:&lt;resources&gt;:&lt;actions&gt;:&lt;scope&gt;</code>.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; cruds = Permission(name=&quot;admin&quot;, resources=[&quot;*&quot;], actions=[&quot;create&quot;, &quot;read&quot;, &quot;update&quot;, &quot;delete&quot;], scope=FlatRBAC.All, description=&quot;CRUD Admin&quot;)
Permission(&quot;admin&quot;, [&quot;*&quot;], [&quot;create&quot;, &quot;read&quot;, &quot;update&quot;, &quot;delete&quot;], &quot;CRUD Admin&quot;, FlatRBAC.None)

julia&gt; shorthand = Permission(&quot;admin:*:create,read,update,delete:all&quot;, &quot;CRUD Admin&quot;)
Permission(&quot;admin&quot;, [&quot;*&quot;], [&quot;create&quot;, &quot;read&quot;, &quot;update&quot;, &quot;delete&quot;], &quot;CRUD Admin&quot;, FlatRBAC.None)"><pre>julia<span class="pl-k">&gt;</span> cruds = Permission(name=<span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>, resources=[<span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>], actions=[<span class="pl-s"><span class="pl-pds">"</span>create<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>read<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>update<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>delete<span class="pl-pds">"</span></span>], scope=FlatRBAC.All, description=<span class="pl-s"><span class="pl-pds">"</span>CRUD Admin<span class="pl-pds">"</span></span>)
Permission(<span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>], [<span class="pl-s"><span class="pl-pds">"</span>create<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>read<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>update<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>delete<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>CRUD Admin<span class="pl-pds">"</span></span>, FlatRBAC.None)

julia<span class="pl-k">&gt;</span> shorthand = Permission(<span class="pl-s"><span class="pl-pds">"</span>admin:*:create,read,update,delete:all<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>CRUD Admin<span class="pl-pds">"</span></span>)
Permission(<span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>], [<span class="pl-s"><span class="pl-pds">"</span>create<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>read<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>update<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>delete<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>CRUD Admin<span class="pl-pds">"</span></span>, FlatRBAC.None)</pre></div>
<p dir="auto">Permissions default to wildcard values (<code>"*"</code>) for both <code>resources</code> and <code>actions</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Permission()

Permission(:*:*:none)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Permission</span>()

<span class="pl-c1">Permission</span>(:<span class="pl-k">*</span>:<span class="pl-k">*</span><span class="pl-c1">:none</span>)</pre></div>
<p dir="auto">Permissions are always positive and grant all specified actions to each resource</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="example = Permission(&quot;:any:c,r,u,d&quot;)
# example is granted (any:c), (any:r), (any:u), (any,d)
for action in actions(example)
  @assert isauthorised(example, Permission(&quot;:any:$(action)&quot;)) &quot;Should not fail&quot;
end"><pre>example <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:any:c,r,u,d<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> example is granted (any:c), (any:r), (any:u), (any,d)</span>
<span class="pl-k">for</span> action <span class="pl-k">in</span> <span class="pl-c1">actions</span>(example)
  <span class="pl-c1">@assert</span> <span class="pl-c1">isauthorised</span>(example, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:any:<span class="pl-v">$(action)</span><span class="pl-pds">"</span></span>)) <span class="pl-s"><span class="pl-pds">"</span>Should not fail<span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">See also <a href="/docs/Permission.md">permission docs</a>.</p>
<hr>
<h3 dir="auto"><a id="user-content-scope" class="anchor" aria-hidden="true" href="#scope"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">Scope</a></h3>
<p dir="auto">Scopes allow binding of permissions to custom <em>domain/tenants</em> and can also be used for possession checks.</p>
<p dir="auto">Permissions default to scope <code>None</code>:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Permission(&quot;example:resource:action&quot;)

Permission(&quot;example&quot;, [&quot;resource&quot;], [&quot;action&quot;], &quot;&quot;, FlatRBAC.None)"><pre>julia<span class="pl-k">&gt;</span> Permission(<span class="pl-s"><span class="pl-pds">"</span>example:resource:action<span class="pl-pds">"</span></span>)

Permission(<span class="pl-s"><span class="pl-pds">"</span>example<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>resource<span class="pl-pds">"</span></span>], [<span class="pl-s"><span class="pl-pds">"</span>action<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, FlatRBAC.None)</pre></div>
<p dir="auto">The package provides implementation for three base scopes:</p>
<p dir="auto"><code>FlatRBAC.All - Type</code></p>
<ul dir="auto">
<li>This scope acts as an <code>wildcard</code> and will, by default, grant access to any other scope.</li>
</ul>
<p dir="auto"><code>FlatRBAC.Own - Type</code></p>
<ul dir="auto">
<li>Own and Own subtypes are useful for dealing with <strong>resource possession</strong> and should be used in conjunction with ownership/possession checks in the application logic.</li>
</ul>
<p dir="auto"><code>FlatRBAC.None - Type</code></p>
<ul dir="auto">
<li>This is the default scope and will, by default, only grant access to the None scope.</li>
</ul>
<p dir="auto">The package provides default behaviour for <code>Scope</code> subtypes</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="abstract type MyScope &lt;:FlatRBAC.Scope end

scoped = Permission(&quot;example:resource:read:myscope&quot;)
# Permission(&quot;example&quot;, [&quot;resource&quot;], [&quot;read&quot;], &quot;&quot;, MyScope)"><pre><span class="pl-k">abstract type</span> MyScope <span class="pl-k">&lt;:</span><span class="pl-c1">FlatRBAC.Scope</span> <span class="pl-k">end</span>

scoped <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>example:resource:read:myscope<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> Permission("example", ["resource"], ["read"], "", MyScope)</span></pre></div>
<p dir="auto"><strong>Examples</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="abstract type App &lt;:MyScope end
abstract type API &lt;:MyScope end"><pre><span class="pl-k">abstract type</span> App <span class="pl-k">&lt;:</span><span class="pl-c1">MyScope</span> <span class="pl-k">end</span>
<span class="pl-k">abstract type</span> API <span class="pl-k">&lt;:</span><span class="pl-c1">MyScope</span> <span class="pl-k">end</span></pre></div>
<p dir="auto">MyScope grants access to its subtypes</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="isauthorised(Permission(&quot;:resource:crud:myscope&quot;), Permission(&quot;:resource:crud:app&quot;), scoped=true) # true
isauthorised(Permission(&quot;:resource:crud:myscope&quot;), Permission(&quot;:resource:crud:api&quot;), scoped=true) # true"><pre><span class="pl-c1">isauthorised</span>(<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:myscope<span class="pl-pds">"</span></span>), <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:app<span class="pl-pds">"</span></span>), scoped<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> true</span>
<span class="pl-c1">isauthorised</span>(<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:myscope<span class="pl-pds">"</span></span>), <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:api<span class="pl-pds">"</span></span>), scoped<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<p dir="auto">App does not grant access to API</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="isauthorised(Permission(&quot;:resource:crud:app&quot;), Permission(&quot;:resource:crud:api&quot;), scoped=true) # false"><pre><span class="pl-c1">isauthorised</span>(<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:app<span class="pl-pds">"</span></span>), <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:api<span class="pl-pds">"</span></span>), scoped<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> false</span></pre></div>
<p dir="auto">Both App and API grant access to Own and additional possession checks should be performed at application level</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="isauthorised(Permission(&quot;:resource:crud:app&quot;), Permission(&quot;:resource:crud:own&quot;), scoped=true) # true
isauthorised(Permission(&quot;:resource:crud:api&quot;), Permission(&quot;:resource:crud:own&quot;), scoped=true) # true"><pre><span class="pl-c1">isauthorised</span>(<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:app<span class="pl-pds">"</span></span>), <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:own<span class="pl-pds">"</span></span>), scoped<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> true</span>
<span class="pl-c1">isauthorised</span>(<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:api<span class="pl-pds">"</span></span>), <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:resource:crud:own<span class="pl-pds">"</span></span>), scoped<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<p dir="auto">For additional notes and performance considerations, see also the <a href="/docs/Scope.md">scope docs</a>.</p>
<hr>
<h3 dir="auto"><a id="user-content-role" class="anchor" aria-hidden="true" href="#role"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">Role</a></h3>
<p dir="auto"><code>Roles</code> define an authority level or function within a context. These are usually defined in accordance with job competency, authority, and  responsibility or responsability.</p>
<p dir="auto">In this package, roles are collection of permissions that can be assigned to <code>subjects</code>, allowing them to perform <code>actions</code> over <code>resources</code>.</p>
<p dir="auto"><strong>Roles can extend other roles</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="permA = [Permission(&quot;:projects:read&quot;), Permission(&quot;:documents:export&quot;)]
RoleA = Role(name=&quot;A&quot;, permissions=permA)

julia&gt; permissions(RoleA)
2-element Vector{Permission}:
 Permission(:projects:read:none)
 Permission(:documents:export:none)

# A was not granted edit privileges over documents
@assert !isauthorised(RoleA, Permission(&quot;:documents:edit&quot;))"><pre>permA <span class="pl-k">=</span> [<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:projects:read<span class="pl-pds">"</span></span>), <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:documents:export<span class="pl-pds">"</span></span>)]
RoleA <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, permissions<span class="pl-k">=</span>permA)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">permissions</span>(RoleA)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Permission}<span class="pl-k">:</span>
 <span class="pl-c1">Permission</span>(<span class="pl-c1">:projects</span><span class="pl-k">:</span>read<span class="pl-k">:</span>none)
 <span class="pl-c1">Permission</span>(<span class="pl-c1">:documents</span><span class="pl-k">:</span>export<span class="pl-k">:</span>none)

<span class="pl-c"><span class="pl-c">#</span> A was not granted edit privileges over documents</span>
<span class="pl-c1">@assert</span> <span class="pl-k">!</span><span class="pl-c1">isauthorised</span>(RoleA, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:documents:edit<span class="pl-pds">"</span></span>))</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="permB = [Permission(&quot;:projects,documents:read,edit&quot;)]
RoleB = Role(name=&quot;B&quot;, permissions=permB)

permC = [Permission(&quot;:api:list&quot;)]
RoleC = Role(name=&quot;C&quot;, permissions=permC)

# Extend `A` with permissions from `B` and `C`
julia&gt; extend!(RoleA, RoleB, RoleC) 
4-element Vector{Permission}:
 Permission(:projects:read,edit:none)
 Permission(:documents:export:none)
 Permission(:documents:read,edit:none)
 Permission(:api:list:none)

# now it is possible, as RoleA obtained this privilege from RoleB
@assert isauthorised(RoleA, Permission(&quot;:documents:edit&quot;)) "><pre>permB <span class="pl-k">=</span> [<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:projects,documents:read,edit<span class="pl-pds">"</span></span>)]
RoleB <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, permissions<span class="pl-k">=</span>permB)

permC <span class="pl-k">=</span> [<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:api:list<span class="pl-pds">"</span></span>)]
RoleC <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>, permissions<span class="pl-k">=</span>permC)

<span class="pl-c"><span class="pl-c">#</span> Extend `A` with permissions from `B` and `C`</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">extend!</span>(RoleA, RoleB, RoleC) 
<span class="pl-c1">4</span><span class="pl-k">-</span>element Vector{Permission}<span class="pl-k">:</span>
 <span class="pl-c1">Permission</span>(<span class="pl-c1">:projects</span><span class="pl-k">:</span>read,edit<span class="pl-k">:</span>none)
 <span class="pl-c1">Permission</span>(<span class="pl-c1">:documents</span><span class="pl-k">:</span>export<span class="pl-k">:</span>none)
 <span class="pl-c1">Permission</span>(<span class="pl-c1">:documents</span><span class="pl-k">:</span>read,edit<span class="pl-k">:</span>none)
 <span class="pl-c1">Permission</span>(<span class="pl-c1">:api</span><span class="pl-k">:</span>list<span class="pl-k">:</span>none)

<span class="pl-c"><span class="pl-c">#</span> now it is possible, as RoleA obtained this privilege from RoleB</span>
<span class="pl-c1">@assert</span> <span class="pl-c1">isauthorised</span>(RoleA, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:documents:edit<span class="pl-pds">"</span></span>)) </pre></div>
<p dir="auto"><strong>Both permissions and roles can be revoked from a <code>Role</code></strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Revoke permissions of `B` from `A`
revoke!(RoleA, RoleB)
# no longer possible
@assert !isauthorised(RoleA, Permission(&quot;:documents:edit&quot;)) # no longer possible"><pre><span class="pl-c"><span class="pl-c">#</span> Revoke permissions of `B` from `A`</span>
<span class="pl-c1">revoke!</span>(RoleA, RoleB)
<span class="pl-c"><span class="pl-c">#</span> no longer possible</span>
<span class="pl-c1">@assert</span> <span class="pl-k">!</span><span class="pl-c1">isauthorised</span>(RoleA, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:documents:edit<span class="pl-pds">"</span></span>)) <span class="pl-c"><span class="pl-c">#</span> no longer possible</span></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="example = Role(name=&quot;Example&quot;)
grant!(example,  Permission(&quot;read_all:*:read&quot;))
# 1-element Vector{Permission}: Permission(read_all:*:read:none)

revoke!(example, Permission(&quot;read_all:*:read&quot;))
# Permission[]"><pre>example <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Example<span class="pl-pds">"</span></span>)
<span class="pl-c1">grant!</span>(example,  <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>read_all:*:read<span class="pl-pds">"</span></span>))
<span class="pl-c"><span class="pl-c">#</span> 1-element Vector{Permission}: Permission(read_all:*:read:none)</span>

<span class="pl-c1">revoke!</span>(example, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>read_all:*:read<span class="pl-pds">"</span></span>))
<span class="pl-c"><span class="pl-c">#</span> Permission[]</span></pre></div>
<p dir="auto"><strong>Note:</strong> As of <code>v.0.1</code> and <code>v0.2</code> revocation is performed based on permission equality. In the future, revocation will ensure any permission from B that implies a permission from A is also revoked.</p>
<p dir="auto">See also <a href="/docs/Roles.md">role docs</a>.</p>
<hr>
<h3 dir="auto"><a id="user-content-subject" class="anchor" aria-hidden="true" href="#subject"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">Subject</a></h3>
<p dir="auto">An automated agent, person or any relevant third party for which authorisation should be enforced.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="role = Role(name=&quot;Example&quot;, permissions=[Permission()])
sysadmin = Subject(id=&quot;sysadmin&quot;, name=&quot;System Admin&quot;, roles=[role])"><pre>role <span class="pl-k">=</span> <span class="pl-c1">Role</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Example<span class="pl-pds">"</span></span>, permissions<span class="pl-k">=</span>[<span class="pl-c1">Permission</span>()])
sysadmin <span class="pl-k">=</span> <span class="pl-c1">Subject</span>(id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>sysadmin<span class="pl-pds">"</span></span>, name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>System Admin<span class="pl-pds">"</span></span>, roles<span class="pl-k">=</span>[role])</pre></div>
<hr>
<h3 dir="auto"><a id="user-content-authorisation" class="anchor" aria-hidden="true" href="#authorisation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">Authorisation</a></h3>
<p dir="auto">The process of verifying whether a given <code>subject</code> is allowed to access and perform specific <code>actions</code> over a <code>resource</code>.</p>
<p dir="auto">In <code>FlatRBAC</code>, <strong>subjects may exercise permissions of multiple roles</strong>. Authorisation logic will default to this behaviour, i.e., (<em>pseudo-code</em>) <code>granted(user, permission) = granted(permissions(subject), permission)</code>, regardless of the roles or specific permissions that will satisfy the condition.</p>
<p dir="auto">However, when authorising, you can specify whether authorisation should only be granted if <code>permission</code> is granted within a single role, i.e, (<em>pseudo-code</em>) <code>granted(user, permission) = any(x-&gt;granted(role, permission), roles(subject)</code>. Use <code>singlerole=true</code> to trigger this behaviour.</p>
<h4 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h4>
<p dir="auto"><strong>Permission based authorisation checks</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="coverage = Permission(&quot;:projects,api,database:create,read,update&quot;)
requirement = Permission(&quot;:database:create,read,update&quot;)
isauthorised(coverage, requirement) # true"><pre>coverage <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:projects,api,database:create,read,update<span class="pl-pds">"</span></span>)
requirement <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:database:create,read,update<span class="pl-pds">"</span></span>)
<span class="pl-c1">isauthorised</span>(coverage, requirement) <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="coverage = Permission(&quot;:projects,api,database:create,read,delete&quot;) # update action is removed
# checking exactly for (create,read and update) on database
requirement = Permission(&quot;:database:create,read,update&quot;) 
isauthorised(coverage, requirement) # false"><pre>coverage <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:projects,api,database:create,read,delete<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> update action is removed</span>
<span class="pl-c"><span class="pl-c">#</span> checking exactly for (create,read and update) on database</span>
requirement <span class="pl-k">=</span> <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:database:create,read,update<span class="pl-pds">"</span></span>) 
<span class="pl-c1">isauthorised</span>(coverage, requirement) <span class="pl-c"><span class="pl-c">#</span> false</span></pre></div>
<p dir="auto"><em>Recommendation is to be wary when using complex permissions in authorisation checks.</em></p>
<p dir="auto"><strong>Subject based authorisation checks</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="store_perms = [
	Permission(&quot;view-any:books,movies,music:view:all&quot;),
	Permission(&quot;rent-books:books:rent:all&quot;),
	Permission(&quot;update-own:books,movies,music:update:own&quot;),
	Permission(&quot;rent-any:*:rent:all&quot;),
	Permission(&quot;update-any:*:update:all&quot;),
	Permission(&quot;buy:*:buy,view:all&quot;)
]
	
store_roles = [
	# Authors can view everything and update their own resources
	Role(&quot;author&quot;,   store_perms[&quot;update-own&quot;]..., store_perms[&quot;view-any&quot;]...),
	# Customers can temporarily rent books, view and buy anything
	Role(&quot;customer&quot;, store_perms[&quot;rent-books&quot;]..., store_perms[&quot;buy&quot;]...),
	# Employees can rent and update anything
	Role(&quot;employee&quot;, store_perms[&quot;rent-any&quot;]...,   store_perms[&quot;update-any&quot;]...)]"><pre>store_perms <span class="pl-k">=</span> [
	<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>view-any:books,movies,music:view:all<span class="pl-pds">"</span></span>),
	<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>rent-books:books:rent:all<span class="pl-pds">"</span></span>),
	<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>update-own:books,movies,music:update:own<span class="pl-pds">"</span></span>),
	<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>rent-any:*:rent:all<span class="pl-pds">"</span></span>),
	<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>update-any:*:update:all<span class="pl-pds">"</span></span>),
	<span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>buy:*:buy,view:all<span class="pl-pds">"</span></span>)
]
	
store_roles <span class="pl-k">=</span> [
	<span class="pl-c"><span class="pl-c">#</span> Authors can view everything and update their own resources</span>
	<span class="pl-c1">Role</span>(<span class="pl-s"><span class="pl-pds">"</span>author<span class="pl-pds">"</span></span>,   store_perms[<span class="pl-s"><span class="pl-pds">"</span>update-own<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>, store_perms[<span class="pl-s"><span class="pl-pds">"</span>view-any<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>),
	<span class="pl-c"><span class="pl-c">#</span> Customers can temporarily rent books, view and buy anything</span>
	<span class="pl-c1">Role</span>(<span class="pl-s"><span class="pl-pds">"</span>customer<span class="pl-pds">"</span></span>, store_perms[<span class="pl-s"><span class="pl-pds">"</span>rent-books<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>, store_perms[<span class="pl-s"><span class="pl-pds">"</span>buy<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>),
	<span class="pl-c"><span class="pl-c">#</span> Employees can rent and update anything</span>
	<span class="pl-c1">Role</span>(<span class="pl-s"><span class="pl-pds">"</span>employee<span class="pl-pds">"</span></span>, store_perms[<span class="pl-s"><span class="pl-pds">"</span>rent-any<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>,   store_perms[<span class="pl-s"><span class="pl-pds">"</span>update-any<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>)]</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="john = Subject(id=&quot;John&quot;)
grant!(john , store_roles[&quot;customer&quot;]...) # John is a customer

# Can rent and buy books
@assert isauthorised(john, &quot;:books:buy,rent&quot;)
# Can view books, movies and music
@assert isauthorised(john, &quot;:books,movies,music:view&quot;)"><pre>john <span class="pl-k">=</span> <span class="pl-c1">Subject</span>(id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>John<span class="pl-pds">"</span></span>)
<span class="pl-c1">grant!</span>(john , store_roles[<span class="pl-s"><span class="pl-pds">"</span>customer<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>) <span class="pl-c"><span class="pl-c">#</span> John is a customer</span>

<span class="pl-c"><span class="pl-c">#</span> Can rent and buy books</span>
<span class="pl-c1">@assert</span> <span class="pl-c1">isauthorised</span>(john, <span class="pl-s"><span class="pl-pds">"</span>:books:buy,rent<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> Can view books, movies and music</span>
<span class="pl-c1">@assert</span> <span class="pl-c1">isauthorised</span>(john, <span class="pl-s"><span class="pl-pds">"</span>:books,movies,music:view<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Using  <code>single-role</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia = Subject(id=&quot;Julia&quot;)
# Employees can also be customers
grant!(julia, store_roles[&quot;employee&quot;]..., store_roles[&quot;customer&quot;]...) 

# Granted rent on any resource via employee role
@assert isauthorised(julia, &quot;:movies,music,files:rent&quot;, singlerole=true) # true
# Buy and rent for music are not granted via the same role
# Rent -&gt; Employee role; Buy -&gt; Customer role
@assert !isauthorised(julia, &quot;:music:buy,rent&quot;, singlerole=true)"><pre>julia <span class="pl-k">=</span> <span class="pl-c1">Subject</span>(id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Julia<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> Employees can also be customers</span>
<span class="pl-c1">grant!</span>(julia, store_roles[<span class="pl-s"><span class="pl-pds">"</span>employee<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>, store_roles[<span class="pl-s"><span class="pl-pds">"</span>customer<span class="pl-pds">"</span></span>]<span class="pl-k">.</span><span class="pl-k">..</span>) 

<span class="pl-c"><span class="pl-c">#</span> Granted rent on any resource via employee role</span>
<span class="pl-c1">@assert</span> <span class="pl-c1">isauthorised</span>(julia, <span class="pl-s"><span class="pl-pds">"</span>:movies,music,files:rent<span class="pl-pds">"</span></span>, singlerole<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> true</span>
<span class="pl-c"><span class="pl-c">#</span> Buy and rent for music are not granted via the same role</span>
<span class="pl-c"><span class="pl-c">#</span> Rent -&gt; Employee role; Buy -&gt; Customer role</span>
<span class="pl-c1">@assert</span> <span class="pl-k">!</span><span class="pl-c1">isauthorised</span>(julia, <span class="pl-s"><span class="pl-pds">"</span>:music:buy,rent<span class="pl-pds">"</span></span>, singlerole<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<h4 dir="auto"><a id="user-content-usage-api" class="anchor" aria-hidden="true" href="#usage-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage API</h4>
<ul dir="auto">
<li><code>isauthorised(subject, permission; singlerole=false, scoped=true, kwargs...)::Bool</code></li>
</ul>
<h2 dir="auto"><a id="user-content-additional-examples" class="anchor" aria-hidden="true" href="#additional-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Additional examples</h2>
<p dir="auto">See also <a href="/examples/web">web examples</a>.</p>
<h3 dir="auto"><a id="user-content-mini-web-application-with-authorisation-middleware" class="anchor" aria-hidden="true" href="#mini-web-application-with-authorisation-middleware"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mini web application with authorisation middleware</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FlatRBAC
using JSON3
using HTTP
using Random

import HTTP.Handlers.cookie_middleware as CookieMiddleware"><pre><span class="pl-k">using</span> FlatRBAC
<span class="pl-k">using</span> JSON3
<span class="pl-k">using</span> HTTP
<span class="pl-k">using</span> Random

<span class="pl-k">import</span> HTTP<span class="pl-k">.</span>Handlers<span class="pl-k">.</span>cookie_middleware <span class="pl-k">as</span> CookieMiddleware</pre></div>
<p dir="auto"><strong>Setup RBAC logic</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="#= Setup RBAC Roles =#
guest = Role(&quot;guest&quot;, Permission(&quot;:*:view:all&quot;))

#= Setup some subjects =#
const users = [
    Subject(id=&quot;anonymous&quot;), # no roles
    Subject(id=&quot;guest&quot;, roles=[guest])
]"><pre><span class="pl-c"><span class="pl-c">#=</span> Setup RBAC Roles <span class="pl-c">=#</span></span>
guest <span class="pl-k">=</span> <span class="pl-c1">Role</span>(<span class="pl-s"><span class="pl-pds">"</span>guest<span class="pl-pds">"</span></span>, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:*:view:all<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#=</span> Setup some subjects <span class="pl-c">=#</span></span>
<span class="pl-k">const</span> users <span class="pl-k">=</span> [
    <span class="pl-c1">Subject</span>(id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>anonymous<span class="pl-pds">"</span></span>), <span class="pl-c"><span class="pl-c">#</span> no roles</span>
    <span class="pl-c1">Subject</span>(id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>guest<span class="pl-pds">"</span></span>, roles<span class="pl-k">=</span>[guest])
]</pre></div>
<p dir="auto"><strong>Mockup authentication and session management</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="#!Not actual production code!
const COOKIE_NAME = &quot;app&quot;
#= Mockup web session logic =#
SESSIONS = Dict{String, HTTP.Cookies.Cookie}()

&quot;&quot;&quot;Mockup login as Guest&quot;&quot;&quot;
function MockupLogin(req::HTTP.Request)
    cookie = HTTP.Cookies.Cookie(COOKIE_NAME, randstring(12))
    SESSIONS[&quot;guest&quot;] = cookie
    # Respond with the cookie
    return HTTP.Response(200, [&quot;Set-Cookie&quot;=&gt;HTTP.stringify(cookie)])
end"><pre><span class="pl-c"><span class="pl-c">#</span>!Not actual production code!</span>
<span class="pl-k">const</span> COOKIE_NAME <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>app<span class="pl-pds">"</span></span>
<span class="pl-c"><span class="pl-c">#=</span> Mockup web session logic <span class="pl-c">=#</span></span>
SESSIONS <span class="pl-k">=</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, HTTP.Cookies.Cookie}</span>()

<span class="pl-s"><span class="pl-pds">"""</span>Mockup login as Guest<span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">MockupLogin</span>(req<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
    cookie <span class="pl-k">=</span> HTTP<span class="pl-k">.</span>Cookies<span class="pl-k">.</span><span class="pl-c1">Cookie</span>(COOKIE_NAME, <span class="pl-c1">randstring</span>(<span class="pl-c1">12</span>))
    SESSIONS[<span class="pl-s"><span class="pl-pds">"</span>guest<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> cookie
    <span class="pl-c"><span class="pl-c">#</span> Respond with the cookie</span>
    <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">200</span>, [<span class="pl-s"><span class="pl-pds">"</span>Set-Cookie<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>HTTP<span class="pl-k">.</span><span class="pl-c1">stringify</span>(cookie)])
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>Middleware to map incoming requests to an app user session</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="#!Not actual production code!
&quot;&quot;&quot;Check request cookies for matching session&quot;&quot;&quot;
function SessionMiddleware(handler)
  return function(req::HTTP.Request)
    uname = &quot;anonymous&quot; # default to anonymous

    cookiejar = HTTP.Handlers.cookies(req)
    match = findfirst(x-&gt;x.name == COOKIE_NAME, cookiejar)
    if !isnothing(match)
        appcookie = cookiejar[match]
        user = filter(kv-&gt;kv.second.value == appcookie.value, SESSIONS)
        if isempty(user) # session open but unknown user
            return HTTP.Response(401, &quot;Unauthorized&quot;)
        end
        uname = first(user).first
    end
    # set user and pass along the request
    req.context[:user] = users[findfirst(x-&gt;x.id == uname, users)]
    return handler(req)
  end
end"><pre><span class="pl-c"><span class="pl-c">#</span>!Not actual production code!</span>
<span class="pl-s"><span class="pl-pds">"""</span>Check request cookies for matching session<span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">SessionMiddleware</span>(handler)
  <span class="pl-k">return</span> <span class="pl-k">function</span>(req<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
    uname <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>anonymous<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> default to anonymous</span>

    cookiejar <span class="pl-k">=</span> HTTP<span class="pl-k">.</span>Handlers<span class="pl-k">.</span><span class="pl-c1">cookies</span>(req)
    match <span class="pl-k">=</span> <span class="pl-c1">findfirst</span>(x<span class="pl-k">-&gt;</span>x<span class="pl-k">.</span>name <span class="pl-k">==</span> COOKIE_NAME, cookiejar)
    <span class="pl-k">if</span> <span class="pl-k">!</span><span class="pl-c1">isnothing</span>(match)
        appcookie <span class="pl-k">=</span> cookiejar[match]
        user <span class="pl-k">=</span> <span class="pl-c1">filter</span>(kv<span class="pl-k">-&gt;</span>kv<span class="pl-k">.</span>second<span class="pl-k">.</span>value <span class="pl-k">==</span> appcookie<span class="pl-k">.</span>value, SESSIONS)
        <span class="pl-k">if</span> <span class="pl-c1">isempty</span>(user) <span class="pl-c"><span class="pl-c">#</span> session open but unknown user</span>
            <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">401</span>, <span class="pl-s"><span class="pl-pds">"</span>Unauthorized<span class="pl-pds">"</span></span>)
        <span class="pl-k">end</span>
        uname <span class="pl-k">=</span> <span class="pl-c1">first</span>(user)<span class="pl-k">.</span>first
    <span class="pl-k">end</span>
    <span class="pl-c"><span class="pl-c">#</span> set user and pass along the request</span>
    req<span class="pl-k">.</span>context[<span class="pl-c1">:user</span>] <span class="pl-k">=</span> users[<span class="pl-c1">findfirst</span>(x<span class="pl-k">-&gt;</span>x<span class="pl-k">.</span>id <span class="pl-k">==</span> uname, users)]
    <span class="pl-k">return</span> <span class="pl-c1">handler</span>(req)
  <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>Middleware to authorise access to app resources</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function Authorisation(handler)
    return function(req::HTTP.Request)
        user = req.context[:user]
        resource = string(req.context[:params][&quot;resource&quot;])
        
        # Check if user is granted view access to this resource
        if !FlatRBAC.isauthorised(user, Permission(&quot;:$(resource):view&quot;))
            return HTTP.Response(401, &quot;Unauthorized&quot;)
        end

        req.context[:subject]  = user
        req.context[:resource] = string(resource)
        return handler(req)
    end
end"><pre><span class="pl-k">function</span> <span class="pl-en">Authorisation</span>(handler)
    <span class="pl-k">return</span> <span class="pl-k">function</span>(req<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
        user <span class="pl-k">=</span> req<span class="pl-k">.</span>context[<span class="pl-c1">:user</span>]
        resource <span class="pl-k">=</span> <span class="pl-c1">string</span>(req<span class="pl-k">.</span>context[<span class="pl-c1">:params</span>][<span class="pl-s"><span class="pl-pds">"</span>resource<span class="pl-pds">"</span></span>])
        
        <span class="pl-c"><span class="pl-c">#</span> Check if user is granted view access to this resource</span>
        <span class="pl-k">if</span> <span class="pl-k">!</span>FlatRBAC<span class="pl-k">.</span><span class="pl-c1">isauthorised</span>(user, <span class="pl-c1">Permission</span>(<span class="pl-s"><span class="pl-pds">"</span>:<span class="pl-v">$(resource)</span>:view<span class="pl-pds">"</span></span>))
            <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">401</span>, <span class="pl-s"><span class="pl-pds">"</span>Unauthorized<span class="pl-pds">"</span></span>)
        <span class="pl-k">end</span>

        req<span class="pl-k">.</span>context[<span class="pl-c1">:subject</span>]  <span class="pl-k">=</span> user
        req<span class="pl-k">.</span>context[<span class="pl-c1">:resource</span>] <span class="pl-k">=</span> <span class="pl-c1">string</span>(resource)
        <span class="pl-k">return</span> <span class="pl-c1">handler</span>(req)
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>Mockup resource handler</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function handler(req::HTTP.Request)
    uname = req.context[:subject].name
    resource = req.context[:resource]
    
    return HTTP.Response(200, &quot;Welcome $(uname)! You can access $(resource)&quot;)
end"><pre><span class="pl-k">function</span> <span class="pl-en">handler</span>(req<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
    uname <span class="pl-k">=</span> req<span class="pl-k">.</span>context[<span class="pl-c1">:subject</span>]<span class="pl-k">.</span>name
    resource <span class="pl-k">=</span> req<span class="pl-k">.</span>context[<span class="pl-c1">:resource</span>]
    
    <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">200</span>, <span class="pl-s"><span class="pl-pds">"</span>Welcome <span class="pl-v">$(uname)</span>! You can access <span class="pl-v">$(resource)</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>Setup the HTTP server</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="router = HTTP.Router((x-&gt;HTTP.Response(404)), (x-&gt;HTTP.Response(405)))

HTTP.register!(router, &quot;GET&quot;,  &quot;/api/{resource}&quot;, Authorisation(handler))
HTTP.register!(router, &quot;POST&quot;, &quot;/login&quot;, MockupLogin)

empty!(HTTP.COOKIEJAR)
server_middleware = router |&gt; CookieMiddleware |&gt; SessionMiddleware
server = HTTP.serve!(server_middleware, &quot;0.0.0.0&quot;, 80)"><pre>router <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Router</span>((x<span class="pl-k">-&gt;</span>HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">404</span>)), (x<span class="pl-k">-&gt;</span>HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">405</span>)))

HTTP<span class="pl-k">.</span><span class="pl-c1">register!</span>(router, <span class="pl-s"><span class="pl-pds">"</span>GET<span class="pl-pds">"</span></span>,  <span class="pl-s"><span class="pl-pds">"</span>/api/{resource}<span class="pl-pds">"</span></span>, <span class="pl-c1">Authorisation</span>(handler))
HTTP<span class="pl-k">.</span><span class="pl-c1">register!</span>(router, <span class="pl-s"><span class="pl-pds">"</span>POST<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/login<span class="pl-pds">"</span></span>, MockupLogin)

<span class="pl-c1">empty!</span>(HTTP<span class="pl-k">.</span>COOKIEJAR)
server_middleware <span class="pl-k">=</span> router <span class="pl-k">|&gt;</span> CookieMiddleware <span class="pl-k">|&gt;</span> SessionMiddleware
server <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">serve!</span>(server_middleware, <span class="pl-s"><span class="pl-pds">"</span>0.0.0.0<span class="pl-pds">"</span></span>, <span class="pl-c1">80</span>)</pre></div>
<p dir="auto"><strong>Check if it works</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Anonymous cannot view book resources
@info HTTP.get(&quot;http://localhost/api/books&quot;, status_exception=false)
#=
┌ Info: HTTP.Messages.Response:
│ &quot;&quot;&quot;
│ HTTP/1.1 401 Unauthorized
│ Transfer-Encoding: chunked
│ 
└ Unauthorized&quot;&quot;&quot;
=#

# Authenticate as guest
@info HTTP.post(&quot;http://localhost/login&quot;, cookies=true, status_exception=false)
#=
┌ Info: HTTP.Messages.Response:
│ &quot;&quot;&quot;
│ HTTP/1.1 200 OK
│ Set-Cookie: app=&lt;randstring&gt;
│ Transfer-Encoding: chunked
│ 
└ &quot;&quot;&quot;
=#

# Guest can view books
@info HTTP.get(&quot;http://localhost/api/books&quot;; cookiejar = HTTP.COOKIEJAR, status_exception=false)
#=
┌ Info: HTTP.Messages.Response:
│ &quot;&quot;&quot;
│ HTTP/1.1 200 OK
│ Transfer-Encoding: chunked
│ 
└ Welcome guest! You can access books&quot;&quot;&quot;
=#"><pre><span class="pl-c"><span class="pl-c">#</span> Anonymous cannot view book resources</span>
<span class="pl-c1">@info</span> HTTP<span class="pl-k">.</span><span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">"</span>http://localhost/api/books<span class="pl-pds">"</span></span>, status_exception<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c"><span class="pl-c">#=</span></span>
<span class="pl-c">┌ Info: HTTP.Messages.Response:</span>
<span class="pl-c">│ """</span>
<span class="pl-c">│ HTTP/1.1 401 Unauthorized</span>
<span class="pl-c">│ Transfer-Encoding: chunked</span>
<span class="pl-c">│ </span>
<span class="pl-c">└ Unauthorized"""</span>
<span class="pl-c"><span class="pl-c">=#</span></span>

<span class="pl-c"><span class="pl-c">#</span> Authenticate as guest</span>
<span class="pl-c1">@info</span> HTTP<span class="pl-k">.</span><span class="pl-c1">post</span>(<span class="pl-s"><span class="pl-pds">"</span>http://localhost/login<span class="pl-pds">"</span></span>, cookies<span class="pl-k">=</span><span class="pl-c1">true</span>, status_exception<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c"><span class="pl-c">#=</span></span>
<span class="pl-c">┌ Info: HTTP.Messages.Response:</span>
<span class="pl-c">│ """</span>
<span class="pl-c">│ HTTP/1.1 200 OK</span>
<span class="pl-c">│ Set-Cookie: app=&lt;randstring&gt;</span>
<span class="pl-c">│ Transfer-Encoding: chunked</span>
<span class="pl-c">│ </span>
<span class="pl-c">└ """</span>
<span class="pl-c"><span class="pl-c">=#</span></span>

<span class="pl-c"><span class="pl-c">#</span> Guest can view books</span>
<span class="pl-c1">@info</span> HTTP<span class="pl-k">.</span><span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">"</span>http://localhost/api/books<span class="pl-pds">"</span></span>; cookiejar <span class="pl-k">=</span> HTTP<span class="pl-k">.</span>COOKIEJAR, status_exception<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c"><span class="pl-c">#=</span></span>
<span class="pl-c">┌ Info: HTTP.Messages.Response:</span>
<span class="pl-c">│ """</span>
<span class="pl-c">│ HTTP/1.1 200 OK</span>
<span class="pl-c">│ Transfer-Encoding: chunked</span>
<span class="pl-c">│ </span>
<span class="pl-c">└ Welcome guest! You can access books"""</span>
<span class="pl-c"><span class="pl-c">=#</span></span></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Close the server
HTTP.close(server)"><pre><span class="pl-c"><span class="pl-c">#</span> Close the server</span>
HTTP<span class="pl-k">.</span><span class="pl-c1">close</span>(server)</pre></div>
</article></div>