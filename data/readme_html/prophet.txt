<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-prophetjl" class="anchor" aria-hidden="true" href="#prophetjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Prophet.jl</code></h1>
<p dir="auto">A quick and dirty approach to get <a href="https://github.com/TuringLang/Turing.jl"><code>Turing.jl</code></a> running inference similar to <a href="https://github.com/facebook/prophet/"><code>prophet</code></a>.</p>
<h2 dir="auto"><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(&quot;https://github.com/torfjelde/Prophet.jl.git&quot;)

julia&gt; using Prophet

julia&gt; # Load an example dataset.
       df = Prophet.load_peyton_manning();

julia&gt; # Instantiate the model.
       model = prophet(df);
INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.

julia&gt; # [Optional] For much improved performance.
       using ReverseDiff, Memoization

julia&gt; Turing.setadbackend(:reversediff); Turing.setrdcache(true);

julia&gt; # Inference.
       chain = sample(model, NUTS(500, 0.8), 500);
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/HQHnm/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/HQHnm/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.00625
Sampling 100%|██████████████████████████████████████████████████████████████████████████████████████| Time: 0:03:34

julia&gt; chain[[:k, :m, :α]]
Chains MCMC chain (500×3×1 Array{Float64, 3}):

Iterations        = 501:1:1000
Number of chains  = 1
Samples per chain = 500
Wall duration     = 214.37 seconds
Compute duration  = 214.37 seconds
parameters        = k, m, α
internals         = 

Summary Statistics
  parameters      mean       std   naive_se      mcse        ess      rhat   ess_per_sec 
      Symbol   Float64   Float64    Float64   Float64    Float64   Float64       Float64 

           k   -3.2535    1.3587     0.0608    0.0514   461.6866    0.9983        2.1537
           m    7.9862    0.0581     0.0026    0.0019   544.1207    0.9980        2.5382
           α    1.9190    0.3088     0.0138    0.0165   445.4332    0.9980        2.0779

Quantiles
  parameters      2.5%     25.0%     50.0%     75.0%     97.5% 
      Symbol   Float64   Float64   Float64   Float64   Float64 

           k   -5.7614   -4.2223   -3.2088   -2.2765   -0.6395
           m    7.8692    7.9502    7.9869    8.0231    8.1007
α    1.3584    1.7018    1.9057    2.1207    2.5623


julia&gt; plot(chain[[:k, :m, :α]])"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/torfjelde/Prophet.jl.git<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Prophet

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Load an example dataset.</span>
       df <span class="pl-k">=</span> Prophet<span class="pl-k">.</span><span class="pl-c1">load_peyton_manning</span>();

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Instantiate the model.</span>
       model <span class="pl-k">=</span> <span class="pl-c1">prophet</span>(df);
INFO<span class="pl-k">:</span>prophet<span class="pl-k">:</span>Disabling daily seasonality. Run prophet with daily_seasonality<span class="pl-k">=</span>True to override this.

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> [Optional] For much improved performance.</span>
       <span class="pl-k">using</span> ReverseDiff, Memoization

julia<span class="pl-k">&gt;</span> Turing<span class="pl-k">.</span><span class="pl-c1">setadbackend</span>(<span class="pl-c1">:reversediff</span>); Turing<span class="pl-k">.</span><span class="pl-c1">setrdcache</span>(<span class="pl-c1">true</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Inference.</span>
       chain <span class="pl-k">=</span> <span class="pl-c1">sample</span>(model, <span class="pl-c1">NUTS</span>(<span class="pl-c1">500</span>, <span class="pl-c1">0.8</span>), <span class="pl-c1">500</span>);
┌ Warning<span class="pl-k">:</span> The current proposal will be rejected due to numerical <span class="pl-c1">error</span>(s).
│   <span class="pl-c1">isfinite</span>.((θ, r, ℓπ, ℓκ)) <span class="pl-k">=</span> (<span class="pl-c1">true</span>, <span class="pl-c1">false</span>, <span class="pl-c1">false</span>, <span class="pl-c1">false</span>)
└ @ AdvancedHMC <span class="pl-k">~</span><span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>packages<span class="pl-k">/</span>AdvancedHMC<span class="pl-k">/</span>HQHnm<span class="pl-k">/</span>src<span class="pl-k">/</span>hamiltonian<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">47</span>
┌ Warning<span class="pl-k">:</span> The current proposal will be rejected due to numerical <span class="pl-c1">error</span>(s).
│   <span class="pl-c1">isfinite</span>.((θ, r, ℓπ, ℓκ)) <span class="pl-k">=</span> (<span class="pl-c1">true</span>, <span class="pl-c1">false</span>, <span class="pl-c1">false</span>, <span class="pl-c1">false</span>)
└ @ AdvancedHMC <span class="pl-k">~</span><span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>packages<span class="pl-k">/</span>AdvancedHMC<span class="pl-k">/</span>HQHnm<span class="pl-k">/</span>src<span class="pl-k">/</span>hamiltonian<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">47</span>
┌ Info<span class="pl-k">:</span> Found initial step size
└   ϵ <span class="pl-k">=</span> <span class="pl-c1">0.00625</span>
Sampling <span class="pl-c1">100</span><span class="pl-k">%</span><span class="pl-k">|</span>██████████████████████████████████████████████████████████████████████████████████████<span class="pl-k">|</span> Time<span class="pl-k">:</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">03</span><span class="pl-k">:</span><span class="pl-c1">34</span>

julia<span class="pl-k">&gt;</span> chain[[<span class="pl-c1">:k</span>, <span class="pl-c1">:m</span>, <span class="pl-c1">:α</span>]]
Chains MCMC chain (<span class="pl-c1">500</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">1</span> Array{Float64, <span class="pl-c1">3</span>})<span class="pl-k">:</span>

Iterations        <span class="pl-k">=</span> <span class="pl-c1">501</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1000</span>
Number of chains  <span class="pl-k">=</span> <span class="pl-c1">1</span>
Samples per chain <span class="pl-k">=</span> <span class="pl-c1">500</span>
Wall duration     <span class="pl-k">=</span> <span class="pl-c1">214.37</span> seconds
Compute duration  <span class="pl-k">=</span> <span class="pl-c1">214.37</span> seconds
parameters        <span class="pl-k">=</span> k, m, α
internals         <span class="pl-k">=</span> 

Summary Statistics
  parameters      mean       std   naive_se      mcse        ess      rhat   ess_per_sec 
      Symbol   Float64   Float64    Float64   Float64    Float64   Float64       Float64 

           k   <span class="pl-k">-</span><span class="pl-c1">3.2535</span>    <span class="pl-c1">1.3587</span>     <span class="pl-c1">0.0608</span>    <span class="pl-c1">0.0514</span>   <span class="pl-c1">461.6866</span>    <span class="pl-c1">0.9983</span>        <span class="pl-c1">2.1537</span>
           m    <span class="pl-c1">7.9862</span>    <span class="pl-c1">0.0581</span>     <span class="pl-c1">0.0026</span>    <span class="pl-c1">0.0019</span>   <span class="pl-c1">544.1207</span>    <span class="pl-c1">0.9980</span>        <span class="pl-c1">2.5382</span>
           α    <span class="pl-c1">1.9190</span>    <span class="pl-c1">0.3088</span>     <span class="pl-c1">0.0138</span>    <span class="pl-c1">0.0165</span>   <span class="pl-c1">445.4332</span>    <span class="pl-c1">0.9980</span>        <span class="pl-c1">2.0779</span>

Quantiles
  parameters      <span class="pl-c1">2.5</span><span class="pl-k">%</span>     <span class="pl-c1">25.0</span><span class="pl-k">%</span>     <span class="pl-c1">50.0</span><span class="pl-k">%</span>     <span class="pl-c1">75.0</span><span class="pl-k">%</span>     <span class="pl-c1">97.5</span><span class="pl-k">%</span> 
      Symbol   Float64   Float64   Float64   Float64   Float64 

           k   <span class="pl-k">-</span><span class="pl-c1">5.7614</span>   <span class="pl-k">-</span><span class="pl-c1">4.2223</span>   <span class="pl-k">-</span><span class="pl-c1">3.2088</span>   <span class="pl-k">-</span><span class="pl-c1">2.2765</span>   <span class="pl-k">-</span><span class="pl-c1">0.6395</span>
           m    <span class="pl-c1">7.8692</span>    <span class="pl-c1">7.9502</span>    <span class="pl-c1">7.9869</span>    <span class="pl-c1">8.0231</span>    <span class="pl-c1">8.1007</span>
α    <span class="pl-c1">1.3584</span>    <span class="pl-c1">1.7018</span>    <span class="pl-c1">1.9057</span>    <span class="pl-c1">2.1207</span>    <span class="pl-c1">2.5623</span>


julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(chain[[<span class="pl-c1">:k</span>, <span class="pl-c1">:m</span>, <span class="pl-c1">:α</span>]])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="posterior.png"><img src="posterior.png" alt="posterior" style="max-width: 100%;"></a></p>
<p dir="auto">We can also take a look at the inferred trends:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; # Inferred trend.
       trends = reduce(hcat, generated_quantities(model, MCMCChains.get_sections(chain, :parameters)));

julia&gt; # Plot it!
       Prophet.plot_quantiles(eachrow(trends))"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Inferred trend.</span>
       trends <span class="pl-k">=</span> <span class="pl-c1">reduce</span>(hcat, <span class="pl-c1">generated_quantities</span>(model, MCMCChains<span class="pl-k">.</span><span class="pl-c1">get_sections</span>(chain, <span class="pl-c1">:parameters</span>)));

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Plot it!</span>
       Prophet<span class="pl-k">.</span><span class="pl-c1">plot_quantiles</span>(<span class="pl-c1">eachrow</span>(trends))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="trends.png"><img src="trends.png" alt="posterior" style="max-width: 100%;"></a></p>
</article></div>