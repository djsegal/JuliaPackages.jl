<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/11231648/204838569-4ad7afcc-5d08-47b4-ac30-3d8d16e975ca.svg"><img src="https://user-images.githubusercontent.com/11231648/204838569-4ad7afcc-5d08-47b4-ac30-3d8d16e975ca.svg" alt="Tally.jl" style="max-width: 100%;"></a></p>
<hr>
<p dir="auto"><em>When all you want is to just tally.</em></p>
<hr>
<h2 dir="auto"><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Status</h2>
<p dir="auto"><a href="https://github.com/thofma/Tally.jl/actions/workflows/CI.yml?query=branch%3Amaster"><img src="https://github.com/thofma/Tally.jl/actions/workflows/CI.yml/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/thofma/Tally.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/031a7b35903d3a82f0bf4e7dabc629aa9189614b2fa56216412cda6d88d5a391/68747470733a2f2f636f6465636f762e696f2f67682f74686f666d612f54616c6c792e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/thofma/Tally.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/70caf74abb9168aaba711c2354442a69a2719c230f73493136b9dcacde052525/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f542f54616c6c792e737667" alt="Pkg Eval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/T/Tally.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Table of contents</p>
<ul dir="auto">
<li><a href="https://github.com/thofma/Tally.jl#installation">Installation</a></li>
<li><a href="https://github.com/thofma/Tally.jl#usage">Usage</a>
<ul dir="auto">
<li><a href="https://github.com/thofma/Tally.jl#creating-a-tally-frequency-count">Creating a tally (frequency count)</a></li>
<li><a href="https://github.com/thofma/Tally.jl#plotting-a-tally">Plotting a tally</a></li>
<li><a href="https://github.com/thofma/Tally.jl#prison-count">Prison count</a></li>
<li><a href="https://github.com/thofma/Tally.jl/edit/master/README.md#tablesjl-interface-and-printing-using-prettytablejl">Tables.jl interface and printing using PrettyTables.jl</a></li>
<li><a href="https://github.com/thofma/Tally.jl#plotting-a-tally-using-plotsjl">Plotting using Plots.jl</a></li>
</ul>
</li>
<li><a href="https://github.com/thofma/Tally.jl#advanced-usage">Advanced usage</a>
<ul dir="auto">
<li><a href="https://github.com/thofma/Tally.jl#tally-is-too-slow">Tally is too slow</a></li>
<li><a href="https://github.com/thofma/Tally.jl#counting-up-to-an-equivalence">Counting up to an equivalence</a></li>
<li><a href="https://github.com/thofma/Tally.jl#lazy-tallies-and-animations">Lazy tallies and animations</a></li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Since Tally.jl is a registered package, it can be simply installed as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.install(&quot;Tally&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">install</span>(<span class="pl-s"><span class="pl-pds">"</span>Tally<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-creating-a-tally-frequency-count" class="anchor" aria-hidden="true" href="#creating-a-tally-frequency-count"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Creating a tally (frequency count)</h3>
<p dir="auto">Given some data stored in an object <code>data</code>, one can count the number of occurrences of items by calling <code>tally(data)</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; T = tally([&quot;x&quot;, &quot;x&quot;, &quot;y&quot;, &quot;x&quot;])
Tally with 4 items in 2 groups:
x | 3 | 75%
y | 1 | 25%"><pre>julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>([<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>])
Tally with <span class="pl-c1">4</span> items <span class="pl-k">in</span> <span class="pl-c1">2</span> groups<span class="pl-k">:</span>
x <span class="pl-k">|</span> <span class="pl-c1">3</span> <span class="pl-k">|</span> <span class="pl-c1">75</span><span class="pl-k">%</span>
y <span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">25</span><span class="pl-k">%</span></pre></div>
<p dir="auto">One can put in any iterable object</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; T = tally(rand(-1:1, 10, 10)) # a random 10x10 matrix with entries in [-1, 0, 1]
Tally with 100 items in 3 groups:
-1 | 37 | 37%
1  | 32 | 32%
0  | 31 | 31%"><pre>julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>(<span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-c1">10</span>)) <span class="pl-c"><span class="pl-c">#</span> a random 10x10 matrix with entries in [-1, 0, 1]</span>
Tally with <span class="pl-c1">100</span> items <span class="pl-k">in</span> <span class="pl-c1">3</span> groups<span class="pl-k">:</span>
<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">37</span> <span class="pl-k">|</span> <span class="pl-c1">37</span><span class="pl-k">%</span>
<span class="pl-c1">1</span>  <span class="pl-k">|</span> <span class="pl-c1">32</span> <span class="pl-k">|</span> <span class="pl-c1">32</span><span class="pl-k">%</span>
<span class="pl-c1">0</span>  <span class="pl-k">|</span> <span class="pl-c1">31</span> <span class="pl-k">|</span> <span class="pl-c1">31</span><span class="pl-k">%</span></pre></div>
<p dir="auto">A tally can be extended by adding more items via <code>push!</code> or <code>append!</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; push!(T, &quot;x&quot;)
Tally with 5 items in 2 groups:
x | 4 | 80%
y | 1 | 20%

julia&gt; append!(T, [&quot;x&quot;, &quot;y&quot;, &quot;y&quot;])
Tally with 8 items in 2 groups:
x | 5 | 62%
y | 3 | 38%"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">push!</span>(T, <span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>)
Tally with <span class="pl-c1">5</span> items <span class="pl-k">in</span> <span class="pl-c1">2</span> groups<span class="pl-k">:</span>
x <span class="pl-k">|</span> <span class="pl-c1">4</span> <span class="pl-k">|</span> <span class="pl-c1">80</span><span class="pl-k">%</span>
y <span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">20</span><span class="pl-k">%</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">append!</span>(T, [<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span>])
Tally with <span class="pl-c1">8</span> items <span class="pl-k">in</span> <span class="pl-c1">2</span> groups<span class="pl-k">:</span>
x <span class="pl-k">|</span> <span class="pl-c1">5</span> <span class="pl-k">|</span> <span class="pl-c1">62</span><span class="pl-k">%</span>
y <span class="pl-k">|</span> <span class="pl-c1">3</span> <span class="pl-k">|</span> <span class="pl-c1">38</span><span class="pl-k">%</span></pre></div>
<h3 dir="auto"><a id="user-content-plotting-a-tally" class="anchor" aria-hidden="true" href="#plotting-a-tally"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting a tally</h3>
<p dir="auto">Tally.jl comes with some basic plotting functionalities to plot tallies within the julia REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; T = tally(rand(-1:1, 10, 10))
Tally with 100 items in 3 groups:
0  | 43 | 43%
1  | 33 | 33%
-1 | 24 | 24%

julia&gt; Tally.plot(T)
      ┌                                        ┐
   0  ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 43   43%
   1  ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 33           33%
   -1 ┤■■■■■■■■■■■■■■■■■■■■ 24                   24%
      └                                        ┘"><pre>julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>(<span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-c1">10</span>))
Tally with <span class="pl-c1">100</span> items <span class="pl-k">in</span> <span class="pl-c1">3</span> groups<span class="pl-k">:</span>
<span class="pl-c1">0</span>  <span class="pl-k">|</span> <span class="pl-c1">43</span> <span class="pl-k">|</span> <span class="pl-c1">43</span><span class="pl-k">%</span>
<span class="pl-c1">1</span>  <span class="pl-k">|</span> <span class="pl-c1">33</span> <span class="pl-k">|</span> <span class="pl-c1">33</span><span class="pl-k">%</span>
<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">24</span> <span class="pl-k">|</span> <span class="pl-c1">24</span><span class="pl-k">%</span>

julia<span class="pl-k">&gt;</span> Tally<span class="pl-k">.</span><span class="pl-c1">plot</span>(T)
      ┌                                        ┐
   <span class="pl-c1">0</span>  ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ <span class="pl-c1">43</span>   <span class="pl-c1">43</span><span class="pl-k">%</span>
   <span class="pl-c1">1</span>  ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■ <span class="pl-c1">33</span>           <span class="pl-c1">33</span><span class="pl-k">%</span>
   <span class="pl-k">-</span><span class="pl-c1">1</span> ┤■■■■■■■■■■■■■■■■■■■■ <span class="pl-c1">24</span>                   <span class="pl-c1">24</span><span class="pl-k">%</span>
      └                                        ┘</pre></div>
<p dir="auto">See <code>?Tally.plot</code> for a list of options on how to customize this plot, which includes giving it a title or choosing a different ordering.</p>
<h3 dir="auto"><a id="user-content-prison-count" class="anchor" aria-hidden="true" href="#prison-count"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prison count</h3>
<p dir="auto">For tallies with counts not too large and pure entertainment, one can also plot tallies using a "prison count":</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; T = tally([1, 1, 1, 2, 2, 2, 2, 2, 2, -1]);

julia&gt; prison_count(T)
2  ┃ ┼┼┼┼ │
━━━╋━━━━━━━
1  ┃ │││
━━━╋━━━━━━━
-1 ┃ │"><pre>julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>([<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">prison_count</span>(T)
<span class="pl-c1">2</span>  ┃ ┼┼┼┼ │
━━━╋━━━━━━━
<span class="pl-c1">1</span>  ┃ │││
━━━╋━━━━━━━
<span class="pl-k">-</span><span class="pl-c1">1</span> ┃ │</pre></div>
<h3 dir="auto"><a id="user-content-tablesjl-interface-and-printing-using-prettytablejl" class="anchor" aria-hidden="true" href="#tablesjl-interface-and-printing-using-prettytablejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> interface and printing using <a href="https://github.com/ronisbr/PrettyTables.jl">PrettyTable.jl</a></h3>
<p dir="auto">The objects constructed by Tally.jl implement the <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> interface and thus can be printed using <a href="https://github.com/ronisbr/PrettyTables.jl">PrettyTable.jl</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; T = tally([1, 1, 1, 2, 2, 2, 2, 2, 2, -1]);

julia&gt; pretty_table(T)
┌───────┬────────┐
│  Keys │ Values │
│ Int64 │  Int64 │
├───────┼────────┤
│     2 │      6 │
│     1 │      3 │
│    -1 │      1 │
└───────┴────────┘"><pre>julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>([<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">pretty_table</span>(T)
┌───────┬────────┐
│  Keys │ Values │
│ Int64 │  Int64 │
├───────┼────────┤
│     <span class="pl-c1">2</span> │      <span class="pl-c1">6</span> │
│     <span class="pl-c1">1</span> │      <span class="pl-c1">3</span> │
│    <span class="pl-k">-</span><span class="pl-c1">1</span> │      <span class="pl-c1">1</span> │
└───────┴────────┘</pre></div>
<h3 dir="auto"><a id="user-content-plotting-a-tally-using-plotsjl" class="anchor" aria-hidden="true" href="#plotting-a-tally-using-plotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting a tally using <a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a></h3>
<p dir="auto">If you have <a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a> installed and loaded, you can also plot it using this functionality:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; T = tally(rand(-1:1, 10, 10))
Tally with 100 items in 3 groups:
1  | 38 | 38%
0  | 34 | 34%
-1 | 28 | 28%

julia&gt; bar(T, legend = false)"><pre>julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>(<span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-c1">10</span>))
Tally with <span class="pl-c1">100</span> items <span class="pl-k">in</span> <span class="pl-c1">3</span> groups<span class="pl-k">:</span>
<span class="pl-c1">1</span>  <span class="pl-k">|</span> <span class="pl-c1">38</span> <span class="pl-k">|</span> <span class="pl-c1">38</span><span class="pl-k">%</span>
<span class="pl-c1">0</span>  <span class="pl-k">|</span> <span class="pl-c1">34</span> <span class="pl-k">|</span> <span class="pl-c1">34</span><span class="pl-k">%</span>
<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">28</span> <span class="pl-k">|</span> <span class="pl-c1">28</span><span class="pl-k">%</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">bar</span>(T, legend <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
<p dir="auto">This will produce:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/11231648/204161394-27f392ea-3b97-4626-8b53-e0f506bd4e23.png"><img width="712" alt="ss" src="https://user-images.githubusercontent.com/11231648/204161394-27f392ea-3b97-4626-8b53-e0f506bd4e23.png" style="max-width: 100%;"></a></p>
<p dir="auto">See <code>?Plots.bar</code> for more information on how to customize this plot.</p>
<h2 dir="auto"><a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Advanced usage</h2>
<h3 dir="auto"><a id="user-content-tally-is-too-slow" class="anchor" aria-hidden="true" href="#tally-is-too-slow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tally is too slow</h3>
<p dir="auto">To work also for objects for which a consistent hash is not implemented, <code>tally</code> does not use <code>hash</code> by default. This can be enabled using the <code>use_hash = true</code> keyword.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; v = [rand([[1], [2]]) for i in 1:100000];

julia&gt; @btime tally($v)
  14.563 ms (100005 allocations: 1.53 MiB)
Tally with 100000 items in 2 groups:
[2] | 50146 | 50.1%
[1] | 49854 | 49.9%

julia&gt; @btime tally($v, use_hash = true)
  2.183 ms (7 allocations: 720 bytes)
Tally with 100000 items in 2 groups:
[2] | 50146 | 50.1%
[1] | 49854 | 49.9%"><pre>julia<span class="pl-k">&gt;</span> v <span class="pl-k">=</span> [<span class="pl-c1">rand</span>([[<span class="pl-c1">1</span>], [<span class="pl-c1">2</span>]]) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100000</span>];

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">tally</span>(<span class="pl-k">$</span>v)
  <span class="pl-c1">14.563</span> ms (<span class="pl-c1">100005</span> allocations<span class="pl-k">:</span> <span class="pl-c1">1.53</span> MiB)
Tally with <span class="pl-c1">100000</span> items <span class="pl-k">in</span> <span class="pl-c1">2</span> groups<span class="pl-k">:</span>
[<span class="pl-c1">2</span>] <span class="pl-k">|</span> <span class="pl-c1">50146</span> <span class="pl-k">|</span> <span class="pl-c1">50.1</span><span class="pl-k">%</span>
[<span class="pl-c1">1</span>] <span class="pl-k">|</span> <span class="pl-c1">49854</span> <span class="pl-k">|</span> <span class="pl-c1">49.9</span><span class="pl-k">%</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">tally</span>(<span class="pl-k">$</span>v, use_hash <span class="pl-k">=</span> <span class="pl-c1">true</span>)
  <span class="pl-c1">2.183</span> ms (<span class="pl-c1">7</span> allocations<span class="pl-k">:</span> <span class="pl-c1">720</span> bytes)
Tally with <span class="pl-c1">100000</span> items <span class="pl-k">in</span> <span class="pl-c1">2</span> groups<span class="pl-k">:</span>
[<span class="pl-c1">2</span>] <span class="pl-k">|</span> <span class="pl-c1">50146</span> <span class="pl-k">|</span> <span class="pl-c1">50.1</span><span class="pl-k">%</span>
[<span class="pl-c1">1</span>] <span class="pl-k">|</span> <span class="pl-c1">49854</span> <span class="pl-k">|</span> <span class="pl-c1">49.9</span><span class="pl-k">%</span></pre></div>
<h3 dir="auto"><a id="user-content-counting-up-to-an-equivalence" class="anchor" aria-hidden="true" href="#counting-up-to-an-equivalence"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Counting up to an equivalence</h3>
<p dir="auto">When counting, sometimes one wants to do a tally only with respect to some other invariant or with respect to an equivalence relation different from <code>==</code>. For this task <code>tally</code> provides the <code>by</code> and <code>equivalence</code> keyword arguments. The function <code>tally</code> will consider two elements <code>x, y</code> from the input collection equal when counting, whenever <code>equivalence(by(x), by(y))</code> is <code>true</code>. The default values are <code>by = identity</code> and <code>equivalence = isequal</code>. If <code>equivalence</code> does not define an equivalence relation, the result will be nonsense.</p>
<p dir="auto">Note that to indicate that the counting is non-standard, Tally will print the objects within square brackets <code>[ ]</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; v = 1:100000;

julia&gt; tally(v, by = iseven)
Tally with 100000 items in 2 groups:
[2] | 50000 | 50%
[1] | 50000 | 50%

julia&gt; tally(v, by = x -&gt; mod(x, 3))
Tally with 100000 items in 3 groups:
[1] | 33334 | 33.334%
[3] | 33333 | 33.333%
[2] | 33333 | 33.333%

julia&gt; v = [&quot;abb&quot;, &quot;ba&quot;, &quot;aa&quot;, &quot;ba&quot;, &quot;bbba&quot;, &quot;aaab&quot;];

julia&gt; tally(v, equivalence = (x, y) -&gt; first(x) == first(y) &amp;&amp; last(x) == last(y))
Tally with 6 items in 3 groups:
[ba]  | 3 | 50%
[abb] | 2 | 33%
[aa]  | 1 | 17%"><pre>julia<span class="pl-k">&gt;</span> v <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100000</span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tally</span>(v, by <span class="pl-k">=</span> iseven)
Tally with <span class="pl-c1">100000</span> items <span class="pl-k">in</span> <span class="pl-c1">2</span> groups<span class="pl-k">:</span>
[<span class="pl-c1">2</span>] <span class="pl-k">|</span> <span class="pl-c1">50000</span> <span class="pl-k">|</span> <span class="pl-c1">50</span><span class="pl-k">%</span>
[<span class="pl-c1">1</span>] <span class="pl-k">|</span> <span class="pl-c1">50000</span> <span class="pl-k">|</span> <span class="pl-c1">50</span><span class="pl-k">%</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tally</span>(v, by <span class="pl-k">=</span> x <span class="pl-k">-&gt;</span> <span class="pl-c1">mod</span>(x, <span class="pl-c1">3</span>))
Tally with <span class="pl-c1">100000</span> items <span class="pl-k">in</span> <span class="pl-c1">3</span> groups<span class="pl-k">:</span>
[<span class="pl-c1">1</span>] <span class="pl-k">|</span> <span class="pl-c1">33334</span> <span class="pl-k">|</span> <span class="pl-c1">33.334</span><span class="pl-k">%</span>
[<span class="pl-c1">3</span>] <span class="pl-k">|</span> <span class="pl-c1">33333</span> <span class="pl-k">|</span> <span class="pl-c1">33.333</span><span class="pl-k">%</span>
[<span class="pl-c1">2</span>] <span class="pl-k">|</span> <span class="pl-c1">33333</span> <span class="pl-k">|</span> <span class="pl-c1">33.333</span><span class="pl-k">%</span>

julia<span class="pl-k">&gt;</span> v <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>abb<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ba<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>aa<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ba<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bbba<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>aaab<span class="pl-pds">"</span></span>];

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tally</span>(v, equivalence <span class="pl-k">=</span> (x, y) <span class="pl-k">-&gt;</span> <span class="pl-c1">first</span>(x) <span class="pl-k">==</span> <span class="pl-c1">first</span>(y) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">last</span>(x) <span class="pl-k">==</span> <span class="pl-c1">last</span>(y))
Tally with <span class="pl-c1">6</span> items <span class="pl-k">in</span> <span class="pl-c1">3</span> groups<span class="pl-k">:</span>
[ba]  <span class="pl-k">|</span> <span class="pl-c1">3</span> <span class="pl-k">|</span> <span class="pl-c1">50</span><span class="pl-k">%</span>
[abb] <span class="pl-k">|</span> <span class="pl-c1">2</span> <span class="pl-k">|</span> <span class="pl-c1">33</span><span class="pl-k">%</span>
[aa]  <span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">17</span><span class="pl-k">%</span></pre></div>
<p dir="auto">The optional <code>equivalence</code> argument is important in case the equivalence relation under consideration does not admit easily computable unique representatives. Here is a real world example using <code>Hecke.jl</code>, where we only want to count algebraic objects up to isomorphism and thus can make use of the <code>equivalence</code> functionality. We make a tally of the 2-parts of the class groups of the first imaginary quadratic number fields:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Hecke;

julia&gt; ds = Hecke.squarefree_up_to(1000);

julia&gt; T = tally((class_group(quadratic_field(-d)[1])[1] for d in ds), equivalence = (G, H) -&gt; is_isomorphic(psylow_subgroup(G, 2)[1], psylow_subgroup(H, 2)[1])[1]);

julia&gt; Tally.plot(T)
                          ┌                                        ┐
   [GrpAb: Z/2]           ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 148   24.3%
   [GrpAb: (Z/2)^2]       ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 122         20.1%
   [GrpAb: Z/1]           ┤■■■■■■■■■■■■■■■■■■■■■ 89                  14.6%
   [GrpAb: Z/4]           ┤■■■■■■■■■■■■■■■ 64                        10.5%
   [GrpAb: Z/2 x Z/4]     ┤■■■■■■■■■■■ 48                             7.9%
   [GrpAb: Z/8]           ┤■■■■■■■■■ 39                               6.4%
   [GrpAb: Z/2 x Z/8]     ┤■■■■■■■■ 35                                5.8%
   [GrpAb: (Z/2)^3]       ┤■■■■ 19                                    3.1%
   [GrpAb: (Z/2)^2 x Z/4] ┤■■■■ 18                                    3.0%
   [GrpAb: Z/16]          ┤■■■ 13                                     2.1%
   [GrpAb: Z/32]          ┤■■ 7                                       1.2%
   [GrpAb: Z/2 x Z/16]    ┤■ 5                                        0.8%
   [GrpAb: (Z/2)^2 x Z/8] ┤ 1                                         0.2%
                          └                                        ┘"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hecke;

julia<span class="pl-k">&gt;</span> ds <span class="pl-k">=</span> Hecke<span class="pl-k">.</span><span class="pl-c1">squarefree_up_to</span>(<span class="pl-c1">1000</span>);

julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-c1">tally</span>((<span class="pl-c1">class_group</span>(<span class="pl-c1">quadratic_field</span>(<span class="pl-k">-</span>d)[<span class="pl-c1">1</span>])[<span class="pl-c1">1</span>] <span class="pl-k">for</span> d <span class="pl-k">in</span> ds), equivalence <span class="pl-k">=</span> (G, H) <span class="pl-k">-&gt;</span> <span class="pl-c1">is_isomorphic</span>(<span class="pl-c1">psylow_subgroup</span>(G, <span class="pl-c1">2</span>)[<span class="pl-c1">1</span>], <span class="pl-c1">psylow_subgroup</span>(H, <span class="pl-c1">2</span>)[<span class="pl-c1">1</span>])[<span class="pl-c1">1</span>]);

julia<span class="pl-k">&gt;</span> Tally<span class="pl-k">.</span><span class="pl-c1">plot</span>(T)
                          ┌                                        ┐
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">2</span>]           ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ <span class="pl-c1">148</span>   <span class="pl-c1">24.3</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> (Z<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>]       ┤■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ <span class="pl-c1">122</span>         <span class="pl-c1">20.1</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">1</span>]           ┤■■■■■■■■■■■■■■■■■■■■■ <span class="pl-c1">89</span>                  <span class="pl-c1">14.6</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">4</span>]           ┤■■■■■■■■■■■■■■■ <span class="pl-c1">64</span>                        <span class="pl-c1">10.5</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">2</span> x Z<span class="pl-k">/</span><span class="pl-c1">4</span>]     ┤■■■■■■■■■■■ <span class="pl-c1">48</span>                             <span class="pl-c1">7.9</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">8</span>]           ┤■■■■■■■■■ <span class="pl-c1">39</span>                               <span class="pl-c1">6.4</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">2</span> x Z<span class="pl-k">/</span><span class="pl-c1">8</span>]     ┤■■■■■■■■ <span class="pl-c1">35</span>                                <span class="pl-c1">5.8</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> (Z<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">3</span>]       ┤■■■■ <span class="pl-c1">19</span>                                    <span class="pl-c1">3.1</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> (Z<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> x Z<span class="pl-k">/</span><span class="pl-c1">4</span>] ┤■■■■ <span class="pl-c1">18</span>                                    <span class="pl-c1">3.0</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">16</span>]          ┤■■■ <span class="pl-c1">13</span>                                     <span class="pl-c1">2.1</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">32</span>]          ┤■■ <span class="pl-c1">7</span>                                       <span class="pl-c1">1.2</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> Z<span class="pl-k">/</span><span class="pl-c1">2</span> x Z<span class="pl-k">/</span><span class="pl-c1">16</span>]    ┤■ <span class="pl-c1">5</span>                                        <span class="pl-c1">0.8</span><span class="pl-k">%</span>
   [GrpAb<span class="pl-k">:</span> (Z<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> x Z<span class="pl-k">/</span><span class="pl-c1">8</span>] ┤ <span class="pl-c1">1</span>                                         <span class="pl-c1">0.2</span><span class="pl-k">%</span>
                          └                                        ┘</pre></div>
<h3 dir="auto"><a id="user-content-lazy-tallies-and-animations" class="anchor" aria-hidden="true" href="#lazy-tallies-and-animations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lazy tallies and animations</h3>
<p dir="auto">For maximal showoff potential, one can also construct "lazy" tallies, which can be plotted
as an animation.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;T = lazy_tally((rand(-1:1) for i in 1:100));

julia&gt; Tally.animate(T, badges = 4, delay = 0.2, title = &quot;Will 0 win?&quot;)"><pre>julia<span class="pl-k">&gt;</span>T <span class="pl-k">=</span> <span class="pl-c1">lazy_tally</span>((<span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>));

julia<span class="pl-k">&gt;</span> Tally<span class="pl-k">.</span><span class="pl-c1">animate</span>(T, badges <span class="pl-k">=</span> <span class="pl-c1">4</span>, delay <span class="pl-k">=</span> <span class="pl-c1">0.2</span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Will 0 win?<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">will yield</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/11231648/205502139-55ca4875-f3ff-429c-af50-5141acb85f5c.svg"><img src="https://user-images.githubusercontent.com/11231648/205502139-55ca4875-f3ff-429c-af50-5141acb85f5c.svg" alt="tally_run2" style="max-width: 100%;"></a></p>
<p dir="auto">Note that a lazy tally <code>T</code> can be converted to an ordinary tally object by invoking <code>materialize(T)</code>.</p>
</article></div>