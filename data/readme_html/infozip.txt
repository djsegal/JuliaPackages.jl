<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview</h2>
<p>This module provides support for reading and writing ZIP archives in Julia.</p>
<p><a href="https://travis-ci.org/samoconnor/InfoZIP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a186ab8755fa8c73552e854f22ebea4140a7726b/68747470733a2f2f7472617669732d63692e6f72672f73616d6f636f6e6e6f722f496e666f5a49502e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/samoconnor/InfoZIP.jl.png" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Install via the Julia package manager, <code>Pkg.add("InfoZIP")</code>.</p>
<p>Depends on the <a href="http://www.info-zip.org" rel="nofollow">Info ZIP</a> <code>zip</code> and <code>uzip</code> tools.
If these are not installed the <a href="https://github.com/fhs/ZipFile.jl">ZipFile.jl</a>
library is used instead.</p>
<h2><a id="user-content-unzip" class="anchor" aria-hidden="true" href="#unzip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>unzip</h2>
<p><code>InfoZIP.unzip(archive, [outputdir])</code> extracts an archive to files in "outputdir" (or in the current directory by default).</p>
<div class="highlight highlight-source-julia"><pre>InfoZIP<span class="pl-k">.</span><span class="pl-c1">unzip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/tmp/<span class="pl-pds">"</span></span>)

InfoZIP<span class="pl-k">.</span><span class="pl-c1">unzip</span>(<span class="pl-c1">http_get</span>(<span class="pl-s"><span class="pl-pds">"</span>http://foo.com/foo.zip<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/tmp/<span class="pl-pds">"</span></span>))</pre></div>
<h2><a id="user-content-high-level-interface" class="anchor" aria-hidden="true" href="#high-level-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>High level interface</h2>
<p>Use <code>open_zip</code> open a ZIP Archive for read and/or write.</p>
<p>Use <code>create_zip</code> to create a new ZIP Archive in one step.</p>
<p>A ZIP Archive can be either a <code>.ZIP</code> file or an <code>Array{UInt8,1}</code>.</p>
<h2><a id="user-content-open_zip" class="anchor" aria-hidden="true" href="#open_zip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>open_zip</h2>
<p>The result of <code>open_zip(archive)</code> is iterable and can be accessed as an
Associative collection.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Print size of each file in "foo.zip"...</span>
<span class="pl-k">for</span> (filename, data) <span class="pl-k">in</span> <span class="pl-c1">open_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$filename</span> has <span class="pl-v">$(<span class="pl-c1">length</span>(data))</span> bytes<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>


<span class="pl-c"><span class="pl-c">#</span> Read contents of "bar.csv" from "foo.zip"...</span>
data <span class="pl-k">=</span> <span class="pl-c1">open_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>)[<span class="pl-s"><span class="pl-pds">"</span>foo/bar.csv<span class="pl-pds">"</span></span>]


<span class="pl-c"><span class="pl-c">#</span> Read "foo.zip" from in-memory ZIP archive...</span>
zip_data <span class="pl-k">=</span> <span class="pl-c1">http_get</span>(<span class="pl-s"><span class="pl-pds">"</span>http://foo.com/foo.zip<span class="pl-pds">"</span></span>)
csv_data <span class="pl-k">=</span> <span class="pl-c1">open_zip</span>(zip_data)[<span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span>]


<span class="pl-c"><span class="pl-c">#</span> Create a Dict from a ZIP archive...</span>
<span class="pl-c1">Dict</span>(<span class="pl-c1">open_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>))
Dict{AbstractString,Any} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>    <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>foo/text.txt<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>text<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>


<span class="pl-c"><span class="pl-c">#</span> Create "foo.zip" with two files...</span>
<span class="pl-c1">open_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> z
    z[<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
    z[<span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
<span class="pl-k">end</span>


<span class="pl-c"><span class="pl-c">#</span> Create in-memory ZIP archive in "buf"...</span>
buf <span class="pl-k">=</span> UInt8[]
<span class="pl-c1">open_zip</span>(buf) <span class="pl-k">do</span> z
    z[<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
    z[<span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
<span class="pl-k">end</span>
<span class="pl-c1">http_put</span>(<span class="pl-s"><span class="pl-pds">"</span>http://foo.com/foo.zip<span class="pl-pds">"</span></span>, buf)


<span class="pl-c"><span class="pl-c">#</span> Add a new file to an existing archive"...</span>
<span class="pl-c1">open_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r+<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> z
    z[<span class="pl-s"><span class="pl-pds">"</span>newfile.csv<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
<span class="pl-k">end</span>


<span class="pl-c"><span class="pl-c">#</span> Update an existing file in an archive"...</span>
<span class="pl-c1">open_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r+<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> z
    z[<span class="pl-s"><span class="pl-pds">"</span>newfile.csv<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">lowercase</span>(z[<span class="pl-s"><span class="pl-pds">"</span>newfile.csv<span class="pl-pds">"</span></span>])
<span class="pl-k">end</span>
</pre></div>
<h2><a id="user-content-create_zip" class="anchor" aria-hidden="true" href="#create_zip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>create_zip</h2>
<p><code>create_zip([destination], content)</code> creates a ZIP archive from "content' in a single step. If "destination" is omitted the archive is returned as <code>Array{UInt8}</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Create archive from Dict...</span>
<span class="pl-c1">create_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>,
                           <span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>))


<span class="pl-c"><span class="pl-c">#</span> Create archive from Pairs...</span>
<span class="pl-c1">create_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>,
                      <span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>))


<span class="pl-c"><span class="pl-c">#</span> Create archive from Tuples...</span>
zip_data <span class="pl-k">=</span> <span class="pl-c1">create_zip</span>([(<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>),
                       (<span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>)])


<span class="pl-c"><span class="pl-c">#</span> Create archive from filenames array and data array...</span>
zip_data <span class="pl-k">=</span> <span class="pl-c1">create_zip</span>([<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span>],
                      [<span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>,  <span class="pl-s"><span class="pl-pds">"</span>1,2,3<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>])

<span class="pl-c"><span class="pl-c">#</span> Create archive from names of files in the current directory...</span>
<span class="pl-c1">create_zip</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.zip<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span>])
or
zip_data <span class="pl-k">=</span> <span class="pl-c1">create_zip</span>([<span class="pl-s"><span class="pl-pds">"</span>hello.txt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bar.csv<span class="pl-pds">"</span></span>])</pre></div>
<p><em>Based on <a href="https://github.com/fhs/ZipFile.jl/pull/16">fhs/ZipFile.jl#16</a>, thanks @timholy</em></p>
</article></div>