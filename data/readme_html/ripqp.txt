<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ripqp" class="anchor" aria-hidden="true" href="#ripqp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RipQP</h1>
<p dir="auto"><a href="https://doi.org/10.5281/zenodo.4309783" rel="nofollow"><img src="https://camo.githubusercontent.com/ae5ab9e72566861b8e27e12d2087659eab94f46997a2e0bd1dc7ec012737bc9a/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e343330393738332e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.4309783.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaSmoothOptimizers/RipQP.jl/workflows/CI/badge.svg?branch=main"><img src="https://github.com/JuliaSmoothOptimizers/RipQP.jl/workflows/CI/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="https://cirrus-ci.com/github/JuliaSmoothOptimizers/RipQP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/25b893dac418a4dafd2b60803814c8d49c08e7787d5c2977206f4138724a3f2d/68747470733a2f2f696d672e736869656c64732e696f2f6369727275732f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f52697051502e6a6c3f6c6f676f3d4369727275732532304349" alt="Cirrus CI - Base Branch Build Status" data-canonical-src="https://img.shields.io/cirrus/github/JuliaSmoothOptimizers/RipQP.jl?logo=Cirrus%20CI" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/RipQP.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/RipQP.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/6e0212a02bcf5c6976a054fd0941c8445d753dd1382e44d79d942c1fd829edac/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d3366353162352e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-3f51b5.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaSmoothOptimizers/RipQP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/52cb02d6b4608ea2cc43b16fe09622a60b928a60485c1eda91b4ad3f77b7dff5/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961536d6f6f74684f7074696d697a6572732f52697051502e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSmoothOptimizers/RipQP.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A package to optimize linear and quadratic problems in QuadraticModel format
(see <a href="https://github.com/JuliaSmoothOptimizers/QuadraticModels.jl">https://github.com/JuliaSmoothOptimizers/QuadraticModels.jl</a>).</p>
<p dir="auto">By default, RipQP iterates in the floating-point type of its input QuadraticModel, but it can also perform operations in several floating-point systems if some parameters are modified (see the <a href="https://JuliaSmoothOptimizers.github.io/RipQP.jl/stable" rel="nofollow">documentation</a> for more information).</p>
<h1 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic usage</h1>
<p dir="auto">In this example, we use QPSReader to read a quadratic problem (QAFIRO) from the
Maros and Meszaros dataset.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using QPSReader, QuadraticModels
using RipQP
qps = readqps(&quot;QAFIRO.SIF&quot;)
qm = QuadraticModel(qps)
stats = ripqp(qm)"><pre><span class="pl-k">using</span> QPSReader, QuadraticModels
<span class="pl-k">using</span> RipQP
qps <span class="pl-k">=</span> <span class="pl-c1">readqps</span>(<span class="pl-s"><span class="pl-pds">"</span>QAFIRO.SIF<span class="pl-pds">"</span></span>)
qm <span class="pl-k">=</span> <span class="pl-c1">QuadraticModel</span>(qps)
stats <span class="pl-k">=</span> <span class="pl-c1">ripqp</span>(qm)</pre></div>
<p dir="auto">To use the multi precision mode (default to :mono) and change the maximum number of iterations:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="stats = ripqp(qm, mode=:multi, itol = InputTol(max_iter=100))"><pre>stats <span class="pl-k">=</span> <span class="pl-c1">ripqp</span>(qm, mode<span class="pl-k">=</span><span class="pl-c1">:multi</span>, itol <span class="pl-k">=</span> <span class="pl-c1">InputTol</span>(max_iter<span class="pl-k">=</span><span class="pl-c1">100</span>))</pre></div>
<h2 dir="auto"><a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h2>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/RipQP.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a> organization, so questions about any of our packages are welcome.</p>
</article></div>