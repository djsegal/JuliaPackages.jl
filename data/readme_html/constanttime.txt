<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-constant-time-primitives" class="anchor" aria-hidden="true" href="#constant-time-primitives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Constant-time primitives</h1>
<p>Master branch: <a href="https://circleci.com/gh/nucypher/ConstantTime.jl/tree/master" rel="nofollow"><img src="https://camo.githubusercontent.com/80bde569d851ee26fd65c830d57fb44e8e60a0e4/68747470733a2f2f636972636c6563692e636f6d2f67682f6e756379706865722f436f6e7374616e7454696d652e6a6c2f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/nucypher/ConstantTime.jl/tree/master.svg?style=svg" style="max-width:100%;"></a> <a href="https://codecov.io/gh/nucypher/ConstantTime.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5b15d10064ebaa3c57628660b73666e2136aaabb/68747470733a2f2f636f6465636f762e696f2f67682f6e756379706865722f436f6e7374616e7454696d652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/nucypher/ConstantTime.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This package contains a number of primitives for writing constant-time algorithms.</p>
<p><strong>Warning:</strong> at the moment it is not completely certain whether Julia provides constant-time guarantees for the operators the library is based on. It is also not clear if it is a good idea in general to write crypto in Julia. Use this library to prototype branchless algorithms and to control operations on secret data by wrapping it in <code>ConstantTime.Value</code> type.</p>
</article></div>