<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-approxmanifoldproductsjl" class="anchor" aria-hidden="true" href="#approxmanifoldproductsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ApproxManifoldProducts.jl</h1>
<p><a href="https://travis-ci.org/JuliaRobotics/ApproxManifoldProducts.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/30e598ed16a795a5112fdbbbc0c74516291f2e766e33afb243fa6cca8eea957d/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961526f626f746963732f417070726f784d616e69666f6c6450726f64756374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaRobotics/ApproxManifoldProducts.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/github/JuliaRobotics/ApproxManifoldProducts.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3eaca84d90a0ffda82ede6a33baea367616e71c17d62004ff7f752a495ce85e7/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961526f626f746963732f417070726f784d616e69666f6c6450726f64756374732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaRobotics/ApproxManifoldProducts.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>

<h1><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h1>
<p>Approximate the product between infinite functional objects on a manifold -- i.e. belief products.  ApproxManifoldProducts (AMP) is intended for use with the <a href="http://www.github.com/JuliaRobotics/Caesar.jl">Caesar.jl</a> framework.  AMP is intended for development and testing of various kernel embedding methods for approximating functional products.</p>
<p>See <a href="http://www.juliarobotics.org/Caesar.jl/latest/" rel="nofollow">Caesar documentation</a> for more details.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<p>For Julia 0.7 and above press ']' in the Julia REPL:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add ApproxManifoldProducts
"><pre>pkg<span class="pl-k">&gt;</span> add ApproxManifoldProducts</pre></div>
<h1><a id="user-content-current-supported-mixed-manifolds" class="anchor" aria-hidden="true" href="#current-supported-mixed-manifolds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Current Supported (Mixed) Manifolds</h1>
<p><strong>NOTE</strong> Current work on v0.3.x is transitioning to JuliaManifolds for some of the Manifold abstractions.  This package AMP then adds non-parametric probabilistic computations on those and user manifolds.</p>
<p>The following on-manifold function approximations:</p>
<ul>
<li>Euclidean (2DOF),</li>
<li>S1/Circular (1DOF), or SO(2) equivalent.</li>
<li>SE(2)</li>
<li>S2 (not implemented yet)</li>
</ul>
<p>Work in progress on so-called 'subgroup' mixed-manifolds, where DOFs are bunched together for particular manifolds:</p>
<ul>
<li>SO(3) / Quaternion,</li>
<li>Plucker coordinates (SP(3)) for rigid transforms,</li>
<li>SE(3) for rigid transforms.</li>
</ul>
<blockquote>
<p>Implementation of multivariate methodology requires code to consider "double loops" that iterate over sub-groups, and then within each sub-group as required.  The supported list above can be implemented with "single loop" over all DOFs.</p>
</blockquote>
<p>Any suggestions or issues welcome.</p>
</article></div>