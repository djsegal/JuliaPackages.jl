<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-animalbreedingtools" class="anchor" aria-hidden="true" href="#animalbreedingtools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AnimalBreedingTools</h1>
<p dir="auto"><a href="https://travis-ci.org/masuday/AnimalBreedingTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e8f327639c8d514bf264bf9d1899160f19b227d6c30f99ef53cd00cb00f34981/68747470733a2f2f7472617669732d63692e6f72672f6d6173756461792f416e696d616c4272656564696e67546f6f6c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/masuday/AnimalBreedingTools.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">This package provides small functions useful for everyday work in animal breeding (or quantitative genetics).</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="# traditional bending by Hayes and Hill (1981)
B = [
   50.0 48.0
   48.0 40.0
]
bentB = bending(B)

# bending generalized by Jorjani et al. (2003)
V = [
   50.0 48.0
   48.0 40.0
]
Weight = 1 ./ [
   100.0 80.0
    80.0 80.0
]
bentV = bending2(V,Weight)

# normalized Legendre Polynomials
M = [normalized_legendre(x,n) for x=(-1:0.1:1),n=0:3]

# `vech` function
V = [
   50.0 48.0
   48.0 40.0
]
v = vech(V)

# covariance matrix to correlation matrix
# same functionality as StatsBase.cov2cor
R = v2r(bentV)

# correlation matrix to covariance matrix
# same functionality as StatsBase.cor2cov
C = r2v(R,sqrt.(diag(V)))

# direct sum
sV = directsum(V,V)
tV = directsum(V,V,V)"><pre class="notranslate"><code># traditional bending by Hayes and Hill (1981)
B = [
   50.0 48.0
   48.0 40.0
]
bentB = bending(B)

# bending generalized by Jorjani et al. (2003)
V = [
   50.0 48.0
   48.0 40.0
]
Weight = 1 ./ [
   100.0 80.0
    80.0 80.0
]
bentV = bending2(V,Weight)

# normalized Legendre Polynomials
M = [normalized_legendre(x,n) for x=(-1:0.1:1),n=0:3]

# `vech` function
V = [
   50.0 48.0
   48.0 40.0
]
v = vech(V)

# covariance matrix to correlation matrix
# same functionality as StatsBase.cov2cor
R = v2r(bentV)

# correlation matrix to covariance matrix
# same functionality as StatsBase.cor2cov
C = r2v(R,sqrt.(diag(V)))

# direct sum
sV = directsum(V,V)
tV = directsum(V,V,V)
</code></pre></div>
</article></div>