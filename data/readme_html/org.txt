<div id="readme" class="org" data-path="README.org"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-orgjl" class="anchor" aria-hidden="true" href="#orgjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Org.jl</h1>
<p><a href="https://travis-ci.org/non-Jedi/Org.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9e1a44bd3bc94fb86ca9e4a7a484d3c6d72e16e3e41bda58299c4a0d11966c9c/68747470733a2f2f7472617669732d63692e6f72672f6e6f6e2d4a6564692f4f72672e6a6c2e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/non-Jedi/Org.jl.svg?branch=master" data-canonical-src="https://travis-ci.org/non-Jedi/Org.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://coveralls.io/github/non-Jedi/Org.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fe44e013a7915a53008c25dfa88aaa0a79cde33915a862831931f782bdf7dd51/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e6f6e2d4a6564692f4f72672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="https://coveralls.io/repos/github/non-Jedi/Org.jl/badge.svg?branch=master" data-canonical-src="https://coveralls.io/repos/github/non-Jedi/Org.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is an incomplete experiment in how quickly I can slap together a
  parser for <a href="https://orgmode.org" rel="nofollow">org-mode</a> files without bothering to gain any background in
  parsing theory. Org-mode documents will be parsed according to my
  understanding of org rather than according to the org-mode source code
  or any formal grammar.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Parse an org string or <code>IO</code> into an <code>Org.Document</code> with
  <code>Org.parse_org</code>. <code>Org.Document</code> and all its children elements will
  have a field containing their children elements called
  <code>contents</code>. Some types of org constructs may have additional fields
  with information.</p>
<h2><a id="user-content-orgjl-improvements-before-its-useful" class="anchor" aria-hidden="true" href="#orgjl-improvements-before-its-useful"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Org.jl improvements before it’s useful</h2>
<ul>
  <li>[X] Develop architecture that can handle context-sensitivity</li>
  <li>[X] Parse headlines</li>
  <li>[X] Parse paragraphs</li>
  <li>[X] Hook parsers together to parse whole document instead of only elements</li>
  <li>[ ] Integrate with <a href="https://github.com/JuliaDocs/Documenter.jl">Documenter.jl</a>
    <ul>
      <li>[ ] Export parsed org to whatever format is used by Documenter.jl</li>
      <li>[ ] <a href="https://github.com/JuliaDocs/Documenter.jl/issues/1074">Integrate with upstream feature branch</a></li>
    </ul>
  </li>
  <li>[X] Document the package</li>
  <li>[ ] Register in <a href="https://github.com/JuliaRegistries/General/">General</a></li>
</ul>
<h2><a id="user-content-orgjl-improvements-necessary-for-purpose" class="anchor" aria-hidden="true" href="#orgjl-improvements-necessary-for-purpose"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Org.jl improvements necessary for purpose</h2>
<p>These are the nice-to-have features. In some cases <b>very</b> nice to have.</p>
<ul>
  <li>[ ] Parse code-blocks</li>
  <li>[ ] Parse example blocks</li>
  <li>[ ] Parse lists
    <ul>
      <li>[ ] Ordered lists</li>
      <li>[ ] Unordered lists</li>
      <li>[ ] Description lists</li>
      <li>[ ] Checkboxes</li>
    </ul>
  </li>
  <li>[ ] Parse image links</li>
  <li>[ ] Parse inline elements
    <ul>
      <li>[ ] bold</li>
      <li>[ ] italics</li>
      <li>[ ] underline</li>
      <li>[ ] links
        <ul>
          <li>[ ] internal</li>
          <li>[ ] external</li>
        </ul>
      </li>
      <li>[ ] verbatim</li>
      <li>[ ] code</li>
    </ul>
  </li>
  <li>[ ] Parse tables
    <ul>
      <li>[ ] Should <a href="https://github.com/mauro3/OrgTables.jl">OrgTables.jl</a> be re-used?</li>
    </ul>
  </li>
  <li>[ ] Writers for org elements and org docs</li>
</ul>
<h2><a id="user-content-orgjl-long-term-features" class="anchor" aria-hidden="true" href="#orgjl-long-term-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Org.jl long-term features</h2>
<p>These are the “if I ever feel the need” features.</p>
<ul>
  <li>[ ] Advanced table features
    <ul>
      <li>[ ] Formula handling</li>
    </ul>
  </li>
  <li>[ ] Parse drawers</li>
  <li>[ ] Parse properties
    <ul>
      <li>[ ] Property drawer</li>
      <li>[ ] Whole-file properties (<code>#+PROPERTY: mykey myvalues</code>, etc.)</li>
    </ul>
  </li>
  <li>[ ] Parse quote blocks</li>
  <li>[ ] Parse more inline elements
    <ul>
      <li>[ ] timestamps</li>
      <li>[ ] subscripts</li>
      <li>[ ] superscripts</li>
      <li>[ ] Radio targets (<code>&lt;&lt;target&gt;&gt;</code>)</li>
    </ul>
  </li>
  <li>[ ] Parse footnotes
    <ul>
      <li>[ ] Develop suitable architecture for representing and parsing footnotes</li>
    </ul>
  </li>
  <li>[ ] Parse embedded LaTeX
    <ul>
      <li>[ ] Fragments between <code>$</code></li>
      <li>[ ] <code>\(</code> and <code>\)</code> delimiters</li>
      <li>[ ] <code>\[</code> and <code>\]</code> delimiters</li>
      <li>[ ] <code>\begin{environment</code> and <code>\end{environment}</code> delimiters</li>
    </ul>
  </li>
  <li>[ ] Parse <code>#+NAME:</code> constructs</li>
  <li>[ ] Parse captions (<code>#+CAPTION:</code>)</li>
  <li>[ ] Parse inline elements from headline elements and other non-paragraph
    locations</li>
  <li>[ ] TODO list functionality</li>
</ul>
</article></div>