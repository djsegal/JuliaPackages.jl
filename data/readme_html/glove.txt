<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-glove" class="anchor" aria-hidden="true" href="#glove"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Glove</h2>
<p><a href="https://travis-ci.org/domluna/GloVe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bfe94504f420b239827d7b3cd91eb9085f4b6a8ee7eb7325697b10cb719be7ce/68747470733a2f2f7472617669732d63692e6f72672f646f6d6c756e612f476c6f76652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/domluna/Glove.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/domluna/Glove.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5bc5135fff97c896e7267ff657bef404da26965f6f2df1561f303c5384ed3b42/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f646f6d6c756e612f476c6f76652e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/domluna/Glove.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p>Implements <a href="http://nlp.stanford.edu/projects/glove/" rel="nofollow">Global Word Vectors</a>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;https://github.com/domluna/Glove.jl.git&quot;)
"><pre><code>using Pkg
Pkg.add("https://github.com/domluna/Glove.jl.git")
</code></pre></div>
<p>See <code>benchmark/perf.jl</code> for a usage example.</p>
<p>Here's the rough idea:</p>
<ol>
<li>
<p>Take text and make a LookupTable. This is a dictionary that has a map
from words -&gt; ids and vice-versa. Preprocessing steps should be taken
prior to this.</p>
</li>
<li>
<p>Use <code>weightedsums</code> to get the weighted co-occurence sum totals. This returns
a <code>CooccurenceDict</code>.</p>
</li>
<li>
<p>Convert the <code>CooccurenceDict</code> to a <code>CooccurenceVector</code>. The reasoning for this is faster indexing when we train the model.</p>
</li>
<li>
<p>Initialize a <code>Model</code> and train the model with the <code>CooccurenceVector</code> using
the <code>agagrad!</code> method.</p>
</li>
</ol>
<p>It's pretty fast at this point. On a single core it's roughly 3x slower than the optimized C version.</p>
<h3><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODO</h3>
<ul>
<li>
<p>[  ] More docs.</p>
</li>
<li>
<p>[  ] See if precompile(args...) does anything</p>
</li>
<li>
<p>[  ] Notebook example ( has to have emojis )</p>
</li>
<li>
<p>[  ] Multi-threading</p>
</li>
</ul>
</article></div>