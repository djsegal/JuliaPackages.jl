<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-metagraphs" class="anchor" aria-hidden="true" href="#metagraphs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MetaGraphs</h1>
<p><a href="https://travis-ci.org/JuliaGraphs/MetaGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/74bcc94e50ad591d9b020a2b343e0609abe9fe94/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614772617068732f4d6574614772617068732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGraphs/MetaGraphs.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaGraphs/MetaGraphs.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e57446e1440be3c70acb21b869303a140a2cf912/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614772617068732f4d6574614772617068732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaGraphs/MetaGraphs.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliagraphs.github.io/MetaGraphs.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p><a href="https://github.com/JuliaGraphs/LightGraphs.jl">LightGraphs.jl</a> graphs with arbitrary metadata.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p>Full documentation is available at <a href="https://juliagraphs.github.io/MetaGraphs.jl/latest" rel="nofollow">GitHub Pages</a>.
Documentation for methods is also available via the Julia REPL help system.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Installation is straightforward: from the Julia <code>pkg</code> prompt,</p>
<div class="highlight highlight-source-julia"><pre>add MetaGraphs</pre></div>
<h2><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example Usage</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LightGraphs, MetaGraphs

<span class="pl-c"><span class="pl-c">#</span> create a standard simplegraph</span>
julia<span class="pl-k">&gt;</span> g <span class="pl-k">=</span> <span class="pl-c1">path_graph</span>(<span class="pl-c1">5</span>)
{<span class="pl-c1">5</span>, <span class="pl-c1">4</span>} undirected simple Int64 graph

<span class="pl-c"><span class="pl-c">#</span> create a metagraph based on the simplegraph, with optional default edgeweight</span>
julia<span class="pl-k">&gt;</span> mg <span class="pl-k">=</span> <span class="pl-c1">MetaGraph</span>(g, <span class="pl-c1">3.0</span>)
{<span class="pl-c1">5</span>, <span class="pl-c1">4</span>} undirected Int64 metagraph with Float64 weights defined by <span class="pl-c1">:weight</span> (default weight <span class="pl-c1">3.0</span>)

<span class="pl-c"><span class="pl-c">#</span> set some properties for the graph itself</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(mg, <span class="pl-c1">:description</span>, <span class="pl-s"><span class="pl-pds">"</span>This is a metagraph.<span class="pl-pds">"</span></span>)
Dict{Symbol,Any} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-c1">:description</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>This is a metagraph.<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> set properties on a vertex in bulk</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_props!</span>(mg, <span class="pl-c1">1</span>, <span class="pl-c1">Dict</span>(<span class="pl-c1">:name</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Susan<span class="pl-pds">"</span></span>, <span class="pl-c1">:id</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">123</span>))
<span class="pl-c1">true</span>

<span class="pl-c"><span class="pl-c">#</span> set individual properties</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(mg, <span class="pl-c1">2</span>, <span class="pl-c1">:name</span>, <span class="pl-s"><span class="pl-pds">"</span>John<span class="pl-pds">"</span></span>)
<span class="pl-c1">true</span>

<span class="pl-c"><span class="pl-c">#</span> set a property on an edge</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(mg, <span class="pl-c1">Edge</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>), <span class="pl-c1">:action</span>, <span class="pl-s"><span class="pl-pds">"</span>knows<span class="pl-pds">"</span></span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Dates<span class="pl-k">:</span> Date

<span class="pl-c"><span class="pl-c">#</span> set another property on an edge by specifying source and destination</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(mg, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:since</span>, <span class="pl-c1">Date</span>(<span class="pl-s"><span class="pl-pds">"</span>20170501<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>yyyymmdd<span class="pl-pds">"</span></span>))
Dict{Symbol,Any} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:since</span>   <span class="pl-k">=&gt;</span> <span class="pl-c1">2017</span><span class="pl-k">-</span><span class="pl-c1">05</span><span class="pl-k">-</span><span class="pl-c1">01</span>
  <span class="pl-c1">:action</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>knows<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> get all the properties for an element</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">props</span>(mg, <span class="pl-c1">1</span>)
Dict{Symbol,Any} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:id</span>   <span class="pl-k">=&gt;</span> <span class="pl-c1">123</span>
  <span class="pl-c1">:name</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Susan<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> get a specific property by name</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">get_prop</span>(mg, <span class="pl-c1">2</span>, <span class="pl-c1">:name</span>)
<span class="pl-s"><span class="pl-pds">"</span>John<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> delete a specific property</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">rem_prop!</span>(mg, <span class="pl-c1">1</span>, <span class="pl-c1">:name</span>)
Dict{Symbol,Any} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-c1">:id</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">123</span>

<span class="pl-c"><span class="pl-c">#</span> clear all properties for vertex 2</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">clear_props!</span>(mg, <span class="pl-c1">2</span>)
Dict{Symbol,Any} with <span class="pl-c1">0</span> entries

<span class="pl-c"><span class="pl-c">#</span> confirm there are no properties set for vertex 2</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">props</span>(mg, <span class="pl-c1">2</span>)
Dict{Symbol,Any} with <span class="pl-c1">0</span> entries

<span class="pl-c"><span class="pl-c">#</span> all LightGraphs analytics work</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">betweenness_centrality</span>(mg)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.5</span>
 <span class="pl-c1">0.666667</span>
 <span class="pl-c1">0.5</span>
 <span class="pl-c1">0.0</span>

<span class="pl-c"><span class="pl-c">#</span> using weights</span>
julia<span class="pl-k">&gt;</span> mg <span class="pl-k">=</span> <span class="pl-c1">MetaGraph</span>(<span class="pl-c1">complete_graph</span>(<span class="pl-c1">3</span>))
{<span class="pl-c1">3</span>, <span class="pl-c1">3</span>} undirected Int64 metagraph with Float64 weights defined by <span class="pl-c1">:weight</span> (default weight <span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">enumerate_paths</span>(<span class="pl-c1">dijkstra_shortest_paths</span>(mg, <span class="pl-c1">1</span>), <span class="pl-c1">3</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(mg, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:weight</span>, <span class="pl-c1">0.2</span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(mg, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">:weight</span>, <span class="pl-c1">0.6</span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">enumerate_paths</span>(<span class="pl-c1">dijkstra_shortest_paths</span>(mg, <span class="pl-c1">1</span>), <span class="pl-c1">3</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>

<span class="pl-c"><span class="pl-c">#</span> use vertex values as indices</span>
julia<span class="pl-k">&gt;</span> G <span class="pl-k">=</span> <span class="pl-c1">MetaGraph</span>(<span class="pl-c1">100</span>)
{<span class="pl-c1">100</span>, <span class="pl-c1">0</span>} undirected Int64 metagraph with Float64 weights defined by <span class="pl-c1">:weight</span> (default weight <span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>
           <span class="pl-c1">set_prop!</span>(G, i, <span class="pl-c1">:name</span>, <span class="pl-s"><span class="pl-pds">"</span>node<span class="pl-v">$i</span><span class="pl-pds">"</span></span>)
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_indexing_prop!</span>(G, <span class="pl-c1">:name</span>)
<span class="pl-c1">Set</span>(Symbol[<span class="pl-c1">:name</span>])

<span class="pl-c"><span class="pl-c">#</span> nodes can now be found by the value in the index</span>
julia<span class="pl-k">&gt;</span> G[<span class="pl-s"><span class="pl-pds">"</span>node4<span class="pl-pds">"</span></span>, <span class="pl-c1">:name</span>]
<span class="pl-c1">4</span>

<span class="pl-c"><span class="pl-c">#</span> You can also find the value of an index by the vertex number (note, this behavior will dominate if index values are also integers)</span>
julia<span class="pl-k">&gt;</span> G[<span class="pl-c1">4</span>, <span class="pl-c1">:name</span>]
<span class="pl-s"><span class="pl-pds">"</span>node4<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_prop!</span>(G, <span class="pl-c1">3</span>, <span class="pl-c1">:name</span>, <span class="pl-s"><span class="pl-pds">"</span>name3<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> or set_indexing_prop!(G, 3, :name, "name3")</span>
<span class="pl-c1">Set</span>(Symbol[<span class="pl-c1">:name</span>])</pre></div>
</article></div>