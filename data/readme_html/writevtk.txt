<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-writevtkjl" class="anchor" aria-hidden="true" href="#writevtkjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>WriteVTK.jl</h1>
<p dir="auto"><a href="https://juliavtk.github.io/WriteVTK.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliavtk.github.io/WriteVTK.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/32700186" rel="nofollow"><img src="https://camo.githubusercontent.com/273129e7e4f644505c09da29918d87c09463a1c32343e0b9cab125ebe29220d6/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f33323730303138362e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/32700186.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/JuliaVTK/WriteVTK.jl/actions"><img src="https://github.com/JuliaVTK/WriteVTK.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaVTK/WriteVTK.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2607aed8a7ddacddbec80189aae5bdaa0ca8ebd0f0daa7d721572818cfee8d5f/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696156544b2f577269746556544b2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaVTK/WriteVTK.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package allows to write VTK XML files for visualisation of multidimensional
datasets using tools such as <a href="http://www.paraview.org/" rel="nofollow">ParaView</a>.
A wide range of VTK formats is supported, including different kinds of
structured and unstructured grids, as well as metadata files for describing
time series or multi-block domains.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">WriteVTK can be installed using the Julia package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ] add WriteVTK"><pre>julia<span class="pl-k">&gt;</span> ] add WriteVTK</pre></div>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">The <code>vtk_grid</code> function is the entry point for creating different kinds
of VTK files.
In the simplest cases, one just passes coordinate information to this function.
WriteVTK.jl then determines the VTK format that is more adapted for the provided
data.</p>
<p dir="auto">For instance, it is natural in Julia to describe a uniform three-dimensional
grid (with regularly-spaced increments) as a set of ranges:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="x = 0:0.1:1
y = 0:0.2:1
z = -1:0.05:1"><pre>x <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">1</span>
y <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.2</span><span class="pl-k">:</span><span class="pl-c1">1</span>
z <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0.05</span><span class="pl-k">:</span><span class="pl-c1">1</span></pre></div>
<p dir="auto">This specific way of specifying coordinates is compatible with the <a href="https://juliavtk.github.io/WriteVTK.jl/dev/grids/structured/#Image-data" rel="nofollow">image data</a>
VTK format, which has the <code>.vti</code> extension.
The following creates such a file, with some scalar data attached to each point:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="vtk_grid(&quot;fields&quot;, x, y, z) do vtk
    vtk[&quot;temperature&quot;] = rand(length(x), length(y), length(z))
end"><pre><span class="pl-c1">vtk_grid</span>(<span class="pl-s"><span class="pl-pds">"</span>fields<span class="pl-pds">"</span></span>, x, y, z) <span class="pl-k">do</span> vtk
    vtk[<span class="pl-s"><span class="pl-pds">"</span>temperature<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">length</span>(x), <span class="pl-c1">length</span>(y), <span class="pl-c1">length</span>(z))
<span class="pl-k">end</span></pre></div>
<p dir="auto">This will create a <code>fields.vti</code> file with the data.
Note that the file extension should not be included in the filename, as it will
be attached automatically according to the dataset type.</p>
<p dir="auto">By changing the coordinate specifications, the above can be naturally
generalised to non-uniform grid spacings and to curvilinear and unstructured
grids.
In each case, the correct kind of VTK file will be generated.</p>
<h2 dir="auto"><a id="user-content-supported-vtk-formats" class="anchor" aria-hidden="true" href="#supported-vtk-formats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Supported VTK formats</h2>
<p dir="auto">This package attempts to implement writers for all VTK XML formats described in
the <a href="http://www.vtk.org/VTK/img/file-formats.pdf" rel="nofollow">VTK specification</a>.
Note that legacy (non-XML) files are not supported.</p>
<p dir="auto">Supported dataset formats include:</p>
<ul dir="auto">
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/grids/structured/#Image-data" rel="nofollow">image data</a> (<code>.vti</code>),</li>
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/grids/structured/#Rectilinear-grid" rel="nofollow">rectilinear grid</a> (<code>.vtr</code>),</li>
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/grids/structured/#Structured-grid" rel="nofollow">structured (or curvilinear) grid</a> (<code>.vts</code>),</li>
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/grids/unstructured/#Unstructured-grid" rel="nofollow">unstructured grid</a> (<code>.vtu</code>),</li>
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/grids/unstructured/#Polydata-grid" rel="nofollow">polydata</a> (<code>.vtp</code>, a specific type of unstructured grid).</li>
</ul>
<p dir="auto">Moreover, the following metadata formats are supported:</p>
<ul dir="auto">
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/metadata/multiblock/" rel="nofollow">multiblock files</a> (<code>.vtm</code>),</li>
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/metadata/paraview_collections/" rel="nofollow">ParaView collections</a> (<code>.pvd</code>, typically used for time series),</li>
<li><a href="https://juliavtk.github.io/WriteVTK.jl/dev/metadata/parallel/" rel="nofollow">parallel files</a> (<code>.pvt*</code>).</li>
</ul>
<h2 dir="auto"><a id="user-content-further-reading" class="anchor" aria-hidden="true" href="#further-reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Further reading</h2>
<p dir="auto">See <a href="https://juliavtk.github.io/WriteVTK.jl/stable/" rel="nofollow">the documentation</a> for more details on how to use this package.</p>
<h2 dir="auto"><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Authors</h2>
<p dir="auto">This package is mainly written and maintained by <a href="https://jipolanco.gitlab.io" rel="nofollow">Juan Ignacio
Polanco</a>, with many important contributions by
<a href="https://fredrikekre.se" rel="nofollow">Fredrik Ekre</a>.
Moreover, a number of authors have implemented additional functionality, and
are acknowledged throughout the documentation.</p>
</article></div>