<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-structuredoptimizationjl" class="anchor" aria-hidden="true" href="#structuredoptimizationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>StructuredOptimization.jl</h1>
<p><a href="https://travis-ci.org/kul-forbes/StructuredOptimization.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/186f84fb117ff3ad5e3be99b57f99a1b99f72e51/68747470733a2f2f7472617669732d63692e6f72672f6b756c2d666f726265732f537472756374757265644f7074696d697a6174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/kul-forbes/StructuredOptimization.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/nantonel/structuredoptimization-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/1d7d82b50a2c63941ee14d3b44eb4f51e18fa7ab/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f30367764356a636b64386668646931762f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/06wd5jckd8fhdi1v/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/kul-forbes/StructuredOptimization.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f8300960f6a79895886c0f4e585cbf030ba6dab8/68747470733a2f2f636f6465636f762e696f2f67682f6b756c2d666f726265732f537472756374757265644f7074696d697a6174696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/kul-forbes/StructuredOptimization.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="https://kul-forbes.github.io/StructuredOptimization.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://kul-forbes.github.io/StructuredOptimization.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>StructuredOptimization.jl is a high-level modeling language
that utilizes a syntax that is very close to
the mathematical formulation of an optimization problem.</p>
<p>This user-friendly interface
acts as a parser to utilize
three different packages:</p>
<ul>
<li>
<p><a href="https://github.com/kul-forbes/ProximalOperators.jl">ProximalOperators.jl</a></p>
</li>
<li>
<p><a href="https://github.com/kul-forbes/AbstractOperators.jl">AbstractOperators.jl</a></p>
</li>
<li>
<p><a href="https://github.com/kul-forbes/ProximalAlgorithms.jl">ProximalAlgorithms.jl</a></p>
</li>
</ul>
<p>StructuredOptimization.jl can handle large-scale convex and nonconvex problems with nonsmooth cost functions.</p>
<p>It supports complex variables as well.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>To install the package, hit <code>]</code> from the Julia command line to enter the package manager, then</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add StructuredOptimization</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>A <em>least absolute shrinkage and selection operator</em> (LASSO) can be solved with only few lines of code:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StructuredOptimization

julia<span class="pl-k">&gt;</span> n, m <span class="pl-k">=</span> <span class="pl-c1">100</span>, <span class="pl-c1">10</span>;                <span class="pl-c"><span class="pl-c">#</span> define problem size</span>

julia<span class="pl-k">&gt;</span> A, y <span class="pl-k">=</span> <span class="pl-c1">randn</span>(m,n), <span class="pl-c1">randn</span>(m);   <span class="pl-c"><span class="pl-c">#</span> random problem data</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">Variable</span>(n);               <span class="pl-c"><span class="pl-c">#</span> initialize optimization variable</span>

julia<span class="pl-k">&gt;</span> λ <span class="pl-k">=</span> <span class="pl-c1">1e-2</span><span class="pl-k">*</span><span class="pl-c1">norm</span>(A<span class="pl-k">'</span><span class="pl-k">*</span>y,<span class="pl-c1">Inf</span>);       <span class="pl-c"><span class="pl-c">#</span> define λ    </span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@minimize</span> <span class="pl-c1">ls</span>( A<span class="pl-k">*</span>x <span class="pl-k">-</span> y ) <span class="pl-k">+</span> λ<span class="pl-k">*</span><span class="pl-c1">norm</span>(x, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">#</span> solve problem</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">~</span>x                             <span class="pl-c"><span class="pl-c">#</span> inspect solution</span>
<span class="pl-c1">100</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.440254</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>
[<span class="pl-k">...</span>]</pre></div>
<p>See the <a href="https://kul-forbes.github.io/StructuredOptimization.jl/latest" rel="nofollow">documentation</a> for more details about the type of problems StructuredOptimization.jl can handle and the <a href="https://kul-forbes.github.io/StructuredOptimization.jl/stable/demos/" rel="nofollow">demos</a> to check out some examples.</p>
</article></div>