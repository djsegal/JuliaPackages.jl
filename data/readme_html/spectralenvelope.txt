<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><table>
<thead>
<tr>
<th align="center"><strong>Travis</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.com/johncwok/SpectralEnvelope.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8b4553ce20f464e31e15efc785f56858f3276fbe/68747470733a2f2f7472617669732d63692e636f6d2f6a6f686e63776f6b2f537065637472616c456e76656c6f70652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/johncwok/SpectralEnvelope.jl.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h1><a id="user-content-spectral-envelope" class="anchor" aria-hidden="true" href="#spectral-envelope"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Spectral Envelope</h1>
<p>A fast and easy to use julia implementation of the spectral envelope method, used in categorical data analysis.</p>
<p>The <strong>spectral envelope</strong> is a tool to study cyclic behaviors in categorical data. It is more efficient than the traditional approach of attributing a different number to each category before computing the power-spectral density.<br></p>
<p>For each frequency in the spectrum, the <strong>spectral envelope</strong> finds an optimal real-numbered mapping that maximizes the power-spectral density at this point. Hence the name: no matter what mapping is choosen for each category, the power-spectral density will always be bounded by the spectral envelope.</p>
<p>The spectral envelope was defined by David S. Stoffer in <em>DAVID S. STOFFER, DAVID E. TYLER, ANDREW J. MCDOUGALL, Spectral analysis for categorical time series: Scaling and the spectral envelope</em>.\</p>
<h3><a id="user-content-installation-and-import-" class="anchor" aria-hidden="true" href="#installation-and-import-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation and import :</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> installing the module</span>
Using Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(“https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>johncwok<span class="pl-k">/</span>SpectralEnvelope<span class="pl-k">.</span>jl<span class="pl-k">.</span>git”)
<span class="pl-c"><span class="pl-c">#</span> importing the module</span>
Using SpectralEnvelope</pre></div>
<h2><a id="user-content-usage-" class="anchor" aria-hidden="true" href="#usage-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage :</h2>
<pre lang="spectral_envelope"><code>spectral_envelope(ts; m = 3)

  Input
    -ts : array containing the time series to be analysed.
    -m : the smoothing parameter. It’s value corresponds to how many neighboring points 
        are to be taken in account in the smoothing. Defaults to 3.
  Returns 
    -freq : An array containing the frequency of the power-spectrum (or spectral envelope)
    -se : the value of the spectral envelope for each frequency value.
    -eigvec : Array containing the optimal real-valued mapping for each frequency point.
    -categories : the categories which are present in the data.
</code></pre>
<p>To use the spectral envelope, call the function <code>spectral_envelope</code>, you can then easily plot the results and extract the mapping for a given frequency.</p>
<div class="highlight highlight-source-julia"><pre>f, se, mappings, categories <span class="pl-k">=</span> <span class="pl-c1">spectral_envelope</span>(data; m <span class="pl-k">=</span> <span class="pl-c1">4</span>)
<span class="pl-c"><span class="pl-c">#</span>plotting the results</span>
Using Plots
<span class="pl-c1">plot</span>(f, se)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/34754896/81937423-e5031f00-95f3-11ea-986d-bb5a3689639f.png"><img src="https://user-images.githubusercontent.com/34754896/81937423-e5031f00-95f3-11ea-986d-bb5a3689639f.png" width="600" style="max-width:100%;"></a></p>
<p>To get the <strong>optimal mappings</strong> for a given frequency more easily, you can use the <code>get_mapping(goal, f, se, mappings, categories)</code> function (you can use spalting for a more concise call) :</p>
<div class="highlight highlight-source-julia"><pre>f,se,mappings,categories <span class="pl-k">=</span><span class="pl-c1">spectral_envelope</span>(data; m <span class="pl-k">=</span><span class="pl-c1">0</span>)
<span class="pl-c1">get_mapping</span>(goal,f,se,mappings,categories)
<span class="pl-c"><span class="pl-c">#</span> using spalting : get_mapping(goal, spectral_envelope(data;m=0)…)</span>
<span class="pl-k">&gt;&gt;</span> position of peak<span class="pl-k">:</span> <span class="pl-c1">0.3338</span>  strength of peak<span class="pl-k">:</span> <span class="pl-c1">0.8067</span> 
 [<span class="pl-s"><span class="pl-pds">"</span>A : -0.3959646304003992<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>G : -0.3930054480816879<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>T : 0.8282155690720968<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>C : 0.1326439759143416<span class="pl-pds">"</span></span>]</pre></div>
<p>The function scans the vincinity of the provided goal frequency and returns the mapping for the found maxima. It also prints the positions and intensity of the peak so that you may control that you actually identified the desired peak and not a nearby sub-peak.<br>
In this example, we see that at the frequency ~0.33, the codons A and G have an equivalent mapping and so they have the same function (from the point of view of the time-series).</p>
</article></div>