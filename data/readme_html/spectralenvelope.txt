<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><table>
<thead>
<tr>
<th align="center"><strong>Appveyor</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://ci.appveyor.com/project/johncwok/spectralenvelope-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f111b77755f11b7a6d2e2dd7d174cf7d4cc49a6a08a17f9d18ca62b64089fae2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f71396574733336366f723632303475363f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/q9ets366or6204u6?svg=true" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h1 dir="auto"><a id="user-content-spectral-envelope" class="anchor" aria-hidden="true" href="#spectral-envelope"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Spectral Envelope</h1>
<p dir="auto">A fast and easy to use implementation of the spectral envelope method, used in categorical data analysis. This module is now part of the package <a href="https://github.com/johncwok/CategoricalTimeSeries.jl">CategoricalTimeSeries.jl</a></p>
<p dir="auto">The <strong>spectral envelope</strong> is a tool to study cyclic behaviors in categorical data. It is more efficient than the traditional approach of attributing a different number to each category before computing the power-spectral density.<br></p>
<p dir="auto">For each frequency in the spectrum, the <strong>spectral envelope</strong> finds an optimal real-numbered mapping that maximizes the power-spectral density at this point. Hence the name: no matter what mapping is choosen for each category, the power-spectral density will always be bounded by the spectral envelope.</p>
<p dir="auto">The spectral envelope was defined by David S. Stoffer in <em>DAVID S. STOFFER, DAVID E. TYLER, ANDREW J. MCDOUGALL, Spectral analysis for categorical time series: Scaling and the spectral envelope</em>.\</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The main function is:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="spectral_envelope(ts; m = 3)

  Input
    -ts : Array containing the time series to be analysed.
    -m : Smoothing parameter. corresponds to how many neighboring points 
        are to be involved in the smoothing (weighted average). Defaults to 3.
  Returns 
    -freq : Array containing the frequency of the power-spectrum (or spectral envelope)
    -se : Values of the spectral envelope for each frequency in 'freq'.
    -eigvec : Array containing the optimal real-valued mapping for each frequency point.
    -categories : the categories which are present in the data."><pre lang="spectral_envelope" class="notranslate"><code>spectral_envelope(ts; m = 3)

  Input
    -ts : Array containing the time series to be analysed.
    -m : Smoothing parameter. corresponds to how many neighboring points 
        are to be involved in the smoothing (weighted average). Defaults to 3.
  Returns 
    -freq : Array containing the frequency of the power-spectrum (or spectral envelope)
    -se : Values of the spectral envelope for each frequency in 'freq'.
    -eigvec : Array containing the optimal real-valued mapping for each frequency point.
    -categories : the categories which are present in the data.
</code></pre></div>
<p dir="auto">To use the spectral envelope, call the function <code>spectral_envelope</code>, you can then easily plot the results and extract the mapping for a given frequency.
Here is an example with DNA data from a portion of the Epstein virus:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DelimitedFiles, Plots
# extracting data
data = readdlm(&quot;..\\test\\DNA_data.txt&quot;)
# spectral envelope analysis
f, se, eigvecs = spectral_envelope(data; m = 4)
# plotting the results
plot(f, se, xlabel = &quot;Frequency&quot;, ylabel = &quot;Intensity&quot;, title = &quot;test data: extract of Epstein virus DNA&quot;, label = &quot;spectral envelope&quot;)"><pre><span class="pl-k">using</span> DelimitedFiles, Plots
<span class="pl-c"><span class="pl-c">#</span> extracting data</span>
data <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(<span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-cce">\\</span>test<span class="pl-cce">\\</span>DNA_data.txt<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> spectral envelope analysis</span>
f, se, eigvecs <span class="pl-k">=</span> <span class="pl-c1">spectral_envelope</span>(data; m <span class="pl-k">=</span> <span class="pl-c1">4</span>)
<span class="pl-c"><span class="pl-c">#</span> plotting the results</span>
<span class="pl-c1">plot</span>(f, se, xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Frequency<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Intensity<span class="pl-pds">"</span></span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>test data: extract of Epstein virus DNA<span class="pl-pds">"</span></span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>spectral envelope<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/34754896/91556982-eef72680-e933-11ea-85f3-fab6aea17258.PNG"><img src="https://user-images.githubusercontent.com/34754896/91556982-eef72680-e933-11ea-85f3-fab6aea17258.PNG" width="600" style="max-width: 100%;"></a></p>
<p dir="auto">To get the <strong>optimal mappings</strong> for a given frequency, you can use the <code>get_mapping(data, freq; m = 3)</code>. With the previous DNA example, we see a peak at 0.33. To get the corresponding mappings:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="mappings = get_mappings(data, 0.33)
&gt;&gt; position of peak: 0.33 strengh of peak: 0.6
print(mappings)
&gt;&gt; [&quot;A&quot; : 0.54, &quot;G&quot; : 0.62, &quot;T&quot; : -0.57, &quot;C&quot; : 0.0]"><pre>mappings <span class="pl-k">=</span> <span class="pl-c1">get_mappings</span>(data, <span class="pl-c1">0.33</span>)
<span class="pl-k">&gt;&gt;</span> position of peak<span class="pl-k">:</span> <span class="pl-c1">0.33</span> strengh of peak<span class="pl-k">:</span> <span class="pl-c1">0.6</span>
<span class="pl-c1">print</span>(mappings)
<span class="pl-k">&gt;&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-c1">0.54</span>, <span class="pl-s"><span class="pl-pds">"</span>G<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-c1">0.62</span>, <span class="pl-s"><span class="pl-pds">"</span>T<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">0.57</span>, <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-c1">0.0</span>]</pre></div>
<p dir="auto">The function scans the vincinity of the provided goal frequency and returns the mapping for the found maxima. It also prints the positions and intensity of the peak so that you may control that you actually identified the desired peak and not a nearby sub-peak.<br>
The codons A and G have a similar mapping, so they could potentially have similar functions : this is however not a necessity, as the spectral envelope only seeks to maximize the power-spectrum. If you want to study equivalency of categories, you should also check the results with a clustering algorithm like <a href="https://github.com/johncwok/IntegerIB.jl.git">https://github.com/johncwok/IntegerIB.jl.git</a>.</p>
<p dir="auto">Finally, if you would like to transform your input time-series according to the mappings obtain with <code>get_mappings</code>, you can use the <code>apply_mapping</code> function as follow:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="mapped_ts = apply_mapping(input_series, mapping)"><pre>mapped_ts <span class="pl-k">=</span> <span class="pl-c1">apply_mapping</span>(input_series, mapping)</pre></div>
<p dir="auto"><code>mapping</code> being here the mapping returned by <code>get_mappings</code>.</p>
<h3 dir="auto"><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing</h3>
<p dir="auto">If you used this module in a scientific publication, please consider citing the package it came from:</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@article{nelias2021categoricaltimeseries,
  title={CategoricalTimeSeries. jl: A toolbox for categorical time-series analysis},
  author={Nelias, Corentin},
  journal={Journal of Open Source Software},
  volume={6},
  number={67},
  pages={3733},
  year={2021}
}"><pre><span class="pl-k">@article</span>{<span class="pl-en">nelias2021categoricaltimeseries</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>CategoricalTimeSeries. jl: A toolbox for categorical time-series analysis<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Nelias, Corentin<span class="pl-pds">}</span></span>,
  <span class="pl-s">journal</span>=<span class="pl-s"><span class="pl-pds">{</span>Journal of Open Source Software<span class="pl-pds">}</span></span>,
  <span class="pl-s">volume</span>=<span class="pl-s"><span class="pl-pds">{</span>6<span class="pl-pds">}</span></span>,
  <span class="pl-s">number</span>=<span class="pl-s"><span class="pl-pds">{</span>67<span class="pl-pds">}</span></span>,
  <span class="pl-s">pages</span>=<span class="pl-s"><span class="pl-pds">{</span>3733<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2021<span class="pl-pds">}</span></span>
}</pre></div>
<h3 dir="auto"><a id="user-content-installation-and-import" class="anchor" aria-hidden="true" href="#installation-and-import"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation and import</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# installing the module
Using Pkg
Pkg.clone(“https://github.com/johncwok/SpectralEnvelope.jl.git”)
# importing the module
Using SpectralEnvelope"><pre><span class="pl-c"><span class="pl-c">#</span> installing the module</span>
Using Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(“https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>johncwok<span class="pl-k">/</span>SpectralEnvelope<span class="pl-k">.</span>jl<span class="pl-k">.</span>git”)
<span class="pl-c"><span class="pl-c">#</span> importing the module</span>
Using SpectralEnvelope</pre></div>
<h2 dir="auto"><a id="user-content-to-do" class="anchor" aria-hidden="true" href="#to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To-do</h2>
<ul dir="auto">
<li>Implement windowing &amp; averaging (periodogram bias correction).</li>
<li>Implement bootstrap confidence intervals.</li>
</ul>
</article></div>