<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-gnssreceiver-wip" class="anchor" aria-hidden="true" href="#gnssreceiver-wip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GNSSReceiver (WIP)</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="media/output.png"><img src="media/output.png" alt="Exemplary output" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add GNSSReceiver"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add GNSSReceiver</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-example-to-read-from-file" class="anchor" aria-hidden="true" href="#example-to-read-from-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example to read from file</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GNSSSignals, Tracking, GNSSReceiver, Unitful
using Unitful:Hz, ms
gpsl1 = GPSL1()
files = map(i -&gt; &quot;antenna$i.dat&quot;, 1:4) # Could also be a single file for a single antenna channel
sampling_freq = 5e6Hz
# The number of samples must be integer multiples of 1ms.
# The number of samples determines the length of the signal that
# is passed to the acquisition of the satellites.
# Higher values result into higher chance of acquisition, but also
# demand a larger computing power.
num_samples = Int(upreferred(sampling_freq * 4ms))
measurement_channel = read_files(files, num_samples, type = Complex{Int16})
# Let's receive GPS L1 signals
data_channel = receive(measurement_channel, gpsl1, sampling_freq; num_ants = NumAnts(4), num_samples)
# Get gui channel from data channel
gui_channel = get_gui_data_channel(data_channel)
# Hook up GUI
GNSSReceiver.gui(gui_channel)
# If you'd like to save the data as well, you will have to split the data channel:
# data_channel1, data_channel2 = tee(data_channel)
# data_task = @async save_data(data_channel1)
# gui_channel = get_gui_data_channel(data_channel2)
# GNSSReceiver.gui(gui_channel)
# data = fetch(data_task)"><pre><span class="pl-k">using</span> GNSSSignals, Tracking, GNSSReceiver, Unitful
<span class="pl-k">using</span> Unitful<span class="pl-k">:</span>Hz, ms
gpsl1 <span class="pl-k">=</span> <span class="pl-c1">GPSL1</span>()
files <span class="pl-k">=</span> <span class="pl-c1">map</span>(i <span class="pl-k">-&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>antenna<span class="pl-v">$i</span>.dat<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>) <span class="pl-c"><span class="pl-c">#</span> Could also be a single file for a single antenna channel</span>
sampling_freq <span class="pl-k">=</span> <span class="pl-c1">5e6</span>Hz
<span class="pl-c"><span class="pl-c">#</span> The number of samples must be integer multiples of 1ms.</span>
<span class="pl-c"><span class="pl-c">#</span> The number of samples determines the length of the signal that</span>
<span class="pl-c"><span class="pl-c">#</span> is passed to the acquisition of the satellites.</span>
<span class="pl-c"><span class="pl-c">#</span> Higher values result into higher chance of acquisition, but also</span>
<span class="pl-c"><span class="pl-c">#</span> demand a larger computing power.</span>
num_samples <span class="pl-k">=</span> <span class="pl-c1">Int</span>(<span class="pl-c1">upreferred</span>(sampling_freq <span class="pl-k">*</span> <span class="pl-c1">4</span>ms))
measurement_channel <span class="pl-k">=</span> <span class="pl-c1">read_files</span>(files, num_samples, type <span class="pl-k">=</span> Complex{Int16})
<span class="pl-c"><span class="pl-c">#</span> Let's receive GPS L1 signals</span>
data_channel <span class="pl-k">=</span> <span class="pl-c1">receive</span>(measurement_channel, gpsl1, sampling_freq; num_ants <span class="pl-k">=</span> <span class="pl-c1">NumAnts</span>(<span class="pl-c1">4</span>), num_samples)
<span class="pl-c"><span class="pl-c">#</span> Get gui channel from data channel</span>
gui_channel <span class="pl-k">=</span> <span class="pl-c1">get_gui_data_channel</span>(data_channel)
<span class="pl-c"><span class="pl-c">#</span> Hook up GUI</span>
GNSSReceiver<span class="pl-k">.</span><span class="pl-c1">gui</span>(gui_channel)
<span class="pl-c"><span class="pl-c">#</span> If you'd like to save the data as well, you will have to split the data channel:</span>
<span class="pl-c"><span class="pl-c">#</span> data_channel1, data_channel2 = tee(data_channel)</span>
<span class="pl-c"><span class="pl-c">#</span> data_task = @async save_data(data_channel1)</span>
<span class="pl-c"><span class="pl-c">#</span> gui_channel = get_gui_data_channel(data_channel2)</span>
<span class="pl-c"><span class="pl-c">#</span> GNSSReceiver.gui(gui_channel)</span>
<span class="pl-c"><span class="pl-c">#</span> data = fetch(data_task)</span></pre></div>
<p dir="auto">That's it. You can watch the GUI being updated in real time.</p>
<h3 dir="auto"><a id="user-content-example-to-read-from-sdr" class="anchor" aria-hidden="true" href="#example-to-read-from-sdr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example to read from SDR</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Replace SoapyLMS7_jll with whatever SoapySDR driver that you need, e.g. SoapyRTLSDR_jll
using SoapyLMS7_jll
using GNSSReceiver, GNSSSignals, Unitful, Tracking, SoapySDR

# You'll might want to run it twice for optimal performance.
gnss_receiver_gui(;
    system = GPSL1(),
    sampling_freq = 2e6u&quot;Hz&quot;,
    acquisition_time = 4u&quot;ms&quot;, # A longer time increases the SNR for satellite acquisition, but also increases the computational load. Must be longer than 1ms
    run_time = 40u&quot;s&quot;,
    num_ants = Tracking.NumAnts(2), # Number of antenna channels
    dev_args = first(Devices()) # Select device (e.g. first device)
)"><pre><span class="pl-c"><span class="pl-c">#</span> Replace SoapyLMS7_jll with whatever SoapySDR driver that you need, e.g. SoapyRTLSDR_jll</span>
<span class="pl-k">using</span> SoapyLMS7_jll
<span class="pl-k">using</span> GNSSReceiver, GNSSSignals, Unitful, Tracking, SoapySDR

<span class="pl-c"><span class="pl-c">#</span> You'll might want to run it twice for optimal performance.</span>
<span class="pl-c1">gnss_receiver_gui</span>(;
    system <span class="pl-k">=</span> <span class="pl-c1">GPSL1</span>(),
    sampling_freq <span class="pl-k">=</span> <span class="pl-c1">2e6</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>Hz<span class="pl-pds">"</span></span>,
    acquisition_time <span class="pl-k">=</span> <span class="pl-c1">4</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>ms<span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span> A longer time increases the SNR for satellite acquisition, but also increases the computational load. Must be longer than 1ms</span>
    run_time <span class="pl-k">=</span> <span class="pl-c1">40</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>s<span class="pl-pds">"</span></span>,
    num_ants <span class="pl-k">=</span> Tracking<span class="pl-k">.</span><span class="pl-c1">NumAnts</span>(<span class="pl-c1">2</span>), <span class="pl-c"><span class="pl-c">#</span> Number of antenna channels</span>
    dev_args <span class="pl-k">=</span> <span class="pl-c1">first</span>(<span class="pl-c1">Devices</span>()) <span class="pl-c"><span class="pl-c">#</span> Select device (e.g. first device)</span>
)</pre></div>
</article></div>