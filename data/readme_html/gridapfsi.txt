<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gridapfsi" class="anchor" aria-hidden="true" href="#gridapfsi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GridapFSI</h1>
<p><a href="https://gridapapps.github.io/GridapFSI.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://gridapapps.github.io/GridapFSI.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/gridapapps/GridapFSI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c99a2016159c408643f6ee4981037e41d89314b1316bf226483307d6fb68b38c/68747470733a2f2f7472617669732d63692e636f6d2f677269646170617070732f4772696461704653492e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/gridapapps/GridapFSI.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/gridapapps/GridapFSI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/18a09c2522b775e36cb22ceead9096bd06d5abe21c2e27d03557eca2cc07c0fe/68747470733a2f2f636f6465636f762e696f2f67682f677269646170617070732f4772696461704653492e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/gridapapps/GridapFSI.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This is an application repository with a collection of drivers for the simulation of Fluid-Structure Interaction (FSI) problems. It is based on <a href="https://github.com/gridap/Gridap.jl">Gridap</a>, a package for grid-based approximation of PDEs with Finite Element, and <a href="https://github.com/gridap/GridapODEs.jl">GridapODEs</a>, a package that provides time integration tools for Gridap.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>This is a Julia package that can be easily installed using the <code>Pkg</code> manager. Open the Julia REPL, type <code>]</code> to enter into the package mode, and install as follows</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/gridapapps/GridapFSI.jl
"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>gridapapps<span class="pl-k">/</span>GridapFSI<span class="pl-k">.</span>jl</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>First, include the main GridapFSI module:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GridapFSI
"><pre><span class="pl-k">using</span> GridapFSI</pre></div>
<p>Then, execute the <code>main()</code> function especifying the driver name and the optional arguments. By default the <code>elasticFlag</code> driver is called, with the default parameters corresponding to the FSI2 test case. Other drivers can be called with the following sintax:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="main(problemName=&quot;&lt;driverName&gt;&quot;,kwargs...)
"><pre><span class="pl-c1">main</span>(problemName<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>&lt;driverName&gt;<span class="pl-pds">"</span></span>,kwargs<span class="pl-k">...</span>)</pre></div>
<p>Currently the following drivers are implemented:</p>
<ul>
<li><code>problemName="analytical"</code>: A monolithic FSI simulation using a manufactured analytical solution.</li>
<li><code>problemName="elasticFlag"</code>: A monolighic FSI simulation of the elastic flag behind a cylinder benchmark.</li>
</ul>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h3><a id="user-content-elastic-flag-after-a-cylinder-fsi-1" class="anchor" aria-hidden="true" href="#elastic-flag-after-a-cylinder-fsi-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Elastic flag after a cylinder: FSI-1</h3>
<p>The FSI-1 test case for the elastic flag benchmark proposed by S. Turek and J. Horn can be run with the following command:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="output = main(
  Um=0.2,
  Re=20,
  rho_s=1.0e-3,
  strategy=&quot;biharmonic&quot;,
  alpha_m=1.0e-6,
  alpha_m_weight=&quot;volume&quot;,
  model=&quot;models/elasticFlagFine.json&quot;,
  dt=1.0,
  tf=25.0,
  theta=0.6
  )
"><pre>output <span class="pl-k">=</span> <span class="pl-c1">main</span>(
  Um<span class="pl-k">=</span><span class="pl-c1">0.2</span>,
  Re<span class="pl-k">=</span><span class="pl-c1">20</span>,
  rho_s<span class="pl-k">=</span><span class="pl-c1">1.0e-3</span>,
  strategy<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>biharmonic<span class="pl-pds">"</span></span>,
  alpha_m<span class="pl-k">=</span><span class="pl-c1">1.0e-6</span>,
  alpha_m_weight<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>volume<span class="pl-pds">"</span></span>,
  model<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>models/elasticFlagFine.json<span class="pl-pds">"</span></span>,
  dt<span class="pl-k">=</span><span class="pl-c1">1.0</span>,
  tf<span class="pl-k">=</span><span class="pl-c1">25.0</span>,
  theta<span class="pl-k">=</span><span class="pl-c1">0.6</span>
  )</pre></div>
<p>This call will run the FSI1 test case using a Î¸-method with a time step size of <code>dt=1.0</code>, using the Biharmonic mesh motion strategy with a cell volume weighted constant, and a discrete model defined in <code>models/elasticFlagFine.json</code>. In this test the displacement, velocity and pressure fields are outputed to <code>.vtu</code> files located in the automatically generated folder <code>fsi-results</code>. The result <code>output</code> consists on a tuple with the values of time, drag and lift forces. For this specific case we have the following values at the final time:</p>
<table>
<thead>
<tr>
<th># elements</th>
<th># DOFs</th>
<th>x-displ of A</th>
<th>y-displ of A</th>
<th>Drag force</th>
<th>Lift force</th>
</tr>
</thead>
<tbody>
<tr>
<td>7342</td>
<td>152,745</td>
<td>2.257e-5</td>
<td>8.728e-4</td>
<td>14.215</td>
<td>0.6803</td>
</tr>
<tr>
<td>Reference</td>
<td></td>
<td>2.27e-5</td>
<td>8.209e-4</td>
<td>14.295</td>
<td>0.7638</td>
</tr>
</tbody>
</table>
<p><a target="_blank" rel="noopener noreferrer" href="/models/velFSI1.png"><img src="/models/velFSI1.png" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-elastic-flag-after-a-cylinder-fsi-2" class="anchor" aria-hidden="true" href="#elastic-flag-after-a-cylinder-fsi-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Elastic flag after a cylinder: FSI-2</h3>
<p>The FSI-2 test case for the elastic flag benchmark proposed by S. Turek and J. Horn can be run with the following command:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="output = main(
  strategy=&quot;biharmonic&quot;,
  alpha_m=1.0e-6,
  alpha_m_weight=&quot;volume&quot;,
  model=&quot;models/elasticFlagFine.json&quot;,
  dt=0.01,
  tf=10.0,
  theta=0.6
  )
"><pre>output <span class="pl-k">=</span> <span class="pl-c1">main</span>(
  strategy<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>biharmonic<span class="pl-pds">"</span></span>,
  alpha_m<span class="pl-k">=</span><span class="pl-c1">1.0e-6</span>,
  alpha_m_weight<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>volume<span class="pl-pds">"</span></span>,
  model<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>models/elasticFlagFine.json<span class="pl-pds">"</span></span>,
  dt<span class="pl-k">=</span><span class="pl-c1">0.01</span>,
  tf<span class="pl-k">=</span><span class="pl-c1">10.0</span>,
  theta<span class="pl-k">=</span><span class="pl-c1">0.6</span>
  )</pre></div>
<p>The output is the same as the FSI-1 case. In this case, the solution results in a periodic oscillation of the flag as seen in the following movie.</p>
<p><a target="_blank" rel="noopener noreferrer" href="/models/FSI2.gif"><img src="/models/FSI2.gif" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-flow-around-a-cylinder-with-forced-cross-flow-oscillations" class="anchor" aria-hidden="true" href="#flow-around-a-cylinder-with-forced-cross-flow-oscillations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Flow around a cylinder with forced cross-flow oscillations</h3>
<g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png">ð§</g-emoji><g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png">ð§</g-emoji><g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png">ð§</g-emoji> work in progress <g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png">ð§</g-emoji><g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png">ð§</g-emoji><g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png">ð§</g-emoji>
<p>In this example we analyse the flow around a cylinder that moves in the cross-flow direction with a forced oscillation. To run this test, execute the following command:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="output = main(problemName=&quot;oscillator&quot;,dt=0.025,tf=10.0)
"><pre>output <span class="pl-k">=</span> <span class="pl-c1">main</span>(problemName<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>oscillator<span class="pl-pds">"</span></span>,dt<span class="pl-k">=</span><span class="pl-c1">0.025</span>,tf<span class="pl-k">=</span><span class="pl-c1">10.0</span>)</pre></div>
<p>The main feature of this example is that we first solve a wake oscillator model with nonlinear coupling for the vortex-induced vibration of a rigid cylinder constrained to vibrate in the cross-flow direction. This is done by solving a nonlinear ODE using the <code>DifferentialEquations.jl</code> package. The solution obtained from the wake model is then used as a boundary condition for the displacement and velocity of the cylinder subject to forced motion.</p>
<p><a target="_blank" rel="noopener noreferrer" href="/models/oscillator.gif"><img src="/models/oscillator.gif" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>Contributions with the definition of new drivers and additional FSI formulations are welcome. The repository is organized as follows:</p>
<ul>
<li><code>GridapFSI.jl</code>: module with the main function and inclusion of submodules.</li>
<li><code>FSIDrivers.jl</code>: module with a list of user-defined drivers. Each driver must implement the <code>execute</code> function with the corresponding problem name (<code>&lt;driverName&gt;</code>).
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function execute(problem::Problem{:&lt;driverName&gt;}; kwargs...)
  # user-defined driver
end
"><pre><span class="pl-k">function</span> <span class="pl-en">execute</span>(problem<span class="pl-k">::</span><span class="pl-c1">Problem{:&lt;driverName&gt;}</span>; kwargs<span class="pl-k">...</span>)
  <span class="pl-c"><span class="pl-c">#</span> user-defined driver</span>
<span class="pl-k">end</span></pre></div>
</li>
<li><code>WeakForms.jl</code>: module with the definition of the weak forms for all required residuals and Jacobians appearing in the FSI formulation.</li>
</ul>
<p>Please, follow the <a href="https://github.com/gridap/Gridap.jl/blob/master/CONTRIBUTING.md">Gridap contributing guides</a> when developing new features in the repository.</p>
<h2><a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to cite</h2>
<p>If you have used these drivers in a scientific publication, please cite Gridap library and the stabilization method as follows:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@software{gridap_project,
  author       = {Francesc Verdugo and
                  Santiago Badia and
                  VÃ­ctor Sande and
                  Alberto F. Martin and
                  Oriol ColomÃ©s and
                  JesÃºs Bonilla},
  title        = {Gridap.jl},
  year         = 2020,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.3934468},
  url          = {https://doi.org/10.5281/zenodo.3934468}
}
"><pre><code>@software{gridap_project,
  author       = {Francesc Verdugo and
                  Santiago Badia and
                  VÃ­ctor Sande and
                  Alberto F. Martin and
                  Oriol ColomÃ©s and
                  JesÃºs Bonilla},
  title        = {Gridap.jl},
  year         = 2020,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.3934468},
  url          = {https://doi.org/10.5281/zenodo.3934468}
}
</code></pre></div>
</article></div>