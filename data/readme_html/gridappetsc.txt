<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gridappetsc" class="anchor" aria-hidden="true" href="#gridappetsc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GridapPETSc</h1>
<p><a href="https://gridap.github.io/GridapPETSc.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://gridap.github.io/GridapPETSc.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/gridap/GridapPETSc.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4e2f4e373638d2e3dfd731ac2a31e9e69e001799/68747470733a2f2f7472617669732d63692e636f6d2f6772696461702f47726964617050455453632e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/gridap/GridapPETSc.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/gridap/GridapPETSc.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/05edd785314c494122fed8bf1e3aaeb81aa97515/68747470733a2f2f636f6465636f762e696f2f67682f6772696461702f47726964617050455453632e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/gridap/GridapPETSc.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="https://github.com/gridap/Gridap.jl">Gridap</a> (Grid-based approximation of partial differential equations in Julia) plugin to use PETSC (<a href="https://www.mcs.anl.gov/petsc/" rel="nofollow">Portable, Extensible Toolkit for Scientific Computation</a>).</p>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> MPI
<span class="pl-k">using</span> Gridap
<span class="pl-k">using</span> GridapPETSC

MPI<span class="pl-k">.</span><span class="pl-c1">Init</span>()
GridapPETSc<span class="pl-k">.</span><span class="pl-c1">Init</span>()

A <span class="pl-k">=</span> <span class="pl-c1">sparse</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>],[<span class="pl-c1">1.0</span>,<span class="pl-c1">2.0</span>,<span class="pl-c1">3.0</span>,<span class="pl-c1">4.0</span>,<span class="pl-c1">5.0</span>])
b <span class="pl-k">=</span> <span class="pl-c1">ones</span>(A<span class="pl-k">.</span>n)
x <span class="pl-k">=</span> <span class="pl-c1">similar</span>(b)
ps <span class="pl-k">=</span> <span class="pl-c1">PETScSolver</span>()
ss <span class="pl-k">=</span> <span class="pl-c1">symbolic_setup</span>(ps, A)
ns <span class="pl-k">=</span> <span class="pl-c1">numerical_setup</span>(ss, A)
<span class="pl-c1">solve!</span>(x, ns, b)

GridapPETSc<span class="pl-k">.</span><span class="pl-c1">Finalize</span>()
MPI<span class="pl-k">.</span><span class="pl-c1">Finalize</span>()</pre></div>
<h2><a id="user-content-usage-in-a-finite-element-computation" class="anchor" aria-hidden="true" href="#usage-in-a-finite-element-computation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage in a Finite Element computation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Gridap
<span class="pl-k">using</span> GridapPETSc

MPI<span class="pl-k">.</span><span class="pl-c1">Init</span>()
GridapPETSc<span class="pl-k">.</span><span class="pl-c1">Init</span>()

<span class="pl-c"><span class="pl-c">#</span> Define the FE problem</span>
<span class="pl-c"><span class="pl-c">#</span> -Δu = x*y in (0,1)^3, u = 0 on the boundary.</span>

model <span class="pl-k">=</span> <span class="pl-c1">CartesianDiscreteModel</span>((<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>), (<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">10</span>))

V <span class="pl-k">=</span> <span class="pl-c1">TestFESpace</span>(reffe<span class="pl-k">=</span><span class="pl-c1">:Lagrangian</span>, order<span class="pl-k">=</span><span class="pl-c1">1</span>, valuetype<span class="pl-k">=</span>Float64,
  conformity<span class="pl-k">=</span><span class="pl-c1">:H1</span>, model<span class="pl-k">=</span>model, dirichlet_tags<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>boundary<span class="pl-pds">"</span></span>)

U <span class="pl-k">=</span> <span class="pl-c1">TrialFESpace</span>(V)

trian <span class="pl-k">=</span> <span class="pl-c1">get_triangulation</span>(model)
quad <span class="pl-k">=</span> <span class="pl-c1">CellQuadrature</span>(trian,<span class="pl-c1">2</span>)

t_Ω <span class="pl-k">=</span> <span class="pl-c1">AffineFETerm</span>(
  (u,v) <span class="pl-k">-&gt;</span> <span class="pl-c1">inner</span>(<span class="pl-c1">∇</span>(v),<span class="pl-c1">∇</span>(u)),
  (v) <span class="pl-k">-&gt;</span> <span class="pl-c1">inner</span>(v, (x) <span class="pl-k">-&gt;</span> x[<span class="pl-c1">1</span>]<span class="pl-k">*</span>x[<span class="pl-c1">2</span>] ),
  trian, quad)

op <span class="pl-k">=</span> <span class="pl-c1">AffineFEOperator</span>(SparseMatrixCSR{<span class="pl-c1">0</span>,PetscReal,PetscInt},U,V,t_Ω)

ls <span class="pl-k">=</span> <span class="pl-c1">PETScSolver</span>()
solver <span class="pl-k">=</span> <span class="pl-c1">LinearFESolver</span>(ls)

uh <span class="pl-k">=</span> <span class="pl-c1">solve</span>(solver,op)

GridapPETSc<span class="pl-k">.</span><span class="pl-c1">Finalize</span>()
MPI<span class="pl-k">.</span><span class="pl-c1">Finalize</span>()</pre></div>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><strong>GridPETSc</strong> itself is installed when you add and use it into another project.</p>
<p>Please, ensure that your system fulfill the requirements.</p>
<p>To include into your project form Julia REPL, use the following commands:</p>
<pre><code>pkg&gt; add GridapPETSc
julia&gt; using GridapPETSc
</code></pre>
<p>If, for any reason, you need to manually build the project, write down the following commands in Julia REPL:</p>
<pre><code>pkg&gt; add GridapPETSc
pkg&gt; build GridPETSc
julia&gt; using GridapPETSc
</code></pre>
<h3><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h3>
<p><code>GridapPETSc</code> julia package requires <code>PETSC</code> library (<a href="https://www.mcs.anl.gov/petsc/" rel="nofollow">Portable, Extensible Toolkit for Scientific Computation</a>) and <code>OPENMPI</code> to work correctly. <code>PETSc</code> library can be manually installed in any path on your local machine. In order to succesfull describe your custom installation to be located by <code>GridapPETSc</code>, you must export <code>PETSC_DIR</code> and <code>PETSC_ARCH</code> environment variables. If this environment variables are not available, <code>GridapPETSc</code> will try to find the library in the usual linux user library directory (<code>/usr/lib</code>).</p>
<p><code>PETSC_DIR</code> and <code>PETSC_ARCH</code> are a couple of variables that control the configuration and build process of PETSc:</p>
<ul>
<li><code>PETSC_DIR</code>: this variable should point to the location of the PETSc installation that is used. Multiple PETSc versions can coexist on the same file-system. By changing <code>PETSC_DIR</code> value, one can switch between these installed versions of PETSc.</li>
<li><code>PETSC_ARCH</code>: this variable gives a name to a configuration/build. Configure uses this value to stores the generated config makefiles in <code>${PETSC_DIR}/${PETSC_ARCH}</code>. Make uses this value to determine this location of these makefiles which intern help in locating the correct include and library files.</li>
</ul>
<p>Thus one can install multiple variants of PETSc libraries - by providing different <code>PETSC_ARCH</code> values to each configure build. Then one can switch between using these variants of libraries from make by switching the <code>PETSC_ARCH</code> value used.</p>
<p>If configure doesn't find a <code>PETSC_ARCH</code> value (either in env variable or command line option), it automatically generates a default value and uses it. Also - if make doesn't find a <code>PETSC_ARCH</code> env variable - it defaults to the value used by last successful invocation of previous configure. <code>PETSC_ARCH</code> value can be an empty string too.</p>
<h4><a id="user-content-basic-petsc-installation-on-debian-based-systems" class="anchor" aria-hidden="true" href="#basic-petsc-installation-on-debian-based-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic PETSc installation on Debian-based systems</h4>
<p><code>PETSc</code> can be obtained from the default repositories of your Debian-based OS by means of <code>apt</code> tool.</p>
<p>Basic <code>PETSc</code> installation in order to use it from <code>GridapPETSc</code> julia package is as follows:</p>
<pre><code>$ sudo apt-get update
$ sudo apt-get openmpi petsc-dev
</code></pre>
<h2><a id="user-content-continuous-integration" class="anchor" aria-hidden="true" href="#continuous-integration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Continuous integration</h2>
<p>In order to take advantage of <code>GridapPETSc</code> julia package during continuous integration, you must ensure that the requirements are fullfilled in the CI environment.</p>
<p>If your CI process is based on <code>Travis-CI</code> you can add the following block at the beginning of your <code>.travis.yml</code> file:</p>
<pre><code>addons:
  apt:
    update: true
    packages:
    - openmpi-bin
    - petsc-dev
</code></pre>
<h2><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes</h2>
<p><code>GridapPETSc</code> default sparse matrix format is 0-based compressed sparse row. This types of sparse matrix can be described by <code>SparseMatrixCSR{0,PetscReal,PetscInt}</code> and <code>SymSparseMatrixCSR{0,PetscReal,PetscInt}</code>.These types of matrix are implemented in the <a href="https://gridap.github.io/SparseMatricesCSR.jl/stable/" rel="nofollow">SparseMatricesCSR</a>) julia package.</p>
</article></div>