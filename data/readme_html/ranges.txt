<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-ranges" class="anchor" aria-hidden="true" href="#ranges"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Ranges</h1>
<p><a href="https://travis-ci.org/JuliaArrays/Ranges.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/64e47fc337374dab4ec0ae14195a157f844a92d2/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614172726179732f52616e6765732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaArrays/Ranges.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/JuliaArrays/Ranges.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ffe189c411c7b007c72575bd969d6eb9f138f4ce/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614172726179732f52616e6765732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaArrays/Ranges.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package exists to support more general Ranges for Julia 0.5. This package is not necessary on later Julia versions due to <a href="https://github.com/JuliaLang/julia/pull/18777">https://github.com/JuliaLang/julia/pull/18777</a>.</p>
<h2><a id="user-content-linspace" class="anchor" aria-hidden="true" href="#linspace"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LinSpace</h2>
<p>Currently this package contains just one range, <code>LinSpace</code>. This is a different implementation than the one in Julia proper; its main advantage is that it supports any type supporting "linear interpolation,"</p>
<div class="highlight highlight-source-julia"><pre>x <span class="pl-k">=</span> (<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">*</span>a <span class="pl-k">+</span> t<span class="pl-k">*</span>b</pre></div>
<p>Here, <code>t</code> is a number between 0 and 1, and <code>a</code> and <code>b</code> are the
endpoints of the range.  While <code>a</code> and <code>b</code> might be numbers, this
supports any type for which <code>*</code> and <code>+</code> return an object of the same
type as <code>a</code> and <code>b</code>. While this formula can be evaluated for any <code>t</code>,
a <code>LinSpace</code> also encodes a length <code>n</code> and can be evaluated only for
indexes <code>i = 1, 2, ..., n</code> (for which <code>t = (i-1)/(n-1)</code>).</p>
<p>The interface is the same as for all other Ranges. Aside from indexing
and iteration, the main functions are <code>Ranges.linspace</code> (to construct
the object) and <code>step</code> (to extract the step between adjacent values).</p>
<p>Note that the LinSpace type is not equivalent to the version of LinSpace present in Julia 0.6.</p>
</article></div>