<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-searchspacesjl" class="anchor" aria-hidden="true" href="#searchspacesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SearchSpaces.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a></p>
<p dir="auto">Just a simple Julia package to define search spaces for, perhaps, optimization.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Open Julia v1.7 and install using the command:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; ]add SearchSpaces"><pre class="notranslate"><code>julia&gt; ]add SearchSpaces
</code></pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;SearchSpaces&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SearchSpaces<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Please, visit the <a href="https://jmejia8.github.io/SearchSpaces.jl/stable/" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Assume the following three search spaces:</p>
<math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="da9c0ee4f089c8f3eafaa93f43d7a51b">$$\begin{matrix}
X = &amp;\{10, 20, \ldots, 50\}\\\
Y = &amp;\{\text{red},\ \text{green},\ \text{blue}\}\\\
Z = &amp;\{0, 0.1, 0.2, \ldots, 1\}
\end{matrix}$$</math-renderer>
<p dir="auto">Let us define a mixed space <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="da9c0ee4f089c8f3eafaa93f43d7a51b">$X \times Y \times Z$</math-renderer>. Here, we can proceed as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SearchSpaces

julia&gt; searchspace = MixedSpace(
                         :X =&gt; 10:10:50,
                         :Y =&gt; [:red, :green, :blue],
                         :Z =&gt; 0:0.1:1
                         );

julia&gt; cardinality(searchspace)
165

julia&gt; rand(searchspace)
Dict{Symbol, Any} with 3 entries:
  :Z =&gt; 0.1
  :X =&gt; 50
  :Y =&gt; :green

julia&gt; collect(Grid(searchspace))
165-element Vector{Any}:
 Dict{Symbol, Any}(:Z =&gt; 0.0, :X =&gt; 10, :Y =&gt; :red)
 Dict{Symbol, Any}(:Z =&gt; 0.1, :X =&gt; 10, :Y =&gt; :red)
 Dict{Symbol, Any}(:Z =&gt; 0.2, :X =&gt; 10, :Y =&gt; :red)
 ⋮
 Dict{Symbol, Any}(:Z =&gt; 0.8, :X =&gt; 50, :Y =&gt; :blue)
 Dict{Symbol, Any}(:Z =&gt; 0.9, :X =&gt; 50, :Y =&gt; :blue)
 Dict{Symbol, Any}(:Z =&gt; 1.0, :X =&gt; 50, :Y =&gt; :blue)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SearchSpaces

julia<span class="pl-k">&gt;</span> searchspace <span class="pl-k">=</span> <span class="pl-c1">MixedSpace</span>(
                         <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">50</span>,
                         <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">:red</span>, <span class="pl-c1">:green</span>, <span class="pl-c1">:blue</span>],
                         <span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">1</span>
                         );

julia<span class="pl-k">&gt;</span> <span class="pl-c1">cardinality</span>(searchspace)
<span class="pl-c1">165</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rand</span>(searchspace)
Dict{Symbol, Any} with <span class="pl-c1">3</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.1</span>
  <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">50</span>
  <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:green</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(<span class="pl-c1">Grid</span>(searchspace))
<span class="pl-c1">165</span><span class="pl-k">-</span>element Vector{Any}<span class="pl-k">:</span>
 <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>, <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">10</span>, <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:red</span>)
 <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.1</span>, <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">10</span>, <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:red</span>)
 <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.2</span>, <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">10</span>, <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:red</span>)
 ⋮
 <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.8</span>, <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">50</span>, <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:blue</span>)
 <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.9</span>, <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">50</span>, <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:blue</span>)
 <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:Z</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span>, <span class="pl-c1">:X</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">50</span>, <span class="pl-c1">:Y</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:blue</span>)</pre></div>
<p dir="auto">See <a href="https://jmejia8.github.io/SearchSpaces.jl/stable/examples/" rel="nofollow">here</a> for more examples.</p>
<h2 dir="auto">
<a id="user-content-search-spaces" class="anchor" aria-hidden="true" href="#search-spaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Search Spaces</h2>
<p dir="auto">Implemented search spaces:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; subtypes(SearchSpaces.AtomicSearchSpace)
4-element Vector{Any}:
 BitArraySpace
 BoxConstrainedSpace
 CombinationSpace
 PermutationSpace"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">subtypes</span>(SearchSpaces<span class="pl-k">.</span>AtomicSearchSpace)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Vector{Any}<span class="pl-k">:</span>
 BitArraySpace
 BoxConstrainedSpace
 CombinationSpace
 PermutationSpace</pre></div>
<p dir="auto">And more can be found <a href="https://jmejia8.github.io/SearchSpaces.jl/dev/searchspaces/" rel="nofollow">here</a>.</p>
</article></div>