<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-distquads" class="anchor" aria-hidden="true" href="#distquads"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DistQuads</h1>
<p><a href="https://travis-ci.org/pkofod/DistQuads.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/81d066da73750108d73aa32313b111bf30f1bb7a5d9ac91eff9ac12eff8c4782/68747470733a2f2f7472617669732d63692e6f72672f706b6f666f642f4469737451756164732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pkofod/DistQuads.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/pkofod/DistQuads.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a10e9e87e54a296683e626ad1cdaedf0b4902a94eaf7576157edf4d58d03340a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f706b6f666f642f4469737451756164732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/pkofod/DistQuads.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/pkofod/DistQuads.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/cf70ab9ee0efa8697fa76c53c50f6b8cb3404b3a2443dbaddca8dd606e175a73/687474703a2f2f636f6465636f762e696f2f6769746875622f706b6f666f642f4469737451756164732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/pkofod/DistQuads.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-what" class="anchor" aria-hidden="true" href="#what"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What</h1>
<p>Evaluating the expected value of functions of random variables requires numerical
integration. There are many ways to do this, but a very popular approach is to
transform the integral evaluation into a weighed sum of function evaluations at
N values, often called nodes, useing so-called Gaussian quadrature.</p>
<p>This package builds on top of the Distributions.jl package, and it provides a simple
interface to generate Guassian quadrature weights and nodes for numerical integration
as explained above.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Distributions, DistQuads

julia&gt; bd = Beta(1.4, 5.4)
Distributions.Beta{Float64}(α=1.4, β=5.4)

julia&gt; dq = DistQuad(bd)
DistQuads.DistQuad([0.00185197,0.00773162,0.017613,0.0314164,0.0490303,0.0703119,0.095089,0.123161,0.1543,0.188255  …  0.740476,0.779219,0.815718,0.849678,0.880826,0.90891,0.933707,0.955022,0.972705,0.986694],[0.00387997,0.013685,0.0273551,0.0429761,0.0586422,0.0726105,0.0834732,0.0902888,0.0926473,0.0906605  …  0.00117028,0.000555584,0.000239261,9.17104e-5,3.04716e-5,8.44413e-6,1.83878e-6,2.84652e-7,2.58301e-8,8.47448e-10],Distributions.Beta{Float64}(α=1.4, β=5.4))

julia&gt; mean(dq)
0.20588235294117635

julia&gt; mean(bd)
0.20588235294117643

julia&gt; var(dq)
0.020960873036997594

julia&gt; var(bd)
0.020960873036997597

"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Distributions, DistQuads

julia<span class="pl-k">&gt;</span> bd <span class="pl-k">=</span> <span class="pl-c1">Beta</span>(<span class="pl-c1">1.4</span>, <span class="pl-c1">5.4</span>)
Distributions<span class="pl-k">.</span><span class="pl-c1">Beta</span><span class="pl-c1">{Float64}</span>(α<span class="pl-k">=</span><span class="pl-c1">1.4</span>, β<span class="pl-k">=</span><span class="pl-c1">5.4</span>)

julia<span class="pl-k">&gt;</span> dq <span class="pl-k">=</span> <span class="pl-c1">DistQuad</span>(bd)
DistQuads<span class="pl-k">.</span><span class="pl-c1">DistQuad</span>([<span class="pl-c1">0.00185197</span>,<span class="pl-c1">0.00773162</span>,<span class="pl-c1">0.017613</span>,<span class="pl-c1">0.0314164</span>,<span class="pl-c1">0.0490303</span>,<span class="pl-c1">0.0703119</span>,<span class="pl-c1">0.095089</span>,<span class="pl-c1">0.123161</span>,<span class="pl-c1">0.1543</span>,<span class="pl-c1">0.188255</span>  …  <span class="pl-c1">0.740476</span>,<span class="pl-c1">0.779219</span>,<span class="pl-c1">0.815718</span>,<span class="pl-c1">0.849678</span>,<span class="pl-c1">0.880826</span>,<span class="pl-c1">0.90891</span>,<span class="pl-c1">0.933707</span>,<span class="pl-c1">0.955022</span>,<span class="pl-c1">0.972705</span>,<span class="pl-c1">0.986694</span>],[<span class="pl-c1">0.00387997</span>,<span class="pl-c1">0.013685</span>,<span class="pl-c1">0.0273551</span>,<span class="pl-c1">0.0429761</span>,<span class="pl-c1">0.0586422</span>,<span class="pl-c1">0.0726105</span>,<span class="pl-c1">0.0834732</span>,<span class="pl-c1">0.0902888</span>,<span class="pl-c1">0.0926473</span>,<span class="pl-c1">0.0906605</span>  …  <span class="pl-c1">0.00117028</span>,<span class="pl-c1">0.000555584</span>,<span class="pl-c1">0.000239261</span>,<span class="pl-c1">9.17104e-5</span>,<span class="pl-c1">3.04716e-5</span>,<span class="pl-c1">8.44413e-6</span>,<span class="pl-c1">1.83878e-6</span>,<span class="pl-c1">2.84652e-7</span>,<span class="pl-c1">2.58301e-8</span>,<span class="pl-c1">8.47448e-10</span>],Distributions<span class="pl-k">.</span><span class="pl-c1">Beta</span><span class="pl-c1">{Float64}</span>(α<span class="pl-k">=</span><span class="pl-c1">1.4</span>, β<span class="pl-k">=</span><span class="pl-c1">5.4</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mean</span>(dq)
<span class="pl-c1">0.20588235294117635</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mean</span>(bd)
<span class="pl-c1">0.20588235294117643</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">var</span>(dq)
<span class="pl-c1">0.020960873036997594</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">var</span>(bd)
<span class="pl-c1">0.020960873036997597</span>
</pre></div>
</article></div>