<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-patchmixturekriging" class="anchor" aria-hidden="true" href="#patchmixturekriging"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PatchMixtureKriging</h1>
<p dir="auto"><a href="https://github.com/RCCWang/PatchMixtureKriging.jl/actions"><img src="https://github.com/RCCWang/PatchMixtureKriging.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/RCCWang/PatchMixtureKriging.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/325740b4ea8f5ee75377d20abe68018aa844814fc7df7c820145fd43d2c7fe7a/68747470733a2f2f636f6465636f762e696f2f67682f52434357616e672f50617463684d6978747572654b726967696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/RCCWang/PatchMixtureKriging.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package is under construction.</p>
<p dir="auto">To install, start Julia REPL, press <code>]</code>, and run the command <code>add PatchMixtureKriging</code>. You might need a few more packages to run the scripts in the example folder; see the first few lines to see which packages are required for each file.</p>
<p dir="auto">Example folder:
<code>IBB1D.jl</code> is a 1D regression example using the iterated Brownian bridge kernel.</p>
<p dir="auto">In the example folder, mixGP.jl: The binary splitting tree partitioning (BSP) scheme from Park et. al's "Patchwork Kriging for Large-scale Gaussian Process Regression" (<a href="https://jmlr.org/papers/v19/17-042.html" rel="nofollow">https://jmlr.org/papers/v19/17-042.html</a>) is used to subdivide the input domain into smaller overlapping regions; see <code>patchGP_partitioning.jl</code> for a visualization for a 2D domain.</p>
<p dir="auto"><code> mixGP.jl</code>: using the BSP, a separate local Gaussian process regression is run for each region. The final solution is a input-varying convex combination (i.e. the weights depend on the input) of the local regression results. A write-up of the details is coming soon.</p>
<h3 dir="auto"><a id="user-content-future-works" class="anchor" aria-hidden="true" href="#future-works"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Future works</h3>
<ul dir="auto">
<li>Integrate or auto-convert datat types with TemporalGPs.jl and AbstractGP.jl and KernelFunctions.jl</li>
</ul>
</article></div>