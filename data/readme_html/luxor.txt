<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/figures/luxor-social-media-preview.png"><img src="docs/src/assets/figures/luxor-social-media-preview.png" alt="luxor splash image" style="max-width:100%;"></a></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="http://juliagraphics.github.io/Luxor.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://github.com/cormullion/Luxor.jl/actions?query=workflow%3ACI"><img src="https://github.com/cormullion/Luxor.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaGraphics/Luxor.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b18a6b544f65b54d889b51ee53f885db2245394f307d6aee03f0e1ede1222b0a/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696147726170686963732f4c75786f722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaGraphics/Luxor.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="http://juliagraphics.github.io/Luxor.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/84ecf884df249ee521ee7209522f60b1e65a6ff194839b97505560d94a4b1a31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d646576656c6f706d656e742d626c7565" alt="" data-canonical-src="https://img.shields.io/badge/docs-development-blue" style="max-width:100%;"></a></td>
<td align="center"><a href="https://ci.appveyor.com/project/cormullion/luxor-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/ae494073fba23f1e7ae6eca2e6d3f7b36cd1238d72a74f2d94d130c57c6cf83f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3670713976333066616d636f653364643f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/6pq9v30famcoe3dd?svg=true" style="max-width:100%;"></a></td>
<td align="center"></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-luxor" class="anchor" aria-hidden="true" href="#luxor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Luxor</h2>
<p>Luxor is a Julia package for drawing simple 2D vector graphics. Think of it as a high-level easier to use interface to <a href="https://github.com/JuliaLang/Cairo.jl">Cairo.jl</a>, with shorter names, fewer underscores, default contexts, and simplified functions. In Luxor, the emphasis is on simplicity and ease of use.</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/figures/luxorgallery.png"><img src="docs/src/assets/figures/luxorgallery.png" alt="&quot;luxor gallery&quot;" style="max-width:100%;"></a></p>
<p>Luxor is thoroughly procedural and static: your code issues a sequence of simple graphics 'commands' until you've completed a drawing, then the results are saved into a PDF, PNG, SVG, or EPS file.</p>
<p>A short tutorial can be found in the documentation, which you find by clicking on the badges above:</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/figures/where-is-the-documentation.png"><img src="docs/src/assets/figures/where-is-the-documentation.png" alt="where is the documentation?" style="max-width:100%;"></a></p>
<p>"stable" describes the current release; "development" contains changes that are still in the master branch and may change before the next release.</p>
<p>There are some Luxor-related videos on <a href="https://www.youtube.com/channel/UCfd52kTA5JpzOEItSqXLQxg" rel="nofollow">YouTube</a>, and some Luxor-related blog posts at <a href="https://cormullion.github.io/" rel="nofollow">cormullion.github.io/</a>.</p>
<p>Luxor is designed primarily for drawing static pictures. If you want to build animations, use <a href="https://github.com/Wikunia/Javis.jl/issues">Javis.jl</a>.</p>
<p>Luxor isn't interactive: for building interactivity, look at <a href="https://github.com/fonsp/Pluto.jl">Pluto.jl</a> and <a href="https://github.com/JuliaPlots/Makie.jl">Makie</a>.</p>
<h2><a id="user-content-how-can-you-contribute" class="anchor" aria-hidden="true" href="#how-can-you-contribute"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How can you contribute?</h2>
<p>If you <em>know any geometry</em> you probably know more than me, so there are plenty of improvements to algorithms waiting to be made. There are some <em>TODO</em> comments sprinkled through the code, but plenty more opportunities for improvement.</p>
<p><em>Update the code</em>, most of which was written for Julia versions 0.2, v0.3 and 0.4 (remember when broadcasting wasn't a thing?) so there are probably many areas where the code could take more advantage of version 1.</p>
<p>There can always be <em>more tests</em>, as the present tests are mainly visual, showing that something works, but there should be much more testing of things that shouldn't work - inappropriate input, overlapping polygons, coincident or collinear points, anticlockwise polygons, etc.</p>
<p>More <em>systematic error-handling</em> particularly of geometry errors would be a good idea, rather than sprinkling <code>throw(error())</code>s around when things look wrong.</p>
</article></div>