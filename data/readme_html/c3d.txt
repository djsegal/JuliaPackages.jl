<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-c3djl" class="anchor" aria-hidden="true" href="#c3djl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>C3D.jl</h1>
<p dir="auto"><a href="https://juliahub.com/ui/Packages/C3D/Y0cAa" rel="nofollow"><img src="https://camo.githubusercontent.com/eac9f807e4308a42567432d1b1507598a2ec0dd0adf3af189459f7757dd4b1c3/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4333442f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/C3D/version.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/C3D/Y0cAa" rel="nofollow"><img src="https://camo.githubusercontent.com/c2cd8b515f06e57ab316f66840c305bfe4223cfad85adb6d63e7c57e7ff8bfb1/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4333442f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/C3D/pkgeval.svg" style="max-width: 100%;"></a>
<a href="https://github.com/halleysfifthinc/C3D.jl/actions/workflows/CI.yml"><img src="https://github.com/halleysfifthinc/C3D.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/halleysfifthinc/C3D.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7dab1b0c270e79d38f9aea935bdfda755542485ad34597367a373ae1b6f284d9/68747470733a2f2f636f6465636f762e696f2f67682f68616c6c6579736669667468696e632f4333442e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/halleysfifthinc/C3D.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/2261082c77808ea734741b12e535d02d23c4101f6b8dfec807f4ddc5ef2eeec0/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active – The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a></p>
<p dir="auto">C3D is a common file format for motion capture and other biomechanics related measurement systems (force plate data, EMG, etc). The goal of this package is to completely implement the <a href="https://www.c3d.org" rel="nofollow">C3D file spec</a>, and be compatible with files from major C3D producing programs (Vicon Nexus, etc.) where they might differ from or extend the C3D file spec.</p>
<p dir="auto">Current test data is gathered from sample data found on the <a href="https://www.c3d.org/sampledata.html" rel="nofollow">C3D website</a>.
Pull requests welcome! Please open an issue if you have a file that is not being read correctly.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-reading-data" class="anchor" aria-hidden="true" href="#reading-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading data</h3>
<p dir="auto">Marker and analog data are accessed through the <code>point</code> and <code>analog</code> fields. Note that all data is converted to Float32 upon reading, regardless of the original type (eg DEC types).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; # The artifacts with the test data can only be used from the `C3D.jl` directory when `LazyArtifacts` has been loaded

julia&gt; pc_real = readc3d(artifact&quot;sample01/Eb015pr.c3d&quot;)
C3DFile(&quot;~/.julia/artifacts/318c299a26ba07c015fa86768512b677fbb7e64c/Eb015pr.c3d&quot;)
  0:9+0 frames
  26 points @ 50 Hz; 16 analog channels @ 200 Hz

  julia&gt; pc_real.point[&quot;LTH1&quot;]
450×3 Array{Float32,2}:
 0.0         0.0     0.0
 0.0         0.0     0.0
 0.0         0.0     0.0
 ⋮
 1.66667  2152.67  702.917
 3.58333  2159.0   702.833
 5.0      2168.08  702.25

julia&gt; pc_real.analog[&quot;FZ1&quot;]
1800-element Array{Float32,1}:
 -20.832
 -21.576
 -20.832
   ⋮
 -20.088001
 -21.576
 -22.32"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> The artifacts with the test data can only be used from the `C3D.jl` directory when `LazyArtifacts` has been loaded</span>

julia<span class="pl-k">&gt;</span> pc_real <span class="pl-k">=</span> <span class="pl-c1">readc3d</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">artifact</span>"</span>sample01/Eb015pr.c3d<span class="pl-pds">"</span></span>)
<span class="pl-c1">C3DFile</span>(<span class="pl-s"><span class="pl-pds">"</span>~/.julia/artifacts/318c299a26ba07c015fa86768512b677fbb7e64c/Eb015pr.c3d<span class="pl-pds">"</span></span>)
  <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">9</span><span class="pl-k">+</span><span class="pl-c1">0</span> frames
  <span class="pl-c1">26</span> points @ <span class="pl-c1">50</span> Hz; <span class="pl-c1">16</span> analog channels @ <span class="pl-c1">200</span> Hz

  julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>point[<span class="pl-s"><span class="pl-pds">"</span>LTH1<span class="pl-pds">"</span></span>]
<span class="pl-c1">450</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Float32,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     <span class="pl-c1">0.0</span>
 ⋮
 <span class="pl-c1">1.66667</span>  <span class="pl-c1">2152.67</span>  <span class="pl-c1">702.917</span>
 <span class="pl-c1">3.58333</span>  <span class="pl-c1">2159.0</span>   <span class="pl-c1">702.833</span>
 <span class="pl-c1">5.0</span>      <span class="pl-c1">2168.08</span>  <span class="pl-c1">702.25</span>

julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>analog[<span class="pl-s"><span class="pl-pds">"</span>FZ1<span class="pl-pds">"</span></span>]
<span class="pl-c1">1800</span><span class="pl-k">-</span>element Array{Float32,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">20.832</span>
 <span class="pl-k">-</span><span class="pl-c1">21.576</span>
 <span class="pl-k">-</span><span class="pl-c1">20.832</span>
   ⋮
 <span class="pl-k">-</span><span class="pl-c1">20.088001</span>
 <span class="pl-k">-</span><span class="pl-c1">21.576</span>
 <span class="pl-k">-</span><span class="pl-c1">22.32</span></pre></div>
<h4 dir="auto"><a id="user-content-point-residuals-invalid-and-calculated-points" class="anchor" aria-hidden="true" href="#point-residuals-invalid-and-calculated-points"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Point residuals, invalid and calculated points</h4>
<p dir="auto">According to the C3D format documentation, invalid data points are signified by setting the residual word to <code>-1.0</code>. This convention is respected in C3D.jl by changing the residual and coordinates of invalid points/frames to <code>missing</code>. If your C3D files do not respect this convention, or if you wish to ignore this for some other reason, this behavior can be disabled by setting keyword arg <code>missingpoints=false</code> in the <code>readc3d</code> function. Convention is to signify calculated points (e.g. filtered, interpolated, etc) by setting the residual word to <code>0.0</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; bball = readc3d(artifact&quot;sample16/basketball.c3d&quot;)
C3DFile(&quot;~/.julia/artifacts/042cc43a45ace35e97473c6cf0d08e25f1c73fcb/basketball.c3d&quot;)
  0:1+9 frames
  22 points @ 25 Hz

julia&gt; bball.point[&quot;2003&quot;]
34×3 Array{Union{Missing, Float32},2}:
 missing  missing  missing
 missing  missing  missing
 missing  missing  missing
  ⋮

julia&gt; bball = readc3d(&quot;data/sample16/basketball.c3d&quot;; missingpoints=false)
C3DFile(&quot;~/.julia/artifacts/042cc43a45ace35e97473c6cf0d08e25f1c73fcb/basketball.c3d&quot;)
  0:1+9 frames
  22 points @ 25 Hz

julia&gt; bball.point[&quot;2003&quot;]
34×3 Array{Union{Missing, Float32},2}:
  0.69115      0.987054    1.53009
  0.656669     1.00666     1.5854
  0.615803     1.02481     1.60467
   ⋮"><pre>julia<span class="pl-k">&gt;</span> bball <span class="pl-k">=</span> <span class="pl-c1">readc3d</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">artifact</span>"</span>sample16/basketball.c3d<span class="pl-pds">"</span></span>)
<span class="pl-c1">C3DFile</span>(<span class="pl-s"><span class="pl-pds">"</span>~/.julia/artifacts/042cc43a45ace35e97473c6cf0d08e25f1c73fcb/basketball.c3d<span class="pl-pds">"</span></span>)
  <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">9</span> frames
  <span class="pl-c1">22</span> points @ <span class="pl-c1">25</span> Hz

julia<span class="pl-k">&gt;</span> bball<span class="pl-k">.</span>point[<span class="pl-s"><span class="pl-pds">"</span>2003<span class="pl-pds">"</span></span>]
<span class="pl-c1">34</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Union{Missing, Float32},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>
 <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>
 <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>
  ⋮

julia<span class="pl-k">&gt;</span> bball <span class="pl-k">=</span> <span class="pl-c1">readc3d</span>(<span class="pl-s"><span class="pl-pds">"</span>data/sample16/basketball.c3d<span class="pl-pds">"</span></span>; missingpoints<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">C3DFile</span>(<span class="pl-s"><span class="pl-pds">"</span>~/.julia/artifacts/042cc43a45ace35e97473c6cf0d08e25f1c73fcb/basketball.c3d<span class="pl-pds">"</span></span>)
  <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">9</span> frames
  <span class="pl-c1">22</span> points @ <span class="pl-c1">25</span> Hz

julia<span class="pl-k">&gt;</span> bball<span class="pl-k">.</span>point[<span class="pl-s"><span class="pl-pds">"</span>2003<span class="pl-pds">"</span></span>]
<span class="pl-c1">34</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Union{Missing, Float32},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
  <span class="pl-c1">0.69115</span>      <span class="pl-c1">0.987054</span>    <span class="pl-c1">1.53009</span>
  <span class="pl-c1">0.656669</span>     <span class="pl-c1">1.00666</span>     <span class="pl-c1">1.5854</span>
  <span class="pl-c1">0.615803</span>     <span class="pl-c1">1.02481</span>     <span class="pl-c1">1.60467</span>
   ⋮</pre></div>
<p dir="auto">Point residuals can be accessed using the <code>residual</code> field which is indexed by marker label.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; pc_real.residual[&quot;RFT2&quot;]
450-element Array{Union{Missing, Float32},1}:
 10.333334f0
 10.333334f0
  9.666667f0
  ⋮
  2.0f0
  2.0f0
  2.0f0"><pre>julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>residual[<span class="pl-s"><span class="pl-pds">"</span>RFT2<span class="pl-pds">"</span></span>]
<span class="pl-c1">450</span><span class="pl-k">-</span>element Array{Union{Missing, Float32},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">10.333334f0</span>
 <span class="pl-c1">10.333334f0</span>
  <span class="pl-c1">9.666667f0</span>
  ⋮
  <span class="pl-c1">2.0f0</span>
  <span class="pl-c1">2.0f0</span>
  <span class="pl-c1">2.0f0</span></pre></div>
<h3 dir="auto"><a id="user-content-accessing-c3d-parameters" class="anchor" aria-hidden="true" href="#accessing-c3d-parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Accessing C3D parameters</h3>
<p dir="auto">The parameters can be accessed through the <code>groups</code> field. Specific groups are indexed as Symbols.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; pc_real.groups
Dict{Symbol,C3D.Group} with 5 entries:
  :POINT          =&gt; Symbol[:DESCRIPTIONS, :RATE, :DATA_START, :FRAMES, :USED, :UNITS, :Y_SCREEN, :LABELS, :X_SCREEN, :SCALE]
  :ANALOG         =&gt; Symbol[:DESCRIPTIONS, :RATE, :GEN_SCALE, :OFFSET, :USED, :UNITS, :LABELS, :SCALE]
  :FORCE_PLATFORM =&gt; Symbol[:TYPE, :ORIGIN, :ZERO, :TRANSLATION, :CORNERS, :USED, :ROTATION, :CHANNEL]
  :SUBJECT        =&gt; Symbol[:WEIGHT, :NUMBER, :HEIGHT, :DATE_OF_BIRTH, :GENDER, :PROJECT, :TARGET_RADIUS, :NAME]
  :FPLOC          =&gt; Symbol[:INT, :OBJ, :MAX]

julia&gt; pc_real.groups[:POINT]
Symbol[:DESCRIPTIONS, :RATE, :DATA_START, :FRAMES, :USED, :UNITS, :Y_SCREEN, :LABELS, :X_SCREEN, :SCALE]"><pre>julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>groups
Dict{Symbol,C3D<span class="pl-k">.</span>Group} with <span class="pl-c1">5</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:POINT</span>          <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:DATA_START</span>, <span class="pl-c1">:FRAMES</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:Y_SCREEN</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:X_SCREEN</span>, <span class="pl-c1">:SCALE</span>]
  <span class="pl-c1">:ANALOG</span>         <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:GEN_SCALE</span>, <span class="pl-c1">:OFFSET</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:SCALE</span>]
  <span class="pl-c1">:FORCE_PLATFORM</span> <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:TYPE</span>, <span class="pl-c1">:ORIGIN</span>, <span class="pl-c1">:ZERO</span>, <span class="pl-c1">:TRANSLATION</span>, <span class="pl-c1">:CORNERS</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:ROTATION</span>, <span class="pl-c1">:CHANNEL</span>]
  <span class="pl-c1">:SUBJECT</span>        <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:WEIGHT</span>, <span class="pl-c1">:NUMBER</span>, <span class="pl-c1">:HEIGHT</span>, <span class="pl-c1">:DATE_OF_BIRTH</span>, <span class="pl-c1">:GENDER</span>, <span class="pl-c1">:PROJECT</span>, <span class="pl-c1">:TARGET_RADIUS</span>, <span class="pl-c1">:NAME</span>]
  <span class="pl-c1">:FPLOC</span>          <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:INT</span>, <span class="pl-c1">:OBJ</span>, <span class="pl-c1">:MAX</span>]

julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>groups[<span class="pl-c1">:POINT</span>]
Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:DATA_START</span>, <span class="pl-c1">:FRAMES</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:Y_SCREEN</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:X_SCREEN</span>, <span class="pl-c1">:SCALE</span>]</pre></div>
<p dir="auto">Parameter values can be accessed like this:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; pc_real.groups[:POINT][:USED]
26

julia&gt; pc_real.groups[:POINT][:LABELS]
48-element Array{String,1}:
 &quot;RFT1&quot;
 &quot;RFT2&quot;
 &quot;RFT3&quot;
 ⋮
 &quot;&quot;
 &quot;&quot;
 &quot;&quot;

julia&gt; # Or, if you know the type (and you need the type-stability)

julia&gt; pc_real.groups[:POINT][Int, :USED]
26
"><pre>julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>groups[<span class="pl-c1">:POINT</span>][<span class="pl-c1">:USED</span>]
<span class="pl-c1">26</span>

julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>groups[<span class="pl-c1">:POINT</span>][<span class="pl-c1">:LABELS</span>]
<span class="pl-c1">48</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>RFT1<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>RFT2<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>RFT3<span class="pl-pds">"</span></span>
 ⋮
 <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Or, if you know the type (and you need the type-stability)</span>

julia<span class="pl-k">&gt;</span> pc_real<span class="pl-k">.</span>groups[<span class="pl-c1">:POINT</span>][Int, <span class="pl-c1">:USED</span>]
<span class="pl-c1">26</span>
</pre></div>
<h1 dir="auto"><a id="user-content-advanced-debugging" class="anchor" aria-hidden="true" href="#advanced-debugging"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Advanced: Debugging</h1>
<p dir="auto">There are two main steps to reading a C3D file: reading the parameters, and reading the point and/or analog data. In the event a file read fails, the stacktrace will show whether the error happened in <code>_readparams</code> or <code>readdata</code>. If the error occurred in <code>readdata</code>, try only reading the parameters, optionally setting the keyword argument <code>validate</code> to <code>false</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; pc_real = readc3d(&quot;data/sample01/Eb015pr.c3d&quot;; paramsonly=true)
Dict{Symbol,C3D.Group} with 5 entries:
  :POINT          =&gt; Symbol[:DESCRIPTIONS, :RATE, :DATA_START, :FRAMES, :USED, :UNITS, :Y_SCREEN, :LABELS, :X_SCREEN, :SCALE]
  :ANALOG         =&gt; Symbol[:DESCRIPTIONS, :RATE, :GEN_SCALE, :OFFSET, :USED, :UNITS, :LABELS, :SCALE]
  :FORCE_PLATFORM =&gt; Symbol[:TYPE, :ORIGIN, :ZERO, :TRANSLATION, :CORNERS, :USED, :ROTATION, :CHANNEL]
  :SUBJECT        =&gt; Symbol[:WEIGHT, :NUMBER, :HEIGHT, :DATE_OF_BIRTH, :GENDER, :PROJECT, :TARGET_RADIUS, :NAME]
  :FPLOC          =&gt; Symbol[:INT, :OBJ, :MAX]

julia&gt; pc_real = readc3d(&quot;data/sample01/Eb015pr.c3d&quot;; paramsonly=true, validate=false)
Dict{Symbol,C3D.Group} with 5 entries:
  :POINT          =&gt; Symbol[:DESCRIPTIONS, :RATE, :DATA_START, :FRAMES, :USED, :UNITS, :Y_SCREEN, :LABELS, :X_SCREEN, :SCALE]
  :ANALOG         =&gt; Symbol[:DESCRIPTIONS, :RATE, :GEN_SCALE, :OFFSET, :USED, :UNITS, :LABELS, :SCALE]
  :FORCE_PLATFORM =&gt; Symbol[:TYPE, :ORIGIN, :ZERO, :TRANSLATION, :CORNERS, :USED, :ROTATION, :CHANNEL]
  :SUBJECT        =&gt; Symbol[:WEIGHT, :NUMBER, :HEIGHT, :DATE_OF_BIRTH, :GENDER, :PROJECT, :TARGET_RADIUS, :NAME]
  :FPLOC          =&gt; Symbol[:INT, :OBJ, :MAX]"><pre>julia<span class="pl-k">&gt;</span> pc_real <span class="pl-k">=</span> <span class="pl-c1">readc3d</span>(<span class="pl-s"><span class="pl-pds">"</span>data/sample01/Eb015pr.c3d<span class="pl-pds">"</span></span>; paramsonly<span class="pl-k">=</span><span class="pl-c1">true</span>)
Dict{Symbol,C3D<span class="pl-k">.</span>Group} with <span class="pl-c1">5</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:POINT</span>          <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:DATA_START</span>, <span class="pl-c1">:FRAMES</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:Y_SCREEN</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:X_SCREEN</span>, <span class="pl-c1">:SCALE</span>]
  <span class="pl-c1">:ANALOG</span>         <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:GEN_SCALE</span>, <span class="pl-c1">:OFFSET</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:SCALE</span>]
  <span class="pl-c1">:FORCE_PLATFORM</span> <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:TYPE</span>, <span class="pl-c1">:ORIGIN</span>, <span class="pl-c1">:ZERO</span>, <span class="pl-c1">:TRANSLATION</span>, <span class="pl-c1">:CORNERS</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:ROTATION</span>, <span class="pl-c1">:CHANNEL</span>]
  <span class="pl-c1">:SUBJECT</span>        <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:WEIGHT</span>, <span class="pl-c1">:NUMBER</span>, <span class="pl-c1">:HEIGHT</span>, <span class="pl-c1">:DATE_OF_BIRTH</span>, <span class="pl-c1">:GENDER</span>, <span class="pl-c1">:PROJECT</span>, <span class="pl-c1">:TARGET_RADIUS</span>, <span class="pl-c1">:NAME</span>]
  <span class="pl-c1">:FPLOC</span>          <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:INT</span>, <span class="pl-c1">:OBJ</span>, <span class="pl-c1">:MAX</span>]

julia<span class="pl-k">&gt;</span> pc_real <span class="pl-k">=</span> <span class="pl-c1">readc3d</span>(<span class="pl-s"><span class="pl-pds">"</span>data/sample01/Eb015pr.c3d<span class="pl-pds">"</span></span>; paramsonly<span class="pl-k">=</span><span class="pl-c1">true</span>, validate<span class="pl-k">=</span><span class="pl-c1">false</span>)
Dict{Symbol,C3D<span class="pl-k">.</span>Group} with <span class="pl-c1">5</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:POINT</span>          <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:DATA_START</span>, <span class="pl-c1">:FRAMES</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:Y_SCREEN</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:X_SCREEN</span>, <span class="pl-c1">:SCALE</span>]
  <span class="pl-c1">:ANALOG</span>         <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:DESCRIPTIONS</span>, <span class="pl-c1">:RATE</span>, <span class="pl-c1">:GEN_SCALE</span>, <span class="pl-c1">:OFFSET</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:UNITS</span>, <span class="pl-c1">:LABELS</span>, <span class="pl-c1">:SCALE</span>]
  <span class="pl-c1">:FORCE_PLATFORM</span> <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:TYPE</span>, <span class="pl-c1">:ORIGIN</span>, <span class="pl-c1">:ZERO</span>, <span class="pl-c1">:TRANSLATION</span>, <span class="pl-c1">:CORNERS</span>, <span class="pl-c1">:USED</span>, <span class="pl-c1">:ROTATION</span>, <span class="pl-c1">:CHANNEL</span>]
  <span class="pl-c1">:SUBJECT</span>        <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:WEIGHT</span>, <span class="pl-c1">:NUMBER</span>, <span class="pl-c1">:HEIGHT</span>, <span class="pl-c1">:DATE_OF_BIRTH</span>, <span class="pl-c1">:GENDER</span>, <span class="pl-c1">:PROJECT</span>, <span class="pl-c1">:TARGET_RADIUS</span>, <span class="pl-c1">:NAME</span>]
  <span class="pl-c1">:FPLOC</span>          <span class="pl-k">=&gt;</span> Symbol[<span class="pl-c1">:INT</span>, <span class="pl-c1">:OBJ</span>, <span class="pl-c1">:MAX</span>]</pre></div>
<p dir="auto">If the error occurred in <code>readdata</code>, it is likely that there is an incorrect setting in one of the parameters. (If this is consistent among several files from the same vendor, open an issue and send an example file so I can fix whatever is causing the problem.)</p>
<p dir="auto">If the error occurred in <code>_readparams</code>, try starting julia with <code>$ JULIA_DEBUG=C3D julia</code>. This will enable debug messages that may help narrow down the parameter causing the problem.</p>
<p dir="auto">Please open an issue if you have a file that is being read incorrectly.</p>
<h2 dir="auto"><a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Roadmap</h2>
<p dir="auto">I plan to eventually add support for saving files that have been modified and for creating new files, but this is not a use case that I require currently or in the foreseeable future. If this is important to you, open an issue or submit a PR!</p>
</article></div>