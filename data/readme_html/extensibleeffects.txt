<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-extensibleeffects" class="anchor" aria-hidden="true" href="#extensibleeffects"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ExtensibleEffects</h1>
<p dir="auto"><a href="https://JuliaFunctional.github.io/ExtensibleEffects.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaFunctional.github.io/ExtensibleEffects.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaFunctional/ExtensibleEffects.jl/actions"><img src="https://github.com/JuliaFunctional/ExtensibleEffects.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaFunctional/ExtensibleEffects.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/431ea9451bc08d876cef28b312a7402a53e9dedc345c9c007bdb7cf73229682d/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4a756c696146756e6374696f6e616c2f457874656e7369626c65456666656374732e6a6c" alt="Coverage" data-canonical-src="https://img.shields.io/codecov/c/github/JuliaFunctional/ExtensibleEffects.jl" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides an implementation of Extensible Effects. We follow the approach presented in the paper <a href="http://okmij.org/ftp/Haskell/extensible/more.pdf" rel="nofollow">Freer Monads, More Extensible Effects</a> which already has an <a href="https://hackage.haskell.org/package/freer-effects" rel="nofollow">Haskell implementation</a> as well as a <a href="https://github.com/atnos-org/eff">Scala implementation</a>.</p>
<p dir="auto">This Julia implementation is massively simplified, and hence can also serve as a good introduction to get to know the details behind Extensible Effects.</p>
<p dir="auto">Many effects are provided, ranging from <code>Option</code>, which can be handled very simple, to the very limit of what can be supported by ExtensibleEffects - the <code>State</code> effect. Still, all the implementations are short and easy to follow, so look into the <code>instances.jl</code> file to see how to write your own Effect handlings.</p>
<h2 dir="auto"><a id="user-content-presentation-at-juliacon-2021" class="anchor" aria-hidden="true" href="#presentation-at-juliacon-2021"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Presentation at JuliaCon 2021</h2>
<p dir="auto">The package was presented at JuliaCon 2021.</p>
<ul dir="auto">
<li>find the video <a href="TODO">at youtube</a></li>
<li>find the presentation material in this binder <a href="https://mybinder.org/v2/gh/JuliaFunctional/ExtensibleEffects.jl/main?filepath=docs%2Fjupyter%2FMonad2.0%2C%20aka%20Algebraic%20Effects%20-%20ExtensibleEffects.jl.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width: 100%;"></a>. The binder link provides you with a Jupyter environment where you can actually run julia code and explore the ExtensibleEffects further. The link will autostart into the presentation itself, clicking the big X on the top left will exit the presentation mode and bring you to a standard Jupyter notebook.</li>
</ul>
</article></div>