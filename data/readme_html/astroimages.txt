<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-astroimagesjl" class="anchor" aria-hidden="true" href="#astroimagesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AstroImages.jl</h1>
<table>
<thead>
<tr>
<th align="left"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><a href="http://juliaastro.org/dev/modules/AstroImages/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaAstro/AstroImages/actions/workflows/ci.yml/badge.svg"><img src="https://github.com/JuliaAstro/AstroImages/actions/workflows/ci.yml/badge.svg" alt="Build status" style="max-width: 100%;"></a></td>
<td align="center"><a href="http://codecov.io/github/JuliaAstro/AstroImages.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a053a8571249f0e0c5e4f6189a0bfb898b873d752ced18a7e0c7ec0a4b813ced/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961417374726f2f417374726f496d616765732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="http://codecov.io/github/JuliaAstro/AstroImages.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto"><code>AstroImages.jl</code> allows you load and visualize  images from a
astronomical <a href="https://en.wikipedia.org/wiki/FITS" rel="nofollow"><code>FITS</code></a> files using the
popular <a href="https://github.com/JuliaImages/Images.jl"><code>Images.jl</code></a>
and <a href="https://github.com/JuliaPlots/Plots.jl"><code>Plots.jl</code></a> Julia packages.
<code>AstroImages.jl</code> uses <a href="https://github.com/JuliaAstro/FITSIO.jl"><code>FITSIO.jl</code></a> to
read FITS files.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>AstroImages.jl</code> is available for Julia 1.6 and later versions, and can be
installed with <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">Julia built-in package
manager</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add AstroImages"><pre>pkg<span class="pl-k">&gt;</span> add AstroImages</pre></div>
<p dir="auto">You may also need to install <code>ImageIO.jl</code> for images to display in certain environments.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">After installing the package, you can start using it with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using AstroImages"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> AstroImages</pre></div>
<p dir="auto">Images will automatically display in many environments, including VS Code, Jupyter, and Pluto.
If you're using a REPL, you may want to install an external viewer like ImageShow.jl, ElectronDisplay.jl,
or ImageInTerminal.jl.</p>
<h2 dir="auto"><a id="user-content-reading-extensions-from-fits-file" class="anchor" aria-hidden="true" href="#reading-extensions-from-fits-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading extensions from FITS file</h2>
<p dir="auto">You can load and read the the first <em>image</em> extension of a FITS file with the <code>load</code>
function, from <a href="https://github.com/JuliaIO/FileIO.jl"><code>FileIO.jl</code></a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; load(&quot;file.fits&quot;)
1300×1200 Array{UInt16,2}:
[...]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>file.fits<span class="pl-pds">"</span></span>)
<span class="pl-c1">1300</span><span class="pl-k">×</span><span class="pl-c1">1200</span> Array{UInt16,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
[<span class="pl-k">...</span>]</pre></div>
<p dir="auto">You may also pass an explicit extension number to load, which will return the data of that extension (image or table)
Read the third extension of the file with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; load(&quot;file.fits&quot;, 3)
1300×1200 Array{UInt16,2}:
[...]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>file.fits<span class="pl-pds">"</span></span>, <span class="pl-c1">3</span>)
<span class="pl-c1">1300</span><span class="pl-k">×</span><span class="pl-c1">1200</span> Array{UInt16,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
[<span class="pl-k">...</span>]</pre></div>
<h2 dir="auto"><a id="user-content-astroimage-type" class="anchor" aria-hidden="true" href="#astroimage-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AstroImage type</h2>
<p dir="auto">The package provides a  type, <code>AstroImage</code> to integrate FITS images with
Julia packages for plotting and image processing.  The <code>AstroImage</code> function has
the same syntax as <code>load</code>.  This command:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; img = AstroImage(&quot;file.fits&quot;)"><pre>julia<span class="pl-k">&gt;</span> img <span class="pl-k">=</span> <span class="pl-c1">AstroImage</span>(<span class="pl-s"><span class="pl-pds">"</span>file.fits<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">will read the first valid extension from the <code>file.fits</code> file.
<code>AstroImage</code> also works if the file extension is not <code>.fit</code> or <code>.fits</code>, e.g. if it's a compressed FITS file with extension <code>.fits.gz</code>.
You can load data in any format supported by <a href="https://juliaastro.github.io/FITSIO.jl/stable/" rel="nofollow">FITSIO.jl</a> / <a href="https://heasarc.gsfc.nasa.gov/fitsio/" rel="nofollow">the FITSIO c library</a>.</p>
<p dir="auto">If you are working in a Jupyter notebook, an <code>AstroImage</code> object is
automatically rendered as a PNG image.</p>
<p dir="auto">You can extract a WCSTransform object from the image using <code>wcs(img,1)</code>.</p>
<h2 dir="auto"><a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Headers</h2>
<p dir="auto">FITS Headers can be accessed directly from an AstroImage:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; img[&quot;HEAD1&quot;] = 1.0
julia&gt; img[&quot;HEAD1&quot;,Comment] = &quot;A comment describes the meaning of a header keyword&quot;
julia&gt; img[&quot;HEAD1&quot;]
1.0

julia&gt; push!(img, History, &quot;We can record the history of processes applied to this image in header HISTORY entries.&quot;)"><pre>julia<span class="pl-k">&gt;</span> img[<span class="pl-s"><span class="pl-pds">"</span>HEAD1<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
julia<span class="pl-k">&gt;</span> img[<span class="pl-s"><span class="pl-pds">"</span>HEAD1<span class="pl-pds">"</span></span>,Comment] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A comment describes the meaning of a header keyword<span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> img[<span class="pl-s"><span class="pl-pds">"</span>HEAD1<span class="pl-pds">"</span></span>]
<span class="pl-c1">1.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">push!</span>(img, History, <span class="pl-s"><span class="pl-pds">"</span>We can record the history of processes applied to this image in header HISTORY entries.<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-visualization" class="anchor" aria-hidden="true" href="#visualization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Visualization</h2>
<p dir="auto">Any AbstractArray (including an AstroImage) can be displayed using <code>imview</code>. This function renders an
arbitrary array into an array of <code>RGBA</code> values using a number of parameters. If the input is an AstroImage{&lt;:Number},
an AstroImage{RGBA} will be returned that retains headers, WCS information, etc.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; imview(img; clims=Percent(99.5), cmap=:magma, stretch=identity, contrast=1.0, bias=0.5)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">imview</span>(img; clims<span class="pl-k">=</span><span class="pl-c1">Percent</span>(<span class="pl-c1">99.5</span>), cmap<span class="pl-k">=</span><span class="pl-c1">:magma</span>, stretch<span class="pl-k">=</span>identity, contrast<span class="pl-k">=</span><span class="pl-c1">1.0</span>, bias<span class="pl-k">=</span><span class="pl-c1">0.5</span>)</pre></div>
<p dir="auto">Very large Images are automatically downscaled to ensure consistent performance using <code>restrict</code> from Images.jl. This function filters the data before downscaling to prevent aliasing, so it may take a moment for truly huge images. In these cases, a faster method that doesn't prevent aliasing would be <code>imview(img[begin:10:end, begin:10:end])</code> or similar.</p>
<p dir="auto"><code>imview</code> is called automatically on <code>AstroImage{&lt;:Number}</code> when using a Julia environment with rich graphical IO capabilities (e.g. VSCode, Jupyter, Pluto, etc.).
The defaults for this case can be modified using <code>AstroImages.set_clims!(...)</code>, <code>AstroImages.set_cmap!(...)</code>, and <code>AstroImages.set_stretch!(...)</code>.</p>
<h2 dir="auto"><a id="user-content-forming-color-composite-images" class="anchor" aria-hidden="true" href="#forming-color-composite-images"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Forming Color Composite Images</h2>
<p dir="auto">A color composite image (e.g. RGB) can be constructed using the <code>composecolors</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; rgb = composecolors([img1, img2, img3])"><pre>julia<span class="pl-k">&gt;</span> rgb <span class="pl-k">=</span> <span class="pl-c1">composecolors</span>([img1, img2, img3])</pre></div>
<p dir="auto">Where <code>img1</code>, <code>img2</code>, <code>img3</code> are arrays or AstroImages containing data of red, blue and  green channels respectively.</p>
<p dir="auto"><code>composecolors</code> also supports more complex mappings, for example merging two bands according to color schemes from
ColorSchemes.jl.
See the docs for more information.</p>
<h2 dir="auto"><a id="user-content-plotting-an-astroimage" class="anchor" aria-hidden="true" href="#plotting-an-astroimage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting an AstroImage</h2>
<p dir="auto">An <code>AstroImage</code> object can be plotted with <code>Plots.jl</code> package.  Just use</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Plots

julia&gt; implot(img)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Plots

julia<span class="pl-k">&gt;</span> <span class="pl-c1">implot</span>(img)</pre></div>
<p dir="auto">and the image will be displayed as an image series using your favorite backend.
Plotly, PyPlot, and GR backends have been tested.</p>
<p dir="auto"><code>implot</code> supports all the same syntax as <code>imview</code> in addition to keyword arguments
for controlling axis tick marks, WCS grid lines, and the colorbar.</p>
<h2 dir="auto"><a id="user-content-resolving-world-coordinates" class="anchor" aria-hidden="true" href="#resolving-world-coordinates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Resolving World Coordinates</h2>
<p dir="auto">If your FITS file contains world coordinate system headers, AstroImages.jl can use WCS.jl to convert between pixel and world coordinates.
This works even if you have sliced or your image to select a region of interest:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; img_slice = img[100:200,100:200]
julia&gt; coords_world = pix_to_world(img_slice, [5,5])
[..., ...]
julia&gt; world_to_pix(img_slice, coords_world)
[5.0,5.0] # approximately"><pre>julia<span class="pl-k">&gt;</span> img_slice <span class="pl-k">=</span> img[<span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">200</span>,<span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">200</span>]
julia<span class="pl-k">&gt;</span> coords_world <span class="pl-k">=</span> <span class="pl-c1">pix_to_world</span>(img_slice, [<span class="pl-c1">5</span>,<span class="pl-c1">5</span>])
[<span class="pl-k">...</span>, <span class="pl-k">...</span>]
julia<span class="pl-k">&gt;</span> <span class="pl-c1">world_to_pix</span>(img_slice, coords_world)
[<span class="pl-c1">5.0</span>,<span class="pl-c1">5.0</span>] <span class="pl-c"><span class="pl-c">#</span> approximately</span></pre></div>
<h2 dir="auto"><a id="user-content-migrating-from-pre-03" class="anchor" aria-hidden="true" href="#migrating-from-pre-03"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Migrating from Pre-0.3</h2>
<p dir="auto">This package has changed significantly between 0.2 and 0.3 with a new AstroImage type, new recipes, and a new approach to rendering.</p>
<ul dir="auto">
<li>Previously, one would construct an AstroImage out of a FITS HDU and a specific color that was used for display purposes. Now, display settings like color, contrast, and brightness are not stored in the AstroImage but are specified when calling the function <code>imview</code>, which returns a view with those settings applied.</li>
<li><code>render</code> has been replaced by <code>imview</code>.</li>
<li>The functionality of <code>ccd2rgb</code> has been subsumed into <code>composecolors</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">The <code>AstroImages.jl</code> package is licensed under the MIT "Expat" License.  The
original author is Mosè Giordano.</p>
</article></div>