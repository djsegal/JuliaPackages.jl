<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 align="center"><a id="user-content---------" class="anchor" aria-hidden="true" href="#--------"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>
    <a target="_blank" rel="noopener noreferrer" href="example/logo.png"><img width="650" src="example/logo.png" alt="Terming" style="max-width:100%;"></a>
    <br>
</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="https://github.com/foldfelis/Terming.jl/workflows/CI/badge.svg"><img src="https://github.com/foldfelis/Terming.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a> <a href="https://codecov.io/gh/foldfelis/Terming.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/94fdfc807cb7712d2a6d4453c0c486909831f8ae2182d4268ab7687932d18d85/68747470733a2f2f636f6465636f762e696f2f67682f666f6c6466656c69732f5465726d696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/foldfelis/Terming.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h1><a id="user-content-termingjl" class="anchor" aria-hidden="true" href="#termingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Terming.jl</h1>
<p>Terming is a toolbox for manipulate terminals written in pure Julia. It offers low-level and elegant APIs to handle information directly from and work around with TTYs.</p>
<p>To its simplicity, Terming provides high coverage of essential ANSI terminal methods that allows developers to focus on their features without bother communicating with terminals. In short, Terming handles like a dream.</p>
<p>For more high-level functionality, please check out <a href="https://github.com/foldfelis/DisplayStructure.jl">DisplayStructure.jl</a>, which uses Terming as backend.</p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h2>
<p>The package can be installed with the Julia package manager.
From the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add Terming
"><pre>pkg<span class="pl-k">&gt;</span> add Terming</pre></div>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<h3><a id="user-content-cursor-movement-and-console-size" class="anchor" aria-hidden="true" href="#cursor-movement-and-console-size"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><strong>Cursor movement and Console size</strong></h3>
<details>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Terming

function main()
    # set term size and clear
    Terming.displaysize(20, 75); Terming.clear()
    # move cursor to (row=6, col=10)
    Terming.cmove(6, 10)
    # save current position
    Terming.csave()
    Terming.print(&quot;This string is printed at (row=6, col=10)&quot;)
    # restore saved position
    Terming.crestore()
    # move cursor down
    Terming.cmove_down()
    Terming.print(&quot;This string is printed at next line, with same col&quot;)
    # move cursor to the beginning of next line
    Terming.cmove_line_down()
    Terming.print(&quot;This string is printed at the beginning of next line&quot;)
    # move cursor to last line
    Terming.cmove_line_last()

    return
end

main()
"><pre><span class="pl-k">using</span> Terming

<span class="pl-k">function</span> <span class="pl-en">main</span>()
    <span class="pl-c"><span class="pl-c">#</span> set term size and clear</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">displaysize</span>(<span class="pl-c1">20</span>, <span class="pl-c1">75</span>); Terming<span class="pl-k">.</span><span class="pl-c1">clear</span>()
    <span class="pl-c"><span class="pl-c">#</span> move cursor to (row=6, col=10)</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">cmove</span>(<span class="pl-c1">6</span>, <span class="pl-c1">10</span>)
    <span class="pl-c"><span class="pl-c">#</span> save current position</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">csave</span>()
    Terming<span class="pl-k">.</span><span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>This string is printed at (row=6, col=10)<span class="pl-pds">"</span></span>)
    <span class="pl-c"><span class="pl-c">#</span> restore saved position</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">crestore</span>()
    <span class="pl-c"><span class="pl-c">#</span> move cursor down</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">cmove_down</span>()
    Terming<span class="pl-k">.</span><span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>This string is printed at next line, with same col<span class="pl-pds">"</span></span>)
    <span class="pl-c"><span class="pl-c">#</span> move cursor to the beginning of next line</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">cmove_line_down</span>()
    Terming<span class="pl-k">.</span><span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>This string is printed at the beginning of next line<span class="pl-pds">"</span></span>)
    <span class="pl-c"><span class="pl-c">#</span> move cursor to last line</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">cmove_line_last</span>()

    <span class="pl-k">return</span>
<span class="pl-k">end</span>

<span class="pl-c1">main</span>()</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="example/cursor.png"><img src="example/cursor.png" alt="" style="max-width:100%;"></a></p>
</details>
<h3><a id="user-content-raw-mode-and-special-keys-events" class="anchor" aria-hidden="true" href="#raw-mode-and-special-keys-events"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><strong>Raw mode and Special keys events</strong></h3>
<details>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Terming

function main()
    # set term size and clear
    Terming.displaysize(20, 75); Terming.clear()

    # enable raw mode
    Terming.raw!(true)
    event = nothing
    while event != Terming.KeyPressedEvent(Terming.ESC)
        # read in_stream
        sequence = Terming.read_stream()
        # parse in_stream sequence to event
        event = Terming.parse_sequence(sequence)
        @show event
    end
    # disable raw mode
    Terming.raw!(false)

    return
end

main()
"><pre><span class="pl-k">using</span> Terming

<span class="pl-k">function</span> <span class="pl-en">main</span>()
    <span class="pl-c"><span class="pl-c">#</span> set term size and clear</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">displaysize</span>(<span class="pl-c1">20</span>, <span class="pl-c1">75</span>); Terming<span class="pl-k">.</span><span class="pl-c1">clear</span>()

    <span class="pl-c"><span class="pl-c">#</span> enable raw mode</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">raw!</span>(<span class="pl-c1">true</span>)
    event <span class="pl-k">=</span> <span class="pl-c1">nothing</span>
    <span class="pl-k">while</span> event <span class="pl-k">!=</span> Terming<span class="pl-k">.</span><span class="pl-c1">KeyPressedEvent</span>(Terming<span class="pl-k">.</span>ESC)
        <span class="pl-c"><span class="pl-c">#</span> read in_stream</span>
        sequence <span class="pl-k">=</span> Terming<span class="pl-k">.</span><span class="pl-c1">read_stream</span>()
        <span class="pl-c"><span class="pl-c">#</span> parse in_stream sequence to event</span>
        event <span class="pl-k">=</span> Terming<span class="pl-k">.</span><span class="pl-c1">parse_sequence</span>(sequence)
        <span class="pl-c1">@show</span> event
    <span class="pl-k">end</span>
    <span class="pl-c"><span class="pl-c">#</span> disable raw mode</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">raw!</span>(<span class="pl-c1">false</span>)

    <span class="pl-k">return</span>
<span class="pl-k">end</span>

<span class="pl-c1">main</span>()</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="example/event.png"><img src="example/event.png" alt="" style="max-width:100%;"></a></p>
</details>
<h3><a id="user-content-buffered" class="anchor" aria-hidden="true" href="#buffered"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><strong>Buffered</strong></h3>
<details>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Terming

function println_animation(str::String; delay::Real=0.05)
    # save current position of cursor
    Terming.csave()

    for c in str
        Terming.print(c)
        sleep(delay)
        delay *= 0.98
    end

    # restore position of cursor and move down
    Terming.crestore(); Terming.cmove_down()
end

function main()
    # set term size and clear
    Terming.displaysize(20, 80); Terming.clear()
    # move cursor to (row=2, col=2)
    Terming.cmove(2, 2)

    # +----------------+
    # | without buffer |
    # +----------------+
    discription = &quot;The following string is blocked bue to the time-consuming calculations:&quot;
    println_animation(discription)

    # save current position of cursor
    Terming.csave()

    str = &quot;This string will be finished printing once the calculations are...&quot;
    Terming.print(str)
    sleep(1) # fake time consuming calculation
    Terming.println(&quot; done!!&quot;)

    # restore position of cursor and move down 2 row
    Terming.crestore(); Terming.cmove_down(2)

    # +-------------+
    # | with buffer |
    # +-------------+
    discription = &quot;The following string is not blocked by the time-consuming calculations:&quot;
    println_animation(discription)

    # save current position of cursor
    Terming.csave()

    Terming.buffered() do buffer
        str = &quot;This string will be finished printing once the calculations are&quot;
        Terming.print(buffer, str)
        sleep(1) # fake time consuming calculation
        Terming.println(buffer, &quot; done!!&quot;)
    end

    # restore position of cursor and move down 2 row
    Terming.crestore(); Terming.cmove_down(2)

    return
end

main()
"><pre><span class="pl-k">using</span> Terming

<span class="pl-k">function</span> <span class="pl-en">println_animation</span>(str<span class="pl-k">::</span><span class="pl-c1">String</span>; delay<span class="pl-k">::</span><span class="pl-c1">Real</span><span class="pl-k">=</span><span class="pl-c1">0.05</span>)
    <span class="pl-c"><span class="pl-c">#</span> save current position of cursor</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">csave</span>()

    <span class="pl-k">for</span> c <span class="pl-k">in</span> str
        Terming<span class="pl-k">.</span><span class="pl-c1">print</span>(c)
        <span class="pl-c1">sleep</span>(delay)
        delay <span class="pl-k">*=</span> <span class="pl-c1">0.98</span>
    <span class="pl-k">end</span>

    <span class="pl-c"><span class="pl-c">#</span> restore position of cursor and move down</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">crestore</span>(); Terming<span class="pl-k">.</span><span class="pl-c1">cmove_down</span>()
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">main</span>()
    <span class="pl-c"><span class="pl-c">#</span> set term size and clear</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">displaysize</span>(<span class="pl-c1">20</span>, <span class="pl-c1">80</span>); Terming<span class="pl-k">.</span><span class="pl-c1">clear</span>()
    <span class="pl-c"><span class="pl-c">#</span> move cursor to (row=2, col=2)</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">cmove</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)

    <span class="pl-c"><span class="pl-c">#</span> +----------------+</span>
    <span class="pl-c"><span class="pl-c">#</span> | without buffer |</span>
    <span class="pl-c"><span class="pl-c">#</span> +----------------+</span>
    discription <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>The following string is blocked bue to the time-consuming calculations:<span class="pl-pds">"</span></span>
    <span class="pl-c1">println_animation</span>(discription)

    <span class="pl-c"><span class="pl-c">#</span> save current position of cursor</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">csave</span>()

    str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>This string will be finished printing once the calculations are...<span class="pl-pds">"</span></span>
    Terming<span class="pl-k">.</span><span class="pl-c1">print</span>(str)
    <span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> fake time consuming calculation</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span> done!!<span class="pl-pds">"</span></span>)

    <span class="pl-c"><span class="pl-c">#</span> restore position of cursor and move down 2 row</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">crestore</span>(); Terming<span class="pl-k">.</span><span class="pl-c1">cmove_down</span>(<span class="pl-c1">2</span>)

    <span class="pl-c"><span class="pl-c">#</span> +-------------+</span>
    <span class="pl-c"><span class="pl-c">#</span> | with buffer |</span>
    <span class="pl-c"><span class="pl-c">#</span> +-------------+</span>
    discription <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>The following string is not blocked by the time-consuming calculations:<span class="pl-pds">"</span></span>
    <span class="pl-c1">println_animation</span>(discription)

    <span class="pl-c"><span class="pl-c">#</span> save current position of cursor</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">csave</span>()

    Terming<span class="pl-k">.</span><span class="pl-c1">buffered</span>() <span class="pl-k">do</span> buffer
        str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>This string will be finished printing once the calculations are<span class="pl-pds">"</span></span>
        Terming<span class="pl-k">.</span><span class="pl-c1">print</span>(buffer, str)
        <span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> fake time consuming calculation</span>
        Terming<span class="pl-k">.</span><span class="pl-c1">println</span>(buffer, <span class="pl-s"><span class="pl-pds">"</span> done!!<span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>

    <span class="pl-c"><span class="pl-c">#</span> restore position of cursor and move down 2 row</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">crestore</span>(); Terming<span class="pl-k">.</span><span class="pl-c1">cmove_down</span>(<span class="pl-c1">2</span>)

    <span class="pl-k">return</span>
<span class="pl-k">end</span>

<span class="pl-c1">main</span>()</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="example/buffered1.png"><img src="example/buffered1.png" alt="" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="example/buffered2.png"><img src="example/buffered2.png" alt="" style="max-width:100%;"></a></p>
</details>
<h3><a id="user-content-alternate-screen-mode" class="anchor" aria-hidden="true" href="#alternate-screen-mode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><strong>Alternate screen mode</strong></h3>
<details>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Terming

function main()
    # set term size
    Terming.displaysize(20, 75)
    # switch to alternate screen
    Terming.alt_screen(true)

    Terming.cmove(1, 1)
    Terming.println(&quot;Terminal is now switched to the alternate screen mode.&quot;)
    Terming.println(&quot;Press ENTER to switch back.&quot;); readline()

    # switch back from alternate screen
    Terming.alt_screen(false)

    return
end

main()
"><pre><span class="pl-k">using</span> Terming

<span class="pl-k">function</span> <span class="pl-en">main</span>()
    <span class="pl-c"><span class="pl-c">#</span> set term size</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">displaysize</span>(<span class="pl-c1">20</span>, <span class="pl-c1">75</span>)
    <span class="pl-c"><span class="pl-c">#</span> switch to alternate screen</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">alt_screen</span>(<span class="pl-c1">true</span>)

    Terming<span class="pl-k">.</span><span class="pl-c1">cmove</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)
    Terming<span class="pl-k">.</span><span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Terminal is now switched to the alternate screen mode.<span class="pl-pds">"</span></span>)
    Terming<span class="pl-k">.</span><span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Press ENTER to switch back.<span class="pl-pds">"</span></span>); <span class="pl-c1">readline</span>()

    <span class="pl-c"><span class="pl-c">#</span> switch back from alternate screen</span>
    Terming<span class="pl-k">.</span><span class="pl-c1">alt_screen</span>(<span class="pl-c1">false</span>)

    <span class="pl-k">return</span>
<span class="pl-k">end</span>

<span class="pl-c1">main</span>()</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="example/alt_screen1.png"><img src="example/alt_screen1.png" alt="" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="example/alt_screen2.png"><img src="example/alt_screen2.png" alt="" style="max-width:100%;"></a></p>
</details>
<h3><a id="user-content-looking-for-color-screen" class="anchor" aria-hidden="true" href="#looking-for-color-screen"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><strong>Looking for color screen?</strong></h3>
<p>It is recommended to use <a href="https://github.com/KristofferC/Crayons.jl">Crayons</a> to gain more decorations.</p>
<p>You will find it entertaining to take a look at how I design the logo <a href="example/logo.jl">here</a>. And as well as how I render a snake game <a href="https://github.com/foldfelis/Snake.jl/blob/master/src/view.jl">here</a>.</p>
<h2><a id="user-content-want-something-more-advanced" class="anchor" aria-hidden="true" href="#want-something-more-advanced"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Want something more advanced?</h2>
<p>For a more complete example, take a look at <a href="https://github.com/foldfelis/Snake.jl">Snake Game</a>.</p>
<h2><a id="user-content-state-of-supporting-windows" class="anchor" aria-hidden="true" href="#state-of-supporting-windows"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>State of supporting Windows</h2>
<p>Windows default Powershell and command line emulators are two of the most popular terminal emulators among Windows users though, it is recommended to use <a href="https://github.com/microsoft/terminal">Windows' new terminal emulator</a> so as to have more colorful and highly customizable experience.</p>
<p>Currently, Terming.jl supports Windows, yet some features may behave abnormally such as:</p>
<ul>
<li>Change terminal size: <code>displaysize(::Int, ::Int)</code></li>
<li>Alternate screen mode: <code>alt_screen(::Bool)</code></li>
<li><code>BackTab</code> determination</li>
</ul>
</article></div>