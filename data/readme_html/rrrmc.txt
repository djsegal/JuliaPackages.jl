<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-rrrmcjl" class="anchor" aria-hidden="true" href="#rrrmcjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RRRMC.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Releases</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://carlobaldassi.github.io/RRRMC.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/carlobaldassi/RRRMC.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d2ce4d64f6a3eb468eb5739dc477d47ce6aace4b/68747470733a2f2f7472617669732d63692e6f72672f6361726c6f62616c64617373692f5252524d432e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/carlobaldassi/RRRMC.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://codecov.io/gh/carlobaldassi/RRRMC.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/97e3006f4df6c846d3e225a0f55b31c4d831d2de/68747470733a2f2f636f6465636f762e696f2f67682f6361726c6f62616c64617373692f5252524d432e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/carlobaldassi/RRRMC.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://zenodo.org/badge/latestdoi/66179142" rel="nofollow"><img src="https://camo.githubusercontent.com/3f5db43855cb14154346c9e4a0d574190f71c23e/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f36363137393134322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/66179142.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>This code implements the Reduced-Rejection-Rate (RRR) Monte Carlo method for Ising spin models described in the paper
<em>"A method to reduce the rejection rate in Monte Carlo Markov Chains"</em> by C. Baldassi,
J. Stat. Mech. Theor. Exp., (2017) 3, 033301 <a href="https://doi.org/10.1088/1742-5468/aa5335" rel="nofollow">doi:10.1088/1742-5468/aa5335</a> (<a href="http://arxiv.org/abs/1608.05899" rel="nofollow">arXiv</a>).</p>
<p>It also provides:</p>
<ul>
<li>a standard Metropolis-Hastings sampler</li>
<li>a generalized implementation of the BKL method described in the paper
<a href="https://doi.org/10.1016/0021-9991(75)90060-1" rel="nofollow">"A new algorithm for Monte Carlo simulation of Ising spin systems"</a> by A.B. Bortz, M.H. Kalos and J.L. Lebowitz.
The generalization consists in not requiring that the energy shifts are discrete.</li>
<li>an implementation of the Waiting time method described in the paper
<a href="https://doi.org/10.1016/S0010-4655(01)00412-X" rel="nofollow">"Faster Monte Carlo simulations at low temperatures. The waiting time method"</a> by J. Dall and P. Sibani.</li>
<li>an implementation of the "τ-Extremal Optimization" heuristic technique described in the paper
<a href="https://doi.org/10.1103/PhysRevLett.86.5211" rel="nofollow">"Optimization with Extremal Dynamics"</a> by S. Boettcher and A. G. Percus.</li>
</ul>
<p>The code is written in <a href="https://julialang.org" rel="nofollow">Julia</a>. It requires Julia <code>1.0</code>.</p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h3>
<p>To install the package, use Julia's package manager: from the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run:</p>
<pre><code>(v1.3) pkg&gt; add RRRMC
</code></pre>
<p>Or, equivalently, via the Pkg API:</p>
<pre><code>julia&gt; import Pkg; Pkg.add("RRRMC")
</code></pre>
<p>Dependencies will be installed automatically.</p>
<h3><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h3>
<ul>
<li><a href="https://carlobaldassi.github.io/RRRMC.jl/stable" rel="nofollow"><strong>STABLE</strong></a> — stable version of the documentation</li>
<li><a href="https://carlobaldassi.github.io/RRRMC.jl/dev" rel="nofollow"><strong>DEV</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
</article></div>