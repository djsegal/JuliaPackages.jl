<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-facilitylocationproblemsjl" class="anchor" aria-hidden="true" href="#facilitylocationproblemsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FacilityLocationProblems.jl</h1>
<p dir="auto"><a href="https://rafaelmartinelli.github.io/FacilityLocationProblems.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://rafaelmartinelli.github.io/FacilityLocationProblems.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/rafaelmartinelli/FacilityLocationProblems.jl/actions"><img src="https://github.com/rafaelmartinelli/FacilityLocationProblems.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/rafaelmartinelli/FacilityLocationProblems.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/87d7ab5834af70aeda63239d6040cfe3d1e89fdaadc443fa295c123924d10710/68747470733a2f2f636f6465636f762e696f2f67682f72616661656c6d617274696e656c6c692f466163696c6974794c6f636174696f6e50726f626c656d732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/rafaelmartinelli/FacilityLocationProblems.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/2261082c77808ea734741b12e535d02d23c4101f6b8dfec807f4ddc5ef2eeec0/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package reads data files for different location problems instances:</p>
<ul dir="auto">
<li>(Capacitated) Facility Location Problems</li>
<li><del>(<del>Capacitated</del>)</del> P-Median Problems</li>
<li>Maximum Coverage Problems</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-capacitated-facility-location-problems" class="anchor" aria-hidden="true" href="#capacitated-facility-location-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Capacitated Facility Location Problems</h3>
<p dir="auto">The type used by (Capacitated) Facility Location Problems is <code>FacilityLocationProblem</code>, defined as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct FacilityLocationProblem
    name::String                 # Instance name

    capacities::Vector{Int64}    # Facilities capacities
    demands::Vector{Int64}       # Customers demands
    fixed_costs::Vector{Float64} # Fixed costs to open facilities
    costs::Matrix{Float64}       # Costs to assign facilities to customers

    lb::Float64                  # Lower bound (-Inf if not known)
    ub::Float64                  # Upper bound ( Inf if not known)
end"><pre><span class="pl-k">struct</span> FacilityLocationProblem
    name<span class="pl-k">::</span><span class="pl-c1">String</span>                 <span class="pl-c"><span class="pl-c">#</span> Instance name</span>

    capacities<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>    <span class="pl-c"><span class="pl-c">#</span> Facilities capacities</span>
    demands<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>       <span class="pl-c"><span class="pl-c">#</span> Customers demands</span>
    fixed_costs<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span> <span class="pl-c"><span class="pl-c">#</span> Fixed costs to open facilities</span>
    costs<span class="pl-k">::</span><span class="pl-c1">Matrix{Float64}</span>       <span class="pl-c"><span class="pl-c">#</span> Costs to assign facilities to customers</span>

    lb<span class="pl-k">::</span><span class="pl-c1">Float64</span>                  <span class="pl-c"><span class="pl-c">#</span> Lower bound (-Inf if not known)</span>
    ub<span class="pl-k">::</span><span class="pl-c1">Float64</span>                  <span class="pl-c"><span class="pl-c">#</span> Upper bound ( Inf if not known)</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Some classical instances from the literature can be downloaded on demand from <a href="http://people.brunel.ac.uk/~mastjjb/jeb/info.html" rel="nofollow">ORLib page</a>. For example, to download and load instance <code>cap41</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = loadFacilityLocationProblem(:cap41)"><pre>data <span class="pl-k">=</span> <span class="pl-c1">loadFacilityLocationProblem</span>(<span class="pl-c1">:cap41</span>)</pre></div>
<p dir="auto">See the full list on <a href="http://people.brunel.ac.uk/~mastjjb/jeb/orlib/uncapinfo.html" rel="nofollow">ORLib UFLP page</a>, <a href="http://people.brunel.ac.uk/~mastjjb/jeb/orlib/capinfo.html" rel="nofollow">ORLib CFLP page</a> or call the function <code>getFacilityLocationInstances</code>.</p>
<p dir="auto">Optionally, it is possible to set the facilities' capacity (mandatory for instances <code>capa</code>, <code>capb</code>, and <code>capc</code>):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = loadFacilityLocationProblem(:capa, 8000)"><pre>data <span class="pl-k">=</span> <span class="pl-c1">loadFacilityLocationProblem</span>(<span class="pl-c1">:capa</span>, <span class="pl-c1">8000</span>)</pre></div>
<h3 dir="auto"><a id="user-content-capacitated-p-median-problems" class="anchor" aria-hidden="true" href="#capacitated-p-median-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><del>(<del>Capacitated</del>)</del> P-Median Problems</h3>
<p dir="auto">The type used by <del>(<del>Capacitated</del>)</del> P-Median Problems is <code>PMedianProblem</code>, defined as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct PMedianProblem
    name::String           # Instance name

    medians::Int64         # Number of medians (p)
    capacity::Int64        # Medians capacities

    demands::Vector{Int64} # Customers demands
    costs::Matrix{Float64} # Costs matrix (distances)

    x::Vector{Int64}       # Customers x coordinates
    y::Vector{Int64}       # Customers y coordinates

    lb::Float64            # Lower bound (-Inf if not known)
    ub::Float64            # Upper bound ( Inf if not known)
end"><pre><span class="pl-k">struct</span> PMedianProblem
    name<span class="pl-k">::</span><span class="pl-c1">String</span>           <span class="pl-c"><span class="pl-c">#</span> Instance name</span>

    medians<span class="pl-k">::</span><span class="pl-c1">Int64</span>         <span class="pl-c"><span class="pl-c">#</span> Number of medians (p)</span>
    capacity<span class="pl-k">::</span><span class="pl-c1">Int64</span>        <span class="pl-c"><span class="pl-c">#</span> Medians capacities</span>

    demands<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span> <span class="pl-c"><span class="pl-c">#</span> Customers demands</span>
    costs<span class="pl-k">::</span><span class="pl-c1">Matrix{Float64}</span> <span class="pl-c"><span class="pl-c">#</span> Costs matrix (distances)</span>

    x<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>       <span class="pl-c"><span class="pl-c">#</span> Customers x coordinates</span>
    y<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>       <span class="pl-c"><span class="pl-c">#</span> Customers y coordinates</span>

    lb<span class="pl-k">::</span><span class="pl-c1">Float64</span>            <span class="pl-c"><span class="pl-c">#</span> Lower bound (-Inf if not known)</span>
    ub<span class="pl-k">::</span><span class="pl-c1">Float64</span>            <span class="pl-c"><span class="pl-c">#</span> Upper bound ( Inf if not known)</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Some classical (Capacitated) P-Median instances from the literature are preloaded. For example, to load instance <code>pmedcap01</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = loadPMedianProblem(:pmedcap01)"><pre>data <span class="pl-k">=</span> <span class="pl-c1">loadPMedianProblem</span>(<span class="pl-c1">:pmedcap01</span>)</pre></div>
<p dir="auto">See the <a href="https://github.com/rafaelmartinelli/FacilityLocationProblems.jl/tree/main/data">full list</a> or call the function <code>getPMedianInstances</code>.</p>
<h3 dir="auto"><a id="user-content-maximum-coverage-problems" class="anchor" aria-hidden="true" href="#maximum-coverage-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Maximum Coverage Problems</h3>
<p dir="auto">The type used by Maximum Coverage Problems is <code>MaximumCoverageProblem</code>, defined as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct MaximumCoverageProblem
    name::String                    # Instance name

    medians::Int64                  # Number of medians (p)
    distance::Int64                 # Coverage distance

    demands::Vector{Int64}          # Customers demands
    coverage::Vector{Vector{Int64}} # Coverage sets

    x::Vector{Int64}                # Customers x coordinates
    y::Vector{Int64}                # Customers y coordinates

    lb::Float64                     # Lower bound (-Inf if not known)
    ub::Float64                     # Upper bound ( Inf if not known)
end"><pre><span class="pl-k">struct</span> MaximumCoverageProblem
    name<span class="pl-k">::</span><span class="pl-c1">String</span>                    <span class="pl-c"><span class="pl-c">#</span> Instance name</span>

    medians<span class="pl-k">::</span><span class="pl-c1">Int64</span>                  <span class="pl-c"><span class="pl-c">#</span> Number of medians (p)</span>
    distance<span class="pl-k">::</span><span class="pl-c1">Int64</span>                 <span class="pl-c"><span class="pl-c">#</span> Coverage distance</span>

    demands<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>          <span class="pl-c"><span class="pl-c">#</span> Customers demands</span>
    coverage<span class="pl-k">::</span><span class="pl-c1">Vector{Vector{Int64}}</span> <span class="pl-c"><span class="pl-c">#</span> Coverage sets</span>

    x<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>                <span class="pl-c"><span class="pl-c">#</span> Customers x coordinates</span>
    y<span class="pl-k">::</span><span class="pl-c1">Vector{Int64}</span>                <span class="pl-c"><span class="pl-c">#</span> Customers y coordinates</span>

    lb<span class="pl-k">::</span><span class="pl-c1">Float64</span>                     <span class="pl-c"><span class="pl-c">#</span> Lower bound (-Inf if not known)</span>
    ub<span class="pl-k">::</span><span class="pl-c1">Float64</span>                     <span class="pl-c"><span class="pl-c">#</span> Upper bound ( Inf if not known)</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">The package loads Capacitated P-Median instances as Maximum Coverage Problems, and the user must input the maximum coverage distance. For example, to load instance <code>pmedcap01</code> with maximum coverage distance of 10:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = loadMaximumCoverageProblem(:pmedcap01, 10)"><pre>data <span class="pl-k">=</span> <span class="pl-c1">loadMaximumCoverageProblem</span>(<span class="pl-c1">:pmedcap01</span>, <span class="pl-c1">10</span>)</pre></div>
<p dir="auto">The medians capacities are ignored, and the coverage sets are built using calculated costs and given coverage distance.</p>
<h3 dir="auto"><a id="user-content-other-features" class="anchor" aria-hidden="true" href="#other-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Other Features</h3>
<p dir="auto">This package also loads custom instances (following <a href="http://people.brunel.ac.uk/~mastjjb/jeb/info.html" rel="nofollow">ORLib format</a>):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = loadTypeOfProblem(&quot;/path/to/your/instance.txt&quot;, optional_arguments)"><pre>data <span class="pl-k">=</span> <span class="pl-c1">loadTypeOfProblem</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/your/instance.txt<span class="pl-pds">"</span></span>, optional_arguments)</pre></div>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">FacilityLocationProblems is a registered Julia Package (yay!).
You can install FacilityLocationProblems through the Julia package manager.
Open Julia's interactive session (REPL) and type:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add FacilityLocationProblems"><pre>] add FacilityLocationProblems</pre></div>
<h2 dir="auto"><a id="user-content-related-links" class="anchor" aria-hidden="true" href="#related-links"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related links</h2>
<ul dir="auto">
<li><a href="http://people.brunel.ac.uk/~mastjjb/jeb/orlib/uncapinfo.html" rel="nofollow">ORLib's Uncapacitated Facility Location page</a></li>
<li><a href="http://people.brunel.ac.uk/~mastjjb/jeb/orlib/capinfo.html" rel="nofollow">ORLib's Capacitated Facility Location page</a></li>
<li><a href="http://people.brunel.ac.uk/~mastjjb/jeb/orlib/pmedinfo.html" rel="nofollow">ORLib's Uncapacitated P-Median page</a> (this package does not read those instances)</li>
<li><a href="http://people.brunel.ac.uk/~mastjjb/jeb/orlib/pmedcapinfo.html" rel="nofollow">ORLib's Capacitated P-Median page</a></li>
<li><a href="http://www.math.nsc.ru/AP/benchmarks/CFLP/cflp_tabl-eng.html" rel="nofollow">Sobolev Institute of Mathematics' CFLP Page</a> (this package does not read those instances)</li>
<li><a href="http://www.lac.inpe.br/~lorena/instancias.html" rel="nofollow">Instituto Nacional de Pesquisas Espaciais' P-Median and Max Cover Page</a> (this package does not read those instances)</li>
</ul>
<h2 dir="auto"><a id="user-content-other-packages" class="anchor" aria-hidden="true" href="#other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Other packages</h2>
<ul dir="auto">
<li><a href="https://github.com/rafaelmartinelli/Knapsacks.jl">KnapsackLib.jl</a>: Knapsack algorithms in Julia</li>
<li><a href="https://github.com/rafaelmartinelli/LotSizingProblems.jl">LotSizingProblems.jl</a>: Lot Sizing Problems Lib</li>
<li><a href="https://github.com/rafaelmartinelli/AssignmentProblems.jl">AssignmentProblems.jl</a>: Assignment Problems Lib</li>
<li><a href="https://github.com/rafaelmartinelli/InventoryRoutingProblems.jl">InventoryRoutingProblems.jl</a>: Inventory Routing Problems Lib</li>
<li><a href="https://github.com/rafaelmartinelli/BPPLib.jl">BPPLib.jl</a>: Bin Packing and Cutting Stock Problems Lib</li>
<li><a href="https://github.com/rafaelmartinelli/CARPData.jl">CARPData.jl</a>: Capacitated Arc Routing Problem Lib</li>
<li><a href="https://github.com/rafaelmartinelli/MDVSP.jl">MDVSP.jl</a>: Multiple-Depot Vehicle Scheduling Problem Lib</li>
<li><a href="https://github.com/chkwon/CVRPLIB.jl">CVRPLIB.jl</a>: Capacitated Vehicle Routing Problem Lib</li>
<li><a href="https://github.com/matago/TSPLIB.jl">TSPLIB.jl</a>: Traveling Salesman Problem Lib</li>
</ul>
</article></div>