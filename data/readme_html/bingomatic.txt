<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bingomatic" class="anchor" aria-hidden="true" href="#bingomatic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bingomatic</h1>
<p dir="auto">Bingomatic™ is an awesome Julia package that creates bingo cards, using state-of-the-art bingo technology.</p>
<h2 dir="auto"><a id="user-content-standard-bingo-card" class="anchor" aria-hidden="true" href="#standard-bingo-card"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Standard Bingo Card</h2>
<p dir="auto">A standard size bingo card can be made with a few lines of code, as shown below.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Bingomatic, Random
Random.seed!(780775)
word_pool = map(_-&gt;randstring(4), 1:50)
words = sample_words(word_pool)
card = make_card(words)"><pre><span class="pl-k">using</span> Bingomatic, Random
Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">780775</span>)
word_pool <span class="pl-k">=</span> <span class="pl-c1">map</span>(_<span class="pl-k">-&gt;</span><span class="pl-c1">randstring</span>(<span class="pl-c1">4</span>), <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">50</span>)
words <span class="pl-k">=</span> <span class="pl-c1">sample_words</span>(word_pool)
card <span class="pl-k">=</span> <span class="pl-c1">make_card</span>(words)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="extras/example1.png"><img src="extras/example1.png" alt="" width="400" height="400" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-customized-bingo-card" class="anchor" aria-hidden="true" href="#customized-bingo-card"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Customized Bingo Card</h2>
<p dir="auto">The example below shows that bingo cards can be be customized. It is also possible to override default values in <code>make_card</code> with variable keyword arguments.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="n_rows = 3
word_pool = map(_-&gt;randstring(4), 1:50)
words = sample_words(word_pool, n_rows, n_rows)
card = make_card(words; size=(300,300))"><pre>n_rows <span class="pl-k">=</span> <span class="pl-c1">3</span>
word_pool <span class="pl-k">=</span> <span class="pl-c1">map</span>(_<span class="pl-k">-&gt;</span><span class="pl-c1">randstring</span>(<span class="pl-c1">4</span>), <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">50</span>)
words <span class="pl-k">=</span> <span class="pl-c1">sample_words</span>(word_pool, n_rows, n_rows)
card <span class="pl-k">=</span> <span class="pl-c1">make_card</span>(words; size<span class="pl-k">=</span>(<span class="pl-c1">300</span>,<span class="pl-c1">300</span>))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="extras/example2.png"><img src="extras/example2.png" alt="" width="300" height="300" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-christmas-movie-bingo" class="anchor" aria-hidden="true" href="#christmas-movie-bingo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Christmas Movie Bingo</h2>
<p dir="auto">Bingomatic™ includes a bonus word pool for Christmas Movie Bingo, a $19.99 value, absolutely free! Variations of this coveted game include a tribute to the <a href="https://www.youtube.com/watch?v=gxMZgeBlqzQ" rel="nofollow">secret word</a> from Pee Wee's Playhouse where players scream each time the word "Christmas" is said.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Bingomatic, CSV, DataFrames, Random
Random.seed!(1225)
pkg_path = dirname(pathof(Bingomatic))
path = joinpath(pkg_path,&quot;../extras/word_pool.csv&quot;)
word_pool = CSV.read(path, DataFrame; stringtype=String)
words = sample_words(word_pool.words) 
card = make_card(words; word_size=11, size=(630,630))"><pre><span class="pl-k">using</span> Bingomatic, CSV, DataFrames, Random
Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">1225</span>)
pkg_path <span class="pl-k">=</span> <span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(Bingomatic))
path <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(pkg_path,<span class="pl-s"><span class="pl-pds">"</span>../extras/word_pool.csv<span class="pl-pds">"</span></span>)
word_pool <span class="pl-k">=</span> CSV<span class="pl-k">.</span><span class="pl-c1">read</span>(path, DataFrame; stringtype<span class="pl-k">=</span>String)
words <span class="pl-k">=</span> <span class="pl-c1">sample_words</span>(word_pool<span class="pl-k">.</span>words) 
card <span class="pl-k">=</span> <span class="pl-c1">make_card</span>(words; word_size<span class="pl-k">=</span><span class="pl-c1">11</span>, size<span class="pl-k">=</span>(<span class="pl-c1">630</span>,<span class="pl-c1">630</span>))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="extras/christmas_bingo.png"><img src="extras/christmas_bingo.png" alt="" width="630" height="630" style="max-width: 100%;"></a></p>
</article></div>