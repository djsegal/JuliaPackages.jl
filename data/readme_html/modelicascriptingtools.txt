<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-modelicascriptingtoolsjl" class="anchor" aria-hidden="true" href="#modelicascriptingtoolsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ModelicaScriptingTools.jl</h1>
<p dir="auto"><a href="https://github.com/THM-MoTE/ModelicaScriptingTools.jl/actions/workflows/test.yml"><img src="https://github.com/THM-MoTE/ModelicaScriptingTools.jl/actions/workflows/test.yml/badge.svg" alt="Run tests" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/THM-MoTE/ModelicaScriptingTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e1a5fd89b0d2454bfd5dcbb573b54720cf4e97160e7e99a728c6742a4e9bb56a/68747470733a2f2f636f6465636f762e696f2f67682f54484d2d4d6f54452f4d6f64656c696361536372697074696e67546f6f6c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/THM-MoTE/ModelicaScriptingTools.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://thm-mote.github.io/ModelicaScriptingTools.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo.svg"><img src="docs/src/assets/logo.svg" alt="MoST.jl" style="max-width: 100%;"></a></p>
<p dir="auto">ModelicaScriptingTools.jl (or short MoST.jl) contains utility functions to improve the usability of <a href="https://github.com/OpenModelica/OMJulia.jl">OMJulia</a>.
This currently includes the following main features:</p>
<ul dir="auto">
<li>Easy setup of <code>OMCSession</code> with configurable output and model directory</li>
<li>Escaping and unescaping Modelica strings for use in <code>sendExpression()</code></li>
<li>Support for unit tests and regression tests using Julia's <code>Test</code> package</li>
<li>Documentation generation for Modelica models using <a href="https://github.com/JuliaDocs/Documenter.jl">Documenter.jl</a></li>
</ul>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">The <a href="https://thm-mote.github.io/ModelicaScriptingTools.jl/dev/" rel="nofollow">documentation</a> can be found on GitHub pages.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">MoST.jl is available as a Julia package with the name <code>ModelicaScriptingTools</code>.
You can install it using the Pkg REPL, which can be accessed by typing <code>]</code> in a Julia prompt.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add ModelicaScriptingTools"><pre lang="verbatim" class="notranslate"><code>pkg&gt; add ModelicaScriptingTools
</code></pre></div>
<p dir="auto">Alternatively you can also install MoST.jl using the following Julia commands:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;ModelicaScriptingTools&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ModelicaScriptingTools<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-python-dependencies" class="anchor" aria-hidden="true" href="#python-dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Python dependencies</h3>
<p dir="auto">This module has additional dependencies to python modules via PyCall.
If you get an error message that looks something like this</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="The Python package lxml could not be found by pyimport. Usually this means
that you did not install lxml in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3"><pre lang="verbatim" class="notranslate"><code>The Python package lxml could not be found by pyimport. Usually this means
that you did not install lxml in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3
</code></pre></div>
<p dir="auto">you should follow the advice at the end of the error message and use the following command from the command line.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia -e 'ENV[&quot;PYTHON&quot;]=&quot;&quot;; using Pkg; Pkg.build(&quot;PyCall&quot;)'"><pre class="notranslate"><code>julia -e 'ENV["PYTHON"]=""; using Pkg; Pkg.build("PyCall")'
</code></pre></div>
<p dir="auto">so that PyCall can manage the required python modules in a private Anaconda installation.</p>
<p dir="auto">Alternatively you can, of course, also install the required modules (which are listed in the file <code>requirements.txt</code>) in the same way that you would normally use to install python packages (<code>apt-get</code>, <code>pip</code>, <code>conda</code>, ...).</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">The following example uses MoST.jl to test the model defined in the file <code>test/res/Ãˆxample.mo</code> by loading and instantiating the model, performing a simulation according to the settings specified in the model file, and comparing the results, which are written in the folder <code>test/out</code>, to a reference dataset in <code>test/regRefData</code>, if such a reference file exists.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ModelicaScriptingTools
using Test

withOMC(&quot;test/out&quot;, &quot;test/res&quot;) do omc
    @testset &quot;Example&quot; begin
        testmodel(omc, &quot;Example&quot;; refdir=&quot;test/regRefData&quot;)
    end
end"><pre><span class="pl-k">using</span> ModelicaScriptingTools
<span class="pl-k">using</span> Test

<span class="pl-c1">withOMC</span>(<span class="pl-s"><span class="pl-pds">"</span>test/out<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>test/res<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> omc
    <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>Example<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">testmodel</span>(omc, <span class="pl-s"><span class="pl-pds">"</span>Example<span class="pl-pds">"</span></span>; refdir<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>test/regRefData<span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
</article></div>