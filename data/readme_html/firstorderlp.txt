<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-firstorderlpjl" class="anchor" aria-hidden="true" href="#firstorderlpjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FirstOrderLp.jl</h1>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p>This repository contains experimental code for solving linear and quadratic
programming problems using first-order methods. It provides basic utilities and
data structures for reading MPS files, rescaling, and implementing saddle-point
methods. Specialized implementations are present for Mirror Prox and
Primal-Dual Hybrid Gradient. It is focused on supporting experiments and
publications and is not currently configured to be used as a library.</p>
<h2><a id="user-content-one-time-setup" class="anchor" aria-hidden="true" href="#one-time-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>One-time setup</h2>
<p>Install Julia 1.6.0 or later. From the root directory of the repository, run:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=scripts -e 'import Pkg; Pkg.instantiate()'
"><pre>$ julia --project=scripts -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.instantiate()<span class="pl-pds">'</span></span></pre></div>
<p>This setup needs to be run again only if the dependencies change.</p>
<h2><a id="user-content-running" class="anchor" aria-hidden="true" href="#running"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running</h2>
<p>Use one of the following two scripts to solve LP instances. All commands below
assume that the current directory is the working directory.</p>
<h3><a id="user-content-solve_qpjl" class="anchor" aria-hidden="true" href="#solve_qpjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>solve_qp.jl</code></h3>
<p>This is the recommended script for using FirstOrderLp. The results are written
to JSON and text files; see the source for the description of the output
formats.</p>
<p>To see the meaning of each argument:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=scripts scripts/solve_qp.jl --help
"><pre>$ julia --project=scripts scripts/solve_qp.jl --help</pre></div>
<p>To solve a test instance with PDHG:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=scripts scripts/solve_qp.jl \
--instance_path test/trivial_lp_model.mps --iteration_limit 5000 \
--method pdhg --output_dir /tmp/first_order_lp_solve
"><pre>$ julia --project=scripts scripts/solve_qp.jl \
--instance_path test/trivial_lp_model.mps --iteration_limit 5000 \
--method pdhg --output_dir /tmp/first_order_lp_solve</pre></div>
<h3><a id="user-content-solve_lp_externaljl" class="anchor" aria-hidden="true" href="#solve_lp_externaljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>solve_lp_external.jl</code></h3>
<p>This script provides an interface similar to <code>solve_qp</code> but for calling
external solvers for baselines. This script does not support quadratic
objectives.</p>
<p>To solve a test instance with SCS's indirect mode:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=scripts scripts/solve_lp_external.jl \
--instance_path test/trivial_lp_model.mps --iteration_limit 5000 \
--solver scs-indirect --tolerance 1e-7 --output_dir /tmp/scs_solve
"><pre>$ julia --project=scripts scripts/solve_lp_external.jl \
--instance_path test/trivial_lp_model.mps --iteration_limit 5000 \
--solver scs-indirect --tolerance 1e-7 --output_dir /tmp/scs_solve</pre></div>
<p>To solve a test with HiGHS's interior-point mode:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=scripts scripts/solve_lp_external.jl \
--instance_path test/trivial_lp_model.mps --solver highs-ipm \
--tolerance 1e-7 --output_dir /tmp/highs_solve
"><pre>$ julia --project=scripts scripts/solve_lp_external.jl \
--instance_path test/trivial_lp_model.mps --solver highs-ipm \
--tolerance 1e-7 --output_dir /tmp/highs_solve</pre></div>
<h2><a id="user-content-loading-the-module" class="anchor" aria-hidden="true" href="#loading-the-module"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Loading the module</h2>
<p>Use the following commands to load the FirstOrderLp module from Julia and to
view the docstrings:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ julia --project
…
julia&gt; import FirstOrderLp
julia&gt; ?  # Switch to the help&gt; prompt.
help&gt; FirstOrderLp.optimize
…
help&gt; FirstOrderLp
…
"><pre><code>$ julia --project
…
julia&gt; import FirstOrderLp
julia&gt; ?  # Switch to the help&gt; prompt.
help&gt; FirstOrderLp.optimize
…
help&gt; FirstOrderLp
…
</code></pre></div>
<h2><a id="user-content-running-the-tests" class="anchor" aria-hidden="true" href="#running-the-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running the tests</h2>
<p>To run the module’s tests run:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --color=yes --project -e 'import Pkg; Pkg.test(&quot;FirstOrderLp&quot;)'
"><pre>$ julia --color=yes --project -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.test("FirstOrderLp")<span class="pl-pds">'</span></span></pre></div>
<h2><a id="user-content-interpreting-the-output" class="anchor" aria-hidden="true" href="#interpreting-the-output"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Interpreting the output</h2>
<p>When the verbosity option is greater than 2, a table of iteration stats will be
printed with the following headings (split into six groups).</p>
<h5><a id="user-content-runtime" class="anchor" aria-hidden="true" href="#runtime"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>runtime</h5>
<p><code>#iter</code> = the current iteration number.</p>
<p><code>#kkt</code> = the cumulative number of times the KKT matrix is multiplied.</p>
<p><code>seconds</code> = the cumulative solve time in seconds.</p>
<h5><a id="user-content-residuals" class="anchor" aria-hidden="true" href="#residuals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>residuals</h5>
<p><code>pr norm</code> = the euclidean norm of primal residuals (i.e., the constraint
violation).</p>
<p><code>du norm</code> = the euclidean norm of the dual residuals.</p>
<p><code>gap</code> = the gap between the primal and dual objective.</p>
<h5><a id="user-content-solution-information" class="anchor" aria-hidden="true" href="#solution-information"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>solution information</h5>
<p><code>pr obj</code> = the primal objective value.</p>
<p><code>pr norm</code> = the euclidean norm of the primal variable vector.</p>
<p><code>du norm</code> = the euclidean norm of the dual variable vector.</p>
<h5><a id="user-content-relative-residuals" class="anchor" aria-hidden="true" href="#relative-residuals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>relative residuals</h5>
<p><code>rel pr</code> = the euclidean norm of the primal residuals, relative to the
right-hand-side.</p>
<p><code>rel dul</code> = the euclidean norm of the dual residuals, relative to the primal
linear objective.</p>
<p><code>rel gap</code> = the relative optimality gap.</p>
<h5><a id="user-content-primal-ray-verbosity-greater-than-seven-only" class="anchor" aria-hidden="true" href="#primal-ray-verbosity-greater-than-seven-only"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>primal ray (verbosity greater than seven only)</h5>
<p><code>pr norm</code> = the euclidean norm of the primal residuals for the primal ray
problem.</p>
<p><code>linear</code> = the linear part of the primal ray objective.</p>
<p><code>qu norm</code> = the norm of the quadratic part of the primal ray objective.</p>
<h5><a id="user-content-dual-ray-verbosity-greater-than-seven-only" class="anchor" aria-hidden="true" href="#dual-ray-verbosity-greater-than-seven-only"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>dual ray (verbosity greater than seven only)</h5>
<p><code>du norm</code> = the norm of the dual part of the dual ray.</p>
<p><code>dual obj</code> = the dual ray objective value.</p>
<h2><a id="user-content-auto-formatting-julia-code" class="anchor" aria-hidden="true" href="#auto-formatting-julia-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Auto-formatting Julia code</h2>
<p>A one-time step is required to use the auto-formatter:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=formatter -e 'import Pkg; Pkg.instantiate()'
"><pre>$ julia --project=formatter -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.instantiate()<span class="pl-pds">'</span></span></pre></div>
<p>Run the following command to auto-format all Julia code in this directory before
submitting changes:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia --project=formatter -e 'using JuliaFormatter; format(&quot;.&quot;)'
"><pre>$ julia --project=formatter -e <span class="pl-s"><span class="pl-pds">'</span>using JuliaFormatter; format(".")<span class="pl-pds">'</span></span></pre></div>
<h2><a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Disclaimer</h2>
<p>This is not an official Google product.</p>
</article></div>