<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-strfsjl" class="anchor" aria-hidden="true" href="#strfsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StrFs.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/tpapp/StrFs.jl/actions?query=workflow%3ACI"><img src="https://github.com/tpapp/StrFs.jl/workflows/CI/badge.svg" alt="build" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/tpapp/StrFs.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bc9936fd2bfdeff5ff783b73b92567c3395750ebce158917949bc562c5124873/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f53747246732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/StrFs.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Julia packages for strings with fixed maximum number of bytes.</p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto"><code>StrF{S} &lt;: AbstractString</code> can be used for strings up to <code>S</code> bytes in <a href="https://en.wikipedia.org/wiki/UTF-8" rel="nofollow">UTF-8</a> encoding. When the string has less than that many bytes, it is terminated with a <code>0x00</code>.</p>
<p dir="auto">This mirrors the way <a href="https://www.stata.com/help.cgi?dta" rel="nofollow">Stata DTA files encode fixed length strings</a> (<code>str#</code>), but other applications may also find this useful. <code>StrF{S}</code> strings are implemented by wrapping an <code>SVector{S,UInt8}</code>, with the potential efficiency gains that entails.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using StrFs

julia&gt; gender = [strf&quot;male&quot;, strf&quot;female&quot;]
2-element Array{StrF{6},1}:
 &quot;male&quot;
 &quot;female&quot;

julia&gt; gender[1] == &quot;male&quot;
true

julia&gt; issorted(gender, rev = true)
true

julia&gt; motto = StrF{6}(&quot;ηβπ&quot;)          # uses all bytes
&quot;ηβπ&quot;

julia&gt; sizeof(motto)
6

julia&gt; length(motto)
3

julia&gt; motto == StrF{10}(&quot;ηβπ&quot;)        # 0x00 at byte 7
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StrFs

julia<span class="pl-k">&gt;</span> gender <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds"><span class="pl-c1">strf</span>"</span>male<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">strf</span>"</span>female<span class="pl-pds">"</span></span>]
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{StrF{<span class="pl-c1">6</span>},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>male<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>female<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> gender[<span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>male<span class="pl-pds">"</span></span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">issorted</span>(gender, rev <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> motto <span class="pl-k">=</span> <span class="pl-c1">StrF</span><span class="pl-c1">{6}</span>(<span class="pl-s"><span class="pl-pds">"</span>ηβπ<span class="pl-pds">"</span></span>)          <span class="pl-c"><span class="pl-c">#</span> uses all bytes</span>
<span class="pl-s"><span class="pl-pds">"</span>ηβπ<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sizeof</span>(motto)
<span class="pl-c1">6</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">length</span>(motto)
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> motto <span class="pl-k">==</span> <span class="pl-c1">StrF</span><span class="pl-c1">{10}</span>(<span class="pl-s"><span class="pl-pds">"</span>ηβπ<span class="pl-pds">"</span></span>)        <span class="pl-c"><span class="pl-c">#</span> 0x00 at byte 7</span>
<span class="pl-c1">true</span></pre></div>
<h2 dir="auto"><a id="user-content-related" class="anchor" aria-hidden="true" href="#related"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related</h2>
<p dir="auto">See <a href="https://github.com/tpapp/StataDTAFiles.jl">StataDTAFiles.jl</a>.</p>
</article></div>