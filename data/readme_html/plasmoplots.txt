<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/plasmo-dev/PlasmoPlots.jl/actions"><img src="https://github.com/plasmo-dev/PlasmoPlots.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-plasmoplots" class="anchor" aria-hidden="true" href="#plasmoplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PlasmoPlots</h1>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">PlasmoPlots.jl provides specialized functions to plot <code>OptiGraph</code> optimization models created with <a href="https://zavalab.github.io/Plasmo.jl" rel="nofollow">Plasmo.jl</a>.
The package uses <a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a> and consequently supports its different plotting backends.</p>
<p dir="auto">Currently, the package provides two functions to visualize optigraphs.  These are:</p>
<ul dir="auto">
<li><code>layout_plot(::Plasmo.OptiGraph)</code>: Plots the node-link diagram for an optigraph. Uses the SFDP algorthm from <a href="https://github.com/JuliaGraphs/NetworkLayout.jl">NetworkLayout.jl</a> to get node positions. This is also equivalent to <code>Plots.plot(::OptiGraph)</code>.</li>
<li><code>matrix_plot(::Plasmo.OptiGraph)</code>: Plots the matrix structure (block structure) of an optigraph.  This is equivalent to <code>Plots.spy(::OptiGraph)</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">PlasmoPlots.jl can be installed with following command using the Julia package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/jalving/PlasmoPlots.jl.git"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>jalving<span class="pl-k">/</span>PlasmoPlots<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<h2 dir="auto"><a id="user-content-simple-examples" class="anchor" aria-hidden="true" href="#simple-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simple Examples</h2>
<h3 dir="auto"><a id="user-content-plotting-a-simple-optigraph" class="anchor" aria-hidden="true" href="#plotting-a-simple-optigraph"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting a Simple OptiGraph</h3>
<p dir="auto">The following example shows how to plot a very simple optigraph containing 3 nodes and one hyperedge between them.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plasmo
using Plots, PlasmoPlots
gr()

#create an optigraph
graph = OptiGraph()

@optinode(graph1,n1)
@variable(n1, y &gt;= 2)
@variable(n1,x &gt;= 0)
@constraint(n1,x + y &gt;= 3)
@objective(n1, Min, y)

@optinode(graph1,n2)
@variable(n2, y)
@variable(n2,x &gt;= 0)
@constraint(n2,x + y &gt;= 3)
@objective(n2, Min, y)

@optinode(graph1,n3)
@variable(n3, y )
@variable(n3,x &gt;= 0)
@constraint(n3,x + y &gt;= 3)
@objective(n3, Min, y)

@linkconstraint(graph1, n1[:x] + n2[:x] + n3[:x] == 3)

#plot the graph layout using `layout_plot`
plt_graph1 = layout_plot(graph1,
node_labels = true,
markersize = 60,
labelsize = 30,
linewidth = 4,
layout_options = Dict(:tol =&gt; 0.01,:iterations =&gt; 2));

#plot the matrix layout using `matrix_plot`
plt_matrix1 = matrix_plot(graph1,
node_labels = true,
markersize = 30);"><pre><span class="pl-k">using</span> Plasmo
<span class="pl-k">using</span> Plots, PlasmoPlots
<span class="pl-c1">gr</span>()

<span class="pl-c"><span class="pl-c">#</span>create an optigraph</span>
graph <span class="pl-k">=</span> <span class="pl-c1">OptiGraph</span>()

<span class="pl-c1">@optinode</span>(graph1,n1)
<span class="pl-c1">@variable</span>(n1, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@variable</span>(n1,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@constraint</span>(n1,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@objective</span>(n1, Min, y)

<span class="pl-c1">@optinode</span>(graph1,n2)
<span class="pl-c1">@variable</span>(n2, y)
<span class="pl-c1">@variable</span>(n2,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@constraint</span>(n2,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@objective</span>(n2, Min, y)

<span class="pl-c1">@optinode</span>(graph1,n3)
<span class="pl-c1">@variable</span>(n3, y )
<span class="pl-c1">@variable</span>(n3,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@constraint</span>(n3,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@objective</span>(n3, Min, y)

<span class="pl-c1">@linkconstraint</span>(graph1, n1[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n2[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n3[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span>plot the graph layout using `layout_plot`</span>
plt_graph1 <span class="pl-k">=</span> <span class="pl-c1">layout_plot</span>(graph1,
node_labels <span class="pl-k">=</span> <span class="pl-c1">true</span>,
markersize <span class="pl-k">=</span> <span class="pl-c1">60</span>,
labelsize <span class="pl-k">=</span> <span class="pl-c1">30</span>,
linewidth <span class="pl-k">=</span> <span class="pl-c1">4</span>,
layout_options <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:tol</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.01</span>,<span class="pl-c1">:iterations</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>));

<span class="pl-c"><span class="pl-c">#</span>plot the matrix layout using `matrix_plot`</span>
plt_matrix1 <span class="pl-k">=</span> <span class="pl-c1">matrix_plot</span>(graph1,
node_labels <span class="pl-k">=</span> <span class="pl-c1">true</span>,
markersize <span class="pl-k">=</span> <span class="pl-c1">30</span>);</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="assets/simple_plot_layout.png"><img src="assets/simple_plot_layout.png" width="250" height="250" style="max-width: 100%;"></a>  <a target="_blank" rel="noopener noreferrer" href="assets/simple_matrix_layout.png"><img src="assets/simple_matrix_layout.png" width="250" height="250" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-plotting-an-optigraph-with-subgraphs" class="anchor" aria-hidden="true" href="#plotting-an-optigraph-with-subgraphs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting an OptiGraph with Subgraphs</h3>
<p dir="auto">This example builds up an optigraph that contains subgraphs and shows the resulting plot.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plasmo
using Plots, PlasmoPlots
gr()

#Create an optigraph containing subgraphs
graph1 = OptiGraph()

@optinode(graph1,n1)
@variable(n1, x &gt;= 0)
@variable(n1, y &gt;= 2)
@constraint(n1,x + y &gt;= 3)
@objective(n1, Min, y)

@optinode(graph1,n2)
@variable(n2,x &gt;= 0)
@variable(n2, y &gt;= 2)
@constraint(n2,x + y &gt;= 3)
@objective(n2, Min, y)

@optinode(graph1,n3)
@variable(n3,x &gt;= 0)
@variable(n3, y &gt;= 2)
@constraint(n3,x + y &gt;= 3)
@objective(n3, Min, y)

@linkconstraint(graph1, n1[:x] + n2[:x] + n3[:x] == 3)

graph2 = OptiGraph()

@optinode(graph2,n4)
@variable(n4, x &gt;= 0)
@variable(n4, y &gt;= 2)
@constraint(n4,x + y &gt;= 5)
@objective(n4, Min, y)

@optinode(graph2,n5)
@variable(n5, x &gt;= 0)
@variable(n5, y &gt;= 2)
@constraint(n5,x + y &gt;= 5)
@objective(n5, Min, y)

@optinode(graph2,n6)
@variable(n6, x &gt;= 0)
@variable(n6, y &gt;= 2 )
@constraint(n6,x + y &gt;= 5)
@objective(n6, Min, y)

@linkconstraint(graph2, n4[:x] + n5[:x] + n6[:x] == 5)

graph3 = OptiGraph()

@optinode(graph3,n7)
@variable(n7, x &gt;= 0)
@variable(n7, y &gt;= 2)
@constraint(n7,x + y &gt;= 7)
@objective(n7, Min, y)

@optinode(graph3,n8)
@variable(n8, x &gt;= 0)
@variable(n8, y &gt;= 2)
@constraint(n8,x + y &gt;= 7)
@objective(n8, Min, y)

@optinode(graph3,n9)
@variable(n9,x &gt;= 0)
@variable(n9, y &gt;= 2)
@constraint(n9,x + y &gt;= 7)
@objective(n9, Min, y)

@linkconstraint(graph3, n7[:x] + n8[:x] + n9[:x] == 7)

#This is the high level optigraph that contains the other optigraphs
graph0 = OptiGraph()
@optinode(graph0,n0)
@variable(n0,x)
@constraint(n0,x &gt;= 0)

add_subgraph!(graph0,graph1)
add_subgraph!(graph0,graph2)
add_subgraph!(graph0,graph3)
@linkconstraint(graph0,n3[:x] + n5[:x] + n7[:x] == 10)

@linkconstraint(graph0,n0[:x] + n3[:x] == 3)
@linkconstraint(graph0,n0[:x] + n5[:x] == 5)
@linkconstraint(graph0,n0[:x] + n7[:x] == 7)

#set the node labels which get plotted
for (i,node) in enumerate(all_nodes(graph0))
    node.label = &quot;n$i&quot;
end

#plot the graph layout using `layout_plot` which will show subgraphs
plt_graph2 = layout_plot(graph0,
node_labels = true,
markersize = 60,
labelsize = 30,
linewidth = 4,
subgraph_colors = true,
layout_options = Dict(:tol =&gt; 0.001,:C =&gt; 2, :K =&gt; 4, :iterations =&gt; 5));

#plot the matrix layout using `matrix_plot` which will show subgraphs
plt_matrix2 = matrix_plot(graph0,
node_labels = true,
subgraph_colors = true,
markersize = 16);"><pre><span class="pl-k">using</span> Plasmo
<span class="pl-k">using</span> Plots, PlasmoPlots
<span class="pl-c1">gr</span>()

<span class="pl-c"><span class="pl-c">#</span>Create an optigraph containing subgraphs</span>
graph1 <span class="pl-k">=</span> <span class="pl-c1">OptiGraph</span>()

<span class="pl-c1">@optinode</span>(graph1,n1)
<span class="pl-c1">@variable</span>(n1, x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n1, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n1,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@objective</span>(n1, Min, y)

<span class="pl-c1">@optinode</span>(graph1,n2)
<span class="pl-c1">@variable</span>(n2,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n2, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n2,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@objective</span>(n2, Min, y)

<span class="pl-c1">@optinode</span>(graph1,n3)
<span class="pl-c1">@variable</span>(n3,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n3, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n3,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@objective</span>(n3, Min, y)

<span class="pl-c1">@linkconstraint</span>(graph1, n1[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n2[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n3[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">3</span>)

graph2 <span class="pl-k">=</span> <span class="pl-c1">OptiGraph</span>()

<span class="pl-c1">@optinode</span>(graph2,n4)
<span class="pl-c1">@variable</span>(n4, x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n4, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n4,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">5</span>)
<span class="pl-c1">@objective</span>(n4, Min, y)

<span class="pl-c1">@optinode</span>(graph2,n5)
<span class="pl-c1">@variable</span>(n5, x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n5, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n5,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">5</span>)
<span class="pl-c1">@objective</span>(n5, Min, y)

<span class="pl-c1">@optinode</span>(graph2,n6)
<span class="pl-c1">@variable</span>(n6, x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n6, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span> )
<span class="pl-c1">@constraint</span>(n6,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">5</span>)
<span class="pl-c1">@objective</span>(n6, Min, y)

<span class="pl-c1">@linkconstraint</span>(graph2, n4[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n5[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n6[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">5</span>)

graph3 <span class="pl-k">=</span> <span class="pl-c1">OptiGraph</span>()

<span class="pl-c1">@optinode</span>(graph3,n7)
<span class="pl-c1">@variable</span>(n7, x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n7, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n7,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">7</span>)
<span class="pl-c1">@objective</span>(n7, Min, y)

<span class="pl-c1">@optinode</span>(graph3,n8)
<span class="pl-c1">@variable</span>(n8, x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n8, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n8,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">7</span>)
<span class="pl-c1">@objective</span>(n8, Min, y)

<span class="pl-c1">@optinode</span>(graph3,n9)
<span class="pl-c1">@variable</span>(n9,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">@variable</span>(n9, y <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@constraint</span>(n9,x <span class="pl-k">+</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">7</span>)
<span class="pl-c1">@objective</span>(n9, Min, y)

<span class="pl-c1">@linkconstraint</span>(graph3, n7[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n8[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n9[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">7</span>)

<span class="pl-c"><span class="pl-c">#</span>This is the high level optigraph that contains the other optigraphs</span>
graph0 <span class="pl-k">=</span> <span class="pl-c1">OptiGraph</span>()
<span class="pl-c1">@optinode</span>(graph0,n0)
<span class="pl-c1">@variable</span>(n0,x)
<span class="pl-c1">@constraint</span>(n0,x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)

<span class="pl-c1">add_subgraph!</span>(graph0,graph1)
<span class="pl-c1">add_subgraph!</span>(graph0,graph2)
<span class="pl-c1">add_subgraph!</span>(graph0,graph3)
<span class="pl-c1">@linkconstraint</span>(graph0,n3[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n5[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n7[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">10</span>)

<span class="pl-c1">@linkconstraint</span>(graph0,n0[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n3[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@linkconstraint</span>(graph0,n0[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n5[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">5</span>)
<span class="pl-c1">@linkconstraint</span>(graph0,n0[<span class="pl-c1">:x</span>] <span class="pl-k">+</span> n7[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> <span class="pl-c1">7</span>)

<span class="pl-c"><span class="pl-c">#</span>set the node labels which get plotted</span>
<span class="pl-k">for</span> (i,node) <span class="pl-k">in</span> <span class="pl-c1">enumerate</span>(<span class="pl-c1">all_nodes</span>(graph0))
    node<span class="pl-k">.</span>label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>n<span class="pl-v">$i</span><span class="pl-pds">"</span></span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span>plot the graph layout using `layout_plot` which will show subgraphs</span>
plt_graph2 <span class="pl-k">=</span> <span class="pl-c1">layout_plot</span>(graph0,
node_labels <span class="pl-k">=</span> <span class="pl-c1">true</span>,
markersize <span class="pl-k">=</span> <span class="pl-c1">60</span>,
labelsize <span class="pl-k">=</span> <span class="pl-c1">30</span>,
linewidth <span class="pl-k">=</span> <span class="pl-c1">4</span>,
subgraph_colors <span class="pl-k">=</span> <span class="pl-c1">true</span>,
layout_options <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:tol</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.001</span>,<span class="pl-c1">:C</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>, <span class="pl-c1">:K</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">4</span>, <span class="pl-c1">:iterations</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">5</span>));

<span class="pl-c"><span class="pl-c">#</span>plot the matrix layout using `matrix_plot` which will show subgraphs</span>
plt_matrix2 <span class="pl-k">=</span> <span class="pl-c1">matrix_plot</span>(graph0,
node_labels <span class="pl-k">=</span> <span class="pl-c1">true</span>,
subgraph_colors <span class="pl-k">=</span> <span class="pl-c1">true</span>,
markersize <span class="pl-k">=</span> <span class="pl-c1">16</span>);</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="assets/subgraph_plot_layout.png"><img src="assets/subgraph_plot_layout.png" width="250" height="250" style="max-width: 100%;"></a>  <a target="_blank" rel="noopener noreferrer" href="assets/subgraph_matrix_layout.png"><img src="assets/subgraph_matrix_layout.png" width="250" height="250" style="max-width: 100%;"></a></p>
</article></div>