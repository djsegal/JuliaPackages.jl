<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gridapgmsh-" class="anchor" aria-hidden="true" href="#gridapgmsh-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GridapGmsh <a target="_blank" rel="noopener noreferrer" href="https://github.com/gridap/Gridap.jl/blob/master/images/color-logo-only.png"><img src="https://github.com/gridap/Gridap.jl/raw/master/images/color-logo-only.png" width="40" title="Gridap logo" style="max-width:100%;"></a></h1>
<p><a href="https://github.com/gridap/GridapGmsh.jl/actions?query=workflow%3ACI"><img src="https://github.com/gridap/GridapGmsh.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/gridap/GridapGmsh.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/52e228cdb41f008d843730b001c32d27e17262bda0cbe7d699a73e8482d9c1cc/68747470733a2f2f636f6465636f762e696f2f67682f6772696461702f477269646170476d73682e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/gridap/GridapGmsh.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demo</h2>
<p>Solve a Poisson problem with Gridap on top of a Finite Element mesh generated by GMSH. The mesh includes two physical groups, <code>"boundary1"</code> and <code>"boundary2"</code>, which are used to define boundary conditions. This is just a simple demo. Once the GMSH mesh is read, all the magic of Gridap can be applied to it.</p>
<p><a target="_blank" rel="noopener noreferrer" href="demo/demo-gmsh.png"><img src="demo/demo-gmsh.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Gridap
using GridapGmsh
model = GmshDiscreteModel(&quot;demo/demo.msh&quot;)
order = 1
reffe = ReferenceFE(lagrangian,Float64,order)
V = TestFESpace(model,reffe,dirichlet_tags=[&quot;boundary1&quot;,&quot;boundary2&quot;])
U = TrialFESpace(V,[0,1])
Ω = Triangulation(model)
dΩ = Measure(Ω,2*order)
a(u,v) = ∫( ∇(v)⋅∇(u) )dΩ
l(v) = 0
op = AffineFEOperator(a,l,U,V)
uh = solve(op)
writevtk(Ω,&quot;demo&quot;,cellfields=[&quot;uh&quot;=&gt;uh])
"><pre><span class="pl-k">using</span> Gridap
<span class="pl-k">using</span> GridapGmsh
model <span class="pl-k">=</span> <span class="pl-c1">GmshDiscreteModel</span>(<span class="pl-s"><span class="pl-pds">"</span>demo/demo.msh<span class="pl-pds">"</span></span>)
order <span class="pl-k">=</span> <span class="pl-c1">1</span>
reffe <span class="pl-k">=</span> <span class="pl-c1">ReferenceFE</span>(lagrangian,Float64,order)
V <span class="pl-k">=</span> <span class="pl-c1">TestFESpace</span>(model,reffe,dirichlet_tags<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>boundary1<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>boundary2<span class="pl-pds">"</span></span>])
U <span class="pl-k">=</span> <span class="pl-c1">TrialFESpace</span>(V,[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>])
Ω <span class="pl-k">=</span> <span class="pl-c1">Triangulation</span>(model)
dΩ <span class="pl-k">=</span> <span class="pl-c1">Measure</span>(Ω,<span class="pl-c1">2</span><span class="pl-k">*</span>order)
<span class="pl-en">a</span>(u,v) <span class="pl-k">=</span> <span class="pl-c1">∫</span>( <span class="pl-c1">∇</span>(v)<span class="pl-k">⋅</span><span class="pl-c1">∇</span>(u) )dΩ
<span class="pl-en">l</span>(v) <span class="pl-k">=</span> <span class="pl-c1">0</span>
op <span class="pl-k">=</span> <span class="pl-c1">AffineFEOperator</span>(a,l,U,V)
uh <span class="pl-k">=</span> <span class="pl-c1">solve</span>(op)
<span class="pl-c1">writevtk</span>(Ω,<span class="pl-s"><span class="pl-pds">"</span>demo<span class="pl-pds">"</span></span>,cellfields<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>uh<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>uh])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="demo/demo.png"><img src="demo/demo.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><code>GridapGmsh</code> is a registered package in the official <a href="https://github.com/JuliaRegistries/General">Julia package registry</a>.  Thus, the installation is done using the <a href="https://julialang.github.io/Pkg.jl/v1/" rel="nofollow">Julia's package manager</a>. Open the Julia REPL, type <code>]</code> to enter package mode, and install as follows</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add GridapGmsh
"><pre>pkg<span class="pl-k">&gt;</span> add GridapGmsh</pre></div>
<h2><a id="user-content-installation-requirements" class="anchor" aria-hidden="true" href="#installation-requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation requirements</h2>
<p><code>GridapGmsh</code> requires <a href="https://gmsh.info/" rel="nofollow">GMSH</a>. There are two possible ways to install the GMSH dependency:</p>
<ol>
<li>
<p>[Recommended] Do nothing (automatically installation). <code>GridapGmsh</code> will download a GMSH binary via <a href="https://github.com/JuliaBinaryWrappers/gmsh_jll.jl">BinaryBuilder</a>, which then is installed to your <code>~/.julia/artifacts</code> directory, this should work fine in the most cases.</p>
</li>
<li>
<p>[Fallback] Set an environment variable called <code>GMSHROOT</code> containing the path to the location of the root folder of a GMSH-SDK installation. The GMSH Software Development Kit (SDK) available at <a href="https://gmsh.info/" rel="nofollow">gmsh.info</a>. Make sure that: <code>$GMSHROOT/bin/gmsh</code> is the path of the GMSH binary and <code>$GMSHROOT/lib/gmsh.jl</code> is the path of the GMSH Julia API.</p>
</li>
</ol>
<h2><a id="user-content-gotchas" class="anchor" aria-hidden="true" href="#gotchas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gotchas</h2>
<ul>
<li>
<p>Gmsh does not allow to include entities of different dimension in the same physical group. In order to overcome this limitation, all physical groups defined in Gmesh with the same name will be merged in the same physical tag independently of their dimension.</p>
</li>
<li>
<p>Vertices are always assigned to the corresponding CAD entity. However, this is not true for higher dimensional objects (i.e., edges, faces, cells). The later objects are associated with the right CAD entity if and only if they are present in a physical group of the same dimension of the object. If the object does not belong to a physical group of the same dimension, but it belongs to the closure of a higher dimensional object appearing in a physical group, then the low dimensional object receives the CAD id of the high dimensional object. If several high dimensional objects fulfill this requirement, we choose one arbitrary of the lowest dimension possible. This ensures, that edges and faces are assigned to the right CAD entity if the are in the interior of the CAD entity. The same is not true if the object is on the boundary of the CAD entity. In this case, include the corresponding object in a physical group if the right CAD ids are required.</p>
</li>
</ul>
<h2><a id="user-content-how-to-cite-gridap" class="anchor" aria-hidden="true" href="#how-to-cite-gridap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to cite Gridap</h2>
<p>In order to give credit to the <code>Gridap</code> contributors, we simply ask you to cite the reference below in any publication in which you have made use of <code>Gridap</code> packages:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@article{Badia2020,
  doi = {10.21105/joss.02520},
  url = {https://doi.org/10.21105/joss.02520},
  year = {2020},
  publisher = {The Open Journal},
  volume = {5},
  number = {52},
  pages = {2520},
  author = {Santiago Badia and Francesc Verdugo},
  title = {Gridap: An extensible Finite Element toolbox in Julia},
  journal = {Journal of Open Source Software}
}
"><pre><code>@article{Badia2020,
  doi = {10.21105/joss.02520},
  url = {https://doi.org/10.21105/joss.02520},
  year = {2020},
  publisher = {The Open Journal},
  volume = {5},
  number = {52},
  pages = {2520},
  author = {Santiago Badia and Francesc Verdugo},
  title = {Gridap: An extensible Finite Element toolbox in Julia},
  journal = {Journal of Open Source Software}
}
</code></pre></div>
<h2><a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contact</h2>
<p>Please, contact the project administrators, <a href="mailto:santiago.badia@monash.edu">Santiago Badia</a> and <a href="mailto:fverdugo@cimne.upc.edu">Francesc Verdugo</a>, for further questions about licenses and terms of use.</p>
</article></div>