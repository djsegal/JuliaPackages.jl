<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-chordal" class="anchor" aria-hidden="true" href="#chordal"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Chordal</h1>
<p dir="auto"><a href="https://tjdiamandis.github.io/Chordal.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/tjdiamandis/Chordal.jl/actions"><img src="https://github.com/tjdiamandis/Chordal.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/tjdiamandis/Chordal.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1d08f732a09d93cfc76f57e03e011429cc361cc8d612462c31829a2289d6b6af/68747470733a2f2f636f6465636f762e696f2f67682f746a6469616d616e6469732f43686f7264616c2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d5a5057364f5853443941" alt="codecov" data-canonical-src="https://codecov.io/gh/tjdiamandis/Chordal.jl/branch/main/graph/badge.svg?token=ZPW6OXSD9A" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-note-this-package-is-very-much-a-work-in-progress-feature-requests-welcome" class="anchor" aria-hidden="true" href="#note-this-package-is-very-much-a-work-in-progress-feature-requests-welcome"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NOTE: This package is very much a work in progress. Feature requests welcome!</h4>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">This package implements data structures and subroutines for chordal matrices. It is largely a (work in progress) port of <a href="https://chompack.readthedocs.io/en/latest/" rel="nofollow"><code>CHOMPACK.py</code></a> to Julia and currently includes routines for</p>
<ul dir="auto">
<li>Chordal Decomposition of PSD matrices</li>
<li>Maximum Determinant PSD completion</li>
<li>Chordality tests and perfect elimination ordering</li>
</ul>
<p dir="auto">These algorithms are (mostly) based on the multi-frontal algorithms described in <a href="https://arxiv.org/abs/1203.2742" rel="nofollow">Logarithmic Barriers for Sparse Matrix Cones</a> and the survey paper <a href="https://www.seas.ucla.edu/~vandenbe/publications/chordalsdp.pdf" rel="nofollow">Chordal Graphs and Semidefinite Optimization</a>.</p>
<p dir="auto">Additionally, <code>Chordal.jl</code> includes utility functions for the elimination tree and clique tree data structures described in these papers.</p>
<h2 dir="auto"><a id="user-content-chordal-decomposition" class="anchor" aria-hidden="true" href="#chordal-decomposition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Chordal Decomposition</h2>
<p dir="auto">Chordal decomposition breaks up a large <code>n x n</code> PSD matrix constraint into <code>K</code> smaller <code>n_k x n_k</code> PSD constraints. These smaller constraints correspond to the cliques in the chordal graph associated with the aggregate sparsity pattern of the problem (i.e., the matrices associated with the constraints and objective function involving the PSD variable).</p>
<p dir="auto">These cliques can be further combined (replacing structural zeros with numeric zeros) to optimize optimization algorithm performance. This package uses the clique graph-based merging scheme introduced by Garstka et al. in <a href="https://arxiv.org/abs/1911.05615" rel="nofollow">A clique graph based merging strategy for decomposable SDPs</a> and implemented in <a href="https://github.com/oxfordcontrol/COSMO.jl">COSMO.jl</a>).</p>
<h2 dir="auto"><a id="user-content-additional-functionality-to-include-and-todos" class="anchor" aria-hidden="true" href="#additional-functionality-to-include-and-todos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Additional functionality to include and TODOs</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Min rank matrix completion</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Utility functions for SDP decomposition with JuMP</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Symbolic and numeric cholesky factorization</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Allow user-specified weight function for clique graph merging</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Euclidean distance matrix completion</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Only support LMI form of SDP &amp; use <code>Dualization.jl</code> to convert standard form.</li>
</ul>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>Lieven Vandenberghe and Martin Andersen's <a href="https://www.seas.ucla.edu/~vandenbe/publications/chordalsdp.pdf" rel="nofollow">Chordal Graphs and Semidefinite Optimization</a></li>
<li>Martin Andersen, Joachim Dahl, and Lieven Vandenberghe's <a href="https://arxiv.org/abs/1203.2742" rel="nofollow">Logarithmic Barriers for Sparse Matrix Cones</a></li>
<li>Yifan Sun's thesis <a href="https://escholarship.org/content/qt1cv6981p/qt1cv6981p.pdf" rel="nofollow">Decomposition Methods for Semidefinite optimization</a></li>
<li>Yifan Sun, Martin S. Andersen, and Lieven Vandenberghe's <a href="https://arxiv.org/abs/1306.0057" rel="nofollow">Decomposition in conic optimization with partially separable structure</a></li>
<li>Michael Garstka, Mark Cannon, and Paul Goulart's <a href="https://arxiv.org/abs/1911.05615" rel="nofollow">A clique graph based merging strategy for decomposable SDPs</a></li>
</ul>
<h2 dir="auto"><a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>See also</h2>
<ul dir="auto">
<li><a href="https://github.com/oxfordcontrol/COSMO.jl"><code>COSMO.jl</code></a> is a conic solver that uses chordal decomposition for large PSD constraints.</li>
<li><a href="https://github.com/cvxopt/chompack"><code>CHOMPACK.py</code></a> includes the same algorithms in Python.</li>
</ul>
</article></div>