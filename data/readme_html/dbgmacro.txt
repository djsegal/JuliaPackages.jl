<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-dbgmacrojl" class="anchor" aria-hidden="true" href="#dbgmacrojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DbgMacro.jl</h1>

<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width: 100%;"></a>
<a href="https://FedericoStra.github.io/DbgMacro.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://FedericoStra.github.io/DbgMacro.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/FedericoStra/DbgMacro.jl/actions"><img src="https://github.com/FedericoStra/DbgMacro.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides four macros: <code>@dbg</code>, <code>@dumpct</code>, <code>@dumprt</code> and <code>@qn</code>.</p>
<p dir="auto">When executing</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@dbg ex1 ex2 ex3 ..."><pre><span class="pl-c1">@dbg</span> ex1 ex2 ex3 <span class="pl-k">...</span></pre></div>
<p dir="auto">the macro generates code that displays all the expressions in the same way as <code>@show</code> does, each on a separate line,
preceded by the location in the format <code>module:file:line</code>. The output goes to <code>stderr</code>. Useful for debugging.</p>
<p dir="auto">It is inspired by Rust <a href="https://doc.rust-lang.org/std/macro.dbg.html" rel="nofollow"><code>dbg!</code></a> macro.</p>
<p dir="auto">The macros <code>@dumpct</code> and <code>@dumprt</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@dumpct expression
@dumprt expression"><pre><span class="pl-c1">@dumpct</span> expression
<span class="pl-c1">@dumprt</span> expression</pre></div>
<p dir="auto">dump the provided expression at compile-time or run-time respectively.</p>
<p dir="auto">The macro <code>@qn</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@qn expression"><pre><span class="pl-c1">@qn</span> expression</pre></div>
<p dir="auto">returns the quoted expression without interpolating contained <code>$</code>.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using DbgMacro

julia&gt; m = [1 2; 3 4]
2×2 Matrix{Int64}:
 1  2
 3  4

julia&gt; @dbg 1+2 &quot;Hello&quot; m
Main:REPL[3]:1  1 + 2 = 3
Main:REPL[3]:1  &quot;Hello&quot; = &quot;Hello&quot;
Main:REPL[3]:1  m = [1 2; 3 4]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DbgMacro

julia<span class="pl-k">&gt;</span> m <span class="pl-k">=</span> [<span class="pl-c1">1</span> <span class="pl-c1">2</span>; <span class="pl-c1">3</span> <span class="pl-c1">4</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> Matrix{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@dbg</span> <span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span> <span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span> m
Main<span class="pl-k">:</span>REPL[<span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-c1">1</span>  <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">=</span> <span class="pl-c1">3</span>
Main<span class="pl-k">:</span>REPL[<span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-c1">1</span>  <span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>
Main<span class="pl-k">:</span>REPL[<span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-c1">1</span>  m <span class="pl-k">=</span> [<span class="pl-c1">1</span> <span class="pl-c1">2</span>; <span class="pl-c1">3</span> <span class="pl-c1">4</span>]</pre></div>
</article></div>