<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-telegraphnoise" class="anchor" aria-hidden="true" href="#telegraphnoise"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TelegraphNoise</h1>

<p dir="auto"><a href="https://meese-wj.github.io/TelegraphNoise.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/meese-wj/TelegraphNoise.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/meese-wj/TelegraphNoise.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia package for generating random telegraph noise (RTN).</p>
<p dir="auto">RTN, also known as <a href="https://en.wikipedia.org/wiki/Burst_noise?oldformat=true" rel="nofollow"><em>burst noise</em></a> or a <em>random telegraph signal</em>, have a set of useful analytical properties which can make them ideal for testing the statistical analyses of time series. For example, in the simplest cases, RTNs have two equally probable states and are characterized by a single time scale, known as the <em>dwell time</em> <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="20e177e9c2ddd1ba6bbc619cb1d7faf2">$T_D$</math-renderer>, which represents the average time spent in either state before switching. The probability of the signal inhabiting either state for a time <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="20e177e9c2ddd1ba6bbc619cb1d7faf2">$t \in (t_0, t_0 + {\rm d}t)$</math-renderer> is given by
$$ {\rm Pr}\left( t \in (t_0, t_0 + {\rm d} t) \right) = {\rm e}^{-t/T_D} \cdot \frac{{\rm d}t}{T_D}.$$</p>
<p dir="auto">One can then <a href="https://dsp.stackexchange.com/questions/16596/autocorrelation-of-a-telegraph-process-constant-signal" rel="nofollow">show</a> that the autocovariance <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="20e177e9c2ddd1ba6bbc619cb1d7faf2">$\mathcal{A}$</math-renderer> (autocorrelation for de-meaned signals) goes as
$$ \mathcal{A}(t, t_0; T_D) = \exp\left( -2 \; \frac{\vert t - t_0 \vert}{T_D} \right),$$
showing the stationarity of these processes <a href="#1">[1]</a>. Furthermore, the <em>autocorrelation time</em> <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="20e177e9c2ddd1ba6bbc619cb1d7faf2">$\tau$</math-renderer> of such a signal then follows exactly as <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="20e177e9c2ddd1ba6bbc619cb1d7faf2">$\tau = T_D /2$</math-renderer>.</p>
<h2 dir="auto">
<a id="user-content-additional-information" class="anchor" aria-hidden="true" href="#additional-information"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Additional Information</h2>
<p dir="auto"><a id="user-content-1">[1]</a>
For an additional derivation, and a great overall introduction to the science of noise analysis in signals, check out D. K. C. MacDonald's <a href="https://isbnsearch.org/isbn/9780486450292" rel="nofollow"><em>Noise and Fluctuations</em></a>  (orig. 1962, <em>Dover Publications</em> 2006). The derivation is specifically in Appendix IV.</p>
</article></div>