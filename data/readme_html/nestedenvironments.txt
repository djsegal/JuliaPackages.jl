<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-deprecated-the-same-idea-has-already-been-developed-in-labelledarrays-take-a-look-at-it" class="anchor" aria-hidden="true" href="#deprecated-the-same-idea-has-already-been-developed-in-labelledarrays-take-a-look-at-it"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Deprecated: The same idea has already been developed in <a href="https://github.com/SciML/LabelledArrays.jl">LabelledArrays</a>. Take a look at it!</h1>
<h1><a id="user-content-nestedenvironmentsjl" class="anchor" aria-hidden="true" href="#nestedenvironmentsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NestedEnvironments.jl</h1>
<p>This is an API for nested environments,
compatible with <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>.</p>
<h2><a id="user-content-terminology" class="anchor" aria-hidden="true" href="#terminology"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Terminology</h2>
<p>An environment may consist of nested environments.
Each environment is a structure (e.g., <code>typeof(env) &lt;: AbstractEnv</code>), which includes dynamical systems and additional information.</p>
<h2><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes</h2>
<ul>
<li>Currently, only ODE is supported.
See <code>src/API.jl</code> for more details.</li>
</ul>
<h1><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h1>
<h2><a id="user-content-nested-environments" class="anchor" aria-hidden="true" href="#nested-environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nested environments</h2>
<p><code>NestedEnvironments.jl</code> supports nested environments API.
The <strong>dynamical equations</strong> and <strong>initial condition</strong> are treated as structured forms (as NamedTuple).
Compared to the original <code>DifferentialEquations.jl</code>, you don't need to match the index of derivative calculation.
For example,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function f(x, p, t)
    x1 = x.env1  # for example
    x2 = x.env2  # for example
    dx1 = x2
    dx2 = -x1
    (; x1 = dx1, x2 = dx2)  # NamedTuple
end
"><pre><span class="pl-k">function</span> <span class="pl-en">f</span>(x, p, t)
    x1 <span class="pl-k">=</span> x<span class="pl-k">.</span>env1  <span class="pl-c"><span class="pl-c">#</span> for example</span>
    x2 <span class="pl-k">=</span> x<span class="pl-k">.</span>env2  <span class="pl-c"><span class="pl-c">#</span> for example</span>
    dx1 <span class="pl-k">=</span> x2
    dx2 <span class="pl-k">=</span> <span class="pl-k">-</span>x1
    (; x1 <span class="pl-k">=</span> dx1, x2 <span class="pl-k">=</span> dx2)  <span class="pl-c"><span class="pl-c">#</span> NamedTuple</span>
<span class="pl-k">end</span></pre></div>
<p>instead of</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function f(x, p, t)
    dx = zero(x)
    dx[1] = x[2]
    dx[2] = -x[1]
    dx
end
"><pre><span class="pl-k">function</span> <span class="pl-en">f</span>(x, p, t)
    dx <span class="pl-k">=</span> <span class="pl-c1">zero</span>(x)
    dx[<span class="pl-c1">1</span>] <span class="pl-k">=</span> x[<span class="pl-c1">2</span>]
    dx[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-k">-</span>x[<span class="pl-c1">1</span>]
    dx
<span class="pl-k">end</span></pre></div>
<p>.
For more details, see the below example.</p>
<h2><a id="user-content-macros-and-auto-completion" class="anchor" aria-hidden="true" href="#macros-and-auto-completion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Macros and auto-completion</h2>
<p><code>NestedEnvironments.jl</code> provides convenient macros such as <code>@readable</code> and <code>@raw</code>.
<code>@readable</code> makes an Array, compatible with <code>DifferentialEquations.jl</code>, (structured) NamedTuple.
Conversely,
<code>@raw</code> makes a NamedTuple, default structure of <code>NestedEnvironments.jl</code>, an Array compatible with <code>DifferentialEquations.jl</code>.</p>
<h2><a id="user-content-environment-zoo" class="anchor" aria-hidden="true" href="#environment-zoo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Environment Zoo</h2>
<p>It provides some predefined environments.
See <code>src/zoo.jl</code> for more information.</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<h3><a id="user-content-nested-environments-1" class="anchor" aria-hidden="true" href="#nested-environments-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nested environments</h3>
<p>It is highly recommended to run the following code and practice how to use it.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using NestedEnvironments
using DifferentialEquations
using Transducers
using Test


# `BaseEnv` is a kind of syntax sugar for definition of environment; provided by `src/zoo.jl`.
# Note: `NestedEnvironments.initial_condition(env::BaseEnv) = env.initial_state`
struct Env2 &lt;: AbstractEnv
    env21::BaseEnv
    env22::BaseEnv
end
struct Env &lt;: AbstractEnv
    env1::BaseEnv
    env2::Env2
    gain::Float64
end


# differential equations are regarded as nested envs (NamedTuple)
function dynamics(env::Env)
    return function (x, p, t)
        x1 = x.env1
        x21 = x.env2.env21
        x22 = x.env2.env22
        ẋ1 = -x1 - env.gain*sum(x21 + x22)
        ẋ21 = -x21
        ẋ22 = -x22
        (; env1 = ẋ1, env2 = (; env21 = ẋ21, env22 = ẋ22))
    end
end

# for convenience
function make_env()
    env21, env22 = BaseEnv(reshape(collect(1:8), 2, 4)), BaseEnv(reshape(collect(9:16), 2, 4))
    env1 = BaseEnv(-1)
    env2 = Env2(env21, env22)
    gain = 2.0
    env = Env(env1, env2, gain)
    env
end
# register env; do it in global scope
__env = make_env()
__x0 = NestedEnvironments.initial_condition(__env)
@reg_env __env __x0

# test
function test()
    env = make_env()
    # initial condition
    # if you extend `NestedEnvironments.initial_condition` for all sub environments, then `NestedEnvironments.initial_condition(env::Env)` will automatically complete a readable initial condition as NamedTuple.
    x0 = NestedEnvironments.initial_condition(env)  # auto-completion of initial condition
    @show x0  # x0 = (env1 = -1, env2 = (env21 = [1 3 5 7; 2 4 6 8], env22 = [9 11 13 15; 10 12 14 16]))
    t0 = 0.0
    tf = 10.0
    tspan = (t0, tf)
    Δt = 0.01  # saveat; not numerical integration
    ts = t0:Δt:tf
    prob = ODEProblem(env, dynamics(env), x0, tspan)
    @time sol = solve(prob, Tsit5(), saveat=ts)
    # readable
    xs = sol.u |&gt; Map(_x -&gt; @readable _x) |&gt; collect  # nested states
    @test xs[1].env1 == x0.env1
    @test xs[1].env2.env21 == x0.env2.env21
    @test xs[1].env2.env22 == x0.env2.env22
    # raw
    _x0 = @raw x0
    @show _x0  # _x0 = [-1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
    @test _x0 == sol.u[1]
end
"><pre><span class="pl-k">using</span> NestedEnvironments
<span class="pl-k">using</span> DifferentialEquations
<span class="pl-k">using</span> Transducers
<span class="pl-k">using</span> Test


<span class="pl-c"><span class="pl-c">#</span> `BaseEnv` is a kind of syntax sugar for definition of environment; provided by `src/zoo.jl`.</span>
<span class="pl-c"><span class="pl-c">#</span> Note: `NestedEnvironments.initial_condition(env::BaseEnv) = env.initial_state`</span>
<span class="pl-k">struct</span> Env2 <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractEnv</span>
    env21<span class="pl-k">::</span><span class="pl-c1">BaseEnv</span>
    env22<span class="pl-k">::</span><span class="pl-c1">BaseEnv</span>
<span class="pl-k">end</span>
<span class="pl-k">struct</span> Env <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractEnv</span>
    env1<span class="pl-k">::</span><span class="pl-c1">BaseEnv</span>
    env2<span class="pl-k">::</span><span class="pl-c1">Env2</span>
    gain<span class="pl-k">::</span><span class="pl-c1">Float64</span>
<span class="pl-k">end</span>


<span class="pl-c"><span class="pl-c">#</span> differential equations are regarded as nested envs (NamedTuple)</span>
<span class="pl-k">function</span> <span class="pl-en">dynamics</span>(env<span class="pl-k">::</span><span class="pl-c1">Env</span>)
    <span class="pl-k">return</span> <span class="pl-k">function</span> (x, p, t)
        x1 <span class="pl-k">=</span> x<span class="pl-k">.</span>env1
        x21 <span class="pl-k">=</span> x<span class="pl-k">.</span>env2<span class="pl-k">.</span>env21
        x22 <span class="pl-k">=</span> x<span class="pl-k">.</span>env2<span class="pl-k">.</span>env22
        ẋ1 <span class="pl-k">=</span> <span class="pl-k">-</span>x1 <span class="pl-k">-</span> env<span class="pl-k">.</span>gain<span class="pl-k">*</span><span class="pl-c1">sum</span>(x21 <span class="pl-k">+</span> x22)
        ẋ21 <span class="pl-k">=</span> <span class="pl-k">-</span>x21
        ẋ22 <span class="pl-k">=</span> <span class="pl-k">-</span>x22
        (; env1 <span class="pl-k">=</span> ẋ1, env2 <span class="pl-k">=</span> (; env21 <span class="pl-k">=</span> ẋ21, env22 <span class="pl-k">=</span> ẋ22))
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> for convenience</span>
<span class="pl-k">function</span> <span class="pl-en">make_env</span>()
    env21, env22 <span class="pl-k">=</span> <span class="pl-c1">BaseEnv</span>(<span class="pl-c1">reshape</span>(<span class="pl-c1">collect</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">8</span>), <span class="pl-c1">2</span>, <span class="pl-c1">4</span>)), <span class="pl-c1">BaseEnv</span>(<span class="pl-c1">reshape</span>(<span class="pl-c1">collect</span>(<span class="pl-c1">9</span><span class="pl-k">:</span><span class="pl-c1">16</span>), <span class="pl-c1">2</span>, <span class="pl-c1">4</span>))
    env1 <span class="pl-k">=</span> <span class="pl-c1">BaseEnv</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>)
    env2 <span class="pl-k">=</span> <span class="pl-c1">Env2</span>(env21, env22)
    gain <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
    env <span class="pl-k">=</span> <span class="pl-c1">Env</span>(env1, env2, gain)
    env
<span class="pl-k">end</span>
<span class="pl-c"><span class="pl-c">#</span> register env; do it in global scope</span>
__env <span class="pl-k">=</span> <span class="pl-c1">make_env</span>()
__x0 <span class="pl-k">=</span> NestedEnvironments<span class="pl-k">.</span><span class="pl-c1">initial_condition</span>(__env)
<span class="pl-c1">@reg_env</span> __env __x0

<span class="pl-c"><span class="pl-c">#</span> test</span>
<span class="pl-k">function</span> <span class="pl-en">test</span>()
    env <span class="pl-k">=</span> <span class="pl-c1">make_env</span>()
    <span class="pl-c"><span class="pl-c">#</span> initial condition</span>
    <span class="pl-c"><span class="pl-c">#</span> if you extend `NestedEnvironments.initial_condition` for all sub environments, then `NestedEnvironments.initial_condition(env::Env)` will automatically complete a readable initial condition as NamedTuple.</span>
    x0 <span class="pl-k">=</span> NestedEnvironments<span class="pl-k">.</span><span class="pl-c1">initial_condition</span>(env)  <span class="pl-c"><span class="pl-c">#</span> auto-completion of initial condition</span>
    <span class="pl-c1">@show</span> x0  <span class="pl-c"><span class="pl-c">#</span> x0 = (env1 = -1, env2 = (env21 = [1 3 5 7; 2 4 6 8], env22 = [9 11 13 15; 10 12 14 16]))</span>
    t0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
    tf <span class="pl-k">=</span> <span class="pl-c1">10.0</span>
    tspan <span class="pl-k">=</span> (t0, tf)
    Δt <span class="pl-k">=</span> <span class="pl-c1">0.01</span>  <span class="pl-c"><span class="pl-c">#</span> saveat; not numerical integration</span>
    ts <span class="pl-k">=</span> t0<span class="pl-k">:</span>Δt<span class="pl-k">:</span>tf
    prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(env, <span class="pl-c1">dynamics</span>(env), x0, tspan)
    <span class="pl-c1">@time</span> sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob, <span class="pl-c1">Tsit5</span>(), saveat<span class="pl-k">=</span>ts)
    <span class="pl-c"><span class="pl-c">#</span> readable</span>
    xs <span class="pl-k">=</span> sol<span class="pl-k">.</span>u <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(_x <span class="pl-k">-&gt;</span> <span class="pl-c1">@readable</span> _x) <span class="pl-k">|&gt;</span> collect  <span class="pl-c"><span class="pl-c">#</span> nested states</span>
    <span class="pl-c1">@test</span> xs[<span class="pl-c1">1</span>]<span class="pl-k">.</span>env1 <span class="pl-k">==</span> x0<span class="pl-k">.</span>env1
    <span class="pl-c1">@test</span> xs[<span class="pl-c1">1</span>]<span class="pl-k">.</span>env2<span class="pl-k">.</span>env21 <span class="pl-k">==</span> x0<span class="pl-k">.</span>env2<span class="pl-k">.</span>env21
    <span class="pl-c1">@test</span> xs[<span class="pl-c1">1</span>]<span class="pl-k">.</span>env2<span class="pl-k">.</span>env22 <span class="pl-k">==</span> x0<span class="pl-k">.</span>env2<span class="pl-k">.</span>env22
    <span class="pl-c"><span class="pl-c">#</span> raw</span>
    _x0 <span class="pl-k">=</span> <span class="pl-c1">@raw</span> x0
    <span class="pl-c1">@show</span> _x0  <span class="pl-c"><span class="pl-c">#</span> _x0 = [-1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]</span>
    <span class="pl-c1">@test</span> _x0 <span class="pl-k">==</span> sol<span class="pl-k">.</span>u[<span class="pl-c1">1</span>]
<span class="pl-k">end</span></pre></div>
</article></div>