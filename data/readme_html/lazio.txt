<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/evetion/LazIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6cdb8513247f494c4692c65b1217611ecb4921b6/68747470733a2f2f7472617669732d63692e6f72672f65766574696f6e2f4c617a494f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/evetion/LazIO.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/evetion/lazio-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/c3d4dc130b0c92432032db17223cb79cada67ac5/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f656a34766838323433656d68673565732f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/ej4vh8243emhg5es/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/evetion/LazIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/af24444a081f9c608ce797dbe6a3e6a36b7abb16/68747470733a2f2f636f6465636f762e696f2f67682f65766574696f6e2f4c617a494f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/evetion/LazIO.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-lazio" class="anchor" aria-hidden="true" href="#lazio"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LazIO</h1>
<p>Extends LasIO with LASzip integration.</p>
<p>Uses the <a href="https://github.com/LASzip/LASzip/">LASzip</a> shared library to read compressed las files (*.laz) into the uncompressed format that <a href="https://github.com/visr/LasIO.jl">LasIO</a> reads natively.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LazIO

<span class="pl-c"><span class="pl-c">#</span> Load header and all points</span>
julia<span class="pl-k">&gt;</span> LazIO<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test/libLAS_1.2.laz<span class="pl-pds">"</span></span>)
(LasHeader with <span class="pl-c1">497536</span> points.
, Vector{LasIO<span class="pl-k">.</span>LasPoint0} with <span class="pl-c1">497536</span> points.
)

<span class="pl-c"><span class="pl-c">#</span> Load header and range of points</span>
julia<span class="pl-k">&gt;</span> h, p <span class="pl-k">=</span> LazIO<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test/libLAS_1.2.laz<span class="pl-pds">"</span></span>, range<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">10</span>)
(LasHeader with <span class="pl-c1">497536</span> points.
, Vector{LasIO<span class="pl-k">.</span>LasPoint0} with <span class="pl-c1">9</span> points.
)

<span class="pl-c"><span class="pl-c">#</span> Open file and iterate over points (streaming)</span>
julia<span class="pl-k">&gt;</span> ds <span class="pl-k">=</span> LazIO<span class="pl-k">.</span><span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>test/libLAS_1.2.laz<span class="pl-pds">"</span></span>)
LazDataset of test<span class="pl-k">/</span>libLAS_1<span class="pl-c1">.2</span><span class="pl-k">.</span>laz with <span class="pl-c1">497536</span> points.

julia<span class="pl-k">&gt;</span> sum <span class="pl-k">=</span> <span class="pl-c1">map</span>(Int32, (<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>))  <span class="pl-c"><span class="pl-c">#</span> Int32, not yet scaled and offset</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> p <span class="pl-k">in</span> ds
           <span class="pl-k">global</span> sum <span class="pl-k">=</span> sum <span class="pl-k">.+</span> (p<span class="pl-k">.</span>X, p<span class="pl-k">.</span>Y, p<span class="pl-k">.</span>Z)
       <span class="pl-k">end</span>
julia<span class="pl-k">&gt;</span> sum <span class="pl-k">./</span> ds<span class="pl-k">.</span>header<span class="pl-k">.</span>number_of_point_records
(<span class="pl-c1">3497.988658107152</span>, <span class="pl-c1">3741.789882541163</span>, <span class="pl-k">-</span><span class="pl-c1">164.49942114741447</span>)

<span class="pl-c"><span class="pl-c">#</span> Or use the tables interface</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DataFrames
julia<span class="pl-k">&gt;</span> <span class="pl-c1">DataFrame</span>(ds)
<span class="pl-c1">497536</span><span class="pl-k">×</span><span class="pl-c1">19</span> DataFrame. Omitted printing of <span class="pl-c1">12</span> columns
│ Row    │ X         │ Y        │ Z     │ intensity │ return_number
│        │ Int32     │ Int32    │ Int32 │ UInt16    │ UInt8
├────────┼───────────┼──────────┼───────┼───────────┼──────────────
│ <span class="pl-c1">1</span>      │ <span class="pl-c1">144013394</span> │ <span class="pl-c1">37500023</span> │ <span class="pl-c1">84666</span> │ <span class="pl-c1">0x00fa</span>    │ <span class="pl-c1">0x00</span>
│ <span class="pl-c1">2</span>      │ <span class="pl-c1">144012426</span> │ <span class="pl-c1">37500049</span> │ <span class="pl-c1">84655</span> │ <span class="pl-c1">0x00f5</span>    │ <span class="pl-c1">0x00</span>
│ <span class="pl-c1">3</span>      │ <span class="pl-c1">144011447</span> │ <span class="pl-c1">37500077</span> │ <span class="pl-c1">84644</span> │ <span class="pl-c1">0x00ef</span>    │ <span class="pl-c1">0x00</span>
│ <span class="pl-c1">4</span>      │ <span class="pl-c1">144010469</span> │ <span class="pl-c1">37500104</span> │ <span class="pl-c1">84632</span> │ <span class="pl-c1">0x00fb</span>    │ <span class="pl-c1">0x00</span>
⋮</pre></div>
</article></div>