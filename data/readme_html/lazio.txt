<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.org/evetion/LazIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7344688b28bf9da5e19b9b6f87d05b2db2d9779d4373aff3035b4a1bed00597b/68747470733a2f2f7472617669732d63692e6f72672f65766574696f6e2f4c617a494f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/evetion/LazIO.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/evetion/lazio-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/825120882703d8d3b76576e0d3ceaf6b2b23675888c61898ae16eb4905a913ad/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f656a34766838323433656d68673565732f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/ej4vh8243emhg5es/branch/master?svg=true" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/evetion/LazIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a1c6562c470e8a7cc95d6b83d40c096068039c48bc223ea162a19d8c4091456e/68747470733a2f2f636f6465636f762e696f2f67682f65766574696f6e2f4c617a494f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/evetion/LazIO.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-lazio" class="anchor" aria-hidden="true" href="#lazio"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LazIO</h1>
<p dir="auto">Extends LasIO with LASzip integration.</p>
<p dir="auto">Uses the <a href="https://github.com/LASzip/LASzip/">LASzip</a> shared library to read compressed las files (*.laz) into the uncompressed format that <a href="https://github.com/visr/LasIO.jl">LasIO</a> reads natively.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using LazIO

# Open file and iterate over points
julia&gt; ds = LazIO.open(&quot;test/libLAS_1.2.laz&quot;)
LazIO Dataset of test/libLAS_1.2.laz with 497536 points of version 0.

# Each point is correctly scaled and has its return_number and classification widened
julia&gt; p = ds[1]
LazIO.Point0(1.44013394e6, 375000.23, 846.66, 0x00fa, 0x00, 0x00, 0x00, false, 2, false, false, false, 0x00, 0x001d)

# This results in accessible attributes, such as edge_of_flightline and withheld
julia&gt; fieldnames(typeof(p))
(:x, :y, :z, :intensity, :return_number, :number_of_returns, :scan_direction, :edge_of_flight_line, :classification, :synthetic, :key_point, :withheld, :user_data, :point_source_id)

# LazIO implements the GeoInterface
julia&gt; using GeoInterface
julia&gt; GeoInterface.coordinates(p)
3-element Vector{Float64}:
      1.44013394e6
 375000.23
    846.66
julia&gt; GeoInterface.extent(ds)
Extent(X = (1.44e6, 1.44499996e6), Y = (375000.03, 379999.99), Z = (832.1800000000001, 972.6700000000001))

# Or one can use the Tables interface
julia&gt; using DataFrames
julia&gt; DataFrame(ds)
497536×14 DataFrame
    Row │ x          y               z        intensity  return_number  number ⋯
        │ Float64    Float64         Float64  UInt16     UInt8          UInt8  ⋯
────────┼───────────────────────────────────────────────────────────────────────
      1 │ 1.44013e6       3.75e5      846.66        250              0         ⋯
      2 │ 1.44012e6       3.75e5      846.55        245              0
      3 │ 1.44011e6       3.75001e5   846.44        239              0
      4 │ 1.4401e6   375001.0         846.32        251              0
      5 │ 1.44009e6       3.75001e5   846.21        229              0         ⋯
      6 │ 1.44009e6       3.75002e5   846.1         249              0
      7 │ 1.44008e6       3.75002e5   846.0         189              0
      8 │ 1.44007e6       3.75002e5   845.9         250              0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LazIO

<span class="pl-c"><span class="pl-c">#</span> Open file and iterate over points</span>
julia<span class="pl-k">&gt;</span> ds <span class="pl-k">=</span> LazIO<span class="pl-k">.</span><span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>test/libLAS_1.2.laz<span class="pl-pds">"</span></span>)
LazIO Dataset of test<span class="pl-k">/</span>libLAS_1.<span class="pl-c1">2.</span>laz with <span class="pl-c1">497536</span> points of version <span class="pl-c1">0.</span>

<span class="pl-c"><span class="pl-c">#</span> Each point is correctly scaled and has its return_number and classification widened</span>
julia<span class="pl-k">&gt;</span> p <span class="pl-k">=</span> ds[<span class="pl-c1">1</span>]
LazIO<span class="pl-k">.</span><span class="pl-c1">Point0</span>(<span class="pl-c1">1.44013394e6</span>, <span class="pl-c1">375000.23</span>, <span class="pl-c1">846.66</span>, <span class="pl-c1">0x00fa</span>, <span class="pl-c1">0x00</span>, <span class="pl-c1">0x00</span>, <span class="pl-c1">0x00</span>, <span class="pl-c1">false</span>, <span class="pl-c1">2</span>, <span class="pl-c1">false</span>, <span class="pl-c1">false</span>, <span class="pl-c1">false</span>, <span class="pl-c1">0x00</span>, <span class="pl-c1">0x001d</span>)

<span class="pl-c"><span class="pl-c">#</span> This results in accessible attributes, such as edge_of_flightline and withheld</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">fieldnames</span>(<span class="pl-c1">typeof</span>(p))
(<span class="pl-c1">:x</span>, <span class="pl-c1">:y</span>, <span class="pl-c1">:z</span>, <span class="pl-c1">:intensity</span>, <span class="pl-c1">:return_number</span>, <span class="pl-c1">:number_of_returns</span>, <span class="pl-c1">:scan_direction</span>, <span class="pl-c1">:edge_of_flight_line</span>, <span class="pl-c1">:classification</span>, <span class="pl-c1">:synthetic</span>, <span class="pl-c1">:key_point</span>, <span class="pl-c1">:withheld</span>, <span class="pl-c1">:user_data</span>, <span class="pl-c1">:point_source_id</span>)

<span class="pl-c"><span class="pl-c">#</span> LazIO implements the GeoInterface</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GeoInterface
julia<span class="pl-k">&gt;</span> GeoInterface<span class="pl-k">.</span><span class="pl-c1">coordinates</span>(p)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Float64}<span class="pl-k">:</span>
      <span class="pl-c1">1.44013394e6</span>
 <span class="pl-c1">375000.23</span>
    <span class="pl-c1">846.66</span>
julia<span class="pl-k">&gt;</span> GeoInterface<span class="pl-k">.</span><span class="pl-c1">extent</span>(ds)
<span class="pl-c1">Extent</span>(X <span class="pl-k">=</span> (<span class="pl-c1">1.44e6</span>, <span class="pl-c1">1.44499996e6</span>), Y <span class="pl-k">=</span> (<span class="pl-c1">375000.03</span>, <span class="pl-c1">379999.99</span>), Z <span class="pl-k">=</span> (<span class="pl-c1">832.1800000000001</span>, <span class="pl-c1">972.6700000000001</span>))

<span class="pl-c"><span class="pl-c">#</span> Or one can use the Tables interface</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DataFrames
julia<span class="pl-k">&gt;</span> <span class="pl-c1">DataFrame</span>(ds)
<span class="pl-c1">497536</span><span class="pl-k">×</span><span class="pl-c1">14</span> DataFrame
    Row │ x          y               z        intensity  return_number  number ⋯
        │ Float64    Float64         Float64  UInt16     UInt8          UInt8  ⋯
────────┼───────────────────────────────────────────────────────────────────────
      <span class="pl-c1">1</span> │ <span class="pl-c1">1.44013e6</span>       <span class="pl-c1">3.75e5</span>      <span class="pl-c1">846.66</span>        <span class="pl-c1">250</span>              <span class="pl-c1">0</span>         ⋯
      <span class="pl-c1">2</span> │ <span class="pl-c1">1.44012e6</span>       <span class="pl-c1">3.75e5</span>      <span class="pl-c1">846.55</span>        <span class="pl-c1">245</span>              <span class="pl-c1">0</span>
      <span class="pl-c1">3</span> │ <span class="pl-c1">1.44011e6</span>       <span class="pl-c1">3.75001e5</span>   <span class="pl-c1">846.44</span>        <span class="pl-c1">239</span>              <span class="pl-c1">0</span>
      <span class="pl-c1">4</span> │ <span class="pl-c1">1.4401e6</span>   <span class="pl-c1">375001.0</span>         <span class="pl-c1">846.32</span>        <span class="pl-c1">251</span>              <span class="pl-c1">0</span>
      <span class="pl-c1">5</span> │ <span class="pl-c1">1.44009e6</span>       <span class="pl-c1">3.75001e5</span>   <span class="pl-c1">846.21</span>        <span class="pl-c1">229</span>              <span class="pl-c1">0</span>         ⋯
      <span class="pl-c1">6</span> │ <span class="pl-c1">1.44009e6</span>       <span class="pl-c1">3.75002e5</span>   <span class="pl-c1">846.1</span>         <span class="pl-c1">249</span>              <span class="pl-c1">0</span>
      <span class="pl-c1">7</span> │ <span class="pl-c1">1.44008e6</span>       <span class="pl-c1">3.75002e5</span>   <span class="pl-c1">846.0</span>         <span class="pl-c1">189</span>              <span class="pl-c1">0</span>
      <span class="pl-c1">8</span> │ <span class="pl-c1">1.44007e6</span>       <span class="pl-c1">3.75002e5</span>   <span class="pl-c1">845.9</span>         <span class="pl-c1">250</span>              <span class="pl-c1">0</span></pre></div>
</article></div>