<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-animations" class="anchor" aria-hidden="true" href="#animations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Animations</h1>
<p><a href="https://jkrumbiegel.github.io/Animations.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://jkrumbiegel.github.io/Animations.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/jkrumbiegel/Animations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/75be42347a5632ca4ef886105f1b1cfe7d22cba6a17f129f58da5ab855c69f9b/68747470733a2f2f7472617669732d63692e636f6d2f6a6b72756d62696567656c2f416e696d6174696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jkrumbiegel/Animations.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/jkrumbiegel/Animations-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2fe60b33f4c68d433ba423acb605b0540dc5b908bda8faf6f9e19a0253adc540/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a6b72756d62696567656c2f416e696d6174696f6e732e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jkrumbiegel/Animations.jl?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/jkrumbiegel/Animations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/63c20eb12813ede659c29a25c67692c9cdf8ed8a36a58079d3bfdf7917e7ee22/68747470733a2f2f636f6465636f762e696f2f67682f6a6b72756d62696567656c2f416e696d6174696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/jkrumbiegel/Animations.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Animations.jl offers an easy way to set up simple animations where multiple keyframes
are interpolated between in sequence. You can choose different easing functions or
create your own. Keyframe values can be anything that can be linearly interpolated, you
can also add your own methods for special types. An easing can have repetitions and
delays, so that looping animations are simpler to create.</p>
<p>Check out the <a href="https://jkrumbiegel.github.io/Animations.jl/dev" rel="nofollow">documentation here</a>!</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = Animation([0, duration], [1.0, 0.0], polyout(2; n=8, yoyo=true))
y = Animation([0, duration], [0.0, 1.0], linear(n=2, yoyo=true))

color = Animation(
    [0, 0.25, 0.5, 0.75] .* duration,
    [RGB(0.251, 0.388, 0.847), RGB(0.22, 0.596, 0.149), RGB(0.584, 0.345, 0.698), RGB(0.796, 0.235, 0.2)],
    noease())
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">Animation</span>([<span class="pl-c1">0</span>, duration], [<span class="pl-c1">1.0</span>, <span class="pl-c1">0.0</span>], <span class="pl-c1">polyout</span>(<span class="pl-c1">2</span>; n<span class="pl-k">=</span><span class="pl-c1">8</span>, yoyo<span class="pl-k">=</span><span class="pl-c1">true</span>))
y <span class="pl-k">=</span> <span class="pl-c1">Animation</span>([<span class="pl-c1">0</span>, duration], [<span class="pl-c1">0.0</span>, <span class="pl-c1">1.0</span>], <span class="pl-c1">linear</span>(n<span class="pl-k">=</span><span class="pl-c1">2</span>, yoyo<span class="pl-k">=</span><span class="pl-c1">true</span>))

color <span class="pl-k">=</span> <span class="pl-c1">Animation</span>(
    [<span class="pl-c1">0</span>, <span class="pl-c1">0.25</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.75</span>] <span class="pl-k">.*</span> duration,
    [<span class="pl-c1">RGB</span>(<span class="pl-c1">0.251</span>, <span class="pl-c1">0.388</span>, <span class="pl-c1">0.847</span>), <span class="pl-c1">RGB</span>(<span class="pl-c1">0.22</span>, <span class="pl-c1">0.596</span>, <span class="pl-c1">0.149</span>), <span class="pl-c1">RGB</span>(<span class="pl-c1">0.584</span>, <span class="pl-c1">0.345</span>, <span class="pl-c1">0.698</span>), <span class="pl-c1">RGB</span>(<span class="pl-c1">0.796</span>, <span class="pl-c1">0.235</span>, <span class="pl-c1">0.2</span>)],
    <span class="pl-c1">noease</span>())</pre></div>
<p align="center">
    <a href="https://github.com/jkrumbiegel/Animations.jl/blob/master/misc/example.jl">
        <img src="https://raw.githubusercontent.com/jkrumbiegel/Animations.jl/master/misc/example.gif" style="max-width:100%;">
    </a>
</p>
<p align="center">
    <a href="https://github.com/jkrumbiegel/Animations.jl/blob/master/misc/example_array.jl">
        <img src="https://raw.githubusercontent.com/jkrumbiegel/Animations.jl/master/misc/example_array.gif" style="max-width:100%;">
    </a>
</p>
</article></div>