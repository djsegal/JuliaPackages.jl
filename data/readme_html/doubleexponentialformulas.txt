<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-doubleexponentialformulas" class="anchor" aria-hidden="true" href="#doubleexponentialformulas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DoubleExponentialFormulas</h1>
<p dir="auto"><a href="https://machakann.github.io/DoubleExponentialFormulas.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://machakann.github.io/DoubleExponentialFormulas.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/machakann/DoubleExponentialFormulas.jl/actions/workflows/CI.yml"><img src="https://github.com/machakann/DoubleExponentialFormulas.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/machakann/DoubleExponentialFormulas.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4ba89d14bc33e84e413a3eeb04478875ed87b2fd7bbea83a490111cb01b7008b/68747470733a2f2f636f6465636f762e696f2f67682f6d616368616b616e6e2f446f75626c654578706f6e656e7469616c466f726d756c61732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/machakann/DoubleExponentialFormulas.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">This package provides functions for one-dimensional numerical integration using the double exponential formula [1,2] also known as the <a href="https://en.wikipedia.org/wiki/Tanh-sinh_quadrature" rel="nofollow">tanh-sinh quadrature</a> and its variants.</p>
<h2 dir="auto"><a id="user-content-instllation" class="anchor" aria-hidden="true" href="#instllation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Instllation</h2>
<p dir="auto">Press <code>]</code> on a Julia REPL to enter the Pkg mode and run the following command.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add https://github.com/machakann/DoubleExponentialFormulas.jl.git"><pre class="notranslate"><code>add https://github.com/machakann/DoubleExponentialFormulas.jl.git
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-handy-interface-with-float64-precision" class="anchor" aria-hidden="true" href="#handy-interface-with-float64-precision"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Handy interface with Float64 precision</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    I, E = quadde(f::Function, a::Real, b::Real, c::Real...;
                  atol::Real=zero(Float64),
                  rtol::Real=atol&gt;0 ? zero(Float64) : sqrt(eps(Float64)))"><pre class="notranslate"><code>    I, E = quadde(f::Function, a::Real, b::Real, c::Real...;
                  atol::Real=zero(Float64),
                  rtol::Real=atol&gt;0 ? zero(Float64) : sqrt(eps(Float64)))
</code></pre></div>
<p dir="auto">The <code>quadde</code> function provides a handy way to integrate a function <code>f(x)</code> over an arbitrary interval.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DoubleExponentialFormulas
using LinearAlgebra: norm

f(x) = 1/(1 + x^2)
I, E = quadde(f, -1, 1)

I ≈ π/2    # true
E ≤ sqrt(eps(Float64))*norm(I)  # true"><pre><span class="pl-k">using</span> DoubleExponentialFormulas
<span class="pl-k">using</span> LinearAlgebra<span class="pl-k">:</span> norm

<span class="pl-en">f</span>(x) <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>)
I, E <span class="pl-k">=</span> <span class="pl-c1">quadde</span>(f, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>)

I <span class="pl-k">≈</span> π<span class="pl-k">/</span><span class="pl-c1">2</span>    <span class="pl-c"><span class="pl-c">#</span> true</span>
E <span class="pl-k">≤</span> <span class="pl-c1">sqrt</span>(<span class="pl-c1">eps</span>(Float64))<span class="pl-k">*</span><span class="pl-c1">norm</span>(I)  <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<p dir="auto">The above example computes <code>∫ 1/(1+x^2) dx in [-1, 1]</code>. The <code>I</code> is the obtained integral value and the <code>E</code> is an estimated numerical error. The <code>E</code> is not exactly equal to the difference from the true value. However, one can expect that the integral value <code>I</code> is converged if <code>E &lt;= max(atol, rtol*norm(I))</code> is true. Otherwise, the obtained <code>I</code> would be unreliable; the number of repetitions exceeds the <code>maxlevel</code> before converged.</p>
<p dir="auto">Half-infinite intervals and the infinite interval are also valid, as far as the integral is convergent.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Computes ∫ 1/(1+x^2) dx in [0, ∞)
I, E = quadde(x -&gt; 1/(1 + x^2), 0, Inf)
I ≈ π/2    # true

# Computes ∫ 1/(1+x^2) dx in (-∞, ∞)
I, E = quadde(x -&gt; 1/(1 + x^2), -Inf, Inf)
I ≈ π      # true"><pre><span class="pl-c"><span class="pl-c">#</span> Computes ∫ 1/(1+x^2) dx in [0, ∞)</span>
I, E <span class="pl-k">=</span> <span class="pl-c1">quadde</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>), <span class="pl-c1">0</span>, <span class="pl-c1">Inf</span>)
I <span class="pl-k">≈</span> π<span class="pl-k">/</span><span class="pl-c1">2</span>    <span class="pl-c"><span class="pl-c">#</span> true</span>

<span class="pl-c"><span class="pl-c">#</span> Computes ∫ 1/(1+x^2) dx in (-∞, ∞)</span>
I, E <span class="pl-k">=</span> <span class="pl-c1">quadde</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>), <span class="pl-k">-</span><span class="pl-c1">Inf</span>, <span class="pl-c1">Inf</span>)
I <span class="pl-k">≈</span> π      <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<p dir="auto">Optionally, one can divide the integral interval [a, b, c, ...], which returns <code>∫f(x)dx in [a, b] + ∫f(x)dx in [b, c] + ⋯</code>.  It is worth noting that discontinuity or singularity is allowed at the endpoints.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Computes ∫ 1/sqrt(|x|) dx in (-∞, ∞)
# The integrand has a singular point at x = 0
I, E = quadde(x -&gt; 1/sqrt(abs(x)), -1, 0, 1)
I ≈ 4    # true"><pre><span class="pl-c"><span class="pl-c">#</span> Computes ∫ 1/sqrt(|x|) dx in (-∞, ∞)</span>
<span class="pl-c"><span class="pl-c">#</span> The integrand has a singular point at x = 0</span>
I, E <span class="pl-k">=</span> <span class="pl-c1">quadde</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">abs</span>(x)), <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>)
I <span class="pl-k">≈</span> <span class="pl-c1">4</span>    <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<h3 dir="auto"><a id="user-content-optimized-numerical-integrators" class="anchor" aria-hidden="true" href="#optimized-numerical-integrators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Optimized numerical integrators</h3>
<p dir="auto">User can get an optimized integrators, for example, for better accuracy; <code>QuadDE</code> will provides the functionality.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="qde = QuadDE(BigFloat; h0=one(BigFloat)/8, maxlevel=10)
qde(x -&gt; 2/(1 + x^2), -1,  1)"><pre class="notranslate"><code>qde = QuadDE(BigFloat; h0=one(BigFloat)/8, maxlevel=10)
qde(x -&gt; 2/(1 + x^2), -1,  1)
</code></pre></div>
<p dir="auto">User can specify the required precision as a type (<code>T&lt;:AbstractFloat</code>), the starting step size <code>h0</code> and the maximum number of repetition <code>maxlevel</code>. The <code>h0</code> and <code>maxlevel</code> shown above are the default values, so it can be omitted. <code>QuadDE</code> instance is an callable object which has the same interface of <code>quadde</code>, actually <code>quadde</code> is an alias to <code>QuadDE(Float64)(...)</code> with a precalculated instance.</p>
<p dir="auto"><code>QuadDE</code> tries to calculate integral values <code>maxlevel</code> times at a maximum; the step size of a trapezoid is started from <code>h0</code> and is halved in each following repetition for finer accuracy. The repetition is terminated when the difference from the previous estimation gets smaller than a certain threshold.  The threshold is determined by the runtime parameters, <code>atol</code> or <code>rtol</code>.</p>
<p dir="auto">Using smaller <code>h0</code> may help if the integrand <code>f(x)</code> includes fine structure, such as spikes, in the integral interval. However, it seems that the subdivision of the interval would be more effective in many cases. Try subdivision first, and then think of an optimized integrator.</p>
<p dir="auto">See <a href="https://machakann.github.io/DoubleExponentialFormulas.jl/stable" rel="nofollow">documentation</a> for more details.</p>
<h3 dir="auto"><a id="user-content-numerical-integrator-for-decaying-oscillatory-integrands" class="anchor" aria-hidden="true" href="#numerical-integrator-for-decaying-oscillatory-integrands"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Numerical integrator for decaying oscillatory integrands</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    quaddeo(f::Function, ω::Real, θ::Real, a::Real, b::Real;
            h0::Real=one(ω)/5, maxlevel::Integer=12,
            atol::Real=zero(ω),
            rtol::Real=atol&gt;0 ? zero(atol) : sqrt(eps(typeof(atol))))"><pre class="notranslate"><code>    quaddeo(f::Function, ω::Real, θ::Real, a::Real, b::Real;
            h0::Real=one(ω)/5, maxlevel::Integer=12,
            atol::Real=zero(ω),
            rtol::Real=atol&gt;0 ? zero(atol) : sqrt(eps(typeof(atol))))
</code></pre></div>
<p dir="auto">The <code>quaddeo</code> function is specialized for the decaying oscillatory integrands, [3-5]</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="f(x) = g(x)sin(ωx + θ),"><pre class="notranslate"><code>f(x) = g(x)sin(ωx + θ),
</code></pre></div>
<p dir="auto">where <code>g(x)</code> is a decaying algebraic function. <code>ω</code> and <code>θ</code> are the frequency and the phase of the oscillatory part of the integrand. If the oscillatory part is <code>sin(ωx)</code>, then <code>θ = 0.0</code>; if it is <code>cos(ωx)</code> instead, then <code>θ = π/(2ω)</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DoubleExponentialFormulas
using LinearAlgebra: norm

f(x) = sin(x)/x;
I, E = quaddeo(f, 1.0, 0.0, 0.0, Inf);
I ≈ π/2  # true"><pre><span class="pl-k">using</span> DoubleExponentialFormulas
<span class="pl-k">using</span> LinearAlgebra<span class="pl-k">:</span> norm

<span class="pl-en">f</span>(x) <span class="pl-k">=</span> <span class="pl-c1">sin</span>(x)<span class="pl-k">/</span>x;
I, E <span class="pl-k">=</span> <span class="pl-c1">quaddeo</span>(f, <span class="pl-c1">1.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">Inf</span>);
I <span class="pl-k">≈</span> π<span class="pl-k">/</span><span class="pl-c1">2</span>  <span class="pl-c"><span class="pl-c">#</span> true</span></pre></div>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ol dir="auto">
<li>
<p dir="auto">Takahasi, H.; Mori, M. Double Exponential Formulas for Numerical Integration. <em>Publ. Res. Inst. Math. Sci.</em> <strong>1973,</strong> <em>9 (3),</em> 721–741. <a href="https://doi.org/10.2977/prims/1195192451" rel="nofollow">10.2977/prims/1195192451</a>.</p>
</li>
<li>
<p dir="auto">Mori, M.; Sugihara, M. The Double-Exponential Transformation in Numerical Analysis. <em>J. Comput. Appl. Math.</em> <strong>2001,</strong> <em>127 (1–2),</em> 287–296. <a href="https://doi.org/10.1016/S0377-0427(00)00501-X" rel="nofollow">10.1016/S0377-0427(00)00501-X</a>.</p>
</li>
<li>
<p dir="auto">Ooura, T.; Mori, M. The double exponential formula for oscillatory functions over the half infinite interval. <em>J. Comput. Appl. Math.</em> <strong>1991,</strong> <em>38,</em> 353–360. <a href="https://doi.org/10.1016/0377-0427(91)90181-I" rel="nofollow">10.1016/0377-0427(91)90181-I</a></p>
</li>
<li>
<p dir="auto"><a href="http://www.kurims.kyoto-u.ac.jp/~ooura/intde-j.html" rel="nofollow">http://www.kurims.kyoto-u.ac.jp/~ooura/intde-j.html</a></p>
</li>
<li>
<p dir="auto"><a href="http://www.kurims.kyoto-u.ac.jp/~ooura/intdefaq-j.html" rel="nofollow">http://www.kurims.kyoto-u.ac.jp/~ooura/intdefaq-j.html</a></p>
</li>
</ol>
</article></div>