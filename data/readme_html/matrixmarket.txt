<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-matrixmarket" class="anchor" aria-hidden="true" href="#matrixmarket"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MatrixMarket</h1>
<p><a href="https://travis-ci.org/JuliaSparse/MatrixMarket.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f06901eae75978bddbe4a39e1e19f0c6b0b14774/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615370617273652f4d61747269784d61726b65742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaSparse/MatrixMarket.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Package to read matrices from files in the <a href="http://math.nist.gov/MatrixMarket/formats.html#MMformat" rel="nofollow">Matrix Market native exchange
format</a>.</p>
<p>The <a href="http://math.nist.gov/MatrixMarket/" rel="nofollow">Matrix Market</a> is a NIST repository of
"test data for use in comparative studies of algorithms for numerical linear
algebra, featuring nearly 500 sparse matrices from a variety of applications,
as well as matrix generation tools and services." Over time, the <a href="http://math.nist.gov/MatrixMarket/formats.html#MMformat" rel="nofollow">Matrix Market's
native exchange format</a>
has become one of the <em>de facto</em> standard file formats for exchanging matrix
data.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<pre><code>using MatrixMarket
M = MatrixMarket.mmread("myfile.mtx")
</code></pre>
<p><code>M</code> will be a sparse or dense matrix depending on whether the file contains a matrix
in coordinate format or array format. The specific type of <code>M</code> may be <code>Symmetric</code> or
<code>Hermitian</code> depending on the symmetry information contained in the file header.</p>
<pre><code>MatrixMarket.mmread("myfile.mtx", true)
</code></pre>
<p>Returns raw data from the file header. Does not read in the actual matrix elements</p>
</article></div>