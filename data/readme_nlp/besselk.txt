besselkjl package implements function modified bessel function k designed specifically automatically differentiable forwarddiffjl including providing derivatives respect parameter fast allocating entire domain derivatives respect nu significantly faster finite differencing method including naive fixedstep minimum method domain meaningful accurate particularly near origin expect gain digits derivatives dramatic terms speedup accuracy gains commonly giving digits accuracy happy accidenteffect re willing couple digits accuracy forwarddiffjl code derivatives respect argument magnitude speedup casual testing argumentderivative errors code worse e s allocations ns allocations avoid naming conflicts packages package exports functions matern matern covariance function common parameterization docstrings info adbesselk k using besselsjl applicable specialized ad codes otherwise adbesselkxv k using besselsjl applicable specialized ad codes otherwise basic demo using forwarddiff specialfunctions besselk regular evaluations re getting assert isapprox besselk adbesselk assert isapprox besselk adbesselkxv fast derivatves forwarddiff derivative v adbesselk v forwarddiff derivative v adbesselkxv v note people coming paper repo defines deal specific derivative functions files paperscripts specifically tested quantities paper re fit matern covariance function code simplest probably look using forwarddiff besselk function mycovariancefunction loc loc params awesome covariance function presumably using adbesselk const mydata load data const mylocations load locations create likelihood forwarddiff grad hessian function nll params cholesky symmetric mycovariancefunction params mylocations mylocations logdet dot mydata mydata nllg params forwarddiff gradient nll params nllh params forwarddiff hessian nll params mymle someoptimizer initparams nll nllg nllh course manually implement gradient hessian likelihood manually creating derivatives covariance function examplematernjl demo manual implementations particularly hessian faster thoughtful mean emphasize manual chain rule derivative computations covariance function ad handle enjoy power julia composability offers limitations moment primary limitations ad compatibility forwarddiffjl issue particular function branch taking derivative respect evaluating besselk currently checked code isa abstractfloat properly methods derivatives checked confirmed accurate code local polynomial expansions slightly hairy values internal intermediate functions sufficiently level derivative local polynomials accurate partial information consider besselsjl software package written pretty specific goal computing derivatives k respect using forwarddiffjl bit faster amos digits accuracy faster derivatives fastest k floating argument ad probably using besselsjl code besselsjl whenever question ad ad respect package package offers beyond besselsjl implementation details reference entire paper discussing implementation word code routines evaluate k accurately domain standard maintain ad compatibility correctness integer halfinteger example lot additional required code pretty optimized benchmark look paper forwarddiffjl generated derivatives faster single call specialfunctionsbesselk achieve performance particularly derivatives required function calls allocating means switching raw tuple polynomial types polynomials arguably makes code look bit disorganized inconsistent knowledge looking source simplification love terms issue pr email patch file citation package research compiled reportarticleposteretc please cite paper miscgmss titlefitting matern smoothness parameters using automatic differentiation authorchristopher geoga oana marin michel schanen michael stein journalstatistics computing package ostensibly covers single function putting fast accurate lot appreciate citing paper package useful research example package fit matern smoothness parameter optimization method