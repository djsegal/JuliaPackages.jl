gaiusjl caesarjl gaiusjl multithreaded blas library using divideconquer strategy parallelism built top fantastic loopvectorizationjl gaius spawns threads using julia depth parallel task runtime gaius routines fearlessly nested inside multithreaded julia programs gaius stable tested re adventurous note gaius actively maintained anticipate useful relatively simple playground learning implementation linear algebra routines promising projects result scalable multithreaded pure julia blas library tulliojl octavianjl octavian performant tullio flexible quick start julia using gaius julia gaius mul multithreaded multiply store result overwriting contents julia gaius mul multithreaded multiply return result julia gaius mulserial singlethreaded multiply store result overwriting contents julia gaius mulserial singlethreaded multiply return result remember start julia multiple threads following julia auto julia set julianumthreads environment variable starting julia functions list public api gaius gaiusmul gaiusmul gaiusmulserial gaiusmulserial functions internal private matrix multiplication currently fast native matrixmultiplication implemented matrices types matrixunionfloat float int int int structarraycomplex support commonly encountered numeric struct types rational dual planned using gaius click expand gaius defines public functions gaiusmul gaiusmul gaiusmul regular operator matrices whereas gaiusmul takes matrices stores overwriting contents functions gaiusmul gaiusmul multithreading run singlethreaded variants gaismulserial gaiusmulserial respectively julia using gaius benchmarktools linearalgebra julia rand rand zeros julia btime mul linearalgebra s allocations bytes julia btime mul gaius s allocations kib julia using gaius benchmarktools julia rand rand julia btime s allocations kib julia btime gaius mul locally gaiusmul operator s allocations kib julia versioninfo julia version rc commit bedc utc platform info os linux x pc linux gnu cpu amd ryzen six core processor wordsize libm libopenlibm llvm libllvm orcjit znver environment julianumthreads multithreading gaius recursively splitting matrices subblocks operate change matrix subblock size calling mul blocksize keyword argument left unspecified gaius rough heuristic choose block size based size input matrices size heuristics optimal machines complex click expand gaius supports multiplication matrices complex converted explicity structs arrays using structarraysjl otherwise multiplication openblas julia using gaius structarrays julia begin randn complexf randn complexf zeros complexf sa structarray sb structarray sc structarray btime mul sc sa sb btime mul sc s allocations kib s allocations bytes true benchmarks floating performance click expand following benchmarks run julia versioninfo julia version rc commit bedc utc platform info os linux x pc linux gnu cpu amd ryzen six core processor wordsize libm libopenlibm llvm libllvm orcjit znver environment julianumthreads compared openblas running threads blassetnumthreads keenly seeing analogous benchmarks machine avx instruction set intel mkl note loglog plots gaius outperforms openblas range matrix sizes begin appreciably fall matrices float matrices float believe amount performance left table gaius look forward beating openblas matrix sizes complex floating performance click expand gaius operating complexfloat structsarrays competeing relatively openblas operating complexfloat arraysstructs integer performance click expand benchmarks compare gaius machine compare julia generic matrix multiplication implementation openblas provide integer matmul multithreaded note loglog plots benchmarks performed machine avx instruction set performance gain performance situation multiply matrices integers provides compelling gaius outperform competition matrix size matrices benefit multithreading blas routines implementing standard blas routines strategy relatively straightforward safety break law seize power observe gaius julius caesar functions gaiusmul gaiusmul gaiusmulserial gaiusmulserial automatic array sizechecking occur matrix multiplication begins mul calling gaiusmul sizecheckfalse sizechecks occur arrays matrix multiplication occurs sorts bad segfaulty happen functions package considered internal expected check safety obey law functions gaiusgemmkernel gaiusaddgemmkernel utility warned check array s