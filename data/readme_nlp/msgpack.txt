msgpackjl msgpackjl messagepack implementation pure julia inspired jsonjl package supports deserialization julia values messagepack pack unpack overloadable predeserialization transformations frommsgpack tomsgpack automatic type constructiondestruction msgpacktype construct structtype basic immutable views msgpackformatted byte buffers arrayview mapview native serializationserialize support via messagepack extensions extension extserialize extdeserialize pack unpack pack serialize julia values messagepack bytes unpack deserialize messagepack bytes julia values julia bytes pack hello dict messagepack element arrayuint x xa x julia unpack bytes element array hello dict messagepack x pack unpack accept io streams arguments julia io iobuffer julia pack io io stream julia unpack seekstart io io stream translating julia messagepack types default msgpack defines deserialization following julia messagepack types messagepack type abstractmsgpacktype subtype julia types integer integertype uint uint uint uint int int int int nil niltype missing boolean booleantype bool float floattype float float string stringtype abstractstring char symbol array arraytype abstractarray abstractset tuple map maptype abstractdict namedtuple binary binarytype defaults extension extensiontype defaults support additional julia types define type translation corresponding abstractmsgpacktype via following methods julia using msgpack uuids declare uuid correspondence messagepack string type julia msgpack msgpacktype typeuuid msgpack stringtype convert uuids messagepack stringcompatible representation serialization julia msgpack tomsgpack msgpackstringtype uuid uuid string uuid convert values deserialized messagepack strings uuids julia msgpack frommsgpack typeuuid uuid abstractstring uuid uuid julia unpack pack uuid dfecaaddef julia unpack pack uuid uuid uuid dfbcbbaca note subtype abstractmsgpacktype makes assumptions return values tomsgpack frommsgpack assumptions documented subtype docstring additional details docstrings abstractmsgpacktype msgpacktype tomsgpack frommsgpack automatic struct deserialization msgpack provides interface facilitates automatic performant deserialization messagepack maps julia struct jsonjl msgpack interface supports possibilities slower approach depend field deserialization faster approach julia using msgpack julia struct mymessage int string bool julia msgpack msgpacktype typemymessage msgpack structtype julia messages mymessage rand int join rand rand bool element arraymymessage mymessage whosayfsvb true mymessage mazsmrsawu false mymessage gueytzhjvy true julia bytes pack messages slower assume struct field julia unpack bytes vectormymessage element arraymymessage mymessage whosayfsvb true mymessage mazsmrsawu false mymessage gueytzhjvy true faster assumes incoming struct fields julia unpack bytes vectormymessage strict mymessage element arraymymessage mymessage whosayfsvb true mymessage mazsmrsawu false mymessage gueytzhjvy true strict unless ensure messagepack maps corresponding maintain exact keyvalue pairs corresponding fields exact specified julia definition property assumed unless original serializer message additional details docstrings structtype unpack construct immutable lazy julia views messagepack bytes delay deserialization messagepack collection instead deserialize elements access facilitate approach msgpack provides arrayview mapview types reusing toy mymessage earlier example julia using benchmarktools julia bytes pack mymessage rand int join rand rand bool deserialize julia time unpack bytes vectormymessage allocations mib gc time scan bytes tag object positions deserialize julia time unpack bytes msgpack arrayviewmymessage allocations mib normal vector access performance normal vector julia btime ns allocations bytes mymessage anrcvpbqge true access time slower element deserialized access julia btime ns allocations bytes mymessage anrcvpbqge true additional details docstrings arrayview mapview json messagepack json default lovely json package switch messagepack actually measure significant performance benefit experience main potential advantage messagepack improved deserialization performance kinds structures merely seek reduce message size messagepack little advantage json purpose compression achieve similar sizes applied format