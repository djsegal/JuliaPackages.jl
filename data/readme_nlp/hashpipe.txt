hashpipe availability shared pipeline engine hashpipe data processing pipeline engine manages lowlevel resources performantly handle data hashpipe pipeline broken series threads share data downstream threads via shared memory ring buffers databuffers access controlled via semaphores package contains base hashpipe functionality code julia programming language hashpipe pipeline composed single language julia mix primary topics understand status buffers metadata hashpipe pipelines stored called status buffers shared memory regions containing fits keywordvalue pairs information telescope name databuf status etc keys added status buffer editing values existing keys lock status buffer prevent multiple simultaneous edits updateadd keyvalue pairs unlock status buffer databuffers main data process trying efficiently manage stored data buffers shared memory regions hashpipe threads store access data databuffers designed called ring buffers operation unit data databuffer data operated unit databuffer beginning databuffer connected form ring atomic units data called blocks user determine blocks access management lockunlock multiple threadsprocesses share data access control mechanism hashpipe semaphores level user interface abstracts nittygritty details simple lockunlock functions status buffers wait freefilled functions databuffers code example process look status buffer updates status buffer wrapped safe function handles locking unlocking hashpipestatusbuflockunlockrefthreadstatus hashpipeupdatestatusthreadstatus srhstat waiting hashpipeupdatestatusthreadstatus srhblkin threadinputblockid hashpipeupdatestatusthreadstatus srhbkout threadoutputblockid example databuffer access management note bit status buffers busy loop wait filled databuffer block rvhashpipedatabufwaitfilledthreadinputdbp threadinputblockid hashpipehashpipeok rvhashpipetimeout warn search thread threadsearchalgoname timeout waiting filled block else error search thread threadsearchalgoname error waiting filled databuf error rv process data set databuffer block free hashpipedatabufsetfreethreadoutputdbp threadinputblockid tips hashpipe data managed via semaphores linux commandline tool ipcs interprocess communication status helpful times similarly ipcrm remove shown ipc resources example common level hashpipe threads preprocess network packets standard astronomyfriendly data format julia threads execute level data processing required julia code scenario look assuming level hashpipe threads setup julia cod