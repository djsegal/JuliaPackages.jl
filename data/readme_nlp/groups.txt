implementation finitely normalization using knuthbendix procedure package implements abstractfpgroup concrete types freegroup fpgroup automorphismgroup example usage julia using groupscore julia alphabet alphabet symbol inverse inverse inverse inverse inverse inverse julia freegroup free generators julia gens element vectorfpgroupelementfreegroupsymbol knuthbendix lenlexsymbol julia inv id julia julia commutator julia inv julia fpgroup create quotient free julia id julia fpgroup inv commutator commutator maxrules warning maximum rules reached rewriting system confluent retry knuthbendix larger maxrules kwarg knuthbendix julia packages knuthbendix meb src knuthbendixbase jl finitely generated subject relations id id id id id id warning knuthbendix procedure completed successfully means able approximate word equality elements return false elements equal try larger maximal rules underlying rewriting system julia fpgroup inv commutator commutator maxrules finitely generated subject relations id id id id id id time warning knuthbendix completion successful treat equality true mathematical equality note direct product quotient van dyck create random word reduce element julia using random random seed word rand length julia length word julia freely reduced julia length word word underlying word julia element julia length word word underlying word underlying words change according reduced note word type word abstractword sequence indices letters alphabet alphabet intrinsic meaning automorphism relatively complete support automorphisms free generated transvections nielsen generators julia saut specialautomorphismgroup maxrules automorphism free generators julia gens saut element vectorautomorphismfreegroupsymbol knuthbendix lenlexsymbol julia julia inv julia inv julia word word finite confluent rewriting system automorphism groupsof free knuthbendix finish successfully ace sleeve solve word evaluation look images generators automorphisms julia evaluate verbose julia domain julia evaluate domain automorphism map standard generating set generating set considered equal indeed julia true happening scenes words reduced using rewriting system resulting words equal true returned equal equalitydata computed argument images generators result comparison returned moreover try amortize cost computing images hash equalitydaata lazily stored element essentially true returned comparison words returns false recomputation images guard hash collisions package developed computations happen package please cit