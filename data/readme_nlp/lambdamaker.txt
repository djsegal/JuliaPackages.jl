lambdamakerjl package intended generate boilerplate code required deploy aws lambda function via aws sam prerequisites download install following aws sam docker generate boilerplate code generate project running using lambdamaker createlambdapackage projectname directory exists projectname error thrown directory left untouched pass forcetrue kwarg overwrite create directory directory following files bootstrap file lambda runs dockerfile defines docker image run lambda environment handlerequestsjl reads lambda invocations calls code writes responses projecttoml basic toml defining package deployed lambda templateyml cloudformation stack created deploying via aws sam srcprojectnamejl module boilerplate handleeventeventdata headers function modify modify srcprojectnamejl file include whatever code wish run lambda function entrypoint lambda handleeventeventdata headers function modify call functions wish invoke note specify entrypoint script dockerfile set environment variables explicitly run bootstrap file script dockerfile workdir vartask entrypoint cmd modulefunction binbash export foo bootstrap workflow building testing deploying lambda function aws sam documentation found shorthanded version build docker image sam build test locally running sam local invoke juliafunction function requires form input appendix information satisfied deploy function sam deploy guided update function sam sync appendix resources tkawslambdacontainerjulia passing input function passing inputs usually json format add package parse information jsonjl generating boilerplate code adding json parsing functionality modify srcprojectnamejl modify handleevent function module mypackage using json function handleevent eventdata headers input json read eventdata inputvariable return yourfunction input define json file pass function inputvariable pass event json file localy testing sam local invoke eventjson juliafunct