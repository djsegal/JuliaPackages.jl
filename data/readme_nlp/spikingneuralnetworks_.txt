spiking network examples julia description outputs motivation install plans flow chart optimize snns bigger snns julia tools support fitting spiking neural network models data python speed necessitates external simulators network simulation nice fast efficient data fitting spike trains network models language try acknowledgements reduced spiking neuronal model optimization package directly derived backend metahieristicsjl optimize getting started install julia module official package package added developer mode short follows import pkg pkgaddurl add invovles git clone cd spikenetoptjl julia v pkg develop pkgdeveloppackagespecpathpwd entry optimize spiking neural network exploring effect parameter controls connectome graph structure julia includeexamplesrunnetoptjl cd examples julia runnetoptjl single cell data fitting spike times cd test julia singlecelloptadexpjl julia singlecelloptizhijl motivation detailed motivation previous datadriven optimization spiking neurons implemented python python implementation reduced model simulation sometimes called external simulation overall previous implementation reduced model optimization slower complex language tool specific reasons reduced model spiking neurons models compact equations fast simulate python calls external codes programes neuronbriannestpynn achieve speedup network simulations approaches speeding network simulations necessarily efficient convenient running singlecell simulations required single cell optimizations strategy calling external code causes intolerable code complexity intolerable runtime cost single neuron simulations python tool numba jit partially remedies code python optimization framework deapbluepyopt induces additional overhead pure julia snn optimization routine solution efficiently optimizing reduced snn models package packages evolutionaryjl metaheuristics provide genetic algorithms optimize spiking neural networks info google doc presentation sets motivation project brainhack optimization outputs loss function constructed computing spike distance pairs neurons networks optimized using pair wise spikedistance metric pair neurons pythons networkunit package perform posthoc evaluation optimized network example outputs figure local variation firing rates compared neuron model networks network optimization example ground truth model versus optimized model test firing rates student test datasize value e single cell optimization note perspective spike times matched model fitting competitions output single cell optimization output network spike time optimization note unicode backend plotting method neuron synapses fire propabilistically current design vs intended design flow chart intended future design development plans spike distance genetic algorithms optimize network spike raster activity pythons networkunit validate results tests results created single cell model fitting allen brain observatory spike train data ability toggle simulator backends vs todo learning learn implemented multiprocessing feature extractionspike distance sort animation genetic algorithm convergence sort metaheuristics minimal effort adamopt predictions using evolved population file mwejl read optimize fpga event stream data aedat dont snns optimize snns parsimonious optimize snns bigger snns term intended approach recurrent inhibitory population excitatory population network optimize networks contributors thanks goes wonderful people emoji key russell jarvis mohit saxena pll haraldsson project follows contributors specification contributions welcom