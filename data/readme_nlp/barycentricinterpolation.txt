barycentricinterpolation julia package implements barycentric formula polynomial interpolation equispaced chebyshev formulae paper berrut trefethen siam review purpose interpolation package intended base numerical methods numerical collocation interpolation package interpolationsjl usage various types polynomials defined based locations nodes zeros equispaced equispaced common choice data equispaced suffers runge phenomenon degree polynomials collocation scheme gausslegendre collocation provide benefit superconvergence default nodes equispaced chebyshev type chebyshev nodes distributed according cosj n degree polynomial chebyshev type chebyshev nodes distributed according cosj degree polynomial legendre legendre nodes distributed according zeros corresponding legendre polynomial degree polynomial arbitrary nodes arbitrarypolynomialnodes nodes distributed specified default polynomials defined range modified specifying start stop range equispaced generate th polynomial equispaced nodes range polynomials nodes asymptotically clustered towards chebyshev optimal avoiding runge phenomenon trefethen spectral methods matlab siam polynomial defined nodespoly weightspoly functions return locations nodes values barycentric weights respectively interpolate set values defined nodes interpolatepoly xnew xnew scalar vector xnew omitted interpolate function returns function evaluate interpolant obtain interpolant linear combination values interpolationmatrixpoly returns matrix multiplied vector values calculate interpolated value finally derivative polynomial nodes obtained using differentiationmatrixpoly similar interpolationmatrix returns matrix multiplied vector values calculate derivative simple example using barycentricinterpolation chebyshev create chebyshev type polynomial nodes nodes sinpi generate values nodes xnew rand random println interpolate xnew sinpi xnew hopefully true differentiationmatrix differentiation matrix println interpolate xnew pi cospi xnew hopefully true complicated example example barycentricjl applied simulation pde combination differentialequationsjl license written david barton davidbartonbristol released mit licens