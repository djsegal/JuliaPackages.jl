sumproducttransformjl experimental package experimenting sumproducttransformation networks main advantage exact calculation likelihood package emphasis flexibility means super fast safely flexible experimentation created testbed paper sumproducttransform networks exploiting symmetries using invertible transformations tomas pevny vasek smidl martin trapp ondrej polacek tomas oberhuber example gmm spn sptn pluto notebook examplesplutojl package depends registered package sumproducttransform experimental implementation generalization sumproduct networks dense node background sumproducttransform networks hierarchical model tree structure composed following nodes leafnode tractable probabilisty distribution usually multivariate normal distribution sumnode mixture model components productnode list sumnode productnode product random variables assuming independency transformationnode implements change variables formula pdf transformed according change variables theorem change variables transformationnode encapsulate allows calculation logabsdet flow models prefer implement dense layer square matrics able efficiently calculate determinant jacobian invert represent svd decomposition udv unitary diagonal unitary matrices parametrized gradient descend friendly provided package toy available commented example gmm spn sptn using toyproblems sumproducttransform unitary flux setfield using toyproblems flower using distributionsad turingmvnormal using sumproducttransform scaleshift svddense flower float npetals create gaussian mixture model components normal distribution leaves covariance single sumnodes turingmvnormal transformed affine distribution svddense mvnormal covariance turingdensemvnormal support zygote therefor construction prefered implement normal distribution fancy normal distribution zeros diagonal scaleshift instead svddense fit model data fit function size ncomponents model sumnodetransformationnodesvddense turingmvnormal f ncomponents batchsize nsteps history fitmodel batchsize nsteps calculate loglikelihood samples logpdfmodel sample model randmodel create simple sumproductnetwork components mapncomponents p sumnodetransformationnodescaleshift turingmvnormal f ncomponents p sumnodetransformationnodescaleshift turingmvnormal f ncomponents p productnodep p model sumnodecomponents fit finally create sumproducttransform network ncomponents nlayers model transformationnodescaleshift turingmvnormalf nlayers model sumnodetransformationnodesvddense model ncomponents compatibility flux zygote model compatible flux zygote parameters weights sumnodes parameters transformationnodes hit ps fluxparamsmodel gradient logpdf differentiable gradient logpdfmodel ps fit optimized version train function utilizes threading compatibility bijectorsjl svddense scaleshift ludense implement interface bijectorsjl means caution layers bijectors verify fluxparams returns parameters example julia using flux julia using bijectors julia fluxparamsplanarlayer params register layer flux fluxfunctor planarlayer fluxparamsplanarlayer magic happens allows planarlayer sumproducttransform ncomponents nlayers model transformationnodeplanarlayer turingmvnormalf nlayers model sumnodetransformationnodeplanarlayer model ncomponents history fitmodel