unroll macro package provides unroll tuplegen macros unroll macro julia unrolls simple loops example following code unroll macroexpand loop bounds time macroexpansion common literal constant values example loop bounds include symbolic constants global module const loopbound function myfunct unroll loopbound etc unroll macro nested finally unroll macro search conditionals depend loop counter unroll example call unroll mod else macroexpand tuplegen macro tuplegen macro generates fixedlength tuples using comprehension syntax example tuplegen macroexpands generates tuple tuplegen call statement generate array generate tuples comprehensions via following standard statement tuple statement efficient creates heapallocated array temporary complicated example tuplegen suppose matrices represented tuples tuples stands matrix multiplication defined mtxmult tuplegen tuplegen definition generates unrolls expressions hand expected julia mtxmult unroll macro loop bounds tuplegen macroexpansion time particular following plausible attempt define generic function addition arbitrary fixedlength tuples yields ntuple ntuple tuplegen type parameter time macro expansion instead determined dispatch mechanism fix please create issue pull request write generic addition tuples via complicated generatedfunction mechanism cautionary notes loop index simple variable loop form mydict similar loop index matched symbolically macro means symbol loop body meaning qualified module name loop index somehow concealed inside loop body evalparse statement macro fail macro calls eval obtain loop bounds check conditions satisfied means loop include statements effects print loop bounds conditionals statements unexpectedly executed macro expansion phas