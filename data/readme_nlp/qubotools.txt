qubotoolsjl tools quadratic unconstrained binary optimization models julia introduction qubotoolsjl package implements codecs qubo quadratic unconstrained binary optimization instances purpose provide fast reliable conversion common formats represent allows rapid leverage emergent computing architectures job solve optimization term qubo widely referring boolean form beginarrayrl min mathbf mathbf text mathbf mathbb array symmetric mathbb times nevertheless package supports ising models beginarrayrl min mathbf mathbf mathbf mathbf text mathbf leftlbrace rbrace array mathbb times triangular mathbf mathbb getting started installation julia import pkg julia pkg add qubotools basic usage julia using qubotools julia model qubotools readmodel json julia write qubo model supported formats marks indicate reading writing modes available corresponding file format respectively bqpjson rw bqpjson format designed lanlansi represent binary quadratic programs platformindependet fashion accomplished using json files validated using defined json schema qubo rw qubo specification appears input format wave applications brief explanation found qbsolv repository readme qubist rw simplest current supported formats minizinc rw minizinc constraint modelling language input solvers hfs hfs lowlevel mapping weights wave chimera graph conversion flowchart bold arrows indicate bijective modulo rounding erros conversion available regular arrows indicate critical information lost process metadata dashed arrows tell format conversion exists information scale offset factors neglected flowchart td modelqubotools model bqpjsonbqpjsonbrcodeboolcodebrcodespincode hfshfsbrcodeboolcode minizincminizincbrcodeboolcodebrcodespincode quboqubobrcodeboolcode qubistqubistbrcodespincode qubist model model hfs model qubist model minizinc model bqpjson qubo model backend abstractmodel abstract type defined domain available variable domains booldomain spindomain respectively mathbb lbrace rbrace lbrace rbrace conversion domains follows identity x qubotoolsjl exports standardqubomodel abstractmodel type designed powerful standard backend models plays role variable indexing type usually defaults int followed integer store sampled type vector spindomain signed real type represent coefficients choice energy values corresponding solution commonly set float package mathematical formulation inspired bqpjson min mathbf alpha left sum q xx sum lx beta alpha scaling factor beta constant offset lx linear terms q xx quadratic ones defined follow minimization sense default scaling factor alpha strictly positive jump integration main ideas jump mathoptinterface integration easy implemented backend lot data crunching set moivariableindex matches optimzer hard psr quantum optimization toolchain