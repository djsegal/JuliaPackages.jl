charlotte package particularlyfunctional prototype touched run julia wasm probably pkg clone pkg clone charlotte experimental compiler julia language targets web browsers via javascript webassembly charlotte webassembly backend currently supports simple numerical kernels productively sort scripting language wasm julia relu ifelse relu generic function method julia codewasm relu func param i result i i const getlocal getlocal i const i lts select return design julia code secretly comes dialects dynamic julia javascript makes heavy gc untyped data dynamic dispatch tracing jit compilers runtimes v extremely handling code static julia tight numerical loops operate arrays typed containers code aggressively optimised aheadtime compilers llvm tool job tracing static code specialising dynamic code ahead time lead unnecessary browser charlotte hybrid approach compiling julia code mix javascript webassembly worlds supporting flexible dommanipulation code tight numerical loops language getting performance code size prototypes difference dialects fairly stark dynamic subset essentially syntax layer js static subset supports basic numerics features added converge standard julia difference seamless users detailed outline static compile pipelin