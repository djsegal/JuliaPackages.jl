using bee beeencoderjl solve sat package originally named beejl name changed registered julia package repository beauty brute force modern sat solver capable handling huge size successfully applied combinatorics communications acm article titled science brute force boolean pythagorean triples solved sat solver example paul erds discrepancy conjecture initially attacked help computer beneficial combinatorics learn harness beautiful brute force sat solvers experiments sat solver search bigger space pencil paper patterns spotted conjectures proved disapproved combinatorial difficult encode cnf formulas contain boolean variables integers represented boolean variables encoding scheme manually tedious course solvers beyond cnf example microsoft z theorem proved solve types size matters pure cnf solver faster bee project tries ease using sat solvers bee bengurion university equipropagation encoder compiler enables encode finite domain constraint cnf compilation bee applies optimizations include equipropagation paper partialevaluation careful selection encoding techniques constraint depending various parameters constraint experiments bee balance expressive power performance bee bee written prolog learn prolog encode syntax defined bee program bumblebee comes package solve directly bee bumblebee compile dimacs cnf file solved numerous sat solvers choice julia convert combinatorics bumblebee code wrote package beeencoderjl workflow julia code beeencoderjl bee code bumblebee solutionunsatisfiable getting bigger try julia code beeencoderjl bee code bumblebee cnf sat solver unsatisfiable cnf solution bumblesol bee solution rest article describe bee julia understand briefly mention beeencoderjl bee sat solver beginners docker image easiest try bee beeencoderjl docker image docker install simply type terminal docker pull newptcaibeeencoder docker run newptcaibeeencoder download start bash shell image bee install folder bee check run cd bee bumblebee beesolverbexamplesexsatbee beeencoderjl included image start julia repl immediately drawback method image mb unavoidable docker julia mb prolog costs mb compiling running bee ran difficulties tried compile version bee correctly ubuntu linux system similar install swiprolog terminal typing sudo aptaddrepository ppaswiprologstable sudo apt update sudo apt install swiprolognox download bee using link unzip computer terminal change directory cd pathdownloadedfilebeesatsolversrc compile sat solvers coming bee env cpath usrlibswiprologinclude satsolvers compilation successful able excute cd satsolver ls following output compile bumblebee cd beesolver succeed able bumblebee bumblesol directory cd ls files bapplications beesolver bumblesol satsolver beecompiler bumblebee constraintspdf readmetxt satsolversrc using bumblebee bee try examples bumblebee folder beesolverbexamples simple following exsatbee newint newint newint intplus newint newboolx newboolx newboolx newboolx booleqxx booleqxtrue boolarraysumeqxxxx solve satisfy defines integer variables various range boolean variables x x x x adds various constraints variables example xx syntax check document solving directly solve directly bumblebee bumblebee beesolverbexamplesexsatbee solution base xingmatwlxincabee bumblebee beesolverbexamplesexsatbee bumblebee amit metodi reading bee file load plsatsolver swiprolog interface glucose v ok encoding bee model solving cnf satisfy x false x true x false x false check constraints satisfied caveat run bumblebee current directory pwd set file bumblebee directory example try cd beebumblebee beebeesolverbexamplesexsatbee error messages convert cnf mentioned earlier compile cnf dimacs format example bumblebee beesolverbexamplesexsatbee dimacs exsatcnf exsatmap create files exsatcnf exsatmap top lines exsatcnf looks dimacs file generated bumblebee cnf little bit explanation lines line beginning comment line cnf formula variables clauses clause variable true symbol clause means negate variable true variable true integers toy boolean variables efficient coding integers critical bee helps try favourite sat solver cryptominisat assuming path cryptominisat exsatcnf exsatsol solve save solution file exsatsol exsatsol comments except lines satisfiable satisfiable solution line starting means variables sign front variable assigned value true otherwise assigned false solution bee variables bumblesol folder bumblebee bumblesol bit help remove starting exsatsol satisfiable run bumblesol exsatmap exsatsol bumblebee solution reader amit metodi reading dimacs solution file reading decoding bee map file x false x true x false x false bee fan choice sat solver toplevel sat solvers cadical winner sat race tends fastest dealing solvable lingeling plingeling treengeling parallelization painless divide conquer strategy parallelization maplelcmdiscchronobtdl winner sat race unsatisfiable found documents experience sat solvers similar performance try encode beeencoderjl bigger write bee code manually beeencoderjl help write julia beeencoderjl convert bee syntax example beeencoderjl install beeencoderjl typing julia repl using pkg pkg add beeencoder run following code julia repl using beeencoder beeint beeint beeint constrain beeint xl beebool constrain xl xl constrain xl true constrain sum xl xl xl xl bee render output newint newint newint newint newbool x newbool x newbool x newbool x intplus booleq x x booleq x true boolarraysumeq x x x x solve satisfy exactly solve file solve bumblebee described bee installed bumblebee found path environment variable run beesolve directly julia solution julia output solve swi prolog interface glucose v ok bumblebee amit metodi reading bee file load plsatsolver encoding bee model solving cnf satisfy x false x false x true x true check output dictionary containing solution julia bee solution satisfiable true integer variables dict boolean variables dict stringbool x x x x reset model reset acknowledgement thank generous people spend time create amazing sat solvers freely available writing module learn deal julia convenient metaprogramming features thank github julia slack channel helped particular alex arslan david sanders syx pek jeffrey sarnoff thank dear friend yelena yuditsky giving solve motiv