objectivecjl objective bridge julia quick start objectivecjl registered package install using package manager pkg add objectivec library allows call objective methods using native syntax julia using objectivec julia objc nsstring idobject id object xa performance reasons objectivecjl requires specify type call arguments using julia typeassertion syntax idobject example build julia apis functionality manually keeping track id pointers objectivecjl julia objcwrapper nsvalue julia objptr objc nsvalue valuewithpointer cnull ptrcvoid idnsvalue id nsvalue xcfca julia obj nsvalue objptr nsvalueinstance object type nsconcretevalue generated nsvalue class abstract type implements type hierarchy nsvalueinstance object concrete structure houses id pointer split makes implement multilevel inheritance attach functionality level hierarchy entirely transparent user instance types code signatures objcwrapper macro generates conversion routines accessors makes objects directly objc calls require id pointers julia getpointer val nsvalue objc val idnsvalue pointervalue ptrcvoid julia getpointer obj ptr x properties common pattern objective properties acces instance variables access directly using objc objectivecjl provides macro automatically generate appropriate getproperty setproperty propertynames definitions julia objcproperties nsvalue begin autoproperty pointervalue ptrcvoid julia obj pointervalue ptr x behavior objcproperties customized passing keyword arguments property macros objcproperties someobject begin simplest definition generate getter convert property value dsttyp autoproperty someproperty dsttyp generate setter autoproperty someproperty dsttyp setter setsomeproperty property objc object object pointer type nil check return convert pointer instance specified type autoproperty someproperty iddsttyp sometimes convert type autoproperty somestringproperty idnsstring typ string finally control yourselv getproperty somecomplexproperty function obj obj return value setproperty somecomplexproperty function obj val obj val return blocks julia callables converted objective blocks using objcblock macro julia function hello println hello julia block objcblock hello cint cint object passed objective methods blocks arguments note julia blocks called juliamanaged threads else application crash blocks called unrelated threads julia earlier objasyncblock macro instead variant takes asynccondition executed libuv event loop block called note time block called condition executed libuv decide coalesce multiple conditions single execution preferred objcblock whenever pass arguments condition closure capture julia counter julia cond base asynccondition asynccond counter julia block objcasyncblock cond api wrappers objectivecjl provides ready wrappers essential frameworks foundation julia using foundation julia str nsstring test nsstring test julia nsarray str str test test julia nsdictionary dict str str test test julia str id object xfafbcab julia dict nsstringnsstring dictnsstring nsstring entry test test debugging objectivecjl hood toggle tracing preference package print objective calls makes julia using objectivec julia objectivec enabletracing true info objectivec jl tracing setting changed restart julia session change effect restart julia julia using objectivec julia str nsstring test nsstring stringwithutfstring int xdc id nsstring xdfccdc julia string str id nsstring xdfccdc utfstring int xda test useful submitting bug reports upstream projects familiar julia current status objectivecjl recently revamped heavy development assume apis stable version released main ffi metaljl expect existing functionality fairly solid process revamping package functionality lost including ability define objective classes using native syntax please look repository revamp consider contributing pr br