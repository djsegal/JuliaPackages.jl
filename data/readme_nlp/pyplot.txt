pyplot module julia module provides julia interface matplotlib plotting library python specifically matplotlibpyplot module pyplot julia pycall package call matplotlib directly julia little overhead arrays passed copy pythonplotjl version pyplotjl using alternative pythoncalljl package package takes advantage julia multimedia api display plots julia graphical backend including inline graphics ijulia alternatively pythonbased graphical matplotlib backend support interactive plot zooming etcetera pyplot package replaces earlier package name junfeng li pyplot zeromq socket ipython installation python matplotlib library installed machine pyplot inline plotting ijulia require gui backend qt wx gtk backends matplotlib described matplotlib installed pkgaddpyplot julia install pyplot dependencies automated matplotlib installation set pycall condajl package install private system path julia python distribution via miniconda pyplot automatically install matplotlib installing pycall pyplot time envpython running pkgaddpyplot otherwise reconfigure pycall conda via env python pkg build pycall time import pyplot tell conda install matplotlib os macos install xquartz macos install anaconda python distribution functional pyplot macos comes python matplotlib version matplotlib defaults cocoa gui backend supported pyplot tk backend supported tk backend unless install xquartz alternatively install anaconda python distribution includes ipython ijulia dependencies otherwise homebrew package manager brew install python gcc freetype pyqt brew link force freetype export path usrlocalbin path export pythonpath usrlocallibpython pythonpath pip install numpy scipy matplotlib add export commands profile file automatically executed whenever start shell basic usage matplotlib pyplot installed using graphicscapable julia environment ijulia simply type using pyplot begin calling functions matplotlibpyplot api example using pyplot linspacepi julia range stop pi length sin cos plot color red linewidth linestyle title sinusoidally modulated sinusoid arguments including keyword arguments exactly python minor translations course julia true instead python true none matplotlibpyplot api extensive describe matplotlibpyplot documentation information matplotlib version returned pyplotversion exported functions currently documented matplotlibpyplot api exported functions module call matplotlibpyplotfoo pltfoo example pltplot raw pyobject matplotlib modules accessible pyplotmatplotlib matplotlib somewhat inconsistent capitalization contourd bard etcetera pyplot renames functions capital histd bard explicitly qualify functions built julia functions particular pyplotxcorr pyplotaxes pyplotisinteractive access matplotlibpyplotxcorr etcetera wish access pyplot functions exclusively pltsomefunction conventional python import pyplot const plt pyplot instead using pyplot figure objects current figure figure object wrapper matplotlibpyplotfigure calling gcf figure type supports julia multimedia api displayfig figpyfigure io mime fig writemime julia write mime type string imagepng applicationpdf supported matplotlib backend interactive plotting pyplot interactive julia prompt julia commandline prompt ijulia notebook plots appear immediately plotting function plot etc evaluated pyplot julia script run interactively julia myscriptjl matplotlib executed interactive mode plot window run equivalent plt python examples interactive versus julia graphics pyplot julia graphics backend capable displaying png svg pdf images ijulia environment backend simply call pushdisplay desired display julia multimedia display api detail hand wish python matplotlib backends interactive window plot interactive zooming panning etcetera time running pygui true pythonbased gui subsequent plots pyguifalse return julia backend python gui running display current figure julia backend running displaygcf julia graphics backend available pyplot imported pyguitrue default choosing python gui toolkit tk wxwidgets gtk version qt version via pyqt pyqt pyside python gui backends supported pyplot obviously installed toolkits python default pyplot picks starts based installed force specific toolkit chosen importing pycall module using pygui function set python backend importing pyplot using pycall pygui gui using pyplot gui currently tk gtk gtk qt qt qt wx set default via matplotlib rcparamsbackend parameter matplotlibrc file color maps pyplot module exports functions types based matplotlibcolors modules simplify management color maps assign values colors various plot types particular colormap wrapper matplotlibcolorscolormap type following constructors provided colormapcolorantnamestring abstractvector gamma constructs component colormap linearly interpolating colors array colorant colortypesjl package name constructed automatically call colormap gamma instead alternatively instead passing array colors pass column matrix rgb rgba components respectively similar listedcolormap matplotlib color maps defined passing arrays yy tuples red green blue optionally alpha components defined matplotlibcolorslinearsegmentedcolormap constructor via colormaprealnamestring abstractvector abstractvector abstractvector gamma colormaprealnamestring abstractvector abstractvector abstractvector alphaabstractvector gamma colormapnamestring returns existing registered colormap equivalent getcmap name matplotlibcolorscolormap objects returned python functions automatically converted colormap type getcmapnamestring getcmapnamestring lutinteger call getcmap function registercmapcolormap registercmapnamestring colormap call registercmap function getcmaps returns vectorcolormap currently registered colormaps note svgsupporting display environment ijulia colormap vectorcolormap objects displayed graphically try getcmaps d plotting pyplot package imports functions matplotlib mplotd toolkit unlike matplotlib create d plots directly creating axesd object simply calling bard contourd contourfd plotd plotsurface plottrisurf plotwireframe scatterd textd textd exactly correspondingly named methods axesd export matlab synonyms surf plotsurface plottrisurf darray arguments mesh plotwireframe example surf rand plot random surface mesh explicitly create subplot d axes via example subplot projectiond exactly matplotlib call usingd function ensure mplotd loaded happens automatically plotd etc axesd constructor artd module exported latex plot labels matplotlib allows latex equations plot labels titles simply enclosing equations dollar signs string typing latex equations julia string literals awkward escaping prevent julia interpreting dollar signs backslashes example latex equation alpha beta literal string alpha beta julia simplify pyplot latexstrings package provide latexstring type constructed via escaping backslashes dollar signs example simply write alpha beta abovementioned equation title plot amma string contains equations omit dollar signs alpha beta added automatically added benefit latexstring automatically displayed rendered equation ijulia latexstrings package information svg output ijulia default plots ijulia sent notebook png images optionally tell pyplot display plots browser svg images advantage resolutionindependent display pixellation resolutions example convert ijulia notebook pdf running pyplot svg true default svg plots browser slower display especially complex plots display inaccurately browsers buggy svg support pyplotsvg method returns svg display currently enabled note entirely separate manually exporting plots svg format regardless pyplot svg browser display export plot svg time using matplotlib savefig command savefigplotsvg modifying matplotlibrcparams mutate rcparams dictionary matplotlib global parameters following example rcparams pyplot pydict pyplot matplotlib rcparams rcparams fontsize instead pyplotmatplotlibrcparams pycall copy dictionary python rcparams modified author module written steven johnson