flexiblefunctorsjl flexiblefunctorsjl allows convert struct fields flat vector representation provides function transform similar vectors structs flexiblefunctorsjl provides parameters function extended dynamically determine fields vector fields fixed example using flexiblefunctors zygote import flexiblefunctors parameters struct model elements params parameters model params struct square params parameters square params square s square s square s square m model s s s elements m model s s s p re destructure m p re destructure m julia println p julia println p replace third widths vector values julia mapreduce re elements original widths m parameters julia mapreduce re elements map vector parameters object optimization grad zygote gradient mapreduce elements re julia getfield grad elements overview flexiblefunctorsjl adds ability specify individual fields type parameters parameters indicate fields retrieved obtain flat vector representation struct parameters destructure destructure returns function re reconstructs instance original type re operates function flat vector representation reconstructed values parameter fields drawn vector parameter fields left unchanged parameters determined recursively tagged field contains struct parameters parameters included resulting vector reconstruction ffunctor takes struct instance parameters method returns namedtuple representation parameters ffunctor returns re function reconstructing struct namedtuple representation provide flexiblefunctorsparametersyourtype method return parameters yourtype tuple symbol accomplished import ing flexiblefunctorsjl adding additional methods directly parameters flexible flexiblefunctors functionality provided flexiblefunctorsjl similar functorsjl projects annotate types special fields convert flat vector representations structs re constructed instance functorsjl stores information typelevel instances type forcing instances identical fields call parameters flexiblefunctorsjl store parameter fields instancelevel example instead hardcoding returned parameters add parameters field struct specify parameters runtime tuple symbol types specialize fields actually parameterized liable changed re construction parameter fields stored struct instance reparameterizing type instance recommend setfieldjl set macro easily update nested fields note flexiblefunctorsjl reproduce similar behavior functorsjl parameters fixed tuple instances paramet