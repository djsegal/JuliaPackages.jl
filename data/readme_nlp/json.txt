jsonjl package provides parsing printing json pure julia installation type add json hit return repl pkg add json basic usage import json jsonparse string stream julia data structures anumber anarray string json parse dictabstractstring entries anarray string anumber jsonjson julia data structures string json json json json anarraystringanumber documentation json print io io abstractstring json print io io unioninteger abstractfloat json print io io json print io io bool json print io io abstractdict json print io io abstractvector json print io io array writes compact extra whitespace indentation json representation supplied io json print abstractdict indent json print io io abstractdict indent writes json representation newlines indentation specified zero indent applied recursively nested elements json returns compact json representation abstractstring json parse abstractstring dicttype dict inttype int json parse io io dicttype dict inttype int json parsefile filename abstractstring dicttype dict inttype int usemmap true parses json abstractstring io stream nested array dict dicttype indicates dictionary type associative function returns instance dictionary type json objects parsed defaults dict built julia dictionary type passed additional functionality example import datastructures assuming datastructures package installed pass dicttypedatastructuresordereddict maintain insertion items object pass defaultdictstringmissing found keys return missing index result inttype argument controls integers parsed json file recognized integer parsed otherwise parsed float inttype defaults int example integer save space pass inttypeint alternatively json input integers int pass inttypeint inttypebigint inttype subtype real jsontext abstractstring wrapper julia string representing jsonformatted text inserted json output jsonprint jsonjson json lower pointd define custom serialization rule particular data type return value directly serialized help details customizing json users default behaviour json inappropriate json provides mechanisms users customize serialization method jsonwriterstructuralcontext customize cosmetic properties serialized json example default pretty printing vs compact printing supported provided structuralcontext examples applications structuralcontext appropriate include particular formatting demands json maybe compliance json standard json formats syntax method jsonserializationsserialization control translation julia objects json serialization instructions writing method jsonlower mentioned sufficient define json serializations userdefined objects appropriate overriding deleting predefined serializations globally affect users json module instance dangerous type piracy users define custom instance serialization example application includes commonly requested extension json serializes float nan infinite values nan inf contravention json standard methods controlled jsonshowjson function following signature jsonshowjsoniostructuralcontext serializationserialization object expected write io appropriate based rules serialization io usually required handled level manner raw io object ordinarily structuralcontext define structuralcontext following boilerplate recommended import json writer structuralcontext mutable struct mycontext structuralcontext io io additional settings context goes structural context similar existing json contexts instead subtype abstract subtype jsoncontext structuralcontext ioio field preferred default implementation write replacing method avoid requirement following methods defined context regardless subtypes jsoncontext structuralcontext directly methods omitted commonserialization context called object vector pair dict written requiring newline indent contexts context support indenting jsonwriterindentiomycontext called vectorsdicts separate items usually writes unless element json array default implementation jsoncontext exists requires mutable bool field implementation detail relied define delegate explicitly jsonwriterdelimitiomycontext called dicts separate key value usually writes jsonwriterseparateiomycontext called indicate start vector jsonwriterbeginarrayiomycontext jsonwriterendarrayiomycontext called indicate start dict jsonwriterbeginobjectiomycontext jsonwriterendobjectiomycontext following methods jsoncontext provides default implementation specialized structuralcontext jsoncontext jsoncontext defaults appropriate available directly write specific byte supported default implementation writes underlying io field note enables jsoncontext act ioio print etc base write io mycontext byte uint write null default implementation writes underlying io field json writer shownull io mycontext write object string manner safe json string default implementation calls print escapes byte appropriate adds double quotes content elt json writer showstring io mycontext elt write element json array default implementation calls delimit indent showjson json writer showelement io mycontext elt write key json object default implementation calls delimit indent showstring seperate json writer showkey io mycontext elt write keyvalue pair json object default implementation calls key showjson json writer showpair io mycontext serialization key value follows example jsoncontext subtype similar default context none instead null json nulls compatible python object literal notation pyon wraps default jsoncontext delegate required methods wrapped context io object include io field write method delegated default appropriate specialization shownull import json writer import json writer jsoncontext mutable struct pyoncontext jsoncontext underlying jsoncontext delegate indent delimit separate beginarray endarray beginobject endobject eval json writer delegate io pyoncontext json writer delegate io underlying base write io pyoncontext byte uint write io underlying byte json writer shownull io pyoncontext print io none pyonprint io io obj io pyoncontext json writer prettycontext io json print io obj return usage pyonprint function print function julia pyonprint stdout none julia sprint pyonprint missing none serialization json cosmetics unimportant objects converted json equivalents arrays objects etc changed appropriate abstraction serialization serialization instance argument showjson specializing showjson custom serialization instances enables creating restrictive convert objects json default serialization called jsonserializationsstandardserialization subtype commonserialization methods showjson added standardserialization commonserialization json packages types lower functionality specific commonserialization create serialization instance inherits extend override standard serialization suffices define serialization subtyping commonserialization example serialization standardserialization except serialized additional type tag import json serializations commonserialization standardserialization import json writer structuralcontext showjson struct taggednumberserialization commonserialization tag real dict type string typeof value showjson io structuralcontext taggednumberserialization unioninteger abstractfloat showjson io standardserialization tag note recursive call constructs standardserialization otherwise result stack overflow serializes dict using toy example fine overhead constructing dict instance constructed dict values tagged deal complex simply eliminate overhead constructing intermediate dict showjson method implemented carefully explicitly calling context beginobject showpair endobject methods documented standardserialization showpair call careful implementation difference recursive data structures serialized complex import json writer beginobject showpair endobject function showjson io structuralcontext taggednumberserialization unioninteger abstractfloat beginobject io showpair io tag string typeof showpair io standardserialization value endobject io custom serialization sprint encapsulated convenient userdefined inteface julia json parse sprint showjson taggednumberserialization hi element array dict string value type int dict string value type float hi desired inherit functionality standardserialization users choose start scratch directly subtyping jsonserializationsserialization useful user wishes enforce strict json throws errors attempting serialize objects aren explicitly supported note means define method support serializing object including standard json objects booleans integers strings etc