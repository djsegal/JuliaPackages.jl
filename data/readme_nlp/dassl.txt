dassljl implementation dassl algorithm solving algebraic differential equations install stable version run pkgadddassl common interface example package compatible juliadiffeq common solver interface documented differentialequationsjl documentation following dae tutorial dassl follows using dassl u du tspan function resrob yp e e yp yp prob daeproblem resrobduutspan sol solve prob dassl details using interface ode tutorial examples solve scalar equation initial data time run following code using dassl dy dy equation solved dy y initial value tspan time span integrate tnyn dasslsolveytspan returns tnyn change relative error tolerance rtol absolute error tolerance atol initial step size h follows tnyn dasslsolveytspan test convergence execution time index run convergencejl test directory naturally dassljl supports multiple equations example pendulum equation sin initial data solved defining following residual function function dy dy dysin dy dy initial data shoud set vector y y solution computed calling tspan tnyn dasslsolveytspan output apart producing times tn values yn dasslsolve produces derivatives dyn byproduct bdf algorithm tnyndyn dasslsolveytspan decision produce values entirely trivial compute keyword arguments dassl supports keyword arguments names compatible namse ode package reltole abstole set relativeabsolute local error tolerances initstepe minstep maxstepinf set initialminimalmaximal step sizes step size drops minimum integration stops jacobian expensive step integration solving nonlinear equation via newton method requires jacobian form dfdydfdy default solver approximates jacobian method finite differences provide method function dydfdydfdy pendulum equation define jacobian jacobiandycos maxorder apart selecting current step size dassl method dynamically change bdf method bdf stable th defaul upper limit systems equations sense lower dyzero solving differential algebraic equations start consistent initial conditions choose initially dassl tries guess initial value fails set initial condtions derivative normdasslnorm weightsdasslweights dassl computes error roughly errnormycy accepting step err local error tolerances reltol abstol hidden definition dasslnorm wtnormwtsqrtlength weights wt defined dasslweightsreltolabstolreltolabsabstol supply weights norms appropriate hand factorizejacobiantrue boolean option forces factorization jacobian storing dramatically increases performance systems decrease computation speed systems iterator version dassljl supports iterative version solver implemented via coroutines debugging little tricky via dassliterator following example dassliterator stop integration solution drops dydy iterator version dassl solver dy dassliterator dy break