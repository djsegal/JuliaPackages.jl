dassl implement dassl algorithm solv algebra differenti equat instal stabl version run pkg add dassl common interfac exampl packag compat juliadiffeq common solver interfac document differentialequ document follow dae tutori dassl follow use dassl tspan function resrob prob daeproblem resrob tspan sol solv prob dassl detail use interfac ode tutori exampl solv scalar equat initi data time run follow code use dassl equat solv initi valu tspan time span integr dasslsolv tspan return chang relat error toler rtol absolut error toler atol initi step size follow dasslsolv tspan test converg execut time index run converg test directori natur dassl support multipl equat exampl pendulum equat sin initi data solv defin follow residu function function sin initi data shoud set vector solut comput call tspan dasslsolv tspan output apart produc time valu dasslsolv produc deriv dyn byproduct bdf algorithm dyn dasslsolv tspan decis produc valu entir trivial comput keyword argument dassl support keyword argument name compat nams ode packag reltol abstol set relat absolut local error toler initstep minstep maxstep inf set initi minim maxim step size step size drop minimum integr stop jacobian expens step integr solv nonlinear equat via newton method requir jacobian form default solver approxim jacobian method finit differ provid method function pendulum equat defin jacobian jacobian cos maxord apart select current step size dassl method dynam chang bdf method bdf stabl defaul upper limit system equat sens lower zero solv differenti algebra equat start consist initi condit choos initi dassl tri guess initi valu fail set initi condtion deriv norm dassl norm weight dassl weight dassl comput error rough err norm accept step err local error toler reltol abstol hidden definit dassl norm norm sqrt length weight defin dassl weight reltol abstol reltol ab abstol suppli weight norm appropri hand factor jacobian true boolean option forc factor jacobian store dramat increas perform system decreas comput speed system iter version dassl support iter version solver implement via coroutin debug littl tricki via dassliter follow exampl dassliter stop integr solut drop iter version dassl solver dassliter break