adagram adapt skip gram adagram model nonparametr extens famous skip gram model implement word vec softwar abl learn multipl represent word captur word mean project implement adagram julia languag instal adagram julia packag repositori instal follow use pkg pkg add packagespec url train model straightforward train model script run paramet pass help option print usag inform usag train window window worker worker min freq min freq remov top remov top dim dim prototyp prototyp alpha alpha subsampl subsampl context cut epoch epoch init count init count stopword stopword sens treshold sens treshold regex regex train dict output descript paramet window half context size use valu worker parallel process train min freq specifi minimum word frequenc word ignor use valu depend corpora remov top allow ignor frequent word dim dimension learn represent prototyp set maximum learn prototyp truncat level truncat stick break actual amount memori depend linear alpha paramet under dirichlet process larger valu alpha lead mean discov use valu alpha pitman yor process dirichlet process couldn reason result left option chang subsampl threshold subsampl frequent word similar word vec context cut option allow random decreas window train increas train speed effect model perform epoch specifi pass train text usual epoch larger epoch usual requir corpora init count initi variat stick break distribut prototyp assign zero occurr except assign init count zero valu mean prototyp occurr stopword path newlin separ file list word ignor train sens threshold allow spars gradient speed train posterior probabl prototyp blow threshold won contribut paramet gradient regex filter word match dictionari provid train path train text format section dict path dictionari file format section output path save train model input format train text format word vec word sensit assum separ space charact punctuat remov unless special intent preserv util input file output file simpl token unix util train model provid dictionari file word frequenc statist follow format word word wordn adagram assum provid word frequenc actual obtain train file build dictionari file use util input file dict file play model model train learn word vector one learn word vec adagram learn vector word disambigu word use context determin vector load model dictionari julia use adagram julia dict load model path model examin prototyp learn word expect function julia expect dict word appl element array float function return prototyp size array prior probabl prototyp exampl prototyp probabl signific larger zero conclud mean word appl discov examin prototyp look nearest neighbour julia nearest neighbor dict appl element array almond cherri plum apricot orang pecan pomegran blueberri pear peach julia nearest neighbor dict appl element array macintosh iifx iig comput kaypro ipad ibm powerpc base ibm compat provid context word appl obtain posterior probabl prototyp julia disambigu dict appl split iphon announc element array float julia disambigu dict appl split fresh tasti breakfast element array float model correct estim probabl sens confid vector correspond prototyp word appl obtain dict word appl context awar featur word appl plase refer api document detail usag info futur api document python bind disambigu user provid sens inventori refer sergey bartunov dmitri kondrashkin anton osokin dmitri vetrov break stick ambigu adapt skip gram arxiv preprint toma mikolov ilya sutskev kai chen greg corrado jeffrey dean distribut represent word phrase composit proceed nip