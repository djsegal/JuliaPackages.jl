fastanonymous creating efficient anonymous functions julia note package deprecated fastanonymous provokedinspired creation fast anonymous functions native feature julia hence package supported julia starting julia package installable package manager fastanonymous versions implementations runs julia julia re running julia relevant readme installation install package julia using pkg add fastanonymous usage julia create anonymous function offset offset function efficient shown performant adding anon macro using fastanonymous offset anon offset ordinary function concrete example speed comparison using fastanonymous function testn function testinlined conventional anonymous function offset offset time testn julia time testn elapsed time mb allocated gc time pauses sweep e hardwired generic function sqroffset time testn sqroffset julia time testn sqroffset elapsed time mb allocated gc time pauses sweep e anonized function anon offset time testn julia time testn elapsed time bytes allocated e manual inlining time testinlined julia time testinlined elapsed time bytes allocated e fold faster anonymousfunction version tenfold faster generic function version indeed fast manually inlined function relatedly exhibits unnecessary memory allocation changing parameter values previous definition display repl informative julia anon offset quote none line main main offset offset main addition specifying module scope function definition offset equivalent offset environment consists stored values offset creating change environmental variables julia offset julia julia symbols arguments environmental variables example julia linspace pi julia anon sin quote none line main main sin main julia pi element arrayfloat julia julia quote none line main main sin main inner workings package shameless hacks implement closures behave native solution major difference native closure environment immutable mutable acknowledgments package viewed alternative syntax excellent numericfuns split numericextens