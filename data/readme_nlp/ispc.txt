ispcjl note recent changes julia represents functions closures require redesign package published ir stabilises bit ispcjl intel ispc compiler compile fragments ispc julia code vector code eg sseavx intel cpus runtime similar standard simd macro supports control statements math functions speedups xx compared plain julia code achieved single core level interface translates julia ispc lowlevel interface compiles loads ispc programs requirements julia dev cfdf utc ispc found path libtool found path optional llvmdis looking ispc llvm assembly level interface progress level interface fairly functional bugs odd missing math function expected documentation example notebook overview level interface translates julia code annotated set macros code compiled ispc fly example using ispc inline function mandel cre cim count zre cre zim cim count zre zre zim zim f break newre zre zre zim zim newim f zre zim zre cre newre zim cim newim return ispc function mandelbrotispc x y x y output maxiters height width size output dx x x width dy y y height kernel targetavxix width foreach height x dx y dy output mandel maxiters output supported ispc constructs foreach foreachactive untested unmasked untested coherent untested limitations level interface meant numerical kernels julia syntax types supported arrays indexed integers providing single index linear indexing index dimension multidimensional arrays indexing yield array element subarray outer variables kernel arguments primitive types arrays primitive types simple composite types unitrange supported inside kernels eg loops kernel arguments moment functions direct translation ispc supported inside kernels userdefined functions declared inline restriction lifted future inner functions exceptions task switching etc supported ispc tasklevel constructs supported lowlevel interface lowlevel interface allows load call fragments ispc code using ispc basic ispc kernel code export void simpleuniform float vin uniform float vout uniform int count foreach index count float vinindex else sqrt voutindex compile code function pointer kernel lib loadispc code targetavxix fptr libdl dlsym lib simple call kernel vin rand float vout zeros float ccall fptr void reffloat reffloat uint vin vout length vout kernel macro creates lambda function containing kernel code codelowered codetyped run main ispc function information closure variables captured kernel lambda kernel arguments kernel fragments main function replaced calls generated kernelcall function kernelcall called time type inference run kernel fragment types local variables inlines functions inlined lowered typed ast transformed unlower goto statements ispc support varying goto transformed ast translated ispc resulting code compiled ispc loaded libdl called ccal