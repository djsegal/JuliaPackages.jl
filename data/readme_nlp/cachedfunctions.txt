cachedfunctionsjl bored creating cache time function defining jacobian inplace functions names output caches package maybe help limits package inplace functions form eltype eltype type array dict sparsevector sparsearray default caches threadsafe async safe future releases add special cached types deal workaround try creating cached functions instances using deepcopy help easing limits appreciated usage simplest package example inplace function function exp sum x rand x rand x rand float x rand float cachedfunction multidimentional cachedfunction x allocates time x caches created allocated x evaluated additional allocations evaluate x call function x specific cache float created x allocations little bit whe julia cached version function cached methods julia calls julia cachedmethods iddictdatatypefunction entries float float dict cached closures type stored cachedmethods cache exists created fly runtime happens allocate runtime solution allocatetype julia cached version function cached methods julia allocatebigfloat julia cached version function cached methods accesing evaluating default cachedfunction store type calling create cache store input values evaluate access input output values stored type using functions inputtype outputtype allocatetype allocates cache action x evaluate x x stored in input float accesses input value eltype float in x true out output float accesses output value eltype float x rand evaluate x evaluates f cache changed x stored in input float x stored x in x false out output float false evaluate x restores output cache x out output float true occurs calculate jacobians jacobians caches create types functionality pull requests issues writ