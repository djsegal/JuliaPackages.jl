adapodejl adaptive multistep numerical ode solver based grassmannjl element assembly julia project originally started fortran project called adapode using grassmann adapode makie basis x v v v lorenz chain chain lines odesolve lorenzx supported ode solvers include explicit euler heun method improved euler midpoint nd rk kutta rd rk classical th rungekuta adaptive heuneuler adaptive bogackishampine rk adaptive fehlberg rk adaptive cashkarp rk adaptive dormandprince rk multistep adamsbashforthmoulton ndrdthth adaptive multistep abm ndrdthth l projection mesh lprojector args mesh color assemblemassfunction args lprojector initmesh sin lprojector initmesh sin partial differential equations assembled various additional methods poissonsolver gd gn mesh color solvepoisson gdgn function solvepoisson gd gn volumes assemblefunction assemblestiffness assemblerobin gdgn return function solvesd gd gn volumes gradienthat assemblestiffness means assembleconvection sd assemblesd sqrt assemblerobin gdgn return sd function solvetransport volumes gradienthat assemblestiffness assembleload assembleconvection return solvedirichlet modular methods input meshes dimension following examples based trivially generated dimensional domains function backwardeulerheatd initmesh range length time grid abs initial condition assemblestiffness assemblex assemblemassfunction assemblerobin e float step lhs time step lhs println mesh color function poissonadaptive e length volumes gradienthat assemble solvedirichlet jumps display mesh color shading false typeof abstractrange scatter markersize else wireframe color red linewidth sqrt norm length println maximum sleep refinemesh select regular return poissonadaptive refinemesh exp abs finite element boundary value enabled mesh representations imported external sources methods automatically generalize dimensional manifolds compatible discrete differential geometri