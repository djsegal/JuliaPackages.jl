jedisjl lightweight redis client implemented julia key features links detailed interfaces documentation basic command execution executing commands global client instance pipelining transactions pubsub redis locks support secured redis connection ssltls usage establishing basic client connection client clienthostlocalhost port establishing secured client ssltls connection sslconfig getsslconfigsslcertfilerediscrt sslkeyfilerediskey sslcacertscacrt client clientsslconfigsslconfig setting getting global client setglobalclientclient getglobalclient executing commands setkey value clientclient key global client default executedel key client custom commands using pipelining speed queries normal pipe pipeline setkey value clientpipe key clientpipe results executepipe block results pipeline pipe lpushexample clientpipe lpopexample clientpipe rpopexample clientpipe lpopexample clientpipe executing commands atomically multiexec transactions normal multi setkey value key results exec block results multiexec setkey value key key executing multiexec transaction pipeline results pipeline pipe lpushexample clientpipe lpopexample clientpipe rpopexample clientpipe multiexec clientpipe lpopexample clientpipe rpopexample clientpipe lpopexample clientpipe using redis pubsub interfaces subscribe psubscribe set channels publisher subscriber clients channels publisher client subscriber client begin subscription stopfnmsg msg close subscription stop subscription loop message matches messages async subscribechannels stopfnstopfn clientsubscriber msg pushmessages msg async function block alternatively threadspawn waituntilsubscribedsubscriber subscriberissubscribed outputs true subscribersubscriptions set actively subscribed channels publish channels publish hello clientpublisher publish world clientpublisher unsubscribing unsubscribe clientsubscriber waituntilchannelunsubscribedsubscriber subscribersubscriptions unsubscribe clientsubscriber unsubscribe channels waituntilunsubscribedsubscriber subscriberissubscribed outputs false subscribersubscriptions set actively subscribed channels empty using redis locks performing atomic operations async redislockexamplelock sleep lock exist isredislockedexamplelock sleep ensure async lock active proceeding redislockexamplelock println message delayed blocked lock