infiltratorjl packages provides infiltrate macro acts breakpoint negligible runtime performance overhead note access function scopes step calls actual debugger level flexibility running code triggering infiltrate repl mode via inline evaluation vs code juno cause issues recommended repl directly infiltrate infiltrate infiltrate condition bool infiltrate sets infiltration infiltration hit drop interactive repl session inspect local variables call stack execute arbitrary statements context current local global scope optional argument cond enables infiltration evaluates true infiltrate false infiltrate isdefined main infiltrator main infiltrate module base locals file line infiltrate package code posthoc evaluation module functional form require infiltrator loaded compiletime autoloading infiltratorjl following convenience macro defined startupjl package code automatically load infiltratorjl environment stack subsequently call infiltrate macro autoinfiltrate cond true pkgid base pkgid base uuid abcccdeceb infiltrator haskey base loadedmodules pkgid try base eval main using infiltrator catch err error load infiltratorjl included environment stack base loadedmodules pkgid lnn linenumbernode source line source file return expr macrocall symbol warn lnn load infiltrator return expr macrocall expr quotenode symbol infiltrate lnn esc cond note probably expected modulelevel statements package code due precompilation exfiltrate exfiltrate assigns local variables global storage safehouse exfiltrating variables exfiltrate assignment infiltrate session happens assigning variable global storage space module exfiltrated objects directly accessed via infiltratorstore exported aliases safehouse exfiltrated julia foo exfiltrate foo generic function method julia foo julia safehouse exfiltrated reset safehouse infiltratorclearstore assign specific module infiltratorsetstoremod allows set module main export contents safehouse global namespace recommended example usage julia function push infiltrate generic function method julia infiltrating vectorint repl infil code entered evaluated current scope changes local variables global variables changed eval eval assignments safehouse following commands special cased print help text trace print current stack trace locals print local variables locals prints exfiltrate save local variables store exfiltrate saves variant exfiltrate variables defined infil repl toggle toggle infiltrating infiltrate spot infiltrator cleardisabled continue continue infiltration exit shortcut ctrl doc symbol help symbol normal julia repl exit stop infiltrating remainder session exit julia versions prior manually cleared infiltrator endsession infil locals vector int vectorint infil error argumenterror invalid rational zero int zero int stacktrace throwrationalargerrorzero type base rational jl rational int num int den int base rational jl rational rational jl inlined int int base rational jl top level scope none infil toggle disabled infiltration infiltration infil toggle enabled infiltration infiltration infil continue infiltrating vectorint repl infil intermediate copy element vector infil exfiltrate intermediate exfiltrating local variables safehouse infil exit element vector julia safehouse intermediate element vector julia withstore begin intermediate element vectorint related projects exfiltrate python