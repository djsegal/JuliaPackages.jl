papijl julia bindings papi hardware performance counters library introduction performance application programming interface papi designed portable efficient api access performance counters available modern processors counters provide insight performance engineers improvements code performance metrics definitions programming interfaces platforms papi attempts set standard definitions performance metrics platforms provide standardized api users vendors academics package provides access functionality libpapi builds level functions top goal implement useful primitives developers easily understand example profile sum sample sum please documentation instructions examples prerequisites package depends libpapi installed system recommended papijll default system libpapi build papijl follows juliapapibinarysystem julia import pkg pkgbuildpapi try locate libpapi system additional hints using juliapapilibrary juliapapipath environment variables basic usage using papi function mysum abstractarray zero eltype rand stats profile mysum contributing contributions encouraged particular papi provides components configurable compilation time counters accessed native api name cumbersome lowlevel illdocumented additional functions please issue pull request additional examples documentation improvements welcom