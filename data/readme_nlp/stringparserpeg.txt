stringparserpeg stringparserpeg string parsing library parsing expression grammars peg julia separated pegparserjl written mainly abe schneider inspired pyparsing parsimonious boostspirit separation followed rework design undertaken henry schurkus base parsing mechanism strings instead macros string based design allows disentangle functionality library julia internal macro parsing mechanism makes robust changes julia base code discussion leading separation packages found redesign change api easier error prone describe design takes grammar declarations form multiline strings super quick tutorial busy parser takes string grammar specification former computable structure stringparserpeg parsing parsegrammarstring string abstract syntax tree ast transforming ast required structure transformfunctionast defining grammar grammar defined grammar rule rule following rules references rules theotherrule terminals match literally rule rule rule rule matches wins rule rule rule rules matched stronger rule rule rule rule optional rule matched counts matched anyways negation rule matched rule consumes rule matched matched zero rule matched counts matched matched regular expressions za matches whatever regex matches suppression rule rule matched yields node ast semantic action rule expr expr create node instead default noaction information argument grammar string line semicoli separate rules grammars default start starting rule specify starting rule parse function desire example note examples found examples folder stringparserpeg start creating simple calculator operator result define grammar calc grammar start op op plus minus space plus space minus space space starting rule composed rules op calculator allow rule matches digit note spaces appear front terminals pegs handle spaces automatically parsing parsegrammarstring allows construction ast string according grammar example continued run grammar input ast pos err parse calc ast resulting following output node stringparserpegandrule node stringparserpegandrule node stringparserpegregexrule node stringparserpegandrule node stringparserpegterminal node stringparserpegandrule node stringparserpegregexrule transformation finally transforms ast desired datastructure defining accordingly overloaded actuator function calling recursively ast transformfunction ast example continued desired ast calculator datastructure actually fold directly final result transformation actuator function defined dispatches name nodes names parsed nodes calc grammar start op start op plus minus op space plus space plus minus space minus space leading following ast node start stringparserpeg andrule node stringparserpeg andrule node stringparserpeg regexrule node plus stringparserpeg andrule node stringparserpeg terminal node stringparserpeg andrule node stringparserpeg regexrule define actuator function toresult nodechildren matchruledefault node value toresult nodechildren matchrule parse intnode value toresult nodechildren matchruleplus toresult nodechildren matchruleminus toresult nodechildren matchrulestart children children children recursively apply ast transform toresultast obtain correct result actions create node basic node type actions allow operate ast construction action specified action following rule function anonymous explicit specified takes following arguments rule value firstpos lastpos childnodes return nodes ast shorthand specifying name string name results normal node specified name set naming example note action liftchild takes child node returns current level default action rules whichever child matched returned rule explicitly specified myorrule rule rule liftchild actions apply actions apply single token preceding rule action rule action applies rule rule rule action action applies rule rule rule action action applies rule joining rule rule example rule action action applies rule rule action action applies rule example calculator simple instead building named ast transforming directly parsed string final result means actions calc grammar start op op plus minus space parseintvalue plus space minus space space directly resulted parsing parsecalc note wish define function outside grammar definition call name scope stringparserpeg using stringparserpeg eval stringparserpeg begin foo foo grammar start foo example actually example parse stuff found source code grammarparsingjl grammar parse grammar specifications user actually live code consistency happens ensured test test suite look wonder specifics grammar specification subject negation negation easily misunderstood matching rule correct actually consume matching assume consumes anyways understand negation consider simple example match string simple grammar start char char parse errors char consumes initial including final explicit start matched solution grammar start char char matches char depth guide library entry library course file stringparserpegjl handles import export ing includes files rulesjl defines rule subtypes typically consist name constructed default constructor simply typespecific value action grammarjl defines grammar type dictionary mapping symbols rules comparisonjl defines comparison functions check example grammars standardactionsjl defines utility actions mentioned liftchild files read specify grammar julianique manually stacking constructors nodejl defines node type makes ast ast actually toplevel node recursive children parsejl defines generic parse function children parsenewcachekey specified rule subtype handle recursive parsing string specified grammar transformjl defines transform function mentioned files additionally read parse transform string datastructure according grammar build manual stacking process discussed functionality principle available grammarparsingjl defines grammar parse grammars stacking process allow user simply specify grammar string note grammar functionality available direct construction consistent definition grammargrammar exponentially difficult grammar features standardrulesjl defines grammar standardrules consisting commonly rules space float etc defined user single time instead user simply join rules definition constructing grammar grammar standardrul