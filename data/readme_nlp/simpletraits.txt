simpletraits news package provides macrobased implementation traits using tim holy trait trick main idea traits types outside typehierarchy dispatch difference uniontypes types added trait creation trait whereas union types fixed creation cool tim trick performance impact compared using ordinary dispatch bit background quick introduction traits watch min juliacon talk example traits abstract array interface juliabase abstract array belongs baseindexlinear baseindexcartesian trait depending internal indexing advantage trait free create type hierarchy independent particular trait array tim holy endorses simpletraits bit compared manually writing traitdispatch win enormous little nicer suspect write holytraits breakfast win manual traits defined traitdef using simpletraits traitdef isnice traitdef belongtogether traits parameters traits typeparameters specify type trait applied instance isniceint signifies int isnice true checked istrait function traits parameter traits parameters useful contract types style convention suggest trait names start verb traits makes distinguishing traits types easier type names usually nouns add types trait traitimpl traitimpl isniceint traitimpl belongtogetherintstring function tests trait fulfilled traitimpl isnice isnice isnice false set default type isnicetrue belongs isnice notes overhead static dispatch isnice pure pure method promises result constant regardless method called input arguments ref note example traitimpl isniceint wins traitimpl isnice isnice define exceptions rule checked type belongs trait istrait using test test istrait isniceint test istrait belongtogetherintint belongtogetherintstring added functions dispatch traits constructed traitfn isnice nice traitfn isnice nice means type trait isnice dispatch method returning nice otherwise returning nice test nice test nice note calling traitfunction calling function extra mental gymnastics required user traitbased package similarly belongtogether parameters traitfn belongtogether forever test forever testthrows methoderror traitfn belongtogether stand test stand traitorjl syntax juliacon folks suggested alternate compact syntax traitfunctions single parameter traits simpletraits supports function written traitfn ft isnice nice traitfn ft isnice nice note parenthesis negated traits otherwise parser error thrown vararg default argument keyword argument trait functions vararg default argument keyword argument trait functions keyword arguments trait function negated trait function keywords values allowed example traitfn kwfn tr kw kw traitfn kwfn tr kw kw default arguments rule slightly default arguments trait function negated trait function defaultargument values traitfn deff tr traitfn deff tr method overwritten warnings warnings issued methods overwritten due tim trick traitfn create functions time particular method section explanation defining opposite trait method created else warning appears heuristics avoid warnings check method defined fail times issue story short define methods trait negation using argument names warning issued note warnings harmless details method dispatch defining trait function adds method overwrites generic function contains logic helper method dispatch tim trick defined calling generic function traitmethods dispatch types normal selected method traitmethod trait dispatch kick example traitdef tr fn integer normal method traitfn fn abstractfloat tr traitfn fn abstractfloat tr traitimpl trfloat traitimpl trint impact dispatch fn fn dispatch happens type fn float dispatch traits fn float dispatch traits note particular traitmethod dispatch trait continuing example expect traitdef tr traitfn fn abstractfloat tr traitimpl trfloat fn float dispatch traits fn float methoderror method defined previous example overwritten definition fn overwrites definition traitfn tr dispatch traits single traitmethod re luck please voice grievance pull request performance performance impact compared normal functions thanks julia clever design continuing example looking native code julia codenative fn text filename repl pushq rbp movq rsp rbp source line movl eax popq rbp retq nopl rax rax julia codenative fn float text filename simpletraits jl pushq rbp movq rsp rbp source line movl eax popq rbp retq nopl rax rax normal method traitmethod compile machine instructions trait function constant generated function dispatch dynamic checked checkfasttraitdispatch checks lines llvm code trait function normal checkfn rand true false bit crazy traitdef testtr traitimpl testtr checkfn tests traitfunction testtrint checkfasttraitdispatch testtr tests traitfunction testtrstring prints llcmir lines trait vs normal function checkfasttraitdispatch testtr string true fast traitimpl testtrstring checkfasttraitdispatch testtr string true advanced features macros previous section official api package reasonably stable follows section hood updated signalled minor version changes instead using traitimpl add types traits programmed running traitimpl isniceint essentially expands simpletraits trait typeisnicex x int isnicex trait identity function fulfilled trait returns traitinquestion otherwise fall instead using traitimpl coded directly note constant function probably inlined jit lead slower dynamic dispatch checkfasttraitdispatch helper check example leading static dispatch traitdef isbits simpletraits trait typeisbitsx x isbits x isbitsx isbitsx istrait isbitsint true istrait isbitsarrayint false struct int istrait isbits true dynamic dispatch avoided using generated function pure functions sometimes annotated basepure traitdef isbits generated function simpletraits trait typeisbitsx x isbits x isbitsx isbitsx allowed generated functions heavily restricted julia manual particular methods defined generated function allowed called inside generated function otherwise issue encountered try generated functions pinch generated functions issue note programmedtraits combined traitimpl isbitsxyz program add exceptions traitimpl isbitsxyz traitinheritance handcoded trick instance trait pseudo syntax beautyandbeast isnice isnice belongtogether traitdef beautyandbeast function simpletraits trait typebeautyandbeast istrait isnice istrait isnice belongtogether beautyandbeast else beautyandbeast note lead slower dynamic dispatch function pure depends global types belong traits isnice belongtogether note trait functions generated functions traitfn generated fg isnice println innards function macroexpand syntax transformations macro edited output running macros package julia macroexpand traitdef tr struct tr simpletraitstrait julia macroexpand traitimpl trint function types traits simpletraits trait typetrx x int trx simpletraits istrait typetrx x int true convenience julia macroexpand traitfn tr inline trait tr tim trick using function typetr logic julia macroexpand traitfn tr trait dispatch helper function needn defined twice logic type tr detailed explanation tim trick traitsjl dispatch traits difference methods containing logic generic function f base traits started putting juliabase traits loaded using simpletraitsbasetraits source definitions example dispatch argument immutable traitfn isimmutable fld instance traitfn isimmutable fld update mutable struct fld struct fld assert fld fld b assert assert b background package grew attempt reduce complexity traitsjl time staying compatible compared traitsjl drops support trait definition terms methods constraints instead user assign types traits manually removes complex traitsjl checking type satisfies trait definition trait functions dispatch trait allows remove generated functions removing rules traitdispatch reason splitting traitsjl creating reliable easier maintain package traitsjl exploring inclusion base juliacon talk minute introduction traitsjl simpletraitsjl future future traits juliabase according stefan karpinski juliacon talk julia traits scheduled land julia crystal ball tells functionality package supported future trait system multiparametertraits expect transition matter syntax update semantic update advantage using package versus handcoding holytraits occurrences trait usage marked easier update future package lightweight package focusing letting functions dispatch based traits dispatch currently fairly limited section gotcha expanded future pr mmultitraits unlikely event time hands try develop companion package allow specification trait terms interfaces combination packages similar functionality experimental package traitsjl fancies writing companion package happy help contribute typesystem overhaul lands hackish traitsjl references traitsjl references particular depth discussion limitations holytraits package implements ponder update sitting branch mmultitraits finished address type inheritance subtraits jutho idea particular compatible multiple inheritance traitsjl