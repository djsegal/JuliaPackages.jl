dynamicprogrammingjl julia package discrete stochastic dynamic programming build status coverage installation package registered change perfectly usable considered stable install typing julia pkg add url initialise model sdp model stored sdpmodel type sdpmodel intialised using following sdpmodel block structure sdpmodel stages int sense min symbol min max sp definition sp name refers stage name refers index runs stages inside sdpmodel definition define subproblems add variables control action variables noise stochastic variables initialise variables added following macro sp begin linspace creates variable discretised set linspace note currently dimensions converted float representations discretisation type converted vectorfloat type controls added controls macro similar syntax restriction type discretisation iterable subtype abstractvector noise stochastic variables added noises macro noises sp begin discretedistribution contrast macros slight subtlety discretisations subtypes abstractvector realisations assumed uniformly sampled discretedistribution discretedistribution constructor discretedistributionobservationsabstractvector probabilityabstractvector realisations observations sampled probability probability noise defined multiple noises assumed independent dynamics provide function takes inputs function foo statesout controls noises prefer anonymous function syntax dynamics sp definitions anonymous function current control noise update refer model variables using indexing operator example defined variable quantity refer quantity thinking variable scopes encapsulate data syntax function return single float value corresponding cost profit accrued current stage terminal objective terminal objective function takes input vector final finite time horizon returns single float value corresponding cost profit terminalobjective sp definitions constraints constraints function takes input vectors initial control noise return single bool value indicating control noise combination feasible typically implemented chained series boolean comparisons constraints sp definitions solve solve function takes input initalised sdpmodel object keyword arguments realisation waitandsee hereandnow expectedvalue waitandsee model observes noise choosing optimal control hereandnow model chooses control observing noise expectedvalue model substitutes noise expected value independent noise riskmeasure nested e cvar solve sdpmodel realisation waitandsee riskmeasure nestedcvar beta lambda simulate sdpmodel solved simulate performance policy using function simulatesdpmodel int kwargs solved sdpmodel simulated realisations perform initial values variables via keyword arguments example results simulate contracts price production visualise create interactive visualisation simulated policy visualise macro following keywords wrapped parentheses cumulative false plot cumulation variable stages title plot title xlabel stages label axis ylabel label axis interpolate linear djs interpolation method d wiki following example example syntax visualise results stage replication begin results current stagereplication title accumulated profit ylabel accumulated profit cumulative true results stagereplication title value ylabel level results stagereplication title value control results stagereplication title value noise interpolate step