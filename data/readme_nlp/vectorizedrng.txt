vectorizedrng library provides vectorized xoshiro random generator larger host computers simd vector width perform machine avx faster simdoriented fast mersenne twister sfmt base julia dsfmt version tests appears outperform library avx systems generating uniformly distributed random threadlocal instance xoshiro generator localrng parallel stream jumps ahead samples samples stream real calculation thread parallel streams avx avx allowing threads avx testing haswell machine avx julia using benchmarktools random vectorizedrng julia vector float undef julia benchmark randn benchmarktools trial memory estimate bytes allocs estimate minimum time s gc median time s gc mean time s gc maximum time s gc samples evals sample julia benchmark randn localrng benchmarktools trial memory estimate bytes allocs estimate minimum time s gc median time s gc mean time s gc maximum time s gc samples evals sample performance advantage thanks primarily fast simd boxmuller implementation randnmersennetwister ziggurat algorithm efficient scalars performance closer comparing randomuniform generation julia benchmark rand benchmarktools trial memory estimate bytes allocs estimate minimum time ns gc median time ns gc mean time ns gc maximum time s gc samples evals sample julia benchmark rand localrng benchmarktools trial memory estimate bytes allocs estimate minimum time ns gc median time ns gc mean time ns gc maximum time s gc samples evals sample library shines system avx julia using benchmarktools random vectorizedrng julia vector float undef julia benchmark randn benchmarktools trial memory estimate bytes allocs estimate minimum time s gc median time s gc mean time s gc maximum time s gc samples evals sample julia benchmark randn localrng benchmarktools trial memory estimate bytes allocs estimate minimum time ns gc median time ns gc mean time ns gc maximum time s gc samples evals sample julia benchmark rand benchmarktools trial memory estimate bytes allocs estimate minimum time ns gc median time ns gc mean time ns gc maximum time s gc samples evals sample julia benchmark rand localrng benchmarktools trial memory estimate bytes allocs estimate minimum time ns gc median time ns gc mean time ns gc maximum time ns gc samples evals sample julia versioninfo julia version dev commit aaeb utc platform info os linux x linux gnu cpu th gen intel core tm i g ghz wordsize libm libopenlibm llvm libllvm orcjit tigerlake setting seed vectorizedrng initialized random seed based default randomglobalrng loaded randomseed wont change vectorizedrng set seed vectorizedrng vectorizedrngseed julia using vectorizedrng julia rand localrng linearalgebra adjointfloatarrayfloat julia vectorizedrng seed julia rand localrng linearalgebra adjointfloatarrayfloat julia rand localrng linearalgebra adjointfloatarrayfloat julia vectorizedrng seed julia rand localrng linearalgebra adjointfloatarrayfloat julia rand localrng linearalgebra adjointfloatarrayfloat bigcrush generators pass bigcrush run bigcrush matter minutes multicore system xe cpu testing uniform generator julia using distributed addprocs nprocs julia using rngtest vectorizedrng random julia struct u randomabstractrng julia random rand u abstractarray rand localrng julia u u u julia rngunif rngtest wrap u float julia time bcjunif rngtest bigcrushjulia rngunif allocations gib gc time julia minimum minimum bcjunif julia maximum maximum bcjunif looking minimum maximum values comparison default mersennetwister julia wrappedtwister rngtest wrap mersennetwister float julia time bcjmtwister rngtest bigcrushjulia wrappedtwister allocations mib gc time julia minimum minimum bcjmtwister julia maximum maximum bcjmtwister interestingly completed faster ve monitored clock speeds subjectively cpu fans louder running benchmark wonder downclocking avx code decreases performance watch mixing vectorized vectorized code vectorization strategy simply distinct streams sample simultaneously via simd oper