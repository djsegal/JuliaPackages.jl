parallelsparsematmul julia library parallel sparse matrix multiplication using shared memory library implements sharedsparsematrixcsc sharedbilinearoperator types easy multiply sparse matrices parallel shared memory systems installation install julia prompt call pkgclonegitgithubcommadeleineudellparallelsparsematmuljlgit usage begin initialize processes participate multiplying matrix suffer decreased performance add processes hyperthreads sharedmemory computer addprocs using parallelsparsematmul create shared sparse matrix sharing sparse matrix example typeof sparsematrixcsc share calling share re experimenting try calling matrix creation functions eg random uniform entries shsprand random normal entries shsprandn identity matrix shspeye faster serial counterparts parallelize generation random generate matrix fill shsprandn entries normal random variables multiply matrix transpose multiplication shared arrays faster multiplication kinds vectors shared baseshmemrandn create shared memory array length matrices stored csc format means transpose multiplication faster multiplication examine entries shared sparse matrix indexing eg setting entries supported instead convert matrix local sparse matrix set entries reshare localize share shared bilinear operators implement fast multiplication feature useful iterative algorithms require multiplications fixed matrix transpose operator shared bilinear operator multiplication faster multiplication command operator forms stores allows multiplication fast multiplication cost doubling storage requir