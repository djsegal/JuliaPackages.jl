neovim client julia neovim neovim api client plugin host julia support embed nvim process julia act child process nvim connect extern instanc socket requir julia neovim packag assum nvim path instal add packag current julia environ use pkg pkg add url usag embed process simplest test api client spawn embed instanc use neovim nvim proc nvim spawn connect extern instanc nvim nvim connect socket address address found echo nvim listen address nvim shortcut nvim nvim env address nvim listen address use connect parent nvim instanc run julia repl nvim termin window api method defin neovim metadata api metadata defin correspond julia function neovim modul function export import syntax except vim buffer prefix drop receiv type identifi argument anyway except vim eval eval overload instanc import neovim buffer set line vim eval buf buffer nvim set line buf text assert vim eval nvim level interfac progress moment buffer support simpl array oper pleas test runtest exampl modul export low level interfac handl asynchron event notif request prototyp read ugli hack implement vim bind julia repl includ exampl src repl plugin host packag includ remot plugin host similar python client pynvim add repo root runtimepath init vim set rtp julia packag neovim julia plugin defin rplugin julia subdirectori insid directori runtimepath remot plugin runtimepath insid plugin directori packag packag manag doc function defin top level script export use macro command autocmd variant sync exampl myplugin rplugin julia myplugin modul myplugin use neovim neovim function asyncfun nvim arg arg vector argument pass call asyncfun arg neovim fnsync function syncfun nvim arg block neovim syncfun run neovim fnsync onelin nvim arg express add option requir defin function line neovim commandsync narg rang function jlcommand nvim arg rang name function command defin macro equival neovim commandsync jlcommand narg rang function nvim arg rang write julia script call updateremoteplugin regist function callabl vimscript lua