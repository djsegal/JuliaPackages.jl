acceleratedarraysjl arrays acceleration indices acceleratedarrays provides secondary acceleration indexes julia abstractarray acceleration indexes speed operations particularly involving searching values example acceleratedarray efficient implementations functions findall filter unique rule package implemented purposes accelerating analytics workloads designed support functional mutating workflows currently supported add index data expect mutate afterwards getting started download package julia v press enter package mode type pkg dev https github com andyferris acceleratedarrays jl acceleratedarray created using accelerate accelerate functions construct hash mapping unique names accelerate alice bob charlie uniquehashindex rearrange array random ascending accelerate rand sortindex resulting arrays regular julia arrays except operations faster example hash map element exhaustively searching array easily elements interval sorted array index bob findall isequal bob return filter accelerated functions accelerations implemented following functions acceleratedarray countpred findallpred filterpred progress variety functions including splitapplycombine findfirstpred findlastpred unique groupinds groupview groupreduce innerjoin accelerations available predicates pred naturally depend acceleration index set acceleration indexes package intruduces abstractindex supertype following concrete implemetations index created user calls accelerate accelerate hashindex index constructs hashmap values array corresponding array indices example invoking findall search locations values reduced simple dictionary lookup primarily accelerates commands using isequal predicate uniquehashindex hashindex except value array appear apart guaranteeing uniqueness operations faster uniquehashindex hashindex sortindex index determines elements respect isless index accelerate isequal predicate variety based predicates accelerate function rearrange input array sort speed operations due simplified algorithms cache locality uniquesortindex sortindex except value array appear apart guaranteeing uniqueness operations faster uniquesortindex sortindex custom acceleration indices simple user package implement abstractindex instance thirdparty package provide spatial acceleration index index fast textual search simply overload accelerate optionally accelerate operations accelerate filter findall etc indices unique sets values inherit abstractuniqueindex abstractindex based predicates intervals julia sorting typically achieved using isless isequal predicates designed provide canonical total values currently acceleration indices rely comparison operators life easier package introduces convenience functions islessequal isless isequal isgreater isless isgreaterequal isless isequal support currying simple syntax creating closure isequal isequal curried predicates picked multiple dispatch accelerate operations findallisequal acceleratedarray intervals common search values range package introduces interval type represent set values endpoints respect isless isequal interval easily created operator via syntax value range functionoperator alternatively spelled inserted repl via tab example true false default interval inclusive endpoints endpoint excluded via lessthan greaterthan function returns value equal slightly input interval exclusive endpoints expressed greaterthan lessthan example lessthan remaining package support features accelerate functions including splitapplycombine figure support missing hash sortbased index move interval package potentially reconcile intervalsetsjl currently comparison