herbswipljl herbswipl julia wrapper swi prolog allow utilise prolog julia programs herbswipl larger project herb aiming provide programmable toolkit program synthesis induction installation install swipl shared library libswipldylib osx linux available dyldlibrarypath env variable enter package manager pressing julia repl run add link git repository features prolog syntax performant wrapper built swipl foreign function interface access majority swipl capabilities add julia functions prolog predicates usage herbswipljl built julog julia implementation prolog engine herbswipljl julog represent logic programs follows interface easy switch engines start prolog engine prolog swipl start prolog represent knowledge baselogic program julog macro clauses julog ancestor sakyamuni bodhidharma true teacher bodhidharma huike true teacher huike sengcan true teacher sengcan daoxin true teacher daoxin hongren true teacher hongren huineng true ancestor teacher ancestor teacher ancestor grandteacher teacher teacher query swipl via resolve function query grandteachers julia goals julog grandteacher julia sat subst resolve prolog goals clauses julia sat true julia subst element array sengcan bodhidharma daoxin huike hongren sengcan huineng daoxin specify solutions ther mode keyword return solutions return single solution max return solutions specified maxsolutions keyword julia sat subst resolve prolog goals clauses mode julia sat subst resolve prolog goals clauses mode max maxsolution default resolve assert provided clauses running query retract query completion prevent resolve retracting option true default herbswipl returns lists pair format extremely inefficient lists significantly efficient alternative return answers julia vectors reason herbswipl allows choose format lists lists option julia returns lists julia vector julog returns lists pair format sat res swiplresolveprolog goal clauses listsjulia julia functions prolog predicates herbswipljl supports converting julia functions prolog predicates julia prolog swipl julia start prolog julia function hello term const println hello term return true dict intterm julia registerforeign hello mode det julia goal julog hello toby julia sat result swiplresolve prolog goal vector clause hello toby julia stop prolog julia foreign functions obey following specification expect julog terms arguments return tuple element bool indicating call succeeded element dictintterm mapping arguments function terms unify completing call terms represented julog terms instance consider function function marriedsoconst soconst maps predicate married true married function married so const so const so name toby return true dict intterm const mary else return false dict intterm argument toby funtion returns true dictintterm constmary true indicates query succeeded dictintterm constmary indicates argument function so unified mary represented constmary julog function returns false dictintterm indicating query succeeded unifications performed empty dict note arguments indexed note deterministic foreign functions currently support