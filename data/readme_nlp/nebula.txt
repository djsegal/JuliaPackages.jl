nebulajl ambitious game engine leveraging rich julia ecosystem inspired gamezerojl starlightjl prepreprealpha stage challenges games unresolved games design achieve movements player simple actions door scripted developer player climb tree developer script game environment static change rocks stay water waves actually entities normally respond interact environments lack basic intelligence author believes time game developers abandon scripted game development embrace paradigm game development game developers spending gpu compute power diminishing improvement graphics quality engine proposes compromise idea freeing gpu physics simulation deep learning ai features relevant gameplay environments simulated objects follow physics systems except occasional events triggered player environment physics systems actions walking lightning strike etc game rules physics system trianglebased rasterization designed gpus purpose engine allows developers explore rendering system mix achieve ambition library leverages libraries julia ecosystem leveraging julia modelingtoolkit ecosystem game developers physics system easily help julia gpu ecosystem gpgpu compute rendering offers flexibility software rendering sacrificing hardware power performance simulation entitiesparticleetc leveraging julia hpc ecosystem juliaaudio ecosystem audio processing control entities julia offers ecs choice overseer powerful ecs system comes ai flux alphazerojl mind proudly julia language engine supports game modding planned features efficient scalable physics engine real cartoon physics system desire powerful ai lightning system lightning sound system ideally collisions background objects sound entity information system generating information detected entity processed rendered content manager utilities managing game options extensions customizable user interface asset creation utilities interface writing asset creation gui algorithms paint brush blur inpainting upscaling brush abstraction asset creation eg re eye assets looking copypasted roadmap gather insights amazing game create appropriate files create basic rendering system rendering pure d maps animation maker idea abstractions interpolation multiple dispatch create basic rendering system rendering pure d maps minimal windowing libraries winit entity system maintaining components simple entities intelligent entities vision rgb vision night vision ray cloud game event system player entity environment triggers event happen asset maker protocol algorithms communicate guis game content manager world generation multiplayer servers autoscaling fun insights game physics system particles simulated discretize particles random grids random orientations magic bb lookup particle traits souls events contributions contribute including limited implementing logics refactoring codes purpose providing test benchmarks providing documentations tutorials using library providing honest feedback request features suggestions advices etc domain expertise guidelines means loc makes code subjectively harder read performant code simple equivalent pseudocode belongs documentation leverage existing ecosystem repeat diagram