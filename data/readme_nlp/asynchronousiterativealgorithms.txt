asynchronousiterativealgorithmsjl build status documentation asynchronousiterativealgorithmsjl handles distributed asynchronous communication focus designing algorithm offers convenient manage distribution data multiple processes remote machines manual available installation install asynchronousiterativealgorithms typing julia add asynchronousiterativealgorithms quick start implement distributed version stochastic gradient descent sgd define algorithm structure subtyping abstractalgorithm initialization step compute iteration worker step performed workers receive query central node asynchronous central step performed central node receives answer worker set distributed environment launch multiple processes remote machines using distributed addprocs instantiate precompile environment processes using pkg pkg activate dir pkg instantiate pkg precompile asynchronousiterativealgorithms using asynchronousiterativealgorithms const aia asynchronousiterativealgorithms implementation define processes begin algorithm mutable struct sgd abstractalgorithmvectorfloatvectorfloat stepsize float previousq vectorfloat previous query sgd stepsize float stepsize float initialisation step function sgd sgd sgd previousq rand worker step function sgd sgd vectorfloat sgd stepsize rand asynchronous central step function sgd sgd vectorfloat worker int sgd previousq test algorithm linear regression mean squared error loss lrmse compatible algorithm example means providing attributes dimension regressor method vectorfloat int gradient linear regression loss ith data begin struct lrmse unionmatrixfloat unionvectorfloat int int float lipschitz constant function function lrmse matrixfloat vectorfloat size maximum lrmse ready start algorithm provide stopping criteria stopat iteration time instanciate algorithm sgd sgd create function returns instance pid problemconstructor pid lrmse rand rand start history start sgd problemconstructor stopat