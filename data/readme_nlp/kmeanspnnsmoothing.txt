kmeanspnnsmoothingjl code implements pnnsmoothing seeding method means described paper systematically efficiently improving existing means initialization algorithms pairwisenearestneighbor smoothing baldassi submitted publication arxiv code written julia requires julia provides multithreaded implementation lloyd algorithm means seeding options sample centroids uniformly random dataset replacement kmeans including greedy variant scikitlearn furthest heuristic called maxmin paper kmeans called scalable kmeans pairwise nearestneighbor hierarchical clustering note scales quadratically pnnsmoothing metamethod refine metamethod implements techniques accelerate iterations lloyd algorithm naive standard acceleration reduced comparison method paper methods based hamerly methods based elkan variants yinyang method paper exponion method paper ball method paper package provides functions compute centroid index defined paper asymmetric called ci symmetric called cisym exported provides function compute variation information metric quantify distance partitions defined paper function called vi exported installation setup install module clone github directory enter directory run julia project option julia project alternatively start julia directory press enter shell mode cd project directory enter pkg mode activate command time setup project environment re julia repl press key enter pkg mode resolve dependencies kmeanspnnsmoothing pkg resolve download required packages subsequently type test check press backspace key standard julia prompt load package julia using kmeanspnnsmoothing usage format data matrixfloat data organized column typically means re reading dataset transpose example runfilejl script test directory example run assuming cluster data matrix clusters original kmeans algorithm type parameter deactivates greedy version using reduced yinyang acceleration method result kmeans data kmseeder kmseed plusplus accel kmaccel ryy example running pnnsmoothing scheme using greedy kmeans seed initial subsets actually default keyword arguments passed result kmeans data kmseeder kmseed pnns kmseed plusplus pnnsmoothing time using maxmin levels recursion result kmeans data kmseeder kmseed pnns kmseed maxmin rlevel complete documentation julia help press key repl type kmeans kmseed kmaccel codes parallellized data threads available run julia option julianumthreads environment variable licence code released mit licence code originated code recombinatorkmeansjl licence inform