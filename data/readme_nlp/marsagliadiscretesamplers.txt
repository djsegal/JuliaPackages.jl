marsagliadiscretesamplers installation using pkg pkg add marsagliadiscretesamplers description implementation methods described fast generation discrete random variables performance compares favorably extant discrete samplers agnostic type discrete distribution usage discrete distribution defined probability table p p construct square histogram time space draw samples time draw index simplest index identical category probability mass p corresponds categorical arbitrary discrete distribution sampled manner probability mass function represented vector draw converted whatever entity indexed categorical distribution trivial conversion function identity function slightly complicated example using binomial distribution binomial probability mass function binomial yields probability vector draws returned sampler categories outcome defined pmf bin happens indexed numbering scheme categories produces words category corresponds etc conversion function simply glance disadvantage advantage sampler efficiency tied particular distribution consider motivating example binomial probability mass function negligible subset support sample distribution providing pmf evaluated subset support negligible mass generous range return conversion function support binomial restricted using lower bound upper bound produces returns conversion function true support view composition functions unrestricted support adjustment restricted support applies poisson negative binomial geometric hypergeometric etc distributions consider example applicable probability mass function admits sparse representation categorical distribution selected simplicity approach arbitrary pmf consider p p p p efficient sample p p p reindex returned define converts true category true category additional conversions defined original support applied examples binomial intent demonstrate speed achieved marsaglia square histogram method julia using marsagliadiscretesamplers benchmarktools julia pmf binomial julia julia pmf element vectorfloat julia sqhist julia generate julia julia julia benchmark generate benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms s gc mean memory estimate mib allocs estimate julia similar float preallocate temporary storage repeated calls julia benchmark generate benchmarktools trial samples evaluation range min max s ms gc min max time median s gc median time mean s s gc mean memory estimate bytes allocs estimate julia using distributions julia binomial binomial float julia rand julia benchmark rand benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms s gc mean memory estimate bytes allocs estimate julia using plots julia gr size julia p histogram label marsaglia square histogram method julia p histogram label distributions julia savefig plot p p joinpath pwd binomials pdf binomial beneficial strictly pmf negligible mass julia using marsagliadiscretesamplers specialfunctions benchmarktools julia pmf exp loggamma loggamma loggamma julia julia lb ub julia pmf lb ub element vectorfloat e e e e e e e e e e e e e e julia sqhist julia generate julia lb lb julia lb julia benchmark generate benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms s gc mean memory estimate mib allocs estimate julia similar float preallocate temporary storage repeated calls julia benchmark generate benchmarktools trial samples evaluation range min max s ms gc min max time median s gc median time mean s s gc mean memory estimate bytes allocs estimate julia using distributions julia binomial binomial float julia rand julia benchmark rand benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms s gc mean memory estimate bytes allocs estimate julia using plots julia gr size julia p histogram label marsaglia square histogram method julia p histogram label distributions julia savefig plot p p joinpath pwd binomials pdf categorical efficient sample sparse pmf using approach begin truly realize gains larger held l cache julia using marsagliadiscretesamplers benchmarktools julia julia fill julia julia julia sqhist julia generate julia julia julia benchmark generate benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms s gc mean memory estimate mib allocs estimate julia similar float preallocate temporary storage repeated calls julia benchmark generate benchmarktools trial samples evaluation range min max s ms gc min max time median s gc median time mean s s gc mean memory estimate bytes allocs estimate julia using distributions julia categorical julia rand julia benchmark rand benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms s gc mean memory estimate kib allocs estimate julia using plots julia gr size difficult distinguish plots julia p histogram label marsaglia square histogram method bins julia p histogram label distributions bins julia savefig plot p p joinpath pwd categoricals pdf julia function unsafecountcategory abstractarray abstractarray inbounds eachindex julia unsafecountcategory int unsafecountcategory zeros int julia unsafecountcategory element vectorfloat julia unsafecountcategory element vectorfloat comparison results article section article tables comparisons following replicates tables using ultimately simplification method ii proceed straight square histogram method skipping alias table vectorized sampler skipping alias table portion method ii yields faster code square histogram step branchless testing determine circumstances branch alias table square histogram worthwhile julia using marsagliadiscretesamplers distributions benchmarktools julia nsample vector int undef nsample similar float time required draw samples binomial julia println println binomial map pdf sqhist btime generate ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes time required draw samples poisson julia println poisson map pdf max sqhist btime generate ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes ms allocations bytes time required draw samples hypergeometric admittedly entirely parameterizations article assumes n draws n population size success julia n n println n n n n n n hypergeometric map pdf support sqhist btime generate n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes alternatively n draws n failures success reasonable range support alas files attached paper missing hypergeometric distribution julia n n println n n n n n n hypergeometric map pdf support sqhist btime generate n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes n n ms allocations bytes references marsaglia george wai wan tsang jingbo wang fast generation discrete random variables journal statistical softwar