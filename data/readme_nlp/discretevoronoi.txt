discretevoronoi package computing discrete approximations voronoi diagrams voronoi diagram calculating functions currently package declare sites vectorsvectorint grid matrixsvectorint hence strong dependency staticarrays using discretevoronoi using staticarrays testing grid zeros svector int sites svector int rand redacvoronoi grid sites currently computing discrete voronoi diagrams exported completely allocation free called voronoigridmatrixsvectorint sitesvectorsvectorint generic function call following functions naivevoronoi simply compares cells sites chooses closest jfavoronoi jump flooding algorithm explained detail dacvoronoi employs divideconquer method detailed redacvoronoi reducedivideconquer additionally runs site elimination algorithm recursive step elimination algorithm aims reduce amount unnecessary performed algorithm subsequent recursions removing seeds corners algorithm fastest execution time depends somewhat task hand try usecase decide benchmarks rule thumb larger grid divideconquer methods comparison particularly sites scales size grid faster log natural log redacvoronoi faster dacvoronoi additionally package exports helper functions analysing voronoi diagrams writing algorithms findclosestsite findclosestsite closest site specified cell lp sense latter writing directly grid calculated getcorners getquadrants topleft tl bottom br corners rectangle return tl br corners overlapping quadrants calculated integer division respectively labelvoronoigrid takes grid svector int labels unique value integer grid size visualised voronoiequality test equality resulting voronoi diagrams taking account sites distance cells multiple validcorrect diagrams produced progress implementing hybrid version redacvoronoi dacvoronoi switches naivevoronoi size reached currently implemented multithreaded gpu jfa versions algorithms main branch legacy branch contains versions algorithms capability contributions jacobusmmsmit author maintainer goerch author marcelroed algorithmic improvements earlystopsort