bitflagsjl bitflagjl provides enum type bit flag option values main motivations implicit numbering incrementing powers binary operations supported values prettyprinted name chains multiple bits set implementation relatively minor modification julia enum type implementation basic usage create bitflag type bitflag macro provide name optional integer type list options optional values definition inline form bitflag bitflagname basetype value value block definition bitflag bitflagname basetype begin value value automatic numbering starts initial flag value explicitly set value zero explicit zerovalued valid value bitflag following example build bit bitflag value bit value julia bitflag mystyle uint snone sbold sitalic slarge combinations using standard binary operations julia sbold slarge slarge sbold mystyle x julia ans sitalic snone mystyle x conversion integers permitted valid combinations values julia int sbold julia integer sitalic abstract integer native uint type x julia mystyle slarge sbold mystyle x julia mystyle mystyle flag error argumenterror invalid value bitflag mystyle stacktrace printing flag value printed contextual information userfriendly raw integer julia sbold sbold mystyle x julia sbold slarge slarge sbold mystyle x compact context multidimensional arrays prettyprinting takes shorter form julia snone sbold slarge arraymystyle snone slarge sbold julia iocontext stdout compact true sbold slarge slarge sbold inputoutput bitflag support writing reading streams integers julia io iobuffer julia write io uint julia seekstart io julia read io mystyle slarge sbold mystyle x