functionalmodelsjl formerly simsjl julia package equationbased modeling simulations information documentation documentation released version documentation development version note progress convert package modelingtoolkit components examples especially includes models requiring events discrete systems functionalmodels builds top modelingtoolkit following exported independent variable der aliases differential system flattens set hierarchical equations returns simplified odesystem unknown helper function create variables defaultvalue return default starting value variable compatiblevalues return base value variable creating variables refbranch branch marks nodes flow variables equations standard modelingtoolkit equations main difference functionalmodels variables created unknownval name helpers voltage variables created include metadata ensure variable names clash multiple subcomponents variable example model flattened variable names normalized functionalmodels functional style opposed objectoriented approach modelingtoolkit modia modelica system return odesystem models built functionalmodels components standard modelingtoolkit components background package causal modeling julia idea causal modeling user develops models based components described set equations tool transform equations solve differential algebraic equations causal models tend match physical counterparts terms specification implementation causal modeling signals input output flow information simulink profile example causal modeling difficult build models components profile noncausal modeling tools modelica family mathworks company functionalmodelscape matlab notation modelica objectoriented language multiple implementations complex powerful language extensive standard library components implementation follows david broman thesis code george giorgidze hydra code thesis henrik nilsson functional hybrid modeling functionalmodels similar modelyze david broman report installation functionalmodels installable package install functionalmodels following pkg add functionalmodels model libraries functionalmodelsjl main module named functionalmodels following submodules functionalmodelslib standard library functionalmodelsexamples example models including functionalmodelsexamplesbasics functionalmodelsexampleslib functionalmodelsexamplesneural basic example functionalmodels modelingtoolkit build models equations modelingtoolkit variables syntax simulation unknowns solved based set equations equations built device models device model function returns vector equations devices return lists equations electrical example example definitions electrical components function returns list equations arguments function model parameters normally include nodes specifying connectivity followed parameters specifying model characteristics models contain models functions return equations function branch special function returns equation specifying relationships nodes flows acts indicator mark nodes flatteningelaboration process equations created sum flows electrical currents zero nodes refbranch special function marking nodes flow variables nodes passed parameters unknown variables electrical examples node simply unknown voltage function resistor n n real current voltage branch n n function capacitor n n real current voltage branch n n follows toplevel circuit definition input parameters ground reference assigned zero volts equations returned list equations models various parameters example model components named vs r unnamed components variables components anonymized naming c vs var function circuit named n voltage named n voltage ground zero volts unknown vs sinevoltage n r resistor n n r resistor n c capacitor n e ckt circuit