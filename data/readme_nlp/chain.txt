chainjl julia package piping value series transformation expressions using convenient syntax julia native piping functionality chainjl base julia chain df begin dropmissing filter id groupby combine age sum df dropmissing filter id groupby combine age sum pipejl lazyjl pipe df dropmissing filter id groupby combine age sum df begin dropmissing filter id groupby combine age sum build status summary chainjl defines chain macro takes start value begin block expressions result expression fed using rules underscore expression replaced result previous expression underscore result previous expression argument current expression function call macro call symbol representing function lines prefaced aside executed result fed pipeline step useful inspect pipeline debugging example motivation implicit argument insertion useful data pipeline scenarios groupby transform combine dataframesjl syntax increase legibility functions filter map previous result argument type line commented breaking syntax dangling symbols pipeline easily checked aside macro begin block marks macro applied autoindentation lines separate expressions huge function call ides exactly line errors happened pipe name defined base julia lead conflicts example example dataframe using dataframes chain df dataframe missing weight missing result chain df begin dropmissing filter weight groupby combine weight sum totalweight chain block equivalent result begin local var dropmissing df local var filter weight var local var groupby var local var combine var weight sum totalweight alternative argument syntax initial argument name chain result assigned variable look cleaner initial value moved chain expression alongresultvariablename chain alonginputvariablename begin dosomething dosomethingelse parameter dootherthing parameter equivalent following expression alongresultvariablename chain begin alonginputvariablename dosomething dosomethingelse parameter dootherthing parameter liner syntax chain liner begin block short sequences easy parse visually separate lines chain filter isodd sum sqrt variable assignments chain prefix expressions chainjl handle variable assignment previous value spliced hand expression result available afterwards chosen variable name chain begin filtered filter iseven sum filtered aside macro debugging useful look values middle pipeline aside macro mark expressions pass result expressions implicit argument spliced impractical purposes example created step result chain df begin dropmissing filter weight groupby aside println length step combine weight sum totalweight equivalent result begin local var dropmissing df local var filter weight var local var groupby var println length var step local var combine var weight sum totalweight nested chains chain macro replaces underscores following block unless encounters chain macrocall underscore replaced outer macro argument inner chain example combination aside macro process result chain df begin dropmissing filter weight aside chain begin select csv write filteredgroupscsv groupby combine weight sum totalweight rewriting rules list equivalent expressions replaced prev variable reality variable simply name via gensym guaranteed conflict else comment sum sumprev symbol expanded function call sum sumprev argument inserted sum sumprev call expression replaced prev infix call expressions calls prev infix notation look prev feel weird normal call expression filterisodd filterisodd prev underscore aside println printlnprev println affecting pipeline using aside printlnhello printlnhello println affecting pipeline implicit arg sin sinprev specialcased alternative sin sin sinprev argument prepended broadcast calls somefunc somefuncprev argument prepended broadcast calls somemacro somemacroprev macro calls arguments argument spliced somemacro somemacroprev argument splicing functions somemacro somemacro prev underscore behavior