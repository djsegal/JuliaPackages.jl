inmemorydatasets documentation release documentation available via introduction inmemorydatasetsjl multithreaded package data manipulation designed julia bit os core computation engine package set customised algorithms developed specifically columnar tables package performance tuned goals mind low overhead allowing missing values following priorities importance low compilation time memory efficiency performance overall complexity package low simplify maintenance package adding features package contributing package benchmarks features inmemorydatasetsjl features highlight favourites particular assigning named function column format default formatted values operations displaying sorting joining format evaluation lazy formats change actual values multithreading package functions inmemorydatasetsjl exploit cores available julia default disabling parallel computation via passing threads false keyword argument functions powerful rowwise operations support common operations specialised operations modifying columns customised rowwise operations filtering observations filter simply wraps byrow unique approach reshaping data unified syntax type reshaping cover reshaping functions stacking unstacking singlemultiple columns wide wide reshaping transposing fast sorting algorithms stable unstable heapsort quicksort algorithms count sort integers compiler friendly algorithms groupby groupby observation using sorting algorithms sorted gatherby observation using hybrid hash algorithms observations incremental operation groupby groupby adding column time efficient joining algorithms preserve observations left data set support methods joining sortmerge join hash join customised columnarhybridhash algorithms join inequality equi range joins innerjoin contains semijoin semijoin antijoin antijoin closejoin closejoin exact match join update update updating master data set values transaction data set example julia using inmemorydatasets julia g repeat inner julia g repeat julia db db db db d d b d b ooo ooo d yd yp yp yp yp yp julia ds dataset g g g g dataset row g g identity identity identity int int string db db db db d d d ooo ooo yd yp yp yp yp yp julia sort ds g sorted dataset sorted g row g g identity identity identity int int string db d d yd db d ooo yp yp db yp db d ooo yp yp julia tds transpose groupby ds g dataset row g variables c c c c identity identity identity identity identity identity int string string string string string db db db db d d d ooo ooo yd yp yp yp yp yp julia mds map tds replace c dataset row g variables c c c c identity identity identity identity identity identity int string string string string string julia byrow mds sum c count isequal element vectorunionmissing int julia using chain julia chain mds begin repeat sort g flatten c insertcols g repeat groupby g transpose c modify c byrow join reverse select row insertcols repeat sort sorted dataset sorted row rowfunction identity identity int string acknowledgement acknowledge contributors julia data ecosystem especially dataframesjl existence development inmemorydatasetsjl head start