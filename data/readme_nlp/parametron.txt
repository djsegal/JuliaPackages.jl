parametron parametron makes easy set efficiently ideally zero allocation solve instances parameterized family optimization example example osqp solver solve following quadratic program minimize subject decision variable vector parameters random values resampled time resolved basic setup create mathoptinterface optimizer instance using osqp optimizer osqp optimizer create parametronmodel holds information using parametron using random linearalgebra model model optimizer create decision variables parameters variable model parameter rand zeros model parameter rand zeros model parameter rand zeros model parameter zeros model syntax makes easy create custom parameters rand expression macro create lazy expressions constraints objective function evaluated time automatically updating parameters process residual expression set objective function objective model minimize residual residual add constraints multiple constraint calls supported constraint model set solve obtain solution follows julia solve model osqp v operator splitting qp solver bartolomeo stellato goran banjac university oxford stanford university variables constraints nnz nnz settings linear system solver suitesparse ldl epsabs e epsrel e epspriminf e epsdualinf e rho e adaptive sigma e alpha maxiter checktermination interval scaling scaledtermination warm start polish iter objective pri res dua res rho time e e e e e e e e e e status solved iterations optimal objective run time e optimal rho estimate e julia value model element arrayfloat note time solve called update functions parameters called parameter resulting optimum julia solve model iter objective pri res dua res rho time e e e e e e e e e e status solved iterations optimal objective run time e optimal rho estimate e julia value model element arrayfloat note solver warmstarted note updating parameters solving qp instance fast julia using mathoptinterface using osqp mathoptinterfaceosqp osqpsettings mathoptinterface set optimizer osqpsettings verbose false silence optimizer julia using benchmarktools julia btime solve model s allocations bytes performance lack allocations stems lazy expressions constraints objective function automatically optimized calls functions example course realworld unlikely update parameters random values illustration control values directly fitting vector model set vectors columns example demonstrates style updating parameters whereas previous example supplied update function rand automatically called solve called example syntax parameter model val somemanuallyupdatedmutableobject create parameter value updated manually calls solve function using parametron osqp mathoptinterfaceosqp using random xdata randn pdata vector float undef model model osqp optimizer parameter model val xdata parameter model val pdata variable model resid expression objective model minimize resid resid try specific groundtruth ggt randn pdata xdata ggt set values using solve model julia value model element arrayfloat julia ggt element arrayfloat refit model updating pdata xdata