partialfunctions julia package makes partial function application simple usage apply argument function binary operator julia apply multiple arguments wrap tuple normal function call julia julia println tuple println tuple julia additional argument tuple additional argument add keyword arguments passing namedtuple julia sortbylength sort length sort length julia sortbylength element vectorvectorint pass arguments keyword arguments time julia julia sortabylength sort length sort length julia sortabylength element vectorvectorint pass tuple arguments form pass args keyword args reduce parentheses care avoid unintended results equivalent sort length sort length sort length incorrect yield unintended results julia sort length sort length treated namedtuple julia sort length sort length argument expression evaluates length examples julia using partialfunctions julia generic function method julia map map julia element arrayint julia simonsays println simon println simon julia simonsays partial function application cool simon partial function application cool reverse pipe partialfunctions exports reverse pipe operator apply arguments succeeding function preceding operator low precedence useful chaining function calls avoid lot parentheses extremely contrived example add bunch julia unlike normal pipe tuples arguments julia passing empty tuple calls preceding function zero arguments julia isequal isequal julia isequal equivalent isequal fals