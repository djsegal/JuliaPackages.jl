schematajl schema specification data set contain table exists independently particular data set constructed absence data set package facilitates readwrite schema toml file compare data set schema list compliance issues transform data set comply schema return table outstanding issues schema specified code practical specify configuration file added benefit sharing technical data custodians researchers providing common language discussing datarelated issues indeed listed carried writing julia code run compare script scripts directory usage tableschema looks toml file name mytable description table primarykey patientid column name vector column names columns name patientid description patient id datatype uint validvalues uint iscategorical false isrequired true isunique true name age description age datatype int validvalues int iscategorical false isrequired true isunique false name dose description dose size datatype string validvalues medium iscategorical true isrequired true isunique false name fever description fever datatype bool validvalues bool iscategorical true isrequired true isunique false schema contains tableschema example name fever description fever schema tables table tableschema table tableschema tables fit memory usage follows read schema using schemata schema readschema joinpath dirname pathof schemata testschematafevertoml ts schema tables mytable tableschema mytable constructimport table object satisfies tablesjl interface using dataframes table dataframe patientid age note set valid values according schema dose medium medium fever false true true false transform table comply schema values unparseable invalid set missing return transformed data table input data issues table output data issues outdata inputissues outputissues compare ts table tables fit memory replace table argument filename table transform table comply schema values unparseable invalid set missing write transformed data table input data issues table output data issues disk inputdatafile pathmytabletsv outputdatafile pathtransformedtabletsv inputissuesfile pathinputissuestsv outputissuesfile pathoutputissuestsv compare ts inputdatafile outputdatafile outputdatafile inputissuesfile inputissuesfile outputissuesfile outputissuesfile simply compare ts inputdatafile outputdatafile inputissuesfile outputissuesfile default values speed data sorted primary key set keyword argument sortedbyprimarykey true default false comparets table sortedbyprimarykeytrue comparets inputdatafile sortedbyprimarykeytrue compare function assumes input data table sorted primary key specified schema allows faster comparison data schema userdefined parsers users provide custom parsers enable parsing values types julia core module core types standard custom date formats core types standard unified interface userdefined parser specified directly dict specified configuration file specify positional keyword arguments required example following code test suite defines userdefined parser zoneddatetime note specification range core types namely startvalue stepsize endvalue define userdefined parser using timezones function myzdtparser tz string abstractstring occursin return zoneddatetime datetime timezone tz example t dt date eval meta parse examples zoneddatetime datetime dt timezone tz myzdtparser dttm datetime tz string zoneddatetime dttm timezone tz dict columnschema constructor obtained reading toml dict name zdt description test custom parser timezoneszoneddatetime datatype zoneddatetime iscategorical false isrequired true isunique true validvalues hour day ensure range sufficient resolution parser dict function myzdtparser args australiamelbourne eval datatype parser function scope defined constructing columnschema schematajl datatype parser function receives current scope datatype eval meta parse datatype parser function eval meta parse parser function schema constructors cs columnschema ts tableschema mytable table cs zdt table dataframe zdt datetime day hour target zoneddatetime table zdt timezone australiamelbourne outdata issuesin issuesout compare ts table outdata zdt target table dataframe zdt string datetime day hour string type outdata issuesin issuesout compare ts table outdata zdt target table dataframe zdt string zoneddatetime datetime day hour timezone australiamelbourne string type outdata issuesin issuesout compare ts table outdata zdt target intrarow constraints ensure relationships hold variables row example require person marriage date birth date achieve specifying intrarow constraints tableschema follows name intrarowconstraintsdemo description table intrarow constraints primarykey patientid intrarowconstraints birth date marriage date dob dateofmarriage columns name patientid description patient id datatype uint validvalues uint iscategorical false isrequired true isunique true name dob description date birth datatype date validvalues date iscategorical false isrequired true isunique false name dateofmarriage description date marriage datatype date validvalues date iscategorical false isrequired false isunique false constraint specified keyvalue pair key description constraint value hand function row function return true false comparing schema table function executed row function returns false rows constraint satisfied description recorded returned issues t