nlsolvers source build status nlsolvers provides optimization curve fitting equation solving functionalities julia goal provide set robust flexible methods run fast currently package try implement automatic generation unspecified functions gradients hessians hessianvector products using ad nlsolversjl types optimizationproblem optimization neqproblem linear equations fixedpointproblem linear equations optimization following scalar objective scalar input using nlsolvers function objective fx sin function gradient cos return objectivegradient objective gradient function hessian f f sin return f function objectivegradienthessian f objectivegradient f hessian f return f scalarobj scalarobjective objective gradient fg objectivegradient fgh objectivegradienthessian hessian optprob optimizationproblem scalarobj inplace false scalar input inplace solve optprob linesearch newton optimizationoptions output results minimization algorithm newton method default linsolve backtracking interp candidate solution final objective value e final gradient norm e initial objective value e initial gradient norm e stopping criteria e e false e e false e e false e e false e e true x e e false counters run e iterations types especially useful manifolds bounds constraints enter picture write arrays mutating code style inplace keyword argument optimizationproblem apply desired code paths internally set true cache arrays updated inplace mutation promised allowed input type set false operations mutate happen using nlsolvers function objectiveip fx sin function gradientip x cos return objectivegradientip objectiveip gradientip function hessianipf f x sin return f function objectivegradienthessianip f objectivegradientip f hessianipf return f scalarobjip scalarobjectiveobjectiveip gradientip fgobjectivegradientip fghobjectivegradienthessianip hessianip optprobip optimizationproblemscalarobjip inplacetrue solveoptprobip linesearchnewton optimizationoptions results minimization algorithm newton method default linsolve backtracking interp candidate solution final objective value e final gradient norm e initial objective value e initial gradient norm e stopping criteria e e false e e false e e false e e false e e true x e e false counters run e iterations set examples sarray marray staticarraysjl package using staticarrays solveoptprobip mvector linesearchnewton optimizationoptions results minimization algorithm newton method default linsolve backtracking interp candidate solution final objective value e final gradient norm e initial objective value e initial gradient norm e stopping criteria e e false e e false e e false e e false e e true x e e false counters run e iterations mutating array code mutating array code supported depending input type initial bigfloat eigen nwi algorithm trustregion algorithm using genericlinearalgebra systems nonlinear equations neqproblem solve system linear equations neqproblem type define vectorobjective try solve roots defined setting gradient rosenbrock test equal zero function frosenbrockfx fx fx return fx function jrosenbrockjx jx jx jx jx return jx function fjrosenbrockfx jx frosenbrockfx jrosenbrockjx fx jx function jvoprosenbrock function jacvfv fv fv linearmapjacv length vectorobj nlsolversvectorobjectivefrosenbrock jrosenbrock fjrosenbrock jvoprosenbrock define probem type solve dispatch correct code vectorprob neqproblemvectorobj solve using variants newton method globalizes solve using trustregion based method line search julia solvevectorprob trustregionnewton dogleg neqoptions results solving linear equations algorithm newton method default linsolve dogleg candidate solution final residual norm e final residual infnorm e initial residual norm e initial residual infnorm e stopping criteria e e false counters run e iterations julia solvevectorprob linesearchnewton neqoptions results solving linear equations algorithm newton method default linsolve backtracking interp candidate solution final residual norm e final residual infnorm e initial residual norm e initial residual infnorm e stopping criteria e e true counters run e iterations univariate optimization method exclusively univariate brent method function minimization brentmin multivariate optimization sampling based simulatedannealing purerandomsearch particleswarm direct search neldermead quasinewton line search dbfgs bfgs sr dfp gradientdescent lbfgs conjugate gradient descent conjugategradient newton line search newton gradient based line search adam adamax acceleration methods anderson krylov inexactnewton bb style bb dfsane simple bounds box particleswarm activebox custom solve newton methods accept linsolve argument preconditioning methods accept nonlinear leftpreconditioners preconditioner provided function methods prepares returns preconditioner signature updating preconditioner preconditioner constant method simply return preconditioner preconditioner contexts ldivpgr factorize gr accepts cache array preconditioned gradient pgr preconditioner gradient preconditioned gr mul methods minimize opposed minimize sufficient gr defined beware chaotic gradient methods methods labeled acceleration momentum spectral methods exhibit chaotic behavior please mind comparing dfsane similar implemenations software results compiler optimizations cpu architectures etc example todo documented type docstring including linesearch bfgs abstract arrays manifolds user norms banded jacobian ad nan hessian line search short curcuit steps steps mixed complementatiry samin boxes univariate ip newotn krylov hessian