functionaldata functionaldata package fast expressive data modification built simple memory layout convention provides set purpose functional constructs routines efficient computation dense numerical arrays optionally supplies syntax clean concise code wordcount filename read filename string lines map split flatten length memory layout indexing simplified dense dimensional arrays viewed collections dimensional items example allows exact code d patches d blocks ones d patches ones d blocks len len len normsum sum map normsum size map normsum size result shape change map sum size map sum size efficiency using custom view type based memory layout assumption provided map operations considerably faster builtins data desired operation rand mb csum length csumoncopy length following simple efficient statement map csum elapsed time bytes allocated built alternatives slower require manual inlining specific data layout mapslices csumoncopy elapsed time mb allocated gc time size csumoncopy elapsed time mb allocated gc time f size csum sub elapsed time mb allocated gc time function f size size elapsed time bytes allocated function f size length size elapsed time bytes allocated exact syntax easily parallelize code using local workers via shared memory julia interprocess serialization local host machines shmap csum local processes shared memory lmap csum local processes pmap csum available processes variants optimized functions available operation input array operation output array fallback options functions details section map friends news version requirement build map mapmap dict fix typed fixed repeat numeric arrays testequal robust reworked map view array scalar return values fix partsoflen concat add takelast unequal sortpermrev filter fix map dict added localworkers hostpids added hmap variants map tasks pid machine removed makeliteral built repr sped matrix added map map map map fixed unzip added flip flipdims added extract removed getfield documentation please overview line descriptions function details examples found following sections progress length size data access data layout pipeline syntax efficient views computing map friends output helpers unit tests overview length size details len length siz lsize ndims siz lsize data access details item setat value set item value fst item snd item third third item item ind items indices ind trimmedpart ind items ind error short elements takelast elements drop except elements droplast except elements partition partition partsoflen partition length extract field default key dict field composite type instance data layout details row reshape row vector col reshape column vector reshape siz reshape size ndim vector siz split split item item true concat flatten subtoind sub transform ndims npoints sub linear ind indtosub ind transform linear ind ndims lenind sub stack concat st dim items flatten reduce nestedness unstack split dense array array items riffle insert items matrix reshape items column vectors unmatrix example reshape column vector items according example lines split text array lines unlines concat newlines unzip unzip items findsub return sub zero entries randsample draw items repetition randperm randomly permute items flip reverse items flipdims dd flip dims d d pipeline syntax details f f f pipeline macro equals fff f f f equals fff efficient views details view lightweight view item view lightweight view item reusing th item trytoview dense array view otherwise trytoview dense array view reusing otherwise computing map friends details map apply item map apply item map apply item overwriting map apply fst items map apply resultitem item item shmap parallel map shared array accross procs shmap inplace shmap overwriting accross procs shmap apply item overwriting accross procs shmap apply fst items accross procs shmap apply resultitem item accross procs pmap parallel map accross workers lmap parallel map accross local workers mapmap shorthand map map map map map map map invoking apply item result value pwork lwork shwork workwork corresponding map variants item true anyequal item item true allequal items unequal shortcut isequal sort kargs sort accorting item uniq unique elements uniqmap table length ptable ltable parallel table using workers local workes tableany ptableany ltableany table flatten result output details showinfo tee details read write existsfile mkdir filenames filepaths dirnames dirpaths readmat writemat helpers details zerossiz typ zeros default typ float shzerossiz typ shared zerossiz shzeros typ shared zeros onessiz typ ones default typ float shonessiz typ shared onessiz shones typ shared ones randsiz typ rand default typ float shrandnsiz typ shared randsiz shrand typ shared rand randnsiz typ randn default typ float shrandnsiz typ shared randnsiz shrandn typ shared randn zeroel zeroeltype oneel eltype dict dict repeat repeat times nop op id returns istrue result true isfalse istrue alias alias alias plus alias minus alias times alias divby alias unit tests details testequal test equality detailed info assertequal testequal throws error testalmostequal maxdiff testequal allows maxdiff differ