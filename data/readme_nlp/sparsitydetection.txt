sparsitydetectionjl note repo deprecated favor symbolicsjl modelingtoolkitjl similarly inspect code detect sparsity patterns package automatic jacobian hessian sparsity pattern detection julia functions functions written numerical automatically investigated understand utilize sparsity numerically instead standard interpretation check branch connectivity determine accurate sparsity pattern package please cite following articlegowdasparsity titlesparsity programming automated sparsityaware optimizations differentiable programming authorgowda shashi ma yingbo churavy valentin edelman alan rackauckas christopher example suppose function fcalls function dx global fcalls length dx dx dx function sparsity pattern jacobian tridiagonal matrix sparsity pattern jacobian jacobiansparsity function automatically detect sparsity pattern function available load cassettejl declare function outputs vector length takes vector length jacobiansparsity spits sparsity object sparsematrixcsc using sparsitydetection sparsearrays input rand output similar input sparsitypattern jacobiansparsity outputinput jac float sparse sparsitypattern api jacobian sparsity automated jacobian sparsity detection provided sparsity function syntax jacobiansparsity args sparsity sparsity length length verbose true arguments function output array input array args trailing arguments considered subject change unless wrapped fixedarg optional sparsity pattern verbose optional describe paths sparsity detection function assumed arguments form dxargs jacobiansparsity returns sparsity object describes zeros jacobian occur sparsesparsity transforms pattern sparse matrix function utilizes standard interpretation denote combinatoric concolic analysis directly realize sparsity pattern program ast requires function julia function numerically meaning prone floating error cancelation allows branching automatically check branches loop indeterminate length dependent input argument allowed similar method available symbolicsjl hessian sparsity hessiansparsity args verbose true arguments function input array args trailing arguments considered subject change unless wrapped fixedarg verbose optional describe paths sparsity detection function assumed arguments form args returns scalar function utilizes standard interpretation denote combinatoric concolic analysis directly realize sparsity pattern program ast requires function julia function numerically meaning prone floating error cancelation allows branching automatically check branches loop indeterminate length dependent input argument allow