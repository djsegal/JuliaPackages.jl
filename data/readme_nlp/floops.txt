floops fold humans floopsjl provides macro floop generate fast generic sequential parallel iteration complex collections furthermore loop written floop executed compatible executors foldsthreadsjl various threadbased executors optimized kinds loops foldscudajl provides executor gpu floopsjl provide simple distributed executor update notes floopsjl defaults parallel loop parallel executor threadedex executor specified explicit sequential form floop begin floop reduce floop eachindex ys xs ys xs executed parallel default usage parallel loop floop superset threadsthreads particular supports complex reduction additional syntax reduce julia using floops exports floop macro julia floop zip reduce reduce examples parallel loops tutorial sequential singlethread loop simply wrap loop initialization floop begin julia floop begin examples sequential loops tutorial advantages threadsthreads floop superset threadsthreads couple advantages floop supports various input collection types including arrays dicts sets strings iterators baseiterators zip product precisely floop generate performance parallel iterations collections supports splittablesbasejl interface foldsthreadsnondeterministicex floop parallelize iterations parallelizable input collections beneficial heavier workload foldsthreadsjl provides multiple alternative threadbased executors loop execution backend tune performance touching loop foldscudajl provides simple gpu executor reduce syntax supporting complex reduction forwardcompatible manner note threadid based reduction commonly conjunction threads forwardcompatible julia supports migrating tasks threads trick changing effective threads restarting julia using basesize option relative disadvantages floop threadsthreads flexible internals contribute undiscovered bugs floop converting native julia loop syntax foldl defined transducersjl unlike foldl defined base foldl defined transducersjl powerful cover loop semant