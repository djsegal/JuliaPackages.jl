sparsedifftoolsjl package exploiting sparsity jacobians hessians accelerate computations matrixfree jacobianvector product hessianvector product operators provided compatible abstractmatrixbased libraries iterativesolversjl easy efficient newtonkrylov implementation perform matrix coloring utilize coloring jacobian hessian construction optionally automatic numerical differentiation utilized example suppose function fcalls function global fcalls length function global fcalls zero length function sparsity pattern jacobian tridiagonal matrix sparsity pattern jacobian symbolicsjacobiansparsity function automatically detect sparsity pattern declare function outputs vector length takes vector length jacobiansparsity returns sparsematrixcsc using symbolics input rand output similar input sparsitypattern symbolics jacobiansparsity outputinput jac float sparsitypattern call matrixcolors colorvec vector matrix using sparsedifftools colors matrixcolors jac maximumcolors means finite differencing compute jacobian evaluations generating sparsity pattern pseudo evaluation total times called compute sparsity pattern plus entire x jacobian times using finitediff finitediff finitedifferencejacobian jac rand colorvec colors fcalls addition faster forwardmode autodiff call utilized forwarddiffcolorjacobian jac colorvec colors compute products operators example rand jacvec makes matrixfree operator calculates products example rand res similar mul res evaluation makes res additional operators hesvec exists including hesvecgrad allows utilize gradient function operators compatible iterative solver libraries iterativesolversjl meaning following performs newtonkrylov update iteration using iterativesolvers gmres res documentation matrix coloring library extends common arrayinterfacecorematrixcolors function allow coloring sparse matrices using graphical techniques matrix coloring allows reduce times finite differencing requires call maximumcolors reduces automatic differentiation using maximumcolors partials normally values length significant savings api computing colorvec vector matrixcolors abstractmatrix alg sparsedifftoolscoloringalgorithm greedydcolor partitionbyrows bool false argument abstract matrix represents sparsity pattern jacobian argument optional choice coloring algorithm default greedy distance coloring special matrix type information tridiagonal blockbandedmatrix colorvec vector analytically calculated instead keyword argument partitionbyrows allows partition jacobian basis rows instead columns generate corresponding coloring vector reversemode ad default value false result vector assigns colorvec column row matrix colorvecassisted differentiation colorvecassisted differentiation numerical differentiation provided finitediffjl automatic differentiation provided forwarddiffjl finitediffjl simply provided colorvec keyword argument finitediff jacobian documentation details forwardmode automatic differentiation colorvec vector provided following function forwarddiffcolorjacobian abstractmatrix abstractarray dx colorvec eachindex sparsity notice sparsity pattern supplied built jacobian compressed jacobian sparsity sparse matrix structured matrix tridiagonal banded etc conforming arrayinterfacecorejl specs appropriate sparsity pattern allow decompression call allocate cache variables time avoid allocating cache construct cache advance forwardcolorjaccache chunksize dx colorvec length sparsity utilize following signature forwarddiffcolorjacobian abstractmatrix abstractarray jaccache forwardcolorjaccache dx preallocated output vector declare output size allows specifying square jacobian using function alternative form ca jacout forwarddiffcolorjacobian dx similar colorvec length sparsity jacprototype note form efficient compatible staticarrays specify type shape output jacobian giving additional jacprototype forwarddiffcolorjacobian function otherwise dense matrix jacprototype sparsity specified oop jacobian assume function square jacobian matrix please specify shape output giving dx similar functionality available hessians using finite differences forward derivatives scalar function vector value color vector sparsity pattern accomplished using numautocolorhessian form numautocolorhessian numautocolorhessian colorvec sparsity numautocolorhessian colorvec sparsity avoid unnecessary allocations time hessian computed construct forwardcolorhescache beforehand hescache forwardcolorhescache colorvec sparsity numautocolorhessian hescache default methods mix numerical automatic differentiation namely taking finite differences gradients calculated via forwarddiffjl alternatively custom gradient function specify argument forwardcolorhescache hescache forwardcolorhescache colorvec sparsity note userdefined gradient signature updating gradient jacobianvector hessianvector products matrixfree implementations jacobianvector hessianvector products provided operator function form functions choice choice versions ability pass cache vectors allocating function signature jacobians du du hessians functions returns scalar functions jacobians autojacvec dy cache forwarddiff dual deivvectag cache forwarddiff dual deivvectag autojacvec computef false cache computed numjacvec dycache similar cache similar computef true numjacvec f hessians following provided numhesvec dy cache similar cache similar cache similar numhesvec numautohesvec dy cache forwarddiff gradientconfig cache similar cache similar numautohesvec autonumhesvec dy cache similar cache forwarddiff dual deivvectag cache forwarddiff dual deivvectag autonumhesvec addition following forms allow provide gradient function dy dy respectively numhesvecgrad dy cache similar cache similar numhesvecgrad autohesvecgrad dy cache forwarddiff dual deivvectag cache forwarddiff dual deivvectag autohesvecgrad numauto autonum methods mix numerical automatic differentiation former efficient recommended optionally load zygotejl following numback autoback methods available allow numericalforwarddiff reverse mode automatic differentiation respectively reversemode ad provided zygotejl currently methods competitive numauto zygotejl optimized fastest using zygote required numbackhesvec dy cache similar cache similar numbackhesvec currently errors autobackhesvec dy cache forwarddiff dual deivvectag cache forwarddiff dual deivvectag autobackhesvec operators following produce matrixfree operators calculating jacobianvector hessianvector products differentiation takes vector jacvec abstractarray autodiff true hesvec abstractarray autodiff true hesvecgrad abstractarray autodiff false interface utilizes jacobianvector hessianvector function whereas mulres utilizes appropriate versions update location differentiation operator simply mutate vector