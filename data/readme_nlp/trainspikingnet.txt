trainspikingnetjl recursive squares train fluctationdriven spiking recurrent neural networks recapitulate arbitrary temporal activity patterns arthur kim chen preibisch darshan details requirements cpu version trainspikingnetjl run machine gpu linux windows code currently requires cuda nvidia support macs user interfaces models trained issuing commands julia repl alternatively linux powershell interface convenient batching jobs cluster familiar julia described sections installation install julia juliaup manually download julia platform specific instructions julia repl add trainspikingnet environment test julia add trainspikingnet julia test trainspikingnet tests optional hour patient skip step pkg mode pressing delete key linux powershell command line download trainspikingnetjl repository zip link using gitclone git clone depth convenience add environment variable contains path downloaded trainspikingnet directory linux echo export tsndirpwdtrainspikingnetjl bashrc install required packages cd tsndir julia project using pkg pkgactivate pkginstantiate pkgactivatetest pkginstantiate note windows doublequotes escaped preceeding backslash finally optionally test cd tsndirtest julia project runtestsjl tutorial walk train default network neurons learn dummy sinusoidal activity patterns identical frequencies phases network gpu using cpu code julia repl start julia default threads os command line clicking desktop shortcut provide means specify threads default julia threads auto copy parameters file julia using trainspikingnet julia mkdirdata julia cpjoinpathdirnamepathoftrainspikingnet paramjl dataparamjl parameters file julia code sets various simulation variables using constants userdefined plugins evaluate save pertinent data jld file param command julia paramdata julia dt simulation time step millisecods julia ncells neurons model julia cellmodelfile plugin defines membrane potential spiking homearthurbjuliapackagestrainspikingnetxypdqsrccellmodellifjl addition paramjld alluded file called rnginitjld data folder contains initial random generator initialize model exactly reproduce experiment julia readdirdata element vectorstring paramjl paramjld rnginitjld config load simulation code customized particular model architecture machine hardware julia configdata cpu nd arg gpu param called change paramsjl config called time restart julia repl init pick random synaptic weights generate synaptic current targets keyword arguments sinusoids latter julia init mean excitatory firing rate hz mean inhibitory firing rate hz julia sizewpweightin julia sizewpweightin l julia size julia size printed terminal initial unlearned firing rates saved disk files containing matrices define neural connectivity julia readdirdata element vectorstring jld xstimjld ncjld ncpinjld ncpoutjld paramjl paramjld ratexjld rnginitjld utargjld windexjld wweightsjld wpindexconvertjld wpindexinjld wpindexoutjld wpweightinjld wpweightxjld highlight wpweightinjld stores plastic synaptic weights wweightsjld stores static synaptic weights utargjld stores target synaptic currents sinusoidal comments code details train iteratively update plastic weights sequential presentations stimulus julia weights trainnloops loop task correlation elapsed time sec firing rate hz loop task correlation elapsed time sec firing rate hz loop task correlation elapsed time sec firing rate hz loop task correlation elapsed time sec firing rate hz loop task correlation elapsed time sec firing rate hz snip loop task correlation elapsed time sec firing rate hz julia sizeweightswpweightin julia sizeweightswpweightin correlations targets printed terminal trained weights updated covariance matrix stored additional jld files suffixed ckpt checkpoint julia readdirdata element vectorstring ckptjld jld xstimjld ncjld ncpinjld ncpoutjld paramjl paramjld ratexjld rnginitjld rngtrainjld utargjld windexjld wweightsjld wpindexconvertjld wpindexinjld wpindexoutjld wpweightinckptjld wpweightinjld wpweightxckptjld wpweightxjld finally test plot trained activities julia activities testntrials trial task sec trial task sec trial task sec snip trial task sec julia activitiestimes spike times trial neurons element vectorvectoruint xc xa xb x x xcd xce xe xc xbab xfb x xd xd x xf x xf x x xdc xff xca xe xa x xd x xaaf xcb xe xed xd xb x xbea xd xe xbb x xe xae xa x xc x xbb xeb x xd x x x xe xdd xf x x xad xe x xf xaca x xff x xb x xe xf x xed xf xb x x xe x x xc xc xe xf xe x xdb xab xf x xfdb xc xa xd xd xf x xe xbdc x xf xc x xee xbb xce xe xbe xe xfaa xd x xfe xad xbb xbfd xdf ntrials argument specifies iterations perform time learning perform multiple iterations peristimulus time histograms psths low firing rate neurons averaged trials figures saved testsyninputpsthtaskpdf underlying data stored testjld julia readdirdata element vectorstring ckptjld jld xstimjld ncjld ncpinjld ncpoutjld paramjl paramjld ratexjld rnginitjld rngtestjld rngtrainjld testpsthtaskpdf testsyninputtaskpdf testjld utargjld windexjld wweightsjld wpindexconvertjld wpindexinjld wpindexoutjld wpweightinckptjld wpweightinjld wpweightxckptjld wpweightxjld wish replot time call test test actually produces data testjld immediately calls plot create figures directly bypassing lengthy call test julia plotdatatestjld ineuronstoplot ineuronstoplot argument specifies desired indices subset test defaults note plot test overwrite figures previously generated test plot rename move accordingly note init cpu models training cpu probably faster gpu using fewer cpu threads faster using model particularly using gpu start julia threads set gpus workstation linux powershell command line tutorial recapitulated linux command line follows copying parameters file mkdir data cp tsndirsrcparamjl data picking random synaptic weights generating artificial synaptic current targets sinusoids julia threads auto tsndirsrcinitjl pwddata note initjl automatically performs equivalent param repl threads flag immediately julia command specifies cpu threads argument initjl pwddata relative path desired paramsjl file iteratively updating plastic weights sequential presentations stimulus julia tsndirsrctrainjl nloops gpu pwddata note trainjl automatically performs equivalent config repl nloops flag trainjl specifies iterations training loop perform threads flag using gpu version trainjl single gpu workstation plotting trained activities julia tsndirsrctestjl ntrials gpu pwddata julia tsndirsrcplotjl ineuronstoplot pwddatatestjld help trainspikingnetjl documented readme via comments code docstrings accessible julia repl os command line specifically repl entering train results help train search train trainspikingnet trailingones trailingzeros abstractstring abstractunitrange train nloops correlationinterval savebestcheckpoint false restorefromcheckpoint monitorresourcesused returnp false weights update weights using recursive squares algorithm nloops times measuring similarity actual target synaptic currents correlationinterval iterations continue training previous model specify saved weights start restorefromcheckpoint learned plastic weights updated covariance matrix saved jld files datadir input call config checkpoint added suffix weights optionally covariance returned namedtuple convenience equivalently os command line julia tsndirsrctrainjl help usage trainjl nloops correlationinterval restorefromcheckpoint monitorresourcesused datadir positional arguments datadir path directory containing parameters file optional arguments nloops nloops iterations train type int default correlationinterval correlationinterval measure correlation training loops default loop type int default savebestcheckpoint save learned weights covariance matrices measured correlation default save restorefromcheckpoint restorefromcheckpoint continue training checkpoint default start beginning type int monitorresourcesused monitorresourcesused measure power cores memory usage default type int gpu gpu help help message exit docstrings similarly available param config init test plot hesitate file issue github bug feature request usage help github discussion contact authors directly custom usage train network purpose specify neural architecture target activity various simulation parameters respectively set plugin modules define adjacency matrices supplying file desired synaptic inputs psths editing copy default parameters file five plugin modules define architecture consists jl file containing function specific name inputs custom dictionary parameters outputs arrays path jl file parameters specified paramjl variables file args respectively user write five functions return custom adjacency matrices using parameters choosing defaults supplied plugin genplasticweights specifies connectivity learned synapses default srcgenplasticweightserdosrenyijl genstaticweights specifies connectivity fixed synapses default srcgenstaticweightserdosrenyijl genratex specifies spike thresholds feedforward neurons default srcgenratexornsteinuhlenbeckjl lx genxstim specifies external input applied neuron default srcgenxstimornsteinuhlenbeckjl genutarget specifies desired synaptic currents learn default srcgenutargetsinusoidsjl file targets supplied init example genstaticweightsfile genstaticweightsargs variables srcparamjl string dictionary respectively former specifies path jl file containing function called genstaticweights latter passed init executed genstaticweights constructs returns windex wweights nc specify static connections neurons based parameters ncells ne pree prie prei prii jee jie jei jii default code contained srcgenstaticweightserdosrenyijl create file genstaticweightscustomjl defines alternative definition genstaticweights name based possibly alternative set parameters simply set genstaticweightsfile custom parameters file path custom function getstaticweightsargs required parameters values target synaptic inputs defined algorithmically genutarget stored file supply fullpath init using utargfile argument file copied utargjld desired temporal activity patterns psths instead synaptic currents spikeratefile argument instead converted synaptic currents using method ricciardi brunel comput neurosci richardson phys rev saved utargjld conversion awhile subsquently utargfile flag newly generated utargjld file simulation parameters learning rate duration time step simulation floating precision seed value random generation etc specified srcparamjl simply copy edit comments therein details cell model specified srcparamjl neural architecture code pulled plugin easy custom algorithm cellmodelfile cellmodelargs variables path jl file dictionary parameters respectively former define six functions cpu gpu cellmodeltimestep updates variables tick clock cellmodelspiked returns neuron spiked cellmodelreset sets variables initial cpu methods input cell index gpu methods operate cells parallel input bnotrefrac bspike boolean vectors indicating neurons refractory period spiked respectively inputs include membrane voltage external recurrent currents six cell models supplied five allen institute leak integrate fire glif models teeter iyer menon et al mihalas sixth srccellmodellifjl default performanceoptimized version glif configured proceed init train test described tutorial file formats data stored jld files hdf files particular structure inside designed store julia objects readable programming language read hdf intel math kernel library cpu code sped intel machines using drop mkl package replace default openblas install julia repl julia add mkl add using mkl startup file julia editjoinpathdepotpath config startupjl equivalently linux julia using pkg pkgaddmkl echo using mkl juliaconfigstartupjl physical units variables parameters file dimensions assigned using unitfuljl example dt simulation time step set s instead default comment milliseconds makes mixing powerten prefixes easy serves guard mixing incompatible units incurs performance cost depending model size gpu tradeoff acceptable srcparamunitsjl template parameters file instead srcparamsjl