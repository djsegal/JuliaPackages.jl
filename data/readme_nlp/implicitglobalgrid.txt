implicitglobalgridjl implicitglobalgrid outcome collaboration swiss national supercomputing centre eth zurich dr samuel omlin stanford university dr ludovic rss swiss geocomputing centre prof yuri podladchikov renders distributed parallelization stencilbased gpu cpu applications regular staggered grid trivial enables close ideal weak scaling realworld applications thousands gpus implicitglobalgrid relies julia mpi wrapper mpijl perform halo updates close hardware limit leverages cudaaware rocmaware mpi gpuapplications communication straightforwardly hidden computation automatically using parallelstenciljl shown approach particularly suited cuda applications explained particularity implicitglobalgrid automatic implicit creation global computational grid based processes application run based process topology explicitly chosen user automatically defined consequence user write code solve gpucpu local grid little functions transform single gpucpu application massively scaling multigpucpu application example grids supported sketch global grid results running solver processes pp x process topology created default contents multigpu functions lines multigpu example straightforward situ visualization monitoring seamless interoperability mpijl cudaawarerocmaware mpi support module documentation callable julia repl ijulia dependencies installation references multigpu functions functions required perform halo updates close hardware limit initglobalgrid updatehalo finalizeglobalgrid additional functions provided query cartesian coordinates respect global computational grid required xg yg zg moreover following functions allow query size global grid nxg nyg nzg following multigpu heat diffusion solver illustrates functions enable creation massively parallel applications lines multigpu example simple multigpu heat diffusion solver implicitglobalgrid relies broadcasting capabilities cudajl cuarray type perform stencilcomputations maximal simplicity cudajl enables writing explicit gpu kernels lead significantly performance computations using implicitglobalgrid cuda views dxa views dxi views dya views dyi views dza views dzi views inn views function diffusiond physics lam thermal conductivity cpmin minimal heat capacity lx ly lz length domain dimensions numerics nx ny nz gridpoints dimensions nt time steps initglobalgrid nx ny nz initialize implicit global grid dx lx nxg space step dimension dy ly nyg dimension dz lz nzg dimension array initializations cuda zeros float nx ny nz cp cuda zeros float nx ny nz dtedt cuda zeros float nx ny nz qx cuda zeros float nx ny nz qy cuda zeros float nx ny nz qz cuda zeros float nx ny nz initial conditions heat capacity temperature gaussian anomalies cp cpmin cuarray exp xg ixdxcp lx yg iydycp ly zg izdzcp lz exp xg ixdxcp lx yg iydycp ly zg izdzcp lz ix size iy size iz size cuarray exp xg ixdx lx yg iydy ly zg izdz lz exp xg ixdx lx yg iydy ly zg izdz lz ix size iy size iz size time loop dt min dx dxdy dydz dz cpmin lam time step d heat diffusion nt qx lam dxi dx fourier law heat conduction qx tx qy lam dyi dy qy ty qz lam dzi dz qz tz dtedt inn cp dxa qx dx dya qy dy dza qz dz conservation energy tt c qxx qydy qzdz inn dt dtedt update temperature tnew told tt updatehalo update halo finalizeglobalgrid finalize implicit global grid diffusiond corresponding file found basic cpu example available usage multithreading straightforward situ visualization monitoring implicitglobalgrid provides function gather array process array single process assembled according global grid gather enables straightforward situ visualization monitoring multigpucpu applications using julia plots package shown following gr backend particularly fast according julia plots documentation add couple lines previous example omitted unmodified lines represented using implicitglobalgrid cuda plots views function diffusiond physics numerics dims initglobalgrid nx ny nz initialize implicit global grid array initializations initial conditions heat capacity temperature gaussian anomalies preparation visualisation gr env gkswstype nul anim animation nxv nx dims nyv ny dims nzv nz dims tv zeros nxv nyv nzv tnohalo zeros nx ny nz time loop nt mod visualize th time step tnohalo array copy data cpu removing halo gather tnohalo tv gather data process interpolatedsampled heatmap transpose tvnyv aspectratio frame anim visualize process postprocessing gif anim diffusiondgif fps create gif movie process mp anim diffusiondmp fps create mp movie process finalizeglobalgrid finalize implicit global grid diffusiond resulting movie running application gpus solving heat diffusion heterogeneous heat capacity gaussian anomalies global computational grid size xx grid dimension plane middle dimension simulation producing movie including situ visualization minutes nvidia tesla p gpus piz daint optimized solution using cudajl native kernel programming capabilities times faster complete example found corresponding basic cpu example available usage multithreading movie simulation xx grid produced minutes using intel xeon e v found processes multithreading seamless interoperability mpijl implicitglobalgrid seamlessly interoperable mpijl cartesian mpi communicator created default calling initglobalgrid obtained follows variable commcart dims nprocs coords commcart initglobalgrid nx ny nz moreover automatic initialization finalization mpi deactivated replace direct calls mpijl initglobalgrid nx ny nz initmpi false finalizeglobalgrid finalizempi false besides initglobalgrid makes argument passes mpijl function customizable via keyword arguments cudaawarerocmaware mpi support system supports cudaawarerocmaware mpi activated implicitglobalgrid setting environment variable specified module documentation callable julia repl ijulia section module documentation callable julia repl ijulia module documentation called julia repl ijulia julia using implicitglobalgrid julia help implicitglobalgrid search implicitglobalgrid module implicitglobalgrid renders distributed parallelization stencilbased gpu cpu applications regular staggered grid trivial enables close ideal weak scaling realworld applications thousands gpus overview examples functions initglobalgrid finalizeglobalgrid updatehalo gather selectdevice nxg nyg nzg xg yg zg tic toc description function type functionname performance note system supports cudaaware mpi nvidia gpus rocmaware mpi amd gpus activated implicitglobalgrid setting following environment variables call initglobalgrid shell export iggcudaawarempi shell export iggrocmawarempi julia dependencies implicitglobalgrid relies julia mpi wrapper mpijl julia cuda package cudajl julia amdgpu package amdgpujl installation implicitglobalgrid installed directly julia package manager repl julia pkg add implicitglobalgrid pkg test implicitglobalgrid references rss omlin podladchikov porting massively parallel multigpu application julia nonlinear multiphysics flow solver juliacon conference baltimore usa rss omlin podladchikov nonlinear multiphysics solver cuda mpi julia pasc conference zurich switzerland omlin rss kwasniewski malvoisin podladchikov solving nonlinear multiphysics gpu supercomputers julia juliacon conference virtual rss omlin podladchikov resolving spontaneous nonlinear multiphysics flow localisation tackling hardware limit gpu technology conference san jose silicon valley ca usa besard foket de sutter effective extensible programming unleashing julia gpus ieee transactions parallel distributed systems doi tpds besard churavy edelman de sutter rapid software prototyping heterogeneous distributed platforms advances engineering software doi advengsoft