root finding functions julia package contains simple routines finding roots zeros scalar functions single real variable using floating math findzero function provides primary interface basic call findzero x kws typically function x starting bracketing interval adjust default algorithms pass parameters various algorithms include bisection algorithms functions bracketing interval alternate signs bracketing method bisection specified default bisection floating types employed manner exploiting floating storage conventions types bigfloat algorithm alefeld potra shi default default methods guaranteed converge bracketing methods available derivativefree algorithms specified methods order order secant method order steffensen method order order order indicates roughly convergence order method default robust function calls converge employs bracketing method methods promise faster convergence yield results fewer function calls order order methods rootsorderb rootsorderb superlinear quadratically converging methods independent multiplicity zero historic algorithms require derivative specified rootsnewton rootshalley rootsschroder provides quadratic method newton method independent multiplicity zero generalized rootsthukralxb exported algorithms rootsbrent rootslithboonkkampijzermanbracket rootslithboonkkampijzerman method documentation additional detail examples julia using roots julia exp julia julia findzero bisection bisection method bracket specified true julia findzero bisection default findzero scalar true julia findzero roots a fewer function evaluations bisection true bracketing methods initial position passed scalar possibly secant methods iterable x x julia findzero findzero x order true julia findzero order answer method secant true julia findzero order start secant method true julia findzero sin bigfloat order iterations using order true findzero function callable objects julia using polynomials julia variable julia findzero true function respect units unitful package julia using unitful julia julia v y julia v y generic function method julia findzero true newton method taking derivatives hand following examples forwarddiff package julia using forwarddiff julia forwarddiff derivative float generic function method julia generic function method julia x julia findzero x roots newton true automatic derivatives allow easy solutions finding critical function julia using statistics mean median julia rand julia sum generic function method julia findzero mean true julia med sum abs med generic function method julia findzero med median true commonsolve interface differentialequations interface setting initializing solving implemented using types zeroproblem methods init solve solve commonsolve example solve methods follows julia exp generic function method julia x julia fx zeroproblem x zeroproblem typeof float julia solve fx true default single initial specified default order method solve method allows rootsolving methods passed options example order method using convergence criteria x x call julia solve fx order atol rtol true unlike findzero errors convergence solve returns nan convergence example zero initial values escape towards sometimes causing relative tolerance return misleading value differences julia cbrt exp generic function method julia x julia findzero x roots order stopped x x true julia findzero x roots order atol rtol error check xn error roots convergencefailed algorithm failed converge julia fx zeroproblem x julia solve fx roots order atol rtol nan error nan julia fx zeroproblem x methods identify zero function julia solve fx roots lithboonkkampijzerman atol rtol functions parameterized illustrated julia cos generic function methods julia zeroproblem pi zeroproblem typeof float julia solve order default true julia solve order true julia solve order position true multiple zeros findzeros function search zeros specified interval basic algorithm essentially splits interval subintervals bracket bracketing algorithm identify zero otherwise derivative free method search zeros heuristic algorithm miss zeros various reasons results confirmed means julia exp generic function methods julia findzeros true interval specified using structure extrema defined extrema returns values julia using intervalsets julia findzeros true tougher intervalrootfinding package guaranteed results heuristically identified values returned findzeros convergence algorithms convergence decided value xn tol tol maxatol absxnrtol values xn x tolerances xatol xrtol xn relaxed tolerance based atol rtol findzero algorithm stops encounters nan inf iterations exceed maxevals algorithm stops relaxed convergence criteria met suspected zero returned otherwise error thrown indicating convergence adjust tolerances findzero accepts keyword arguments atol rtol xatol xrtol seen examples bisection rootsa methods guaranteed converge tolerances set zero defaults zero values xatol xrtol specified reduce function calls lower precision required julia fx zeroproblem sin julia solve fx bisection xatol alternate interface functionality provided fzero function familiar matlab users roots provides alternative interface fzero xreal calls derivativefree method specifying order order etc fzero real real calls findzero algorithm bisection method fzeros real real call findzeros usage examples julia exp generic function methods julia fzero bracketing true julia fzero true julia fzeros true julia fzero default order true julia fzero sin method tru