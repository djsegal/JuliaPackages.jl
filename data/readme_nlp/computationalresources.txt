computationalresources julia package choosing resources hardware libraries algorithms performing computations exports set types allow dispatch methods depending selected resources includes simple facilities help package authors manage loading code depends resource availability user choice resources package exports following types resources cpu singlethreaded computation cputhreads multithreaded computation cpuprocesses multiprocess computation arrayfirelibs using arrayfire package cudalibs gpu computation using nvidia cuda libraries opencllibs gpu computation using opencl libraries algorithm selection performed passing resource instance argument conventionally argument function cpu typical default instances types optionally store additional settings customize example define timeout type struct timeout float call algorithm optimize cpu timeout package author write optimize check timeout value terminate time exceeded usage user begin session using computationalresources choose resources available example addresource arrayfirelibs load packages supporting arrayfire specific implementations otherwise calls filterarrayfirelibs data throw methoderror relevant specializations loaded selection available resources automatic add lines juliarcjl file usage package author loading code dependent resources selected user dummy package example testpackages folder additional examples package following file structure src dummyjl dummyafjl test means additional files dummyjl start module dummy using computationalresources init function manage loading submodules implement specializations computational resources function init enable using load additional modules folder push loadpath dirname file check resources package supports haveresource arrayfirelibs user indicated support arrayfire libraries load relevant code eval using dummyaf additional resource checks forget clean pop loadpath define methods export using singlethreaded cpu computations foundation function foo resource cpu args awesome algorithm goes typically select default resource foo args foo cpu args dummyaf module implemented dummyafjl look module dummyaf using computationalresources dummy arrayfire function dummy foo resource arrayfirelibs args specialization computation using arrayfire libraries instead note arrayfire package loaded dummyaf dummy consequence users package installed experience errors assuming optional add arrayfire package require fil