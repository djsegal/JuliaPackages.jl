computationalresourc julia packag choos resourc hardwar librari algorithm perform comput export set type allow dispatch method depend select resourc includ simpl facil help packag author manag load code depend resourc avail user choic resourc packag export follow type resourc cpu singl thread comput cputhread multi thread comput cpuprocess multi process comput arrayfirelib use arrayfir packag cudalib gpu comput use nvidia cuda librari opencllib gpu comput use opencl librari algorithm select perform pass resourc instanc argument convent argument function cpu typic default instanc type option store addit set custom exampl defin timeout type struct timeout float call algorithm optim cpu timeout packag author write optim check timeout valu termin time exceed usag user begin session use computationalresourc choos resourc avail exampl addresourc arrayfirelib load packag support arrayfir specif implement otherwis call filter arrayfirelib data throw methoderror relev special load select avail resourc automat add line juliarc file usag packag author load code depend resourc select user dummi packag exampl test packag folder addit exampl packag follow file structur src dummi dummyaf test mean addit file dummi start modul dummi use computationalresourc init function manag load sub modul implement special comput resourc function init enabl use load addit modul folder push load path dirnam file check resourc packag support haveresourc arrayfirelib user indic support arrayfir librari load relev code eval use dummyaf addit resourc check don forget clean pop load path defin method export use singl thread cpu comput foundat function foo resourc cpu arg awesom algorithm goe typic select default resourc foo arg foo cpu arg dummyaf modul implement dummyaf look modul dummyaf use computationalresourc dummi arrayfir function dummi foo resourc arrayfirelib arg special comput use arrayfir librari instead note arrayfir packag load dummyaf dummi consequ user packag instal experi error assum option add arrayfir packag requir file