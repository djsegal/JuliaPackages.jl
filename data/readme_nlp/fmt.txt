package active development api change anytime error checks handful basic types supported fmtjl pythonstyle format strings julia fmtjl provides pythonstyle format language alternative printfjl string utility functions base formats constructed standard string literal prefixed called strings following example string surrounded curly braces replaced formatted floating julia using fmt julia pi float julia pif goals fmtjl fledged supports complete features python format strings performant formatter faster string functions lightweight dependencies except base library overview fstr macro string exported binding fmt module macro interpolate variables string format specification interpolation happens inside replacement fields surrounded pair curly braces string treated ordinal strings replacement field usually argument arg specification spec separated colon argspec omitted examples load fstr using fmt default format binary octal decimal hexadecimal format a a format minimum width left center alignment dynamic width digits thousand separator addition strings fmtjl provides formatting functions fmtformatfstr args kwargs creates formatted string applying args kwargs fstr fmtprintf fstr args kwargs prints formatted string default stdout applying args kwargs fstr using functions interpolate replacement fields replacement values function arguments using fmt positional arguments implicit numbering fmt format alice bob alice bob positional arguments explicit numbering fmt format alice bob alice bob fmt format alice bob bob alice keyword arguments fmt format alice bob alice bob fmt format alice bob bob alice box drawing example fmt printf alice bob alice bob syntax strings borrowed python format string syntax ported stdformat rust stdfmt sections details syntax semantic supported fmtjl syntax replacement field surrounded pair curly braces escape curly braces double curly braces interpreted single curly braces backslashescaped characters treated usual strings dollar signs special character interpolation interpolation happens outside replacement fields syntax replacement field formally defined follows replacement field field argumentconvspec argument identifier expression digit identifier valid identifier expression valid expression digit conv format specification spec fillalignsignaltformzerowidthprecisiontype fill valid character except argument align sign altform zero width digit argument precision digit argument type note syntactic validity imply semantic validity example syntactically valid semantically invalid string type support thousands separator sequence zero width ambiguous width start resolve ambiguity followed digit leading zero interpreted zero following digits interpreted width otherwise zero interpreted width semantic semantic format specification basically python fields argument prefixed interpolated ordinal strings currently mixing interpolated interpolated replacement fields string allowed string returns string field interpolation otherwise returns fmtformat object passed fmtformat fmtprintf formatting template isa string true isa fmt format true isa fmt format true isa fmt format true argument argument positional keyword positional arguments numbered values supplied arguments passed fmtformat function omitted automatically numbered incrementally left independent kinds arguments keyword arguments named variable interpolated keyword argument interpolated indicated value supplied context replacement field placed otherwise value supplied keyword argument name passed fmtformat function currently mix interpolated keyword arguments kinds arguments single format interpolated formats immediately return string string type formats evaluated fmtformat object fmtformat object passed fmtformat function argument create formatted string positional arguments fmt format foo bar foo bar positional arguments implicit fmt format foo bar foo bar keyword arguments fmt format foo bar foo bar positional keyword arguments fmt format foo bar foo bar keyword arguments interpolation foo bar foo bar conversion conversion indicated followed conversion specified argument converted string representation using string repr function conversion characters suggest converts argument using string function repr function conversion fmt format fmt format python mark conversion syntax fmtjl instead avoid syntactic ambiguity julia allows valid character identifiers fill alignment content formatted value aligned specified width note text alignment sense unless width specified align character indicates alignment type follows left alignment center alignment alignment left margins filled fill character except omitted space character alignment default fill fmt format foo foo fmt format foo foo fmt format foo foo alignment specified fill fmt format foo foo fmt format foo foo fmt format foo foo sign sign controls character indicating sign sign negative values default sign negative negative values space sign negative values space negative values note sign meaningful fmt format fmt format fmt format fmt format fmt format fmt format alternate form altform altform indicates value formatted depending type value type character integers indicates prefix b o x x added digits standard form integers fmt format fmt format a alternate form integers fmt format o fmt format xa floating indicates tbd zero zero indicates signaware zero padding added fill width specified width zeros padding added sign sign fill following example illustrates difference signaware padding signignorant padding signaware zero padding fmt format signignorant zero padding fmt format width width indicates minimum width formatted string format integer minimum width fmt format fmt format fmt format default alignment depends type value example leftaligned strings aligned unless align specified fmt format fmt format spcifies digits integers decimal format indicates thousand separator integers binary octal hexadecimal format indicates digit separator x floating integral integers fmt format fmt format fmt format x xdeadbeef xdeadbeef floats fmt format e fmt format f e precision floating precision specifies precision formatted representation string tbd fmt format f float pi fmt format f float pi fmt format f float pi type integers type description decimal hexadecimal uppercase hexadecimal lowercase octal binary uppercase binary lowecase character none decimal floating type description fixed notation uppercase fixed notation lowercase scientific notation uppercase scientific notation lowercase hexadecimal notation uppercase hexadecimal notation lowercase notation uppercase notation lowercase percentage multiplied none notation kinds notations floating fixed notation refers notation exponent scientific notation refers notation exponent e e hexadecimal notation similar scientific notation prefixed x fractional denoted hexadecimal digits notation fixed notation scientific notation depending exponent chooses fixed notation exponent value reasonable range otherwise chooses scientific notation denoting value fixed notation force fixed notation difference uppercase letters positive negative infinities nans inf nan respectively whiel lowercase letters inf nan respectively force scientific notation difference analogous prefix exponent denoted uppercase letter lowercase letter force hexadecimal notation uppercase letters lowercase letters depending value mentioned multiplies value denotes value fixed notation appends mark type specifier notation digit shown past decimal rationals type formats fixed notation type formats multiplied followed type specified formats reduced numerator denominator separated slash values pointers strings default type specify special format performance fmtjl carefully optimized faster naive printing benchmarking script prints pair integers devnull using fmt using printf using formatting fmtprint print sprintfprint print sprintf naiveprint print stringprint print const expr formatexpr formattingprint print format expr function benchmark printer assert length length length printer using random random seed rand rand using benchmarktools printer fmtprint sprintfprint naiveprint stringprint formattingprint print printer btime benchmark printer devnull result machine julia benchmarkcomparejl fmtprint ms allocations mib sprintfprint ms allocations mib naiveprint ms allocations mib stringprint ms allocations mib formattingprint ms allocations mib benchmark environment cpu amd ryzen x os gnulinux julia v formattingjl v related projects printfjl provides style formatting macros opinion match dynamic nature julia type specifier formattingjl provides similar functionality apis fmtjl simpler perform