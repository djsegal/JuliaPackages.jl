inflationjl julia package numerical evaluation cosmic inflation models perturbations evolved transport method supports symbolic calculation equations motion remains efficient fields canonical kinetic terms publication please cite via zenodo link inflationjl automatically applies horizoncrossing approximation potential detected sumseparable support planned automatic application approximations valid watch talk package juliacon installation inflationjl unregistered julia package installed julia import pkg julia pkg add example using inflation using sympy quadratic inflation model fields randomly selected masses set field space dimension set model parameters values params symbols pvalues rand e function phi length phi matrix eltypephi return function phi return sum phi set initial conditions pi zeros zero initial velocity pick position randomly sphere radius n folds n phi randn phi norm phi phi sqrt n symbolically construct equations motion potential sumseparable horizoncrossing approximation automatically calculated funcs inflationsetup params solve background equations motion sol backgroundevolve phipipvaluesfuncsverbose true solve pt correlation function equations motion default values centered pivot scale mpc tsol transportperturbations solpvaluesfuncsverbose true println tsol examples directory complicated potentials metrics scan parameter space evaluate simulations parallel output analyze data moment inflationjl solve pt correlation function equations motion solving correlation functions pytransport cpptransport