unrolled unrolledjl provides functions unroll loops sequences length compiletime tuple staticarrays significantly improve performance typestability unroll macro julia using unrolled julia unroll function mysum seq unroll twice total zero eltype seq unroll seq total return total mysumunrolledexpansion generic function method julia mysum code executed tuples unrolled julia codeunrolled mysum quote total zero eltype seq begin seq total seq total seq total return total vectors length vectorint julia codeunrolled mysum quote total zero eltype seq seq total return total types length implemented unrolled includes fixedsize vectors staticarraysjl fixedsizearraysjl usage unroll generating compiletime separate function type combination unroll front function definition front loop unrolled unroll unroll loops arguments function instance error sum seq except unroll function mysumbutlast seq total zero eltype seq unroll seq bad total return total easy helper function unroll function dosum subseq helper mysumbutlast total zero eltype subseq unroll subseq total return total sum seq except mysumbutlast seq dosum seq mysumbutlast special unroll supports iteration someargument unroll function foo tup unroll length tup println foo unrolled functions unrolledjl provides following unrolled functions defined tuple unrolledmap unrolledreduce unrolledin unrolledany unrolledall unrolledforeach unrolledfilter unrolledintersect unrolledunion unrolledsetdiff functions perform computations performed entirely compiletime using types example unrolledfilterisa int sometuple example unrolledfilter compiled constant using unrolled base test generated positive val inferred unrolledfilter positive val val val val note val experience val objects typestable val types favor val v