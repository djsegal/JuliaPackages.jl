pandasjl package provides julia interface excellent pandas package sticks closely pandas api exception integerbased indexing automatically converted python based indexing julia based indexing installation simply install pandas package using julia package manager julia repl using pkg pkg add pandas using pandas version python pandas library depends installation pycalljl configured default python pandas library automatically downloaded installed mininal python installation managed julia independent python distributions system pycall configuration instructions changing behavior usage df pandas object dataframe series python command df df julia dfloc locdf iloc ix example using pandas df dataframe dict age name james jill jake age name james jill jake rows columns describe df age count mean std min max rows columns df age name age dtype int df dataframe dict income index jake james jill df merge df df lefton name rightindex true age name income james jill jake rows columns iloc df name income james jill rows columns mean groupby df age groupbydf age mean income age rows columns query df income querydf income age name income james jill rows columns array df x array james jill jake plot df inputoutput example df readcsv mycsvfilecsv read csv file dataframe tojson df myjsonfilejson save dataframe disk json format performance pandas operations medium dataframes fast overhead calling python api compared time spent inside pandas highly efficient implementation setting getting individual elements dataframe series slow requires roundtrip communication python operation instead values method version series homogeneous dataframe requires copying fast access write julia native array example xseries series randn time xseries elapsed time bytes allocated xvalues values xseries time xvalues elapsed time e bytes allocated xnative randn time xnative elapsed time e bytes allocated changes values array propogate underlying seriesdataframe iloc xseries xvalues iloc xseries caveats panelsrelated functions unwrapped obscure functions note function wrapped explicitly called using various methods pycal