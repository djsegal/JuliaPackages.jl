nlsolv solv linear system equat julia nlsolv julianlsolv famili linear system equat nlsolv packag solv system nonlinear equat formal multivalu function packag look vector satisfi accuraci packag abl solv mix complementar similar system nonlinear equat except equal zero allow inequ boundari condit satisfi formal definit relat command ident api solv fix take input function solv simpl exampl consid follow bivari function variabl sin exp zero function display write follow program use nlsolv function sin exp function exp cos exp nlsolv note function comput residu nonlinear system store prealloc vector pass argument similar function comput jacobian system store prealloc matrix pass argument residu jacobian function shape call nlsolv function start iter algorithm final nlsolv function return object type solverresult particular field zero structur contain solut converg occur object type solverresult converg indic converg occur specifi function jacobian various specifi residu function possibl jacobian function modifi argument effici method minim memori alloc follow assum defin function abstractvector abstractvector abstractarray abstractarray comput residu system put argument specifi jacobian comput finit differenc function comput jacobian comput finit differ syntax simpli nlsolv initi altern construct object type oncedifferenti pass nlsolv initi initi similar initi oncedifferenti initi initi nlsolv initi notic pass initi initi constructor actual initi residu vector initi cach variabl type dimens automat differenti option function comput jacobian automat differenti thank forwarddiff packag syntax simpli nlsolv initi autodiff forward jacobian avail addit abstractarray abstractarray function abstractarray abstractarray comput jacobian system syntax exampl nlsolv initi specifi function abstractarray abstractarray abstractarray abstractarray arbitrari array note assum jacobian pass initi zero matrix set element matrix function altern construct object type oncedifferenti pass nlsolv oncedifferenti initi initi nlsolv initi optim simultan residu jacobian addit function abstractarray abstractarray abstractarray comput residu jacobian time follow syntax oncedifferenti initi initi nlsolv initi function optim cost call success syntax possibl improv perform provid function avail calcul residu jacobian special syntax arguabl simpler approach defin function function myfun share calcul begin share calcul mutat calcul specif goe mutat calcul specif goe solv use nlsolv myfun initi enabl nlsolv effici calcul effici calcul separ function return residu jacobian output assum function abstractarray return newli alloc vector contain residu simpli pass nlsolv automat detect defin argument nlsolv initi note mean function method accept argument method accept argument assum argument version mutat describ via autodiff keyword finit differenc autodifferenti comput jacobian addit abstractarray function abstractarray return newli alloc matrix contain jacobian simpli pass nlsolv nlsolv initi addit function return tupl newli alloc vector residu newli alloc matrix jacobian approach nlsolv initi function take scalar argument function float float take scalar return vector tupl contain residu helper function ari complet syntax nlsolv ari initi finit differenc comput jacobian jacobian spars jacobian function spars routin manipul spars matric instead one increas perform system mean necessarili provid appropri jacobian type solver feed oncedifferenti nlsolv initi option third function constructor jacobian note jacobian matrix reset function call result care ensur don forget overwrit nonzero element initi previous function call doubt spars matrix begin function spars jacobian achiev fill dropzero remov sparsiti pattern fine tune algorithm current avail choic achiev set option method argument nlsolv default algorithm trust region method trust region method solut method reli quadrat approxim squar object consid valid compact region center current iter method select method trust region method accept follow custom paramet factor determin size initi trust region size set product factor euclidean norm initi nonzero els factor default autoscal true variabl automat rescal scale factor norm jacobian column default true newton method linesearch classic newton algorithm option linesearch method select method newton method accept custom paramet linesearch equal function comput linesearch current avail valu linesearch packag default linesearch perform note assum pass linesearch function updat solut vector evalu function anderson acceler method select method anderson dii pulay mix method base acceler fix iter beta default beta jacobian inform linesearch histori size control paramet default correspond simpl fix iter valu larger histori size acceler iter valu usual increas speed converg increas storag comput requir lead instabl method use acceler fix iter solver refer walker anderson acceler fix iter siam journal numer analysi common option option argument nlsolv avail algorithm xtol norm differ success iter converg declar default ftol infinit norm residu converg declar default iter maximum iter default store trace trace optim algorithm store default fals trace trace optim algorithm shown stdout default fals extend trace additifon algorithm intern ad trace default fals fix fixedpoint wrapper nlsolv map input function likewis allow conveni solut fix common encount comput econom note default method anderson naiv picard style iter achiev set isn advis contract lipschitz constant close converg fail consid lower autodifferenti support fixedpoint init method newton autodiff true toler iter bound set exact nlsolv function wrapper fixedpoint init iter note suppli deriv appropri transform current map wait api stabil map mix complementar multivari function vector solut mix complementar mcp vector follow hold index vector contain element equal inf vector contain element equal inf particular element equal inf element equal inf mcp exact equival multivari root find describ packag solv mcps reformul solut system nonlinear equat describ miranda fackler nlsolv sign convent opposit function mcpsolv solv mcps take argument nlsolv except vector immedi follow argument correspond possibl deriv extra option argument reformul valu reformul smooth smooth reformul use fischer function default robust complex reformul minmax min max reformul faster smooth approxim algebra robust reformul kink complet exampl use nlsolv function mcpsolv inf inf inf inf reformul smooth autodiff forward solut julia zero element array float lower bound hit third compon henc third compon function posit solut hand fourth compon function zero solut julia similar zero julia zero julia element array float todolist broyden updat jacobian trust region homotopi method lmmcp algorithm kanzow relat packag jump solv linear equat reformul optim linear constraint set equat constraint enter object function jump current support sourc commerci solver complementar bring power model languag jump complementar support solver pathsolv nlsolv refer noced jorg wright stephen numer optim edit springer minpack jorg burt garbow ken hillstrom argonn nation laboratori miranda mario fackler paul appli comput econom financ mit press