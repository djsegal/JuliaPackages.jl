picoquant picoquant quantum circuit simulation framework developed quantex project prace funded project develop quantum circuit simulation tools capable running classical exascale compute clusters expected deployed coming package prototype test ideas approaches hope improve subsequent iterations started install prototype locally following instructions follow series tutorial notebooks notebooks folder details function interfaces read online docs involved posting issue submitting pull request install example picoquant installed julia repl following commands import pkg pkgaddpicoquant tests run import pkg pkgtest simple script picoquant simulate qubit ghz circuit consists following using picoquant tn tensornetworkcircuit addgatetn gatetensor addgatetn gatetensorcx addgatetn gatetensorcx addinputtn fullwavefunctioncontractiontn vector output loadtensordatatn result detailed installation instructions version picoquant methods installs version registered julia repository instructions clone repository install version julia installed download install julia julialang website clone repository using git clone start julia repl navigate picoquant folder activate instantiate environment build picoquant import pkg pkgactivate pkginstantiate pkgbuildpicoquant install dependencies specified projecttoml file carry package specific build tasks detailed depsbuildjl file currently picoquant functionality qiskit installed python environment pycall build details using python environments running unittests unittests run picoquant root folder julia project testruntestsjl run unittests run subset unittests passing name testset example run layer tests contained testlayertestsjl script run julia project testruntestsjl layertests running standalone scripts standalone executable scripts located bin folder example run qasmtngjl script convert qftqasm file json format julia project binqasmtngjl qasm qftqasm output qftjson starting notebook server prototyping development jupyter notebooks provides instant feedback speeds development start jupyer notebook julia repl enter using ijulia notebook browser window home folder using python environments note picoquant makes python libraries via pycalljl package linux systems python binary path python python binary found windows macos systems create dedicated conda environment reside homejuliaconda required python packages installed build picoquant python environment python environment variable set python binary pycall rebuilt example create conda environment juliacondapicoquantenv follow steps conda create environment command line conda juliacondapicoquantenv python julia repl envpython juliacondapicoquantenv build pycall building documentation package documenterjl generate html documentation sources build documentation run jl script docs folder julia projectdocs docsjl documentation placed build folder hosted locally starting local http server cd docsbuild python httpserver ci documentation automatically built hosted via github pag