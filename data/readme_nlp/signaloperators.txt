signaloperators signaloperators julia package aims provide clean interface generating manipulating signals typically sounds signal regularly sampled time manipulated note attention folks encountered poor performance signaloperators able solve liberal sink slow process reimplementing package avoid issues fair warning package low priority thrust current using wav using signaloperators using signaloperators units allows db hz etc unitful values pure tone db power signal ramps smooth onsetoffset sound signal sin khz ramp normpower amplify db sound defined file matching overall power sound sound examplewav normpower amplify db khz sawtooth wave sound signal khz ramp normpower amplify db hz amplitude modulated noise sound randn amplify signal sin hz normpower amplify db khz tone surrounded notch noise snr db signal sin khz ramp normpower amplify db snr signal randn filt bandstop khz khz normpower amplify db scene mix write signals single file khz append soundsoundsoundsoundscene toframerate khz sink exampleswav interface relatively generic operate produce signal representations including axisarrays dimensionaldata samplebuf objects sampledsignals straightforward extend operators signal representations operators produce signals match type input values uniform operators designed create efficient lazy representations signals generate data call sink lazy versions operators quick usage using sampledsignals samplebuf samplebuf rand samplebuf ones using signaloperators mix sink mix smarts operators resulting value samplebuf object read operators documentation status functions relatively bugfree thoroughly documented run pretty fast calls fall magnitude equivalent raw julia code loops broadcasting arrays person thorough package obviously bugs performance issues lurking welcome issues prs acknowledgements thanks ssfrr discussions pr related issues sampledsignals package interactions definitely influenced final design