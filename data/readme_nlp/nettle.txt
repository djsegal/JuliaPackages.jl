nettlejl libnettle supports wide array hashing algorithms package interrogates libnettle determine available hash types available nettlegethashtypes typically include sha sha sha sha sha md md ripemd typical usage hash algorithms create hasher update finally digest hasher sha update test hexdigest hexdigest sha test outputs eaeadfaffffffafcbcc digest function available return digest arrayuint note digest function hexdigest function reset internal hasher object pristine ready update calls hmac functionality hmac functionality revolves hmacstate type created function name arguments constructor desired hash type desired key authenticate hashing hmacstate sha mykey update test hexdigest hexdigest sha mykey test outputs cadcafebfbcfafbedbccbbdbba digest function available return digest arrayuint note digest function hexdigest function reset internal hmacstate object pristine ready update calls encryptiondecryption functionality nettle provides encryption decryption functionality using encryptor decryptor objects cipher types available getciphertypes create pair objects shared key encrypt decrypt heart content key key exactly bytes enc encryptor aes key plaintext chars ciphertext encrypt enc plaintext dec decryptor aes key deciphertext decrypt dec ciphertext vector uint plaintext deciphertext bytestring decrypt aes key encrypt aes key plaintext vector uint plaintext aescbc encryptdecrypt generate pair key iv salt add trim padding passwd secret passphrase salt hexbytes aeeec random bytes key iv genkeyiv vector uint passwd salt enc encryptor aes key plaintext message ciphertext encrypt enc cbc iv addpaddingpkcs vector uint plaintext dec decryptor aes key deciphertext decrypt dec cbc iv ciphertext vector uint plaintext trimpaddingpkcs deciphertext bytestring plainbytes hexbytes aa cipherbytes encrypt aes cbc iv key addpaddingpkcs plainbytes decipherbytes decrypt aes cbc iv key cipherbytes plainbytes trimpaddingpkcs decipherbytes bytestr