gflopsjl code performance issue sometimes useful absolute performance measurements objectivise slow fast gflopsjl leverages power cassettejl automatically count floating operations piece code combined accuracy benchmarktools allows easy absolute performance measurements installation package registered simply installed pkg add gflops example simple example track operations vector summation julia using gflops julia rand julia countops sum flop counter flop float add julia gflops sum gflops peak e flop e alloc bytes gflopsjl internally tracks types floating operations bit bit operands prettyprinting flop counter zero entries individual counter accessed julia function mixeddot acc inbounds simd eachindex acc acc mixeddot generic function method julia rand float rand float julia cnt countops mixeddot flop counter flop float float add mul julia fieldnames gflops counter fma fma muladd muladd add add sub julia cnt add julia gflops mixeddot gflops peak e flop e alloc bytes caveats fused multiplication addition fma muladd systems support fmas muladds compute operations addition multiplication instruction countops counts individual fmamuladd operation makes easier interpret counters gflops count floating operations fma accordance performance benchmarks usually behave julia coeffs rand muladds flop julia cnt countops evalpoly coeffs flop counter flop float muladd julia gflops evalpoly coeffs gflops peak e flop e alloc bytes julia code gflopsjl happens outside realm julia code especially operations performed external libraries blas calls julia using linearalgebra julia countops dot flop counter flop issue try circumv