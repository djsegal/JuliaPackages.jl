fmijl fmijl fmijl free software library julia programming language integrates unctional ock nterface load create parameterize differentiate simulate plot fmus seamlessly inside julia programming language fmijl juliarepl switch package mode using activate preferred environment install fmijl v pkg add fmi check correctly run tests bundled fmijl v pkg test fmi look inside examples folder examples branch examples section documentation examples available juliascript jl jupyternotebook ipynb markdown md simulate fmu plot values using fmi plots load instantiate fmu myfmu fmiload pathtofmu simulate s s record fmu variable named mass simdata fmisimulate myfmu recordvalues mass plot fmiplot simdata free memory fmiunload myfmu currently supported fmijl importing fmi fmi command set including optional specials fmigetstate fmisetstate fmigetdirectionalderivatives parameterization simulation plotting cs fmus eventhandling imported discontinuous fmus fmi fmi ssp import export import export import export cs continuous discontinuous se explicit solvers implicit solvers autodifffalse implicit solvers autodifftrue setstate getdirectionalderivatives getadjointderivatives fmi cross checks supported tested beta supported implemented untested progress planned supported corresponding fmi standard applicable planned fmijllibrary dependencies nice clean original package fmijl split packages fmijl level loading manipulating saving building entire fmus scratch fmiimportjl importing fmus julia fmiexportjl exporting stand fmus julia code fmicorejl code wrapper fmistandard fmibuildjl compilercompilation dependencies fmiexportjl fmifluxjl machine learning fmus differentiation fmus fmizoojl collection testing example fmus platforms supported fmijl tested testing julia versions lts bit bit windows bit ubuntu bit mac julia bit untested performance recommend using julia cite tobias thummerer lars mikelsons josef kircher neuralfmu towards structural integration fmus neural networks martin sjlund lena buffoni adrian pop lennart ochel ed proceedings th modelica conference linkping sweden september linkping university electronic press linkping linkping electronic conference proceedings doi ecp related publications tobias thummerer johannes stoljar lars mikelsons neuralfmu workflow integrating hybrid neuralodes realworld applications electronics doi electronics tobias thummerer johannes tintenherr lars mikelsons hybrid modeling human cardiovascular system using neuralfmus journal physics conference series doi notes contributors contributors welcome contributing please read understand follow contributor guide collaborative practices community packages development implementations optimizations exisitng code design decissions influence library performance usability following priorization basis decision compliance standard priority compliant fmi standard identifiers described standard topologies follow specification possibilities julia programming language allows performance fmijl simulation tool performance applies efficient cpu gpu conscientious ram disc space usability library usable compliant fmi standard hybrid modelling julia using fmus fmifluxjl