metaljl metal programming julia metaljl program gpus macos using metal programming framework package progress bugs functionality missing performance optimized expect changes package prs welcome requirements mac device series chip julia macos ventura requirements fairly strict due limited development resources manpower hardware technically relaxed contributing issue details practice metaljl probably macos gpus supported metal function partially combinations unsupported quick start metaljl installed julia package manager julia repl type enter pkg repl mode run pkg add metal equivalently via pkg api julia import pkg pkg add metal overview toolchain run following command importing package julia using metal julia metal versioninfo macos darwin toolchain julia beta llvm device apple m pro kib allocated array abstraction easiest metaljl using array abstraction mtlarray type meant convenient container device memory provide dataparallel abstraction using gpu writing kernels julia mtlarray element mtlarrayint julia element mtlarrayint kernel programming array abstractions implemented using metal kernels written julia kernels follow similar programming style julia gpu deviate kernels implemented metal indexing intrinsics functions arguments arbitrary aggregate arguments supported etc julia function vadd threadpositioningridd return vadd generic function method julia mtlarray mtlarray similar julia metal threads vadd julia array element vectorint profiling package supports profiling gpu execution visualization apple xcode tools easiest generate gpu report metalprofile macro seen profile gpu code julia process set metalcaptureenabled environment variable importing metaljl metal command detected message stating metal gpu frame capture enabled variable set correctly julia env metalcaptureenabled julia using metal julia function vadd threadpositioningridd return julia mtlarray mtlarray similar metal gpu frame capture enabled julia metal profile metal threads length vadd info gpu frame capture saved juliacapture gputrace generate gputrace folder current directory view profile folder xcode note xcode install peculiarities viewing juliacreated gpu traces recommended trace time shader profiler fail start metal api wrapper finally functionality interfacing metal libraries objectivecjl provide lowlevel objects functions map lowlevel api wrappers slightly level julia wrappers available mtl submodule exported metaljl julia dev mtldevice agxgxdevice xcf name apple m pro julia dev name nsstring apple m pro hacking metaljl relies custom llvm air provided jll normally jllis built yggdrasil changes llvm look buildllvmjl deps folder scripts builds local version llvm configures local preference environment depending corresponding jlls pick modified version julia project clone metaljl acknowledgements package builds experience julia contributors cudajl amdgpujl oneapijl