einsum packag build packag status help packag export singl macro einsum implement similar notat einstein summat convent flexibl specifi oper julia array similar numpi einsum function flexibl exampl basic matrix multipl implement einsum instal pkg add einsum els pkg add einsum press julia document basic destin array prealloc one prealloc space randn randn randn store result overwrit einsum destin prealloc automat creat array result randn randn randn creat array appropri dimens einsum happen hood execut express einsum julia metaprogram capabl generat execut seri nest loop exact generat macroexpand expand macrotool macroexpand einsum output look follow note sum index occur multipl time hand equat determin type promot type eltyp eltyp alloc array array undef size check dimens assert size size main loop inbound begin skip bound check speed size size zero size actual generat code bit verbos neat comment format care type hygien updat assign oper prealloc array einsum produc size size size size differ updat form rule index variabl indic hand left hand sum array share index size dimens einsum iter extent hand indic exampl follow code alloc array size copi data einsum copi index appear hand appear left hand variabl sum exampl follow code alloc size sum row einsum dropdim sum dim dim index variabl appear multipl time hand assert size dimens match exampl einsum check dimens match dimens length particular equival follow code zero size assert size size size size error thrown specifi dimens don match offset index einsum allow offset hand rang sum restrict einsum vielsum variant einsum run multi thread outermost loop fast code introduc temporari exampl exampl expand vielsum result equival expand ing follow thread thread size size size size use set environ variabl start julia export julia num thread manual detail note somewhat experiment faster especi array overhead divid updat assign oper macro assign scalar left hand array limit prevent thread write memori time einsimd variant einsum simd front innermost loop encourag julia compil vector loop exampl einsimd result approxim inbound size size size simd size idea decid benchmark specif simd make sens kind oper familiar document inner work function einsum macro implement function call nest loop structur exampl consid transpos block matrix rand einsum transpos produc loop structur transpos function call middl approxim size size transpos function call outsid array name macroexpand exact code generat output array note julia rule evalu global scope exampl repl prompt littl packag instanc load ijulia notebook behavior insid function block rand sum global einsum log clearer explicit defin function einsum log rand rand rand relat packag tensoroper flexibl syntax allow strict einstein convent contract produc effici code instead generat naiv loop transform express optim contract function take care cach friend loop arraymeta aim produc cach friend oper loop julia