einsumjl package build package status help package exports single macro einsum implements similar notation einstein summation convention flexibly specify operations julia array similar numpy einsum function flexible example basic matrix multiplication implemented einsum install pkgaddeinsum else pkg add einsum pressing julia documentation basics destination array preallocated ones preallocated space randn randn randn store result overwriting einsum destination preallocated automatically create array result randn randn randn create array appropriate dimensions einsum happens hood execute expression einsum julia metaprogramming capabilities generate execute series nested loops exactly generated macroexpand expand macrotoolsjl macroexpand einsum output look following note sum index occurs multiple times hand equation determine type promotetype eltype eltype allocate array array undef size check dimensions assert size size main loop inbounds begin skip boundschecking speed size size zero size actual generated code bit verbose neatly commentedformatted care types hygienic updating assignment operators preallocated arrays einsum produce size size size size difference updating form rules indexing variables indices hand lefthand summed arrays share index size dimensions einsum iterates extent hand indices example following code allocates array size copies data einsum copy index appears hand appear lefthand variable summed example following code allocates size sums rows einsum dropdimssum dims dims index variable appears multiple times hand asserted sizes dimensions match example einsum check dimension matches dimension length particular equivalent following code zeros size assert size size size size error thrown specified dimensions match offset indexing einsum allows offsets hand range summed restricted einsum vielsum variant einsum run multithreaded outermost loop fast code introduce temporaries example example expand vielsum results equivalent expand ing following threads threads size size size size useful set environment variable starting julia export julianumthreads manual details note somewhat experimental faster especially arrays overhead dividing updating assignment operators macro assign scalar lefthand array limitations prevent threads writing memory time einsimd variant einsum simd front innermost loop encouraging julia compiler vectorize loop example einsimd result approximately inbounds size size size simd size idea decide benchmark specific simd makes sense kinds operations familiar documentation inner workings functionality einsum macro implement function calls nested loop structure example consider transposing block matrix rand einsum transpose produces loop structure transpose function call middle approximately size size transpose function calls outside array names macroexpand exact code generated output array note julia rules evaluating global scope example repl prompt little package instance loaded ijulia notebooks behavior inside function block rand sum global einsum log clearer explicitly define function pq einsum pq log pq rand rand rand related packages tensoroperationsjl flexible syntax allowing strict einstein convention contractions produce efficient code instead generating naive loops transforms expressions optimized contraction functions takes care cachefriendly looping arraymetajl aims produce cachefriendly operations loops julia