actrsimulators actrsimulatorsjl package developing discrete event simulations act cognitive architecture basic framework conducting simulations developed currently features act implimented example simple example develop act model psychomotor vigilence task pvt pvt reaction time task measure vigilance decrements stemming fatigue trial stimulus random delay lasting response keystroke trial begins key components code described source code found examplespvtexample installing actrsimulatorsjl step load following dependencies using actrsimulators import actrsimulators start presskey repaint include pvtjl include pvtmodeljl importgui create event scheduler follows option modeltrace set true description execution time print processed model event task events added trace tasktrace scheduler actrscheduler modeltrace true task object created pvt constructor includes options trials gui visible task executes real time task pvt scheduler ntrials visible true realtime true initialize model model consists components following modules procedural memory visuallocation visual modules passed actr model object reference scheduler procedural procedural votochunk typeof visuallocation visuallocation buffer visual visual buffer motor motor actr actr scheduler procedural visuallocation visual motor production rules production rule consists functions conditions actions pvt model production rules wait stimulus appear attend stimulus appears respond stimulus attending conditions conditions production rule set functions return bool utility value proportional degree match convention name conditions production rule prefixed example canwait returns set functions evaluate conditions executing wait production rule condition requires actr model object wait model wait visuallocation visual buffers empty modules busy function canwait actr c actr actr visuallocation empty c actr actr visual empty c actr actr visual busy c actr actr motor busy return c c c c attend stimulus presentation visual object stuffed visuallocation buffer attend production rule execute visuallocation buffer empty visual module busy function canattend actr c actr actr visuallocation empty c actr actr visual busy return c c respond model attends stimulus execute response respond production rule fire visual buffer empty motor module busy function canrespond actr c actr actr visual empty c actr actr motor busy return c c actions production rule selected set actions executed modify architecture possibly modify exeternal environment production rule associated action function example action function production rule wait waitaction action requires actr model object task object args task note wait purpose wait production rule surpress execution production rules stimulus appeared time cost associated firing wait production rule accordingly empty function immediately registered scheduler using keyword function waitaction actr args description wait register actr scheduler description return attend attend production rule selected chunk visuallocation buffer copied passed function attending adds chunk time delay represents time shift visual attention addition buffer visuallocation immediately cleared function attendaction actr args buffer actr visuallocation buffer chunk deepcopy buffer clearbuffer actr visuallocation attending actr chunk return respond function respondaction executed selection respond production rule function respondaction performs actions visual buffer executes function responding executes motor response delay calls userdefined function presskey model presskey interact task collect data function respondaction actr task clearbuffer actr visual key sb responding actr task key return construct production rules constructor rule creates production rule following keyword arguments conditions list functions representing selection conditions action function performs actions production rule actr reference actr model object task reference pvt task name optional name production rule production rule pushed vector located procedural memory object conditions canattend rule rule conditions action attendaction actr task name attend push procedural rules rule conditions canwait rule rule conditions action waitaction actr task name wait push procedural rules rule conditions canrespond rule rule conditions action respondaction actr task name respond push procedural rules rule model task defined run model simulation gui appear running following code run actr task