superpolyakjl repository contains prototype implementation algorithms following paper charisopoulos davis superlinearly convergent subgradient method sharp semismooth url implementation available julia package called superpolyakjl embedded julia applications core algorithms found srcsuperpolyakjl scripts included scripts reproduce numerical experiments paper recommend running code using julia note released pytorch version time setup install dependencies package run following root directory repository julia project import pkg pkginstantiate superpolyak package interactive session julia prompt using julia project enter import superpolyak julia prompt julia package install locally enter following julia session julia enter pkg mode v pkg add https github com cor opt superpolyak jl running experiments commands assume root repository current directory install dependencies using julia projectscripts import pkg pkginstantiate experiments paper contained individual scripts example solve phase retrieval instance dimension measurements run julia projectscripts scriptsphaseretrievaljl view help text including description available arguments simply run julia projectscripts scriptsphaseretrievaljl help subdirectory includes scripts solving following phase retrieval using subgradient alternating projections method quadratic sensing bilinear sensing maxlinear regression relu regression compressed sensing using alternating projections method lasso regression using proximal gradient method