jdbc julia interface java jdbc database drivers package enables java jdbc drivers access databases julia javacalljl package call java jdbc drivers api provided package consists essentially components direct minimally wrapped interface directly java jdbc minimal julian interface support tablesjl package currently supports julia v initialisation destruction start add database driver jar file classpath initialise jvm using jdbc jdbc usedriver homederbyderbyjar jdbc init javacallinit jvm remains memory unless explicitly destroy jdbc destroy javacalldestroy lowlevel java interface described package provides functionality similar using jdbc driver java allows write code similar look java conn drivermanager getconnection jdbcderbytestjuliatest stmt createstatement conn rs executequery stmt select firsttable rs println getint getstring name jdbc accessing data sql call iterating resultset instance julia resultset regular julia iterator iterated usual fashion row julia tuple iterate result set using jdbcrowiterator values tuple nullable type declared nullable database jdbcrowiterator rs println following accessor functions defined functions arguments resultset field index field name result accessor functions pure julia object conversions java types returned functions getint getfloat getstring getshort getbyte gettime gettimestamp getdate getboolean getnstring geturl updates java interface inserts updates via specified sql string using statement instance safer via preparedstatement preparedstatement setter functions defined types corresponding getter functions shown ppstmt preparestatementconn insert firsttable values setintppstmt setstringppstmt ten executeupdateppstmt similary callablestatement run stored procedures callablestatement input output parameters getter setter functions defined cstmt jdbc preparecall conn call syscsutilsyscssetdatabaseproperty setstring cstmt derbylocksdeadlocktimeout setstring cstmt execute cstmt note jdbc api kinds execute methods defined statement executequery returns resultset usually select executeupdate returns integer denotes rows effected query usually update insert ddl preparedstatements callablestatements additional function execute defined returns boolean specifies resultset returned query note statement query specified corresponding execute call preparedstatement callablestatement query specified creating connections statements closed via close functions commitconnection rollbackconnection setautocommittruefalse obvious metadata java interface pass jresultset object executequery gettablemetadata array columnname columntype tuples conn drivermanager getconnection jdbcderbytestjuliatest stmt createstatement conn rs executequery stmt select firsttable metadata gettablemetadata rs julian interface package provides julian interface interacting jdbc involves creating jdbcconnection jdbccursor objects query strings passed cnxn jdbc connection jdbcderbytestjuliatest create connection csr cursor cnxn create cursor connection access connection create cursor directly csr cursor jdbcderbytestjuliatest execute sql execute csr insert pitable pivalue values execute csr select mytable iterate rows row rows csr stuff row close csr closes connection called connection cursor tables interface creating dataframe jdbc includes tables interface tables source object created jdbccursor jdbcrowiterator simply jdbcsourcecsr useful retrieving metadata tablesschema useful loading data database object implements tables interface provide convenient jdbcload function example src jdbc source csr create source jdbccursor load dataframe datasink df jdbc load dataframe src load cursor directly df jdbc load dataframe csr note assuming query executed absolute quickest database data dataframe cnxnstr jdbcderbytestjuliatest example df jdbc load dataframe cursor cnxnstr select sometable note dataframe datasink jdbcload methods listed methodsjdbcload caveats blob supported jdbc api wrapped please file issue missing easy call java method directly using javacall please look jdbcjl source inspiration julia datetime java javasqldate store timezone information believe consistent timezone easy wrong please double check application depends accurate times jdbc drivers java package testing wide varieti