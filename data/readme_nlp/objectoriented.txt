objectoriented objectorientedjl mechanical oop programming library julia design mainly based cpython oop adapted julia supported features multiple inheritances using dot operators access default field values overloaded constructors methods pythonstyle properties getters setters generics oop system interfaces check documentation recommend read translate oop idiomatic julia using package understand complaints julia lack oop refutation julia coding style feel free people package julian avoid defining methods pythonstyle properties oodef preview oodef mutable struct myclass mysuperclass int int function integer integer self mk self self return self function computeaplusb self self self julia inst myclass julia inst computeaplusb concise rewrite using mk oodef mutable struct myclass mysuperclass int int function integer integer mk begin function computeaplusb self self self julia inst myclass julia inst computeaplusb hints professional julia programmers dot method selfmethod purely syntactic sugar using idiomatic julia code methodself usually using idiomatic julia methods method ambiguity avoided course oop avoid defining dot methods shown oodef struct mytype field int field int function mk begin field field julian function somefuncself return selffield selffield julian function somefunc self mytype accepts subtypes self field self field oodef struct myderivedtype mytype int function mk begin mytype somefunc mytype somefunc myderivedtype troubleshooting integrated debugger implemented juliavscode handle generated functions causes bug entering mk expressions workaround follows oodef mutable struct yourclass int int function debug self mk begin debug debug reach please jump mk expression debug return self