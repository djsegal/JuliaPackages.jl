modelwrappers modelwrappersjl utility package makes easier model parameters stated nested namedtuples handles flatteningunflattening model parameter fields arbitrary dimensions constrainingunconstraining parameter corresponding constraint provided using automatic differentation model parameter namedtuple user specified function logposterior distribution flatteningunflattening model parameter modelwrappersjl allows flatten nested namedtuple vector returns unflatten function convert vector namedtuple default discrete parameter flattened default flatten type float construct flattenunflatten via reconstructor using modelwrappers myparameter float reconstruct reconstructor myparameter valsvec flatten reconstruct myparameter vectorfloat elements vals unflatten reconstruct valsvec f adjust settings using flattendefault struct instance following settings map myparameter float vector flatten integer values flattendefault flattendefault output float flattentype flattenall reconstruct reconstructor flattendefault myparameter valsvec flatten reconstruct myparameter vectorfloat elements vals unflatten reconstruct valsvec f flattenunflatten automatic differentiation functions flattenad unflattenad return output based input type check differences example myparameter float flattendefault flattendefault output float flattentype flattenall reconstruct reconstructor flattendefault myparameter valsvec flattenad reconstruct myparameter vectorfloat elements vals unflattenad reconstruct valsvec reconstructor assign buffers flatten unflatten operations performed allocations unflatten usually performed free allocations arrays involved using benchmarktools myparameter float randn rand randn reconstruct reconstructor myparameter valsvec flatten reconstruct myparameter valsvec vectorfloat element btime unflatten reconstruct valsvec ns allocations bytes btime flatten reconstruct myparameter s allocations kib note nest namedtuples arbitrary arrayarrays structures parameter performance penalty myparameter myparameter myparameter rand rand rand reconstruct reconstructor myparameter valsvec flatten reconstruct myparameter valsvec vectorfloat element btime unflatten reconstruct valsvec s allocations kib btime flatten reconstruct myparameter s allocations kib constrainingunconstraining model parameter consider following model consists various unknown parameters estimate parameter custom algorithm common algorithms require vector function argument require space parameter operate corresponding prior distribution provided modelwrappersjl allows efficiently constrain unconstrain parameter tuple initiate param struct temporary constructor checks package handle value constraint combination initial namedtuple wrapped modelwrapper struct using distributions myparameter param normal param gamma mymodel modelwrapper myparameter note providing distribution distributionsjl param assign bijector bijectorsjl parameter valid constraint options param struct moment include bijector bijectorsjl distributions bijectorsjl fixed struct val fixed excludes flattenunflatten unconstrained struct flattens val taking account constraint constrained struct flattens val taking account constraint account constraints constraining values constraint able map val lower dimension includes simplex covariancematrix correlationmatrix constraint using bijectors myparameterconstraints param normal param bijection bijector gamma buffer param fixed zeros int buffer param unconstrained zeros zeros buffer param constrained mapped lower dimensions param simplex param correlationmatrix param covariancematrix modelconstraints modelwrapper myparameterconstraints flatten modelconstraints vectorfloat elements modelwrapper struct mutable contains values namedtuple field values flattened unconstrained updated valuessamples modelwrapper struct created unflatten function strict variable type conversion stored create modelwrapper struct flatten values update struct values using distributions random rng mersennetwister myparameter param normal param gamma mymodel modelwrapper myparameter flattenunconstrain model parameter valsvec flatten mymodel vectorfloat elements unconstrain mymodel unconstrainflatten mymodel vectorfloat elements unflattenconstrain proposed parameter unconstrained space proposed randn rng length valsvec vectorfloat elements modelwrappers unflatten mymodel proposed unflattenconstrain mymodel proposed replacing current model parameter proposed parameter mymodel val unflattenconstrain mymodel proposed mymodel val using automatic differentiation modelwrapper modelwrappersjl supports usage various automatic differentiation backends providing immutable objective struct contains modelwrapper data parameter derivative information objective functor manually add target function wrt original parameter namedtuple included ad call logposterior density model sample data create objective define function ad using unpack create model data myparameter param normal param gamma mymodel modelwrapper myparameter data randn create objective define target function myobjective objective mymodel data function objective objectivemodelwrapperbasemodel namedtuple unpack data objective lprior distributions logpdf distributions normal distributions logpdf distributions exponential llik sum distributions logpdf distributions normal dataiter iter eachindex data return lprior llik myobjective vector unconstrained space input constrains converts argument namedtuple checks conversions finite adds eventual jacobian adjustments transformations target function evaluated usually efficiently sample parameter evaluate target function wrt vector namedtuple proposed randn rng length valsvec myobjective proposed functor call wrt namedtuple parameter btime myobjective mymodel val s allocations bytes functor call wrt proposed parameter vector btime myobjective proposed s allocations bytes objective called various ad frameworks using forwarddiff reversediff zygote gradfwd forwarddiff gradient myobjective proposed gradrvd reversediff gradient myobjective proposed gradzyg zygote gradient myobjective proposed gradfwd gradrvd gradzyg true forward package highly experimental suggestions comments welcome constraints reasonable simple add check srccoreconstrainconstraintsconstrainedjl example guidance com