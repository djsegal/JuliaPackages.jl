waterlilyjl overview waterlilyjl simple fast fluid simulator written pure julia experimental project advantage active scientific community julia accelerate enhance fluid simulations watch juliacon talk methodcapabilities waterlilyjl solves unsteady incompressible d d navierstokes equations cartesian grid pressure poisson equation solved geometric multigrid method solid boundaries modelled using boundary data immersion method solver run serial cpu multithreaded cpu gpu backends examples user set boundary conditions initial velocity field fluid viscosity determines reynolds immerse solid obstacles using signed distance function examples found examples flow circle define size simulation domain cells circle radius centered flow boundary conditions reynolds reradius greek nu bd latin lowercase kinematic viscosity fluid using waterlily function circle re radius center body autobody sum abs center radius simulation radius radius re body line defines circle geometry using signed distance function autobody function automatic differentiation infer geometric parameter automatically replace circle distance function flow else donut julia logo finally line defines simulation passing parameters defined create simulation line run forward time third line circ circle tend simstep circtend note set multiples powers using fast multigrid solver access plot whatever variables example print velocity cartesianindex using printlncircflow plot pressure field using using plots contour circ flow set flow metric functions implemented examples gifs d taylor green vortex dimensional taylor green vortex demonstrates available simulation options simulate nontrivial initial velocity field passing vector function uxyz indicates velocity component u xyz position vector function tgv pow re e float mem array define vortex size velocity viscosity pow re taylorgreenvortex initial velocity field function u xyz xyz scaled coordinates return sin cos cos ux return cos sin cos uy return uz initialize simulation return simulation u mem example demonstrates floating type float array memory type memarray options example run nvidia gpu import cudajl library initialize simulation memory device import cuda assert cuda functional vortex tgv floatmem cuda cuarray simstep vortex amd gpu import amdgpu memamdgpurocarray note julia required amd gpus moving bodies simulate moving bodies waterlily passing coordinate map autobody addition sdf using staticarrays function hover re amp thk line segment sdf function sdf sa clamp sum abs thk oscillating motion rotation function map amp cos sa cos sin sin cos sa sin simulation rebody autobody sdfmap example sdf function defines line segment thickness thk line segment move define coordinate tranformation function map example coordinate shifted ll time moves center segment horizontal shift varies harmonically time sweeping segment left simulation example rotates segment using rotation matrix cos sin sin cos angle varied harmonically combined result thin flapping line similar crosssection hovering insect wing note staticarrays define sdf map speeds simulation eliminates allocations grid cell time step multithreading gpu backends waterlily kernelabstractionsjl multithread cpu run gpu backends implementation method speed documented parcfd abstract summary single macro waterlilyloop nearly loop code base kernelabstractactions generate optimized code speed pronounce simulations benchmarked xspeed intel core ih x processor x speed nvidia geforce gtx ti gpu card note multithreading requires starting julia threads argument multithreading section manual running julia multiple threads kernelabstractions detect multithread loops automatically taylorgreenvortex examples running gpu requires initializing simulation memory gpu care move data cpu visualization jelly fish trivial example finally kernelabstractions incur cpu allocations loop simstep completely allocating reason speed improves size simulation increases development goals immerse obstacles defined d meshes using geometrybasics multicpugpu simulations add freesurface physics volumefluid levelset add external potentialflow domain boundary conditions suggestions help please raise issue github