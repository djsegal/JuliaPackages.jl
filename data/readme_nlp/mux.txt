mux pkg add mux mux julia web servic closur mux allow defin server term high modular compos compon call middlewar aim simpl complex server simpl throw exampl use mux app test mux default page respond hello world page probabl respond boo respond page user user req hello req param user mux notfound serv test run demo enter success form julia repl code display hello world localhost page hello user name app macro allow server redefin fli test edit hello text evalu don evalut serv test note serv test launch asynchron task prevent julia termin repl julia wait task finish wait serv test technic overview mux heart control flow librari core understand code exact understand achiev concept core mux middlewar familiar web librari languag stack branch app middlewar app endpoint simpli function request produc respons function myapp req return hello req param user principl love user user name ideal app function doesn simpli handl chain don pars raw http data exampl solv via middlewar user cooki function usernam app req req param user req cooki user return app req alter respons don middlewar simpli take request modifi appropri data avail exampl pretti trivial equal middlewar handl authent encrypt process cooki file upload provid default header call version app usernam myapp req generat version app usernam support built function app req return usernam myapp req lot middlewar lot appx function reason mux function instead creat app mux usernam myapp return function equival app didn write hand stack suppos lot middlewar pars http request dict properti check user authent catch error etc mux handl pass multipl argument mux todict auth catch error app mux return app request respons function time wrap middlewar provid todict chang incom request alter outgo respons neat compos middlewar middlewar mymidwar stack todict auth catch error mux mymidwar app effect equival mux call creat middlewar function independ mean abl factor servic readabl exampl mux provid mux default middlewar actual stack use tool stack self flatten stack stack stack stack stack etc branch mux goe middlewar express rout decis middlewar key branch function take predic appli incom request endpoint run request predic return true exampl mux branch rand respond hello respond exampl ignor request simpli return true time test repl call mux branch rand respond hello respond request ignor anyway doesn matter set defin function wrap branch probabl app branch rand app util despit endpoint middlewar mux common write hand exampl respond creat function endpoint equal function status creat middlewar appli status respons mux found endpoint defin notfound found mux status respond declar approach exampl respond creat endpoint respond regardless request rout path app branch app request locat match path page path app branch app request locat exact match path serv static file packag pleas assetregistri regist asset directori deprec mux pkgfile middlewar includ mux default serv static file asset directori julia packag pkg packag integr websocket easili integr http server websocket server mux defin app regular http request handl websocket connect complet exampl use mux http server app mux default page respond hello world mux notfound websocket server app mux wdefault rout websocket exampl mux wclose mux notfound function websocket exampl sock socket eof sock str string read sock println receiv data str write sock hey receiv str serv server port serv final run client option process import mux websocket websocket localhost write hello world data read println stderr receiv string data run program hello world messag server send messag client use mux product mux perfect useabl product environ recommend mux default stack product applic basiccatch middlewar includ dump potenti sensit stacktrac client error probabl serv client altern mux prod default stack avail product applic mux default stderrcatch middlewar instead dump error stderr