muxjl pkg add mux muxjl julia web services closure mux allows define servers terms highly modular composable components called middleware aim simple complex servers simple throw example using mux app test mux defaults page respond hhello worldh page probability respond hbooh respond h h page useruser req hhello req params user h mux notfound serve test run demo entering successive forms julia repl code displays hello world localhost page hello user name app macro allows server redefined fly test editing hello text reevaluating reevalute servetest note servetest launches asynchronous task prevent julia terminating repl julia wait task finish waitservetest technical overview muxjl heart control flow library core understand code exactly understand achieves concepts core muxjl middleware familiar web libraries languages stacking branching apps middleware app endpoint simply function request produces response function myapp req return hhello req params user h principle hi lovely user user name ideally app function simply handled chain parse raw http data example solve via middleware user cookie function username app req req params user req cookies user return app req alter response middleware simply takes request modifies appropriately data available example pretty trivial equally middleware handles authentication encryption processes cookies file uploads provides default headers call version app username myapp req generate version app username support built function app req return username myapp req lot middleware lot appx functions reason mux function instead creates app mux username myapp returns function equivalent app write hand stacking suppose lots middleware parse http request dict properties check user authentication catch errors etc mux handles pass multiple arguments mux todict auth catcherrors app mux returns app request response function time wrapped middlewares provided todict changes incoming request alter outgoing response neat compose middleware middleware mymidware stack todict auth catcherrors mux mymidware app effectively equivalent mux call creating middleware function independent means able factor service readable example mux provides muxdefault middleware actually stack useful tools stack selfflattening stack stack stack stack stack etc branching muxjl goes middleware expresses routing decisions middleware key branch function takes predicate apply incoming request endpoint run request predicate returns true example mux branch rand respond hello respond hi example ignore request simply return true time test repl calling mux branch rand respond hello respond hi request ignored anyway matter set define function wrap branch probability app branch rand app utilities despite endpoints middleware mux common write hand example respondhi creates function hi endpoint equally functions status create middleware applies status response muxjl found endpoint defined notfound found mux status respond declarative approach example respond creates endpoint responds regardless request routepath app branches app request location matches path pagepath app branches app request location exactly matches path serving static files package please assetregistryjl register assets directory deprecated muxpkgfiles middleware included muxdefaults serves static files assets directory julia package pkgpackage integrate websocket easily integrate http server websocket server mux define apps regular http requests handle websocket connections complete example using mux http server app mux defaults page respond hhello worldh mux notfound websocket server app mux wdefaults route wsio websocketexample mux wclose mux notfound function websocketexample sock socket str sock println received data str send sock hey received str serve servers port serve finally run client optionally process import mux websockets websockets wslocalhostwsio ws send ws hello world data receive ws println stderr ws received data run programs hello world messages server sends message client using mux production mux perfectly useable production environment recommended muxdefaults stack production application basiccatch middleware includes dump potentially sensitive stacktraces client error probably serving clients alternative muxproddefaults stack available production applications muxdefaults stderrcatch middleware instead dumps errors stderr