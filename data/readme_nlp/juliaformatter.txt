juliaformatterjl widthsensitive formatter julia code inspired gofmt refmt black installation add juliaformatter quick start julia using juliaformatter recursively formats julia files current directory julia format formats individual file julia formatfile foojl formats string contents julia file julia formattext str check docs description formatter options github actions formatting options indent default spaces indentation margin default maximum length line code exceeding margin formatted multiple lines alwaysforin default false true replaced loop condition example transformed set leave choice user whitespacetypedefs default false true whitespace added type definitions true prefer union union whitespaceopsinindices default false true whitespace added binary operations indices true prefer arr arr additionally colon involved parenthesis added lhs rhs example arri ii i instead arriiii removeextranewlines default false true superfluous newlines removed example module function foo return rewritten module function foo return modules type code block allowed single newline prior initial final piece code importtousing default false true import expressions rewritten using expressions following import import rewritten using using using using exceptions found import expression using context following example rewritten import base threads th import following context rewritten change future patch import pipetofunctioncall default false true rewritten shorttolongfunctiondef default false transforms short function definition arg arg body function definition short function definition exceeds maximum margin function arg arg body longtoshortfunctiondef default false transforms function definition function arg arg body short function definition short function definition exceed maximum margin arg arg body alwaysusereturn default false true return prepended expression applicable function definitions macro definitions blocks example function foo expr expr function foo expr return expr whitespaceinkwargs default true true keyword arguments surrounded whitespace exception lhs whitespaceinkwargs false surrounded whitespace logic intervention following parse treated equal binary operation change semantics code disallowed annotateuntypedfieldswithany default true annotates fields type definitions type annotation provided struct arg struct arg formatdocstrings default false format code docstrings options code source markdown formatted commonmark alongside julia code align default false custom alignment documentation conditionaltoif default false conditional exceeds maximum margin converts equivalent block else normalizelineendings default auto unix normalize windows normalize auto automatically choose based line common file trailingcomma default true true false trailing commas added final argument nesting occurs closing punctuation appears line example following nested assuming defaultstyle funccall arg arg arg funccall arg arg arg trailing comma added arg final argument set true trailing comma added nesting set false trailing comma removed nesting set trailing comma appears original source trailingzero default true add trailing zero joinlinesbasedonsource default false true lines joined appear original source file function foo arg arg arg body false maximum margin length function fooarg arg arg formatted function foo arg arg arg body true arg arg arg remain separate lines fit line maximum margin indentation dependent style function foo arg arg arg exceptions body elseif body else body formatted following option set true body elseif body else body warning maximum margin applies option set true indentsubmodule default false set true submodule appearing file indented module module module formatted module module module separatekwargswithsemicolon default false set true keyword arguments function call separated semicolon surroundwhereoptypeparameters default true surrounds type parameters curly brackets set true brackets function func tparam function func tparam forinreplacement alwaysforin true replace default instead replacement options formatted alwaysforin true forinreplacement file options overwrite default true true file reformatted overwriting existing file false formatted version foojl written verbose default false true details related formatting file printed stdout formatmarkdown default false true markdown files formatted julia code blocks formatted addition markdown normalized ignore array paths files directories glob wildcards formatted editor plugins integration editors atom emacs vscode vim