nonsmoothsolversjl package implements algorithms nonsmooth optimization implementations follow closely related papers tuning parameters advisable methods comments suggestions welcome touch via mail issue setup follows julia repl default environment using pkg pkg update pkg registry add registryspec url pkg add nonsmoothsolvers solvers generic solvers implemented nonsmooth bfgs nonsmooth optimization via quasinewton methods adrian lewis michael overton vu bundle vualgorithm convex minimization mifflin sagastizabal mathematical programming gradient sampling gradient sampling methods nonsmooth optimization burke curtis lewis overton sims usage defining nonsmooth optimization implemented following nonsmoothproblemsjl interface using nonsmoothproblems using nonsmoothsolvers struct simplel nonsmoothproblemsnonsmoothpb simplel norm felt simplel sign isdifferentiable simplel length filter x x note nonsmoothproblemsjl implements nonsmooth maximum quadratics maximum eigenvalue running solver pb simplel rand optparams optimizerparams iterationslimit tracelength gradientsampling xfinalgs tr optimize pb optparams nsbfgs xfinalnsbfgs tr optimize pb optparams vubundle xfinalvu tr optimize pb optparams historical maxquad numerical optimisation bgls nd edition pb maxquadbgls zeros maximum quadratics pb maxquadal zeros input parameters output values optimize function accepts convergence checkers possibly defined user policies data recording displaying iterations output final generated optimization procedure trace object object vector optimizationstate immutable object holds relevant indicators values iteration time fx normstep user add custom indicators passing callback function optimize getx optimizer optimizerstate deepcopy os optimstateextensions ordereddict symbol function getx nsbfgs xfinalnsbfgs tr optimize pb optparams optimstateextensions notes method calls roughly timed using timeroutputs functionality calling timeroutputsenabledebugtimingsnonsmoothproblems timeroutputsdisabledebugtimingsnonsmoothproblems efficiency nsbfgs profiling nsbfgs time spent line search calling oracles felt isdifferentiable faster compute separately julia using nonsmoothproblems nonsmoothsolvers statprofilerhtml pb maxquadbglsfloat nsbfgsfloat function toto nssinitialstate ones pb nssupdateiterate pb toto profilehtml toto efficiency gradient sampling method gradientsampling time spent resolution qp notes progress particular bugs algorithms todo list list features optim