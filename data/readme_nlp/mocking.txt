mocking allows julia function calls temporarily overloaded purpose testing contents usage gotchas overhead usage suppose wrote function randdev unix writing tests function randdev integer devurandom fp reverse read fp deterministic behaviour function makes hard test write tests dealing deterministic properties function using test using randdev result randdev test eltype result uint test length result create test output function reversed mockingjl provides mock macro allows package developers temporarily overload specific calls package example apply mock call randdev using mocking function randdev integer mock devurandom fp reverse read fp call site marked mockable write testcase allows demonstrate reversing behaviour randdev function using mocking using test using randdev mocking activate call activate executing apply result randdev test eltype result uint test length result produces string sequential uint values data unsafestring pointer convert arrayuint generate alternative method call wish mock patch patch fn function abstractstring fn iobuffer data apply patch modify behaviour test apply patch test randdev convert arrayuint outside scope patched environment mock essentially op test randdev convert arrayuint gotchas remember mock desired call sites run mockingactivate executing apply calls overhead mock macro conditional check mockingactivated allows patches utilized mocking activated default mocking starts disabled result conditional optimized allowing zerooverhead activated via mockingactivate mockingactivated function redefined causing methods dependent mock recompiled license mockingjl provided mit expat licens