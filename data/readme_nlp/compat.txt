compat package julia compat package designed ease interoperability versions julia language particular impossible write code julia master branch julia versions impossible write code generate deprecation warning julia version compat package provides macro syntax backwardscompatible primarily intended julia packages maintain crossversion compatibility usage compat julia package add dependency package using package manager pkg add compat add version specifier line compat compat section projecttoml file package directory version latter minimum version supports features list note compat v requires julia v features backported compat v feature list release branch require backported features specify correct compatibility projecttoml feature compat v backported v compat feature originally added compat v forget declare compatibility v compat unless removed compat v v probably minimize dependency conflicts packages recommended packages allow appropriate v v versions compatjl projecttoml except rare packages support v v version compatjl package shortly module statement include line using compat add compat compat syntax wherever syntax differs julia master development version julia compat syntax usually syntax julia master slightly syntax please check list specific syntax compatibility features development versions julia added released compatjl features considered experimental relevant julia version released features changed removed incrementing major version compatjl match changes julia supported features splat equivalent args args compat note historical reasons compat julia v exports splat usage discouraged compatassumeeffects setting ex overrides compiler effect modeling method definition ex julia versions support feature julia version support pass ex compat div lcm gcd rem mod promote heterogenous datesperiod bdfead compat stack combines collection slices array compat keepat removes items indices returns modified source compat compat supports property descturing assignment syntax allequal opposite allunique compat eachsplit iteratively performing splitstr compat ismutabletypetype check type mutable field mutable datatype removed compat converttypeperiod compoundperiod convert compoundperiod specified period type compat compatinline compatnoinline function callsites encourage compiler inline function calls julia versions support features otherwise effects compat compatinline compatnoinline function body hint compiler inlineability defined function compat compatconstprop aggressive ex compatconstprop none ex allow control constantpropagation inference julia versions support feature otherwise pass ex compat returnsvalue returns value arguments compat function currentexceptions added current exception stack julia lacks runtime support execption stacks return recent exception compat argument methods findmax domain argmax domain corresponding min versions compat isunordered returns true value normally unordered nan missing compat accepts tuples compat coalesce shortcircuiting versions coalesce compat developer tips rules compatjl avoid breaking user code whenever especially released version syntax recent julia version preferred compat syntax examples include syntax meaning previous versions julia functions removed base julia alternative easily implemented previous versions solutions forcing feature qualified name compatjl compatname reimplementing features julia version re adding additional compatibility code package contrib script base julia repository useful extracting version git commit sha example git repository julia run bash contrib abfedddebbaeda dev prints version corresponding specified commit form aaannnn test julia version version aaannnn tagging correct minimum version compat note specify correct minimum version compat compat section projecttoml list