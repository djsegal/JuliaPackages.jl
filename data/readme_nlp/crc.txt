crc julia module calculating cyclic redundancy checksums crcs algorithms reveng catalogue supported algorithms easily added calculation direct via cached tables arrays bytes accepted data handle arbitrary sized sequences previous versions complicated code little practical gain removed please contact add performance crcjl faster crc checksums using heavily optimized implementation zlib via crcjl package using hardwareaccelerated crcc checksums crcc standard library examples calculate crc sum julia using crc julia crc crccrc anonymous function julia crc xcbf function crc constructs lookup table cached returned function crc reusing crc calculate series crcs efficient starting crc time returned function called file handle calling crc file return checksum file program example inside program look using crc crc crccrc create crc function function somefunc crcdata crc function created times force direct tableless calculation julia crccrc tablesnotables xcbf define algorithm example crc catalogued width polyx initx refinfalse refoutfalse xoroutx checkx namecrc julia mycrc spec x x false false x x crcspecuint x x false false x x julia assert crcmycrccheck mycrccheck course defined julia crc crcspecuint x x false false x x installation julia downloaded julia install package using julia pkgaddcrc versions remove command line functionality update argparse dependency add projecttoml update julia drop julia support switch libz fixes julia travis coverage changed handler method string converted bytes instead treated file path break existing code current handler sorry hope users particularly users calling method initial releas