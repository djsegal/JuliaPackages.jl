fenicsjl finite element pde solving julia fenicsjl wrapper fenics library finite element discretizations pdes wrapper includes installation direct access fenics via conda installation alternatively current fenics installation lowlevel development api provides functionality directly dealing library little bit easier requires knowledge fenics interfaces provided main functions attributes instructions add ones found level api usage differentialequations example seen solving heat equation adaptive timestepping various gistsjupyter notebooks created provide brief overview overall functionality differences pythonic fenics julian wrapper differentialequationsjl ecosystem paraview visualize various results fenics installation instructions wrapper system providing fenics installation exists follow steps add pycall correct python environment corresponding fenics simply add fenicsjl using pkgaddfenics alternatively install docker run following command docker run ti cmhyettjuliafenics inside julia accessed calling julia inside julia environment simply add fenics pkgaddfenics dependencies handled docker image wrapper originally started via google summer code program help chris rackauckas bart janssens continued via gsoc help chris rackauckas timo betcke tutorial demonstration user code solve poisson equation dirichlet conditions directly mirrors tutorials fenics provides using fenics mesh unitsquaremesh functionspace mesh ud expression degree trialfunction bc dirichletbc ud onboundary testfunction constant dot grad grad dx dx fefunction lvsolve bc linear variational solver errornorm ud norm l getarray returns array stiffness matrix getarray returns array solution values vtkfile file poissonsolutionpvd vtkfile pyobject exports solution vtkfile plot solution relies fenics backend plotting import file paraview import pyplot plotting pyplot imported fenics plot fenics plot mesh examples directory exampl