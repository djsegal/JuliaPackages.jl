cartesian fast multidimension algorithm julia languag packag provid macro current appear perform implement numer multidimension algorithm julia news cartesian base backward compat use pre releas version julia recommend use version base access use base cartesian recommend base document purpos packag provid base compat implement cartesian julia implement releas packag unfortun chang featur includ name convent variabl direct name break code sorri pin packag releas chang code legaci document follow document appli packag seri julia document use recent version packag caution practic cartesian effect introduc separ dialect julia reason hope main languag eventu support function happen obsolet meantim packag appear power write effici multidimension algorithm instal instal packag manag pkg add cartesian principl usag macro packag nloop begin nref generat follow code size size size basic syntax nloop follow argument integ variabl specifi loop argument symbol prefix iter variabl variabl generat third argument specifi rang iter variabl variabl symbol size dim flexibl anonym function express syntax describ argument bodi loop appear begin addit featur describ nref follow similar pattern generat nref practic read left nloop nloop expr size left rang wherea nref nref array come develop code cartesian debug easier generat code via unexport underscor function variant julia cartesian nref expr escap similar cartesian nloop addit describ suppli dimension function argument macro dimension integ write function intend multipl dimens hard code fortun straightforward eval construct eval begin function laplacian array similar nloop begin generat version laplacian dimens somewhat awkward generat truli arbitrari dimens function use wrapper track compil version function dimension data type mysum defin dict bool global mysum function mysum stridedarray def mysum defin typeof fals def quot function mysum stridedarray zero nloop begin nref eval current modul mysum defin typeof true mysum addit version perform price check dictionari anonym function express macro argument singl power featur cartesian abil suppli anonym function express macro consid implement laplacian function mention discret laplacian dimension array calcul lap obvious issu formula handl edg exist illustr anonym function express easi avoid deal handl proper write code size size lap note rang size omit index cartesian written follow nloop size begin nref lap note rang argument suppli anonym function key anonym function evalu macro run whatev symbol appear variabl anonym function loop dimension effect express inlin henc generat exact code extra runtim overhead bit extra syntax associ express express translat suppos set variabl main indic offset indic express nref translat notat mimic subscript notat latex latex cur brace sub express exampl generat complet exampl implement imfilt machineri implement simpl multidimension function imfilt comput correl similar convolut array filter kernel kern requir kernel odd valu size dimens size suppos function padarray pad width edg dimens use whatev boundari condit user desir complet implement imfilt eval begin function imfilt array kern array boundaryarg div size kern size kern error kernel odd size dimens apad padarray boundaryarg similar nloop begin comput filter valu tmp zero nloop kern begin tmp nref apad nref kern store result nref tmp note line tmp nref apad nref kern translat tmp apad kern note assign requir parenthesi nref otherwis express tmp pass final argument nref macro complet exampl implement laplacian implement laplacian imfilt wast don corner grid edg center consequ write consider faster algorithm advantag imfilt grow rapid dimension implement algorithm illustr flexibl anonym function rang express key macro nexpr dimens generat follow code replic boundari condit handl edg grace function laplacian array similar size size tmp zero tmp size tmp size tmp tmp tmp generat term indic unalt anonym function shift macro nexpr document generat express complet implement dimens eval begin function laplacian array similar nloop begin tmp zero shift nexpr begin tmp size nref nref shift nexpr begin tmp nref nref subtract center store result nref tmp nref reduct broadcast cartesian make easi implement reduct broadcast use pre post express syntax describ suppos implement function comput maximum user suppli dimens array maxoverdim comput max dimens allow user choos dimens arbitrarili dimension array hand write code follow function maxoverdim abstractmatrix region szout size size szout region output unit size chosen dimens fill typemin szout array julia infer dimension szout szout szout szout size szout size szout inbound max code generat arbitrari dimens follow eval begin function maxoverdim abstractarray region szout size szout region fill typemin szout array cartesian nextract szout szout cartesian nloop szout begin inbound cartesian nref max cartesian nref cartesian nref slight concern condit express insid inner loop influenc perform fortun impact modest author test percent reason execut function branch resolv consequ cpu learn predict accuraci branch comput time domin cach miss generat travers array macro refer core macro nloop itersym rangeexpr bodyexpr nloop itersym rangeexpr preexpr bodyexpr nloop itersym rangeexpr preexpr postexpr bodyexpr generat nest loop use itersym prefix iter variabl rangeexpr anonym function express simpl symbol var rang size var dimens option provid pre post express execut respect bodi loop exampl nloop min begin nref generat size min size min post express suppli pre express use parenthesi semicolon suppli multi statement express nref indexexpr generat express indexexpr iter symbol prefix anonym function express nexpr expr generat express expr anonym function express laplacian exampl nextract esym isym tupl vector length nextract generat express therebi extract element separ variabl nall expr nall generat express conveni bound check nlinear indexexpr array subarray nlinear indexexpr generat array linear index equival nref indexexpr conveni implement algorithm use linear index particular use anonym function express evalu compil time exampl use exampl imag suppos iter pixel perform calcul base color dimens array particular function rgb generat rgb color pixel array follow size img ndim img colordim img determin dimens img repres color iter color separ strd stride img nextract data img nloop begin nlinear rgbval rgb strd strd appear difficult generat code use nref express evalu compil time addit macro ntupl itersym ntupl expr generat tupl symbol prefix anonym function express nrefshift generat legaci nref accept anonym function express nlookup generat easili achiev nref indexedvari generat express indexedvari generat forcartesian itersym bodyexpr macro collect outlier term function forcartesian begin println generat follow output simpl exampl forcartesian generat block code isempti prod length one int isdon fals isdon println whatev code insid loop idim idim idim idim idim idim idim isdon overhead direct loop approach nloop algorithm shouldn matter advantag dimension compil time perform improv subarray julia current lack effici linear index generic subarray consequ cartesian index perform address element subarray simpl algorithm sum perform boost immens implement subarray use cartesian exampl easi boost scale fold