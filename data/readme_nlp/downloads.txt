downloads downloads package provides single function download provides crossplatform multiprotocol process download functionality implemented libcurl libcurl multihandle callback api julian api downloadurl blocks task occurs yields julia scheduler allowing arbitrarily tasks download urls concurrently efficiently julia package standard library included julia package julia api public api downloads consists functions types download download file url erroring downloaded request request url returning response object indicating success defaultdownloader set default downloader object response type capturing status metadata request requesterror error type thrown download request error downloader object encapsulating shared resources downloading download download url output tempname method headers none timeout none progress none verbose false debug none downloader default output url abstractstring output unionabstractstring abstractcmd io method abstractstring headers unionabstractvector abstractdict timeout real progress totalinteger integer verbose bool debug type message downloader downloader download file url saving output specified temporary path output io handle body response streamed handle handle returned output command command run output sent stdin downloader keyword argument provided downloader object resources connections shared downloads performed downloader cleaned automatically object garbage collected downloads performed grace period downloader info configuration usage headers keyword argument provided vector dictionary elements pairs strings pairs passed headers downloading urls protocols supports http timeout keyword argument specifies timeout download resolution milliseconds default timeout set explicitly requested passing timeout value inf progress keyword argument provided callback function called whenever updates size status ongoing download callback integer arguments total total size download bytes bytes downloaded note total starts zero remains zero server indication total size download contentlength header happen behaved progress callback handle total size zero gracefully verbose option set true libcurl implement download functionality print debugging information stderr debug option set function accepting string arguments verbose option ignored instead data printed stderr passed debug callback type message arguments type argument indicates event occurred text header header data data ssl data ssl data message argument description debug event request request url input none output none method input output head headers none timeout none progress none verbose false debug none throw true downloader default unionresponse requesterror url abstractstring input unionabstractstring abstractcmd io output unionabstractstring abstractcmd io method abstractstring headers unionabstractvector abstractdict timeout real progress dltotal dlnow ultotal ulnow verbose bool debug type message throw bool downloader downloader request url returning response object capturing status headers information response body response written output specified discarded otherwise http requests input stream request otherwise output stream request neither head request protocols appropriate default methods based combination input output requested following options download function input allows providing request body provided default request progress callback taking integers upload download progress throw controls throw return requesterror request error note unlike download throws error requested url downloaded indicated xx status code request returns response object matter status code response error getting response requesterror thrown returned defaultdownloader defaultdownloader downloader none downloader downloader set default downloader argument provided resets default downloader fresh created time default downloader response struct response proto string url string status int message string headers vectorpairstringstring response type capturing properties successful response request object following fields proto protocol response url url ultimately requested following redirects status status code response indicating success failure etc message textual message describing nature response headers headers returned response meaning availability responses depends protocol request protocols including http ftp xx status code indicates successful response responses protocols support headers headers vector empty http include status message status code message empty requesterror struct requesterror errorexception url string code int message string response response requesterror type capturing properties failed response request exception object url original url requested redirects code libcurl error code protocol error occurred message libcurl error message indicating wrong response response object capturing response info available requesterror type thrown download request successful protocollevel error indicated status code xx range code zero message field empty string request api throws requesterror libcurl error code zero included response object status zero empty message situations curllevel error thrown due protocol error inner outer code message downloader downloader grace real downloader objects perform individual download operations connections name lookups resources shared downloader connections resources cleaned configurable grace period default downloaded garbage collected whichever comes grace period set zero resources cleaned immediately soon ongoing downloads progress grace period set inf resources cleaned downloader garbage collected mutual tls using downloads using downloads curl downloader download easyhook easy info begin curl setopt easy curl curloptsslkey clientkey curl setopt easy curl curloptsslcert clientcrt downloader downloader downloader easyhook easyhook download url downloader clientkey clientcrt private public keys client currently default downloader hook putting downloadseasyhook example using downloads downloads curl download downloads easyhook easy info begin curl setopt easy curl curloptsslkey clientkey curl setopt easy curl curloptsslcert clientcrt download url difference usage windows macos linux