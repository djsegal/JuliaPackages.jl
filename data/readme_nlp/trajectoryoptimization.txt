trajectoryoptim librari solver trajectori optim written julia current follow method implement common interfac altro augment lagrangian trajectori optim fast solver constrain trajectori optim formul mdps featur nonlinear cost function includ minimum time nonlinear input constraint infeas initi squar root method improv numer condit activ set project method solut polish direct colloc dircol interfac nonlinear program solver ipopt snopt via mathoptinterfac method util julia extens autodifferenti capabl via forwarddiff user specifi deriv dynam cost constraint function dynam comput direct urdf file via rigidbodydynam instal instal trajectoryoptim run follow julia repl pkg add trajectoryoptim quick start run simpl exampl constrain block move use trajectoryoptim linearalgebra function dynam inplac dynam control model model dynam creat model model model creat discret model integr initi goal knot time step rand initi control trajectori diagon diagon diagon obj lqrobject object bnd boundconstraint max min control limit goal goal constraint termin constraint constraint constraint defin constraint time step constraint bnd constraint goal prob model obj constraint constraint construct initi control prob initi control solver solv prob altrosolveropt float exampl notebook detail exampl found includ exampl iro paper document detail document get start packag found