threejs linux osx windows code coverage julia module render graphical objects especially objects using threejs abstraction webgl outputs patchwork elems js custom elements meant help packages composed render d output click examples code draw ijulia escher embed d graphics dependencies webgl interact gpu browser modern browser supports webgl check link output package installation pkg add threejs development running pkgbuildthreejs fetches installs js webcomponents automatically install threejsjl using pkgaddthreejs clone threejsjl pkgclone otherwise webcomponents installed manually assetsbowercomponents allow simultaneous development repositories documentation api documentation found ijulia ijulia notebooks using threejs set including static files note restarting kernel using threejs please reload page deleting cell using threejs escher adding pushwindowassetsthreejsthreejs escher code static files set d graphics escher web servers web server serve asset files found assets directory adding html import jshtml file assetsbowercomponentsjs set adding following line html file link rel import href assetsbowercomponentsjsjshtml create scene rendering js elements tags nested js tag using initscene function outer div required created using outerdiv function code snippet scene initialized using threejs outerdiv initscene default scene px px created support change added soon creating meshes js meshes objects drawn scene require geometry material created meshes decide properties position object drawn mesh created using mesh function taking coordinates arguments geometry material element nested inside mesh geometries geometries hold details describe d model shapes display threejsjl provides support render following geometry primitives boxes boxwidth height depth spheres sphereradius pyramids pyramidbase height cylinders cylindertopradius bottomradius height tori torusradius tuberadius parametric surfaces parametricslices stacks xrange yrange function dodecahedron dodecahedronradius icosahedron icosahedronradius octahedron octahedronradius tetrahedron tetrahedronradius planes planewidth height functions return appropriate geometry tags nested inside mesh material render custom geometries geometry function able render custom geometries specified vertices materials materials decides model responds light color properties material material tag created using material function properties passed dict function available properties color css color value lambert basic phong normal texture texture mapping texture url image mapped texture applied set texture wireframe true false hidden true false transparent true false set true proper rendering transparent objects opacity opaque helper functions key value pairs srcpropertiesjl putting mesh box material dict basic color red create cube size red color basic material lines lines drawn specifying vertices line joined lines strip pieces kinds decide vertices joined strip lines join vertices pieces joins third fourth colors vertices lines specified lines meshes properties mesh position rotation meshes child scene line materials lines require material decide properties line linematerial function specify properties line linematerial child line element drawing lines line function draw lines line linematerial dict color red mesh grids drawing mesh grids achieved using meshlines function creates set lines form grid assigns colors vertices based values looking d grid grid function creates grid xy plane rotated required cameras d scene properly displayed camera view threejsjl provides support perspective camera view using camera function sets position camera properties near plane plane fov field view degrees aspect ratio camera tag child scene lights threejsjl provides support kinds lighting ambient ambientlightcolor pointlight color intensity distance spot spotlight color intensity distance angle exponent shadow tags child scene controls default threejs adds trackballcontrols scene drawn interact scene using trackpad mouse rotate pan zoom interactivity reactive functionality provided escher create signals d graphic elements produced create graphics interacted using ui elements sliders try launching escher serve escher installed examples directory heading localhostboxjl browser box width depth height rotation axes set box update accordingly currently functionality ijulia notebooks hopefully fixed soon interact ijulia notebooks animations animations using reactive signals examplesrotatingcubejl example implemented escher running escher server directory heading localhostrotatingcubejl cube rotating note adding objects scene force redraw scene resetting camera example using threejs outerdiv initscene mesh box material dict lambert color red pointlight camera running ijulia notebook draw red cube illuminated light corner escher script run following code result using threejs using compat main window begin push window assets threejs threejs vbox title threejs outerdiv initscene mesh threejs box material dict lambert color red pointlight camera