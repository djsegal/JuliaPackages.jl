gpijl gpijl lightweight julia wrapper gaspi conforming gpi library installation installed julia please follow instructions operating system gpijl julia v gpi linux systems gpijl restricted platform gpijl registered package install default environment execute following command julia using pkg pkgaddgpijl alternatively clone repository instantiate installing dependencies git clone julia projectgpijl using pkg pkginstantiate decide latter approach cloned gpijl directory following add projectpathgpijl julia command julia project using gpi starting julia gpijl folder usage getting started start running gaspi functions executing using gpi gaspi functions prefixed gaspi example check version currently gpi library start julia repl paste following snippet julia using gpi julia version ref cfloat base refvalue float f julia gaspiversion version gaspisuccess gaspireturnt julia println gpi library version version gpi library version parallel execution run gpi program parallel start helper script gaspirun requires machinefile names nodes rank started gpi docs simple test create machinefile start ranks current node running hostname head machinefile convenience gpijl provides function gaspirun start gaspirun using gpijlljlprovided executable gpijl provides example files examples folder check started example run helloworldjl example parallel execute following commands gpijl directory julia using gpi gaspirun machinefile julia pwd exampleshelloworldjl julia twice command executes gaspirun command command executed parallel pwd ensure gaspirun picks file issues relying module command start parallel process using gpi gaspirun cluster paths set using module command provided lmod issues handle gaspi program run properly boil tell gpi ssh set communication nodes login shell purpose means module command manually relevant changes environment variables directly bashrc file workaround repository provides auxiliary utilities storeenvjl launcherjl help run gpipowered julia program cluster environment modules setup storing entire environment reloading folder start gaspiparallelized julia program execute storeenvjl script julia pathstoreenvjl storeenvjl script record current environment variables store file gaspijlenvtoml run julia program parallel launcherjl script using following command julia using gpi gaspirun machinefile julia abspathlauncherjl pwd gaspijlenvtoml pathjuliaprogramjl machinefile normal machinefile nodes start gaspi rank abspathlauncherjl absolute path launcher script care recreating environment using information toml file pwdgaspijlenvtoml finally provide path julia programm optional command line arguments final path julia program relative absolute launcher current directory configuration using system library using gpijl specify path gaspi library default gpijl precompiled gpi library available gpijlljl package recommended performance critical usage development switch library installed system execute julia using gpi gpiusesystemlibrarypath path path shared gpi library switch using jllprovided library execute julia using gpi gpiusejlllibrary switching library restart julia changes effect generating bindings using systemprovided gpi library api provided jllprovided library regenerate bindings file libgpijl tell gpijl package enter bindings directory run following command julia project using pkg pkginstantiate required gpiincludedirpathgpiinclude julia project generatorjl create libgpijl file current directory switch custom bindings file execute julia using gpi gpiusesystembindingspathlibgpijl path path custom bindings file switch using jllcompatible library execute julia using gpi gpiusejllbindings switching bindings restart julia changes effect authors gpijl maintained michael schlottkelakemper university stuttgart germany gpi library developed fraunhofer institute industrial mathematics itwm license contributing gpijl published mit license happy accept contributions preferably form pr gpi published gnu public license vers