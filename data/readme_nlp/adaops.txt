adaops implementation adaops adaptive online packingguided search online pomdp solver solve defined pomdpsjl generative interface paper adaops published neurips trying package require documentation please file issue installation press key enter package management mode julia execute following code pkg add pomdps pkg registry add pkg add adaops usage using pomdps pomdpmodels pomdpsimulators adaops pomdp tigerpomdp solver adaopssolver bounds independentbounds planner solve solver pomdp stepthrough pomdp planner maxsteps println println action println observation received minimal examples implementations notebook pomdpsjl generative docs solver options solver options found adaopssolver docstring accessed using julia built documentation system directly solver source code option docstring set keyword argument adaopssolver constructor belief packing delta packing observation branches generated belief nodes l distance delta merged adaptive particle filter core idea adaptive particle filter change particles adaptively particles estimate belief grid grid split space multidimensional bins kldsampling estimate particle according bins occupied function converting multidimensional vector implemented baseconverttypesvector float dimension resulted vector define stategrid discretize split space stategrid consist vector cutpoints dimension cutpoints divide space tiles dimension intervals constitute grid intervals leftclosed endpoints cutpoints exception left interval example stategrid defined stategriddimcutpoints dimcutpoints dimcutpoints lie tile tiles bins occupied estimate particles using kldsampling maxoccupiedbins maxoccupiedbins maximum bins occupied belief normally exactly grid size domains roomba accessible corresponding bins occupied minoccupiedbins minoccupiedbins minimum bins occupied belief normally default belief occupying minoccupiedbins tiles estimated mmin particles increasing minoccupiedbins indicates belief occupy bins estimated amount particles mmin mmin minimum particles approximating beliefs mmax mmax maximum particles approximating belief normally mmax set kldsampling determines particles kldsampling disabled gridstategrid mmax sampled resampling zeta zeta target error estimating belief spcifically kld sampling calculate particles zeta targe kullbackleibler divergence estimated belief true belief adaops zeta automatically adjusted according minimum bins occupied minimum particles kldsampling method suggests exactly mmin bounds dependent bounds bound passed adaopssolver function form lowerbound upperbound pomdp wpfbelief objects adaopsboundsobjobject pomdppomdp wpfbelief maxdepthint boundswarningbool function implemented independent bounds recommended specify bounds independentbounds object adaopssolver bounds independentbounds lower upper lower upper function objects lower bound calculated default policy accomplished using porollout forollout rolloutestimator depth details please refer basicpomcp note mixing rollout structs package basicpomcp prefix struct name module name lower upper bounds initialized value estimations using fovalue povalue fovalue support offline mdp solver policy povalue support offline pomdp solver policy lower upper function handle arguments pomdp object wpfbelief access particles wpfbelief particles access corresponding weights particles wpfbelief weights abstractparticlebelief apis supported wpfbelief details found solver source code object passed adaopsbound pomdppomdp wpfbelief maxdepthint called checkterminal consistencyfixthresh keyword arguments independentbounds add robustness independentbounds docstring info using rolloutbase bounds specify maxdepth keyword argument set max depth rollout example babypomdp pomdpmodels bounds setup look using pomdpmodels using pomdppolicies using basicpomcp alwaysfeed functionpolicy true lower forollout alwaysfeed function upper pomdp babypomdp wpfbelief true particles particles hungry return pomdp rhungry baby hungry time magically stays forever else return baby magically stays forever solver adaopssolver bounds independentbounds lower upper visualization dtreesjl visualize search tree example using pomdps pomdpmodels pomdpmodeltools dtrees adaops pomdp tigerpomdp solver adaopssolver bounds treeininfo true planner solve solver pomdp b initialstate pomdp info actioninfo planner b inchrome dtree info tree initexpand create interactive tree analysis utilities namely infoanalysis histanalysis provided getting sense algorithm infoanalysis takes infomation returned actioninfoplanner b visualize tree treeininfo option stats nodes expanded total explorations average observation branches histanalysis takes hist historyrecorder simulator similar stats infoanalysis form figures noted historyrecoder store tree single step makes memoryintensive example shown follows using pomdps adaops rocksample pomdpsimulators particlefilters pomdpmodeltools rocksamplepomdp b initialstate s rand b bound adaops independentbounds forollout rsexitsolver fovalue rsmdpsolver checkterminal true consistencyfixthresh e solver adaopssolver bounds bound delta mmin mmax treeininfo true numb adaops solve solver info actioninfo adaops b infoanalysis info numparticles time hist simulate historyrecorder maxsteps adaops sirparticlefilter numparticles b s histanalysis hist undiscountedreward hist reference inproceedingswuadaptive titleadaptive online packingguided search pomdps authorwu chenyang yang guoyu zhang zongzhang yu yang li dong liu wulong booktitlethirtyfifth conference neural information processing system