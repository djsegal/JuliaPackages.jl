fastdmtransform purejulia implementation fast dm transform accurate efficient algorithm detection radio bursts unknown dispersion measure single dish telescopes interferometers zackay et al implementation details follow python implementation provided vincent morello pyfdmt implemented nice recursive version improvement confusing nested loops source paper code interface abstractions julian heavily optimize performance includes transforming recursion parallel sums code heavy available avx extensions using loopvectorizationjl performance reasonably dependent cpu intel cpus avx benchmarks try fastdmtransform synthetic pulse dm frequency channels ms time samples benchmarks run machine gb ram ix canonical matlab tested original source author octave nonfree software octave timeit run times tic toc averaged s pyfdmt timeit pyfdmt transform pulse e ms ms loop mean std dev runs loop fastdmtransformjl julia benchmark fdmt pulse e benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms ms gc mean ms histogram frequency time ms memory estimate mib allocs estimate dedispjl optimized brute force approach plan plandedisp range start stop length range start stop length e julia benchmark dedisp dedisp pulseplan benchmarktools trial sample evaluation single result gc evaluate memory estimate mib allocations fdmt fast gpuaccelerated bruteforce version reasonably close output cuda zeros plan cu plan pulse cu pulse julia benchmark cuda sync dedisp outputpulseplan benchmarktools trial samples evaluation range min max ms ms gc min max time median ms gc median time mean ms ms gc mean ms histogram frequency time ms memory estimate kib allocs estimate implementation fastest cpu version lot x faster reference python implementation cover dm chunk ms x faster realtim