libceed efficient extensible discretization summary purpose libceed provides fast algebra elementbased discretizations designed performance portability runtime flexibility clean embedding level libraries applications offers c interface bindings fortran python julia rust focus finite elements approach algebraic applicable discretizations factored form explained user manual api implementation portion documentation challenges methods global sparse matrix representation linear operator respect flops evaluation memory transfer matvec methods require format represents linear linear operator sparse matrix goal libceed propose format supporting implementations data structures enable efficient operator evaluation variety computational device types cpus gpus etc operator description based algebraically factored form easy incorporate wide variety applications significant refactoring discretization infrastructure repository ceed software suite collection software benchmarks miniapps libraries apis efficient exascale discretizations based finite element spectral element methods information source code availability ceed research supported exascale computing project scsc collaborative effort department energy organizations office science national nuclear security administration responsible planning preparation capable exascale ecosystem including software applications hardware advanced system engineering testbed platforms support nation exascale computing imperative details ceed api user manual gettingstartedinclusionmarker building ceed library libceed c library required dependencies fortran python julia rust interfaces built using optimization flags opt o marchskylakeavx ffpcontractfast optimization flags languages fortran makefile variable set testing examples library attempts automatically detect support avx instruction set using gccstyle compiler options host support manually specified via avx avx compiler support gccstyle options cross compiling etc enable cuda support add cudadiroptcuda appropriate directory invocation enable hip support add rocmdiroptrocm appropriate directory store arguments defaults future invocations configure cudadirusrlocalcuda rocmdiroptrocm opt o marchznver stores variables webassembly libceed built wasm using emscripten example build library run standalone wasm executable using emmake buildexsurfacewasm wasmer buildexsurfacewasm additional language interfaces fortran interface built alongside library automatically python users install using pip install libceed clone repository via pip install julia users install using julia julia pkg add libceed libceedjl documentation information rust users include libceed via cargotoml dependencies libceed cargo documentation details testing test suite produces tap output run test using prove tool distributed perl recommended prove backends multiple supported backends selected runtime examples ceed resource backend deterministic capable cpu native cpuselfrefserial serial reference implementation cpuselfrefblocked blocked reference implementation cpuselfoptserial serial optimized implementation cpuselfoptblocked blocked optimized implementation cpuselfavxserial serial avx implementation cpuselfavxblocked blocked avx implementation cpu valgrind cpuselfmemcheck memcheck backends undefined value checks cpu libxsmm cpuselfxsmmserial serial libxsmm implementation cpuselfxsmmblocked blocked libxsmm implementation cuda native gpucudaref reference pure cuda kernels gpucudashared optimized pure cuda kernels using shared memory gpucudagen optimized pure cuda kernels using code generation hip native gpuhipref reference pure hip kernels gpuhipshared optimized pure hip kernels using shared memory gpuhipgen optimized pure hip kernels using code generation magma gpucudamagma cuda magma kernels gpucudamagmadet cuda magma kernels gpuhipmagma hip magma kernels gpuhipmagmadet hip magma kernels occa occa selects backend based available occa modes cpuselfocca occa backend serial cpu kernels cpuopenmpocca occa backend openmp kernels cpudpcppocca occa backend cpc kernels gpucudaocca occa backend cuda kernels gpuhipocca occa backend hip kernels cpuselfserial backends process element time intended meshes elements cpuselfblocked backends process blocked batches eight interlaced elements intended meshes elements cpuselfref backends written pure provide basic functionality cpuselfopt backends written pure partial vectors improve performance cpuselfavx backends rely avx instructions provide vectorized cpu performance cpuselfmemcheck backends rely valgrind memcheck tool help verify user qfunctions undefined values run code valgrind memcheck backends valgrind buildex ceed cpuselfrefmemcheck development debugging version valgrind headers required backend backend run serial blocked mode defaults running serial mode cpuselfmemcheck selected runtime cpuselfxsmm backends rely libxsmm package provide vectorized cpu performance linking mkl libxsmm desired makefile detecting mklroot linking libceed mkl forced setting environment variable mkl gpucuda backends provide gpu performance strictly using cuda gpuhip backends provide gpu performance strictly using hip based gpucuda backends rocm version required gpumagma backends rely magma package enable magma backends environment variable magmadir toplevel magma directory magma library located magmadirlib default magmadir set magma build magma backends magma installation located elsewhere create link magma libceed parent directory set magmadir proper location magma version required currently magma library installation built cuda hip corresponding set libceed backends gpucudamagma gpuhipmagma automatically built version magma library found magmadir users specify device cuda hip magma backends adding deviceid resource name example gpucudagendeviceid occa backends rely occa package provide cross platform performance enable occa backend environment variable occadir toplevel occa directory occa library located occadirlib default occadir set occa occa version required users pass specific occa device properties setting ceed resource example occamodecudadeviceid bitbit reproducibility applications libceed backends deterministic operations atomicadd increased performance backends capable generating reproducible results proper compilation options highlighted list examples libceed comes examples usage ranging standalone codes examplesceed directory examples based external packages mfem petsc nek nek v required build examples set mfemdir petscdir nekkdir variables run cd examples runningexamplesinclusionmarker libceed examples cpu gpu cd ceed exvolume ceed cpuself exvolume ceed gpucuda exsurface ceed cpuself exsurface ceed gpucuda cd mfemlibceed examples cpu gpu cd mfem bp ceed cpuself vis bp ceed gpucuda vis cd neklibceed examples cpu gpu cd nek bp ceed cpuself bp ceed gpucuda cd petsclibceed examples cpu gpu cd petsc bps bp ceed cpuself bps bp ceed gpucuda bps bp ceed cpuself bps bp ceed gpucuda bps bp ceed cpuself bps bp ceed gpucuda cd cd petsc bpsraw bp ceed cpuself bpsraw bp ceed gpucuda bpsraw bp ceed cpuself bpsraw bp ceed gpucuda bpsraw bp ceed cpuself bpsraw bp ceed gpucuda cd cd petsc bpssphere bp ceed cpuself bpssphere bp ceed gpucuda bpssphere bp ceed cpuself bpssphere bp ceed gpucuda bpssphere bp ceed cpuself bpssphere bp ceed gpucuda cd cd petsc cube ceed cpuself degree cube ceed gpucuda degree sphere ceed cpuself degree dmrefine sphere ceed gpucuda degree dmrefine cd fluids navierstokes ceed cpuself degree navierstokes ceed gpucuda degree cd cd solids elasticity ceed cpuself mesh exo file degree nu linear forcing mms elasticity ceed gpucuda mesh exo file degree nu linear forcing mms cd example shown sample meshes exo file found code assumes gpucapable machine cuda backends enabled depending available backends ceed resource specifiers provided ceed option command line arguments found examplespetsc benchmarksmarker benchmarks sequence benchmarks enabled backends run using benchmarks results benchmarks stored inside benchmarks directory viewed using commands requires python matplotlib cd benchmarks python petscbpsbp outputtxt python petscbpsbp outputtxt using benchmarks target runs comprehensive set benchmarks time run subsets benchmarks run using scripts benchmarks folder details benchmarks benchmarks file install install libceed run install prefixpathinstalldir creating packages install prefixusr destdirpackagingpath build install separate steps run forinstall prefixpathinstalldir install prefixpathinstalldir usual variables cc cflags optimization flags languages set using likes opto marchnative static build static libraries libceed install libceed python run pip install libceed desired setuptools options user pkgconfig addition library header libceed provides pkgconfig file easily compile link example prefix standard location set environment variable pkgconfigpath cc pkgconfig cflags libs ceed myapp myapp build myapp libceed source installed directories build systems support pkgconfig contact reach libceed team emailing ceedusersllnlgov leaving comment issue tracker cite utilize libceed please cite article libceedjosspaper author jed brown ahmad abdelfattah valeria barra natalie beams jean sylvain camier veselin dobrev yohann dudouit leila ghaffari tzanio kolev david medina pazner thilina ratnayaka jeremy thompson stan tomov title libceed fast algebra elementbased discretizations journal journal source software publisher journal volume pages doi joss archival copy libceed user manual maintained zenodo cite user manual misc libceedusermanual author abdelfattah ahmad barra valeria beams natalie brown jed camier jeansylvain dobrev veselin dudouit yohann ghaffari leila kolev tzanio medina david pazner ratnayaka thilina shakeri rezgar thompson jeremy tomov stanimire wright iii james title libceed user manual month dec publisher zenodo version doi zenodo libceed python interface please cite inproceedings libceedpaperprocscipy author aleria arra ed rown eremy hompson ohann udouit title ighperformance operator evaluations ease lib ython interface booktitle roceedings th ython cience onference pages editor eghann garwal hris alloway illon iederhut avid hupe doi majoradec bibtex entries references found docbibreferencesbib file copyright following copyright applies file ceed software suite unless otherwise stated file copyright lawrence livermore national security llc ceed contributors rights reserved files license notice detail