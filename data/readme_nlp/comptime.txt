comptime goal library allow simplified style writing generated functions inspired zig comptime features started minimal example theory core feature comptime ability write functions optionally code prerun compile time central tenet comptime allow write otherwise able write semantics perspective function partially evaluated compile time enable functions normally type checkable type checked typechecking standpoint win course function partially evaluated compile time enables sorts speedups function declared ctenable modes compiletime mode compiles function specially compiletime arguments function runs function hood generated functions passes compiletime parameters types compilation cached normal generated function compiletime parameters resolved using constantpropagation runtime mode compiletime computation runs function macros comptimejl syntax mode outputs syntax compiled arguments type useful debugging arguments available compile time precisely type arguments clause example suppose type static vectors written simplicity wrapper type normal vectors struct svector vector function svector vector length function svector vector assert length function svector vector undef write following function unroll loop add static vectors ctenable function add v svector v svector vout svector ct ct ctctrl vout ct v ct v ct vout roughly equivalent following code function add v svector v svector comptime add v v function generatecode typeof add typesvector typesvector expr block vout svector vector undef begin code expr block push code args vout v v code vout function comptime typeof add v svector v svector generated generatecode add svector svector else runtime add v v function runtime typeof add v svector v svector vout svector vout v v vout note optionally generated function compiler allowed choose runtime version dynamic circumstances wish allow compiler choice instead write ctenable optional false function add v svector v svector vout svector ct ct ctctrl vout ct v ct v ct vout create optional generated funct