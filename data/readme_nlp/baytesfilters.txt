baytesfilters baytesfiltersjl library perform particle filtering parameter modelwrapper struct modelwrappersjl introduction start creating univariate normal mixture model via modelwrappersjl using modelwrappers baytesfilters using distributions random unpack rng random mersennetwister parameter latent data latent rand rng categorical data rand rng normal iter iter iter latent create modelwrapper struct assuming latent latentinit rand rng categorical myparameter param normal normal param gamma gamma param dirichlet latent param categorical base oneto latentinit mymodel modelwrapper myparameter myobjective objective mymodel data baytesfiltersjl target parameter model equal dimension provided data create particlefilter struct assign model dynamics dispatching model following function function baytesfilters dynamics objective objectivemodelwrapperbasemodel unpack model data objective unpack model val initiallatent categorical transitionlatent particles iter initiallatent transitiondata particles iter normal particlesiter particlesiter return markov initiallatent transitionlatent transitiondata dynamics myobjective model dynamics consist initial transition latent dynamics data dynamics note return struct markov flexible remarks transitionlatentparticles iter function particle trajectory particles current iteration iter mixture markov structure latent process define markov dependencies transitionlatent particles iter normal mean view particlesiter iter transitiondataparticles iter function particle trajectory particles current iteration iter note iteration transitionlatent transitiondata access underlying data easy adjust filter dependency instance autoregressive data structure look transitiondata particles iter normal mean view particlesiter iter mean view dataiter iter estimating particle trajectories create particlefilter estimate latent trajectory model parameter note target parameter via particlefilter slightly adjust objective mydynamics dynamics myobjective myobjective objective mymodel data latent myfilter particlefilter rng myobjective proposal steps exactly baytesmcmcjl proposerng algorithm objective proposerng algorithm mode data depending check baytesmcmcjl clarification difference functions run filter estimate latent data sequence val diagnostics propose rng mydynamics myfilter myobjective using plots plot latent label true plot val latent label filter estimate close nice output estimate model evidence luckily discrete mixture model evaluate evidence analytically relatively easy check estimate analtyical solution define analytical form mixture likelihood using logexpfunctions function objective objectivemodelwrapperbasemodel namedtuple unpack model data objective unpack model val nstates length dynamicslatent categorical dynamicsdata normal iter iter iter base oneto nstates ll time base oneto length data ll logsumexp logpdf dynamicslatent iter logpdf dynamicsdataiter datatime iter base oneto nstates return ll compare filter run analytical likelihood diagnostics base objective myobjective val output statistics stored diagnostics struct resampling steps stepahead prediction latent observed data inference likelihood estimate run filter times check variance estimate configuration configure particlefilter particlefilterdefault struct pfdefault particlefilterdefault weighting bootstrap weighting methods particles resampling systematic resampling methods particle trajectories referencing marginal referencing type particle iteration conditional ancestral marginal implementation coverage coverage nparticlesndata threshold ess threshold resampling particle trajectories myfilter particlefilter rng myobjective pfdefault variety methods particlefilterdefault fields check options code base adjust default arguments scaling particle filter implementation scales linearly particles data verify comparing time spent proposal steps coverage ratios using benchmarktools pfdefault particlefilterdefault coverage pfdefault particlefilterdefault coverage myfilter particlefilter rng myobjective pfdefault myfilter particlefilter rng myobjective pfdefault btime propose rng mydynamics myfilter myobjective ms allocations kib btime propose rng mydynamics myfilter myobjective ms allocations kib moreover dynamicsobjective function efficiently implemented allocations proposal step forward package highly experimental suggestions comments welcom