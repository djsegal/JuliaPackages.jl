sentry integration package allows production environment advantage sentry error monitoring release tracking transaction tracing platform package internally synchronous sentry api equivalent pythonjavascript apis featured includes basics exception reporting tags transactionspan traces usage start app initialise sentry environment variable sentrydsn set default sentryintegration init otherwise pass dsn variable sentryintegration init optional assign tags relevant environment example sentryintegration settag customer customer sentryintegration settag release string version sentryintegration settag environment env runenv unset messages sent via captureexception capturemessage level apptasks catch unhandled exceptions try coreloop catch exc captureexception exc maybe rethrow plain info capturemessage boring info message warning sentry capturemessage external rest request received api apiname unknown warn error sentry capturemessage error warning sentry including attachment capturemessage noticed errors field gql rest return warn attachments command response message tags attachments specdesc specification structure scriptdesc specific msg spec failed specdesc scriptdesc jsondata querystring drop tables capturemessage msg warn attachments jsondata querystring tags specdesc scriptdesc graph gtag transactionspan tracing recent feature sentry trace execution query multiple services frontend authentication layer backend server backend database create contextmanager style returnvaluefrominner sentryintegration starttransaction name name overall transaction op span name handle web request tags url someurl inner function logical operation captured name op time recorded span sentry somefunc sentryintegration starttransaction op database query nested span transaction assign reuse traceid parentspanid passed service frontend track transactions multiple services call starttransaction regular function call contextmanager style able preserve transaction pass spawned tasks call finishtransaction transaction manually tpersist starttransaction name myapp op lifetime traceid passedintraceid async seperatetask client details tpersist inside seperatetask function separatetask client details makes task automatically nest future transactions underneath passed transaction context manager sentryintegration settasktransaction starttransaction t sentryintegration finishtransact