dance build status introduction julia excellent backend language read powering numerous artificial intelligence data applications integrating results web output job data scientist complicated aim dance facilitate process allowing outputreception dict symbol dataframe json api javascript string html page simply adding rendering function parameter building route list advantage powerful frontend javascript frameworks easy collaboration frontend developers dance starting base project web layer addition existing project installation package installed julia package manager pressing pkg repl mode pkg add dance using pkg functions julia using pkg pkg add dance compatibility julia upward setup invoke terminal directory using dance startproject project name create directory specified project name parameter copy files files include dancejl main entry dance called terminal routesjl main routes list file settingsglobaljl main project settings htmlbasehtml html outputs default template htmlfaviconico favicon html pages depending environment files included settings directory overwrite globaljl add parameters settings files accessible project reading mainsettings dict env avoided due potential leakage security issues recommended secretsjl file included globaljl stored version control sensitive authentication data overwrittenmoved routesjl moverename update settingsroutesfilename accordingly htmlbasehtml moverename update settingshtmlbasefilename accordingly htmlfaviconico moverename update settingshtmlfaviconname accordingly recommended overwrite apiaccesscontrolalloworigin settings parameter limit api access hosts routes routes included main routes file routesjl default follows route path unionregex string action function method string post endpoint epjson htmlfile string configuration settings htmlbasefilename html path function mandatory kwargs overwrite default values note path fixed string contain pcre regex containing parameter names adding slash tp path optional incoming requests pending slash stripped please common parameters json endpoints html endpoints common parameter routes routes share path prefix avoid repeating kwarg parameters routes route follows routegroup routeprefix dict method endpoint ephtml path value action dict path key value action dict htmlfile htmlfile specifying common kwargs routes question routes passed array named tuples common kwargs set named tuple keys overwrite static files dance serve static files recommended method specify static directory structure parsed building routes directory contents example contents files directory accessible static path staticdir static files files add individually passing path parameter relative project root directory instance imagejpg files relative project root route filesimagejpg outputfileasstring method endpoint epstatic launching calling julia dancejl start dance web server press ctrl stop calling julia dancejl repl enter repl mode project environment loaded press ctrl exit module loading custom startup script note launching dance add current dir subdirectories module import path staticdir defined routesjl ignored procedure described step dancejl file require ignoring directories startup performance optimisation please populate ignoredirs step outlined step dancejl file custom scripts added run dance launches serverrepl security incoming http headers blindly trust incoming http request route functions receive incoming http headers recommend verify host forwardedhost values included default optimise performance sample code implement extra security function validhost bool allowedhosts arraystring main settings serverhost validforwardedhost bool false validhost bool false allowedhosts push allowedhosts localhost main settings serverport idx item enumerate allowedhosts allowedhostsidx item string main settings serverport pair requestheaders pair host validhost pair allowedhosts pair forwardedhost validforwardedhost pair allowedhosts return validhost validforwardedhost running dance multiprocessing environment dance run multiprocess environment via julia distributed package particularly useful planning using cluster machines implement load balancer please feature website expect heavy traffic output functions resource intensive else performance degrade spawning data transfer processes expensive operations edit upper dancejl indicated fil