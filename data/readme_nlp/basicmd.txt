basicmd collection basic routines molecular dynamics simulations written julia include eulermaruyama em random walk metropolis rwm metropolis adjusted langevin mala brnger brooks karplus bbk grnbechjensen farago gjf aboba baoab hamiltonianhybrid monte carlo hmc intended collection scale code development larger handled lammps openmm overview module significantly reorganized advantage multiple dispatch versions available deprecatedjl module oldbasicmd module added command vxyz pkg add basicmd package previously named jubasicmd renamed conform julia package naming recommendations sampling sampler initialized sampler rwm t sampler hmc gradv t nt depending type sampler chosen information define sampler obtained repl calling sampler name hmc sampler constructed sampling performed sampletrajectory sampletrajectory former performs transformation input latter records values trajectory sampletrajectory sampler optionsopts xvals sampletrajectoryx sampler metropolis methods latter form returns running acceptance rate xvals avals sampletrajectoryx sampler sampleobservables routine included allow computation observables directly avoids storing entire trajectory computationally expensive set observables f f etc storing tuple obsff computed directly command obsvals sampleobservablesx sampler obs otpionaly mdoptions argument mdoptions iterations performed determined optional options argument takes argument data structure formatted using mdoptions function opts mdoptionsnitersnitersnsaveitersnsaveiters niters iterations performed sampler nsaveiters frequency samples saved nsaveiters iteration saved nsaveitersniters final iteration saved methods versions integrator integrator integrator routine performs transformation starting position momentum appropriate integrator copies initial condition integrator accepts optional argument returntrajectorytruefalse return entire time series data constraints experimental relevant integrating discretized sdes sampling means constraining flow introduced using constraints structure examples examples example codes include d harmonic potential d double potential d muller potential examples assume active environment includes basicmd package caveats code assumes space vector valued dimensional initial functions formatted appropriately x mass matrix inertial langevin integrators hamiltonian methods diagonal provided scalar isotropic vector anisotropic restriction performance purposes bbk currently implemented slightly version langevin sde abobabaoab bbk requires inverting mass matrix abobabaoab require square root gjf implemented coordinates opposed coordinates consequently mass term appears slightly literature sample associated boltzmann distribution sde trajectories reaching goals include ghmc samplers add package registry acknowledgements supported national science foundation grant dms references free energy computations mathematical perspective lelivre rousset stoltz molecular dynamics leimkuhler matthews simple effective verlettype algorithm simulating langevin dynamics grnbechjesnen farago