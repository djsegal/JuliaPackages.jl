lazyjsonjl lazyjson interface reading json data julia programs useful please report experiance discourse thread lazyjson provides direct access values stored json text standard julia interfaces abstractstring abstractvector abstractdict function lazyjsonvalue constructs object representing value json text lazyjson value jsontext abstractstring unionbool lazyjson lazyjson string lazyjson array lazyjson object lazyjson base lazyjson string abstractstring lazyjson array abstractvector lazyjson object abstractdictabstractstring julia lazyjson value foo bar null lazyjson object entries foo bar julia foo element lazyjson array julia foo julia typeof bar fields json objects accessed using getproperty syntax julia lazyjson value foo bar null getproperty true julia foo element lazyjson array json objects converted struct types julia struct int int julia struct line julia struct arrow label string segments vectorline dashed bool julia convert arrow lazyjson value label hello segments dashed false arrow hello line line line false compatibility json interfaces parse function lazyjsonparse provided alias lazyjsonvalue julia lazyjson parse foo bar null julia foo lazyness lazyjson lazy sense assumes input formed json text try detect type json syntax error security concern json data unknown providence probably validated lazyjson lazy sense process json text values requested abstractvector abstractdict interfaces lazyjsonvaluejsontext parsing immediately returns thin wrapper object foo calls abstractdict foo parses foo field foo calls getindexabstractarray continues paring fourth item array results memory allocation compared lazy parsers jsonjl string read ecnormaljson julia function json json parse json shapes scope enum julia time allocations mib availability zone lazyjsonjl julia function json lazyjson parse json shapes scope enum julia time allocations bytes availability zone lazyjson abstractstring implementations lazy text lazyjson parsed int float form numeric operation textual context parsed lazyjson value jsontext html img width width height height likewise content lazyjsonstring interpreted accessed lazyjsonstring containing complex utf escape sequences compared utf basestring strings characters comparison terminate unescaping lazyjson performance considerations lazyjsonarray performance lazyjsonarray track indices items array access scans values array reaches th value fast access single item near array alternative transforming lazyjsonarray basearray scan entire array allocate memory item fast access multiple items near start array random access items array convert basearray lazyjsonvaluejsontextfoobaranarray convertvector access items array sequentially iteration interface efficient incrementing index inefficient lengthlazyjsonarray inefficient scan array lazyjson value jsontext foo bar anarray println map length println lazyjsonobject performance performance considerations lazyjsonobject similar described lazyjsonarray lazyjsonobject hash table keys objectkey access scans keys object match accessing keys object keys efficient accessing keys object keys effiecient random acess keys object convert basedict lazyjson value jsontext foo bar anobjectwithmanykeys convert dict lengthlazyjsonobject inefficient scan object access key value pairs sequentially iteration interface efficient lazyjson value jsontext foo bar anobjectwithmanykeys println filter contains jpg longlistofkeys println convert dict longlistofkeys println lazyjson performance whenever lazyjson numeric operation parsed string form int float using numetic value performance penalty string parsed numeric value times convert normal base type lazyjson value jsontext foo origin width addition operation origin height draw data limit lazyjson value jsontext foo limit limit re parsed time operation evaluated limit convert int lazyjson value jsontext foo limit lazyjson value jsontext foo ammounts total sum iteration efficient parsed struct foo int int lazyjson value jsontext foo foo converted int assignment struct fields lazyjson value jsontext foo values ints convert vectorint manual conversion implementation values represented reference json text string byte index value text lazyjsonvaluejsontext function simply returns lazyjsonvalue object jsontext string foo bar lazyjsonarray lazyjson lazyjsonstring lazyjsonobject lazyjson parse translate values concrete julia string array dict objects instead provides interface methods conform protocols base abstractstring abstractvector abstractdict methods interpret json text fly parse return requested values json texts lazyjson process json files fit available ram using mmap interface using mmap hugefilethatwontfitinramjson string mmap mmap lazyjson value foo bar operating stytem lazily load chunks file ram reach field bar opject foo benchmarks workloads lazyness makes lazyjson faster memory intensive json parsers parse entire json text allocate tree collection value objects testbenchmarkjl test mb aws api definition json file compare performance vs jsonjl accessing value close start file lazy parser magnitude faster jsonjl values near file lazy parser times faster test run jit warmup times measurement julia version dev jsonjl master tue feb bceffaaafee access value close start lazyjsonjl allocations kib jsonjl allocations gib gc time access values close lazyjsonjl allocations kib jsonjl allocations gib gc time note recently jsonjl taking tests hampered deprecation iobuffermaxsizeinteger testbenchmarkgeojl test mb geojson file compare performance vs jsonjl test extracts country name near middle file test checks country outline polygon expected coordinates country name lazyjsonjl allocations kib jsonjl allocations mib gc time map data lazyjsonjl allocations kib jsonjl allocations mib gc time todo lazyer parser looses format validation consider recovering code validation code srcoldlazyjsonjl references lazy json parser rfc