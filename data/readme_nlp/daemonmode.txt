daemonmode introduction julia language time compiler implies loading package takes considerable time called plot true time required time options using package revise disadvantage julia create scripts package solves inspired daemonmode emacs package serverclient model allows julia run scripts lot faster package maintained memory runs run script times introduced juliacon package mentioned juliacon thank fredrik ekre juliacon talk faster scripts julia daemonmodejl package advantages juliacon talk juliacon online usage server responsible running julia scripts julia startup file using daemonmode serve client sends server file run returns output obtained startupfile slow option unless juliaconfigstartupjl file run julia startup file using daemonmode runargs program jl arguments alias alias juliaclient julia startupfile using daemonmode runargs instead julia programjl juliaclient programjl output running faster process process following client process sends program programjl required arguments server server receives program name run returning output client process client process receives output console example suppose script testjl using csv dataframes fname args df csv file fname dataframe println df normal method time julia testjl tspcsv dataframe row float float real ms user ms sys ms loading csv dataframes reading simple file takes computer time run program using daemonmode julia startupfile using daemonmode serve time juliaclient testjl tspcsv dataframesdataframe row float float real ms user ms sys ms time thereafter lot faster accept donations time juliaclient testjl tspcsv dataframesdataframe row float float real ms user ms sys ms reduction s s run original time change file performance maintained testjl using csv dataframes fname args df csv file fname dataframe println df time juliaclient testjl tspcsv dataframesdataframe row float float real ms user ms sys ms evaluate expression server alternatively string passed server parsed evaluated global scope using daemonmode runexpr using csv dataframes fname tspcsv runexpr begin df csvfile fname dataframe printlndf dataframes dataframe row float float avoid conflict names function names conflict variable function name files constants avoid daemonmode run files module avoid conflict names files conflictjl conflictjl daemonmode client run running clients time previous versions server run task client v daemonmode able run client parallel run server function parameter asyncfalse previous behaviour julia using daemonmode serveasyncfalse optional parameter asynctrue server server run client task julia using daemonmode serveasynctrue command allow run clients parallel cpu threads julia auto using daemonmode serveasynctrue auto allows daemonmode processors computer async mode advantages run client waiting previous close process close daemon wait clients finished threads indicated run clients cpus increasing time client process processing time divided clients main drawback logs console send task automatically reload modified packages daemonmode execute codes directly passed server time codes updated date results sometimes developing packages time reloaded modified revise daemonmode purpose add using revise starting daemonmode server julia startup file using revise using daemonmode serve features performance packages maintained memory especially common external packages csvjl dataframesjl code run using current directory directory robust file error server continues scripts stops current accepts parameters run complete file specific code run multiple modules avoid conflicts names error stack run directly logging output console nicely return error occurs multithreading version fix redirect tasks allow function exit client update isinteractive run run interactive compatible revise apply eval function required running mlj code todo automatically detect daemon previously run simplify usage remote version server computer client automatic installation required packag