condit optim julia code licens build status code coverag write perform julia code refer code perform bound check version assum valid indic avoid bound check heavili optim version requir loop vector mayoptim packag variant avail singl version code document usag mayoptim summar follow short exampl use mayoptim function foo type abstractarray real optimlevel zero loop comput sum valu mayb inbound eachindex loop fill sum valu mayb vector eachindex return note loop preced macro mayb inbound mayb vector argument paramet express block code argument simpl loop mayb vector macro compil express block code determin type paramet debug debug refer code perform bound check vector inbound code assum valid indic avoid bound check vector code assum valid indic requir vector block code provid mayb inbound macro compil bound check vector debug bound check inbound specifi inbound vector inbound specifi vector mayb inbound avoid bound check block code provid mayb vector macro compil bound check vector debug bound check inbound inbound specifi bound check vector vector inbound simd specifi henc version foo call decid julia method dispatch accord abstract type debug inbound vector export mayoptim call foo debug execut version check bound vector call foo inbound execut version avoid bound check loop final call foo vector execut version avoid bound check loop vector loop easi provid default version user bother choos version instanc assum check code issu index vector make differ write foo abstractarray real foo inbound decid chang default optim level instal julia hit key switch packag manag repl pkg prompt type add https github com emmt mayoptim packag