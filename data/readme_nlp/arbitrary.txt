arbitrary generate arbitrary sequences testing overview arbitrary package allows testing properties hold data types example bigint implementation ensure addition multiplication commutative associative additive multiplicative identity etc ideal world compiler prove properties hold verify humanwritten proof real world test properties hold arbitrary bigint basic api consists function arbitrarytype returns iterator produces values type iterator produce simple special values produce difficult values via random generator expect testing properties arbitrary values property tests example using base iterators using test using arbitrary generate arbitrary values xs collect arbitrary bigint ys collect arbitrary bigint zs collect arbitrary bigint test commutativity test xs ys ys xs test associativity test xs ys zs xs ys zs random values package takes motivation haskell testquickcheckarbitrary type class arbitrary values similar random values main difference control probability values produced ensures corner receive proper testing example default random generator int values creates uniform distribution unlikely obtain integers defining arbitrary type arbitrary package contains methods various built types extend type provide respective method arbitrary function example using base iterators using arbitrary define type struct define method arbitraryarbitrary function arbitrary arbitrary type ast arbstate xs iterators stateful arbitrary ast flatten generate popfirst xs popfirst xs arbitrary method generates particular values presumably simple existing arbitrary methods type generate generate wrapper type creates iterator function function baseiteratorsflatten concatenates iterators type baseiteratorsstateful captures iterators mutable objects julia collect arbitrary int uint element arrayint int int int int int int int int int int int int int int int int int int int int generated arbitrary start special values specified explicitly continue arbitrary int values run example output using random generator seed explicitly pass seed calling arbitraryint uint ensure reproducible arbitrary sequ