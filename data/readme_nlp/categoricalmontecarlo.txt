categoricalmontecarlo installation using pkg pkg add categoricalmontecarlo description independent categorical distributions unique probability mass vector p distribution sum joint distribution formed product marginals assume categories shared marginals reindexing constructing sparse representation based original probability mass vectors unify categories sum joint distribution multinomial unless trivial distribution identical closedform expression sum joint distribution monte carlo simulation provides mechanism computation package provides facilities monte carlo simulation based collections probability mass vectors corresponds possibly necessarily independent categorical distribution advanced strategies utilized maximize performance computations including fastestjulia categorical sampling marsagliadiscretesamplers comparison publicly visible packages addition partitioning strategies favor memory locality cache performance despite randomaccess nature writes inherent monte carlo simulation partitioning strategies utilized enable threadbased parallelism iteration space arbitrarydimensional input arrays furthermore reduction supported via interface familiar julia users dimsvararginteger keyword enables additional increases efficiency user wish simulate distribution bearing indices input array dimensions summed usage help demonstrate example consider equallyweighted coin labeled equallyweighted sided die labeled equallyweighted sixsided die labeled consider scenario flips coin rolls sided die rolls sixsided die distribution counts labels julia using categoricalmontecarlo julia coin julia die julia die julia sample coin die die matrixint julia using montecarlosummary julia mean mcse std th th mcsummary sample coin die die matrix mean mcse std th th future description normalizers weight vectorprobability vector