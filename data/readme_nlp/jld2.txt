jld documentation tests codecov downloads jld saves loads julia data structures format comprising subset hdf dependency hdf library jld able read hdf files created hdf implementations supporting hdf file format specification version libhdf similarly able read files jld produces jld provides read support files created jld package reading writing data save load functions save load functions provided fileio provide mechanism read write data jld file functions write using fileio using jld fileio determine correct package automatically save function accepts abstractdict yielding keyvalue pairs key string representing name dataset value represents contents using fileio save examplejld dict hello world foo bar save function accept dataset names contents arguments save examplejld hello world foo bar using save function file extension jld extension jld currently belongs previous jld package called filename argument load function loads datasets file dict load examplejld dictstringhello world foo bar called single dataset name load returns contents dataset file load examplejld hello world called multiple dataset names load returns contents datasets tuple load examplejld hello foo world bar interface jldsave jldsave makes julia keyword argument syntax store files leveraging parser rely macros interface imported using jld write using jld simplest jldsave examplejld equivalent jldsave examplejld assign names selectively jldsave examplejld confuse future self else jldsave examplejld examples filename compression default io types set via positional arguments jldopenexamplejld compress true largearray zeros file interface interact jld files using file interface jldopen function accepts file name argument specifying file using jld jldopen examplejld read default jldopen examplejld readwrite failing file exists jldopen examplejld readwrite overwriting existing file jldopen examplejld readwrite preserving contents existing file creating file data written file using write name data name data read file using read name name file remember call close jldopen accepts function argument permitting block syntax jldopen examplejld file file bigdata randn construct jld file useful organizing data create explicitly jldopen examplejld file mygroup jld file mygroup mygroup mystuff implicitly saving variable name containing slashes path delimiters jldopen examplejld file file mygroupmystuff saveexamplejld mygroupmystuff examples yield structure repl julia file jldopenexamplejld jldfile userssimonexamplejld read mygroup mystuff similarly access directly jldopen examplejld file assert file mygroup mystuff using slashes path delimiters assert load examplejld mygroupmystuff custom serialization api simple enable custom serialization type define type aserialization contains fields store define jldwriteastype aserialization internally jld call baseconvert writing loading extend type struct int struct aserialization vectorint jld writeas type aserialization base convert typeaserialization aserialization base convert type aserialization overload baseconvert define jld wconvert typeaserialization aserialization jld rconvert type aserialization instead particularly relevant types involved struct float jld writeas type float jld wconvert typefloat jld rconvert type float arr rand jldsave testjld arr example jld converts array structs plain vectorfloat prior storing disk unpackjl api additionally loading unpackjl package unpack pack macros quickly save load data file interface example using unpack file jldopen examplejld rand pack file equivalent file file unpack file equivalent file file filegroup file mygroup accessed file interface struct