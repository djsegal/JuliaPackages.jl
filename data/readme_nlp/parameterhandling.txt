parameterhandling parameterhandlingjl experiment handling constrained tunable parameters models parameter handling consider following common situation function buildmodel maps collection parameters model model buildmodel model example function maps input sort prediction model essentially wish somehow learn tune infer parameters plugging buildmodel function call learn tries various parameter values clever determines ones loss minimisation objective maximisation approximate bayesian inference etc worry exactly procedure learn employs try parameter values suppose learn interface learned learn buildmodel initial consider actually goes writing buildmodel written format learn handle popular approach require vector real concrete subtype real code required model inside buildmodel onerous write read modify fairly straightforward bit subtle worth dwelling little sake concreteness suppose adopt convention vectorfloat linear regression assume comprises length weight vector scalar bias function build model function buildmodel vectorfloat return dot easiest ideal solution consider function look namedtuple fields function buildmodel namedtuple return dot version function easier read moreover inspect values time precisely chop vector moreover probable latter approach bugprone suppose reason refactored code element elements code depended original incorrect fail silently namedtuple approach simply issue granted simple easy situations considerably difficult example suppose instead pretty neural network gaussian process ode model couple distinct parameters perspective writing complicated models implementing terms single vector parameters manually chopped extremely bad design choice simply scale single vector float extremely convenient writing purpose optimisers approximate inference routines optimjl advancedhmcjl obvious examples parameterhandlingjl approach parameterhandlingjl aims worlds providing tools required automate transformation structured representation nested namedtuple dict etc flattened vectorfloat model parameters function flatten eats structured representation parameters returning flattened representation function converts flattened structured representation flatten implemented recursively baseimplementations call flatten expect occassionally extend flatten handle types wind function base package cover pr including implementation welcome testparametersjl couple examples utilise flatten similar task described dealing constrained parameters common handle constraints parameters particular scalar positive flatten changing representations parameters constraint introduce collection abstractparameter types mutual supertype unclear play nicely flatten allow specify particular scalar remain positive fixed iterations srcparametersjl testparametersjl examples approach implementing types typically revolves deferred delayed computation example positive parameter represented unconstrained transform maps entire real line positive half value positive application transform unconstrained flatten ing positive yields length vector containing unconstrained value represented positive object example julia using parameterhandling julia xconstrained specify constrained value julia positive xconstrained construct remain positive parameterhandling positive float typeofexp float e exp e julia parameterhandling value constrained value applying transform julia unflatten flatten supports flatten interface julia element vectorfloat e julia newv randn pick random value element vectorfloat julia parameterhandling value unflatten newv obtain constrained value provide utility function valueflatten returns unflattening function equivalent valueunflatten implemented julia unflatten valueflatten julia unflatten straightforward implement parameters interoperate written implementing value flatten package currently support functionality example model involving gaussian process gp gaussian processes class probabilistic model regression amongst tunable parameters usually chosen optimising scalar objective function using iterative optimisation algorithm typically variant gradient descent ths representative models ml statistics optimisation example copypasted repl session install packages using pkg pkg add parameterhandling pkg add optim pkg add zygote pkg add abstractgps using parameterhandling load package using optim generic optimisation using zygote algorithmic differentiation using abstractgps package containing models declare namedtuple containing initial guess parameters rawinitialparams k var positive precision positive k var positive precision positive noisevar positive using parameterhandlingvalueflatten obtain vectorfloat representation parameters mapping vector original unconstrained parameter values flatinitialparams unflatten parameterhandling valueflatten rawinitialparams parameterhandlingvalue strips positive types initialparams returning plain named tuple named tuples floats julia initialparams parameterhandling value rawinitialparams k var precision k var precision noisevar gpspecific functionality worry details note structured representation parameters function buildgp params namedtuple k params k var maternkernel scaletransform params k precision k params k var sekernel scaletransform params k precision return gp k k generate synthetic training data worry specifics const range length const rand buildgp initialparams initialparams noisevar specify objective function terms function objective params namedtuple buildgp params return logpdf params noisevar optimjl minimise objective function params note passing flat vector parameters optim optim using unflatten convert representation structured objective function using unflatten parameterhandling build bridge optim entirely unrelated package trainingresults optim optimize objective unflatten zygote gradient objective unflatten flatinitialparams bfgs alphaguess optim linesearches initialstatic scaled true linesearch optim linesearches backtracking optim options showtrace true inplace false extracting final values parameters finalparams unflatten trainingresults minimizer ftrained buildgp finalparams usually predictions test data using ftrained perspective parameterhandlingjl seen stuff particular seen example parameterhandlingjl bridge gap flat representation parameters optim likes structured representation convenient write optimisation algorithms gotchas performance tips integer typically optimisation procedures package designed handle consequently flatteninteger produces empty vector deferred typestability issues conjunction abstract types example flattendeferrednormal infer properly simple write function normalargs normalargs deferrednormal instead arrayreal wish constrain values positive prefer positive mappositive positive positive implemented associated unflatten function performance particularly interacting zygote mappositive extremely slow applies bounded values prefer bounded lb ub bounded lb ub