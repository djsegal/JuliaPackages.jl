messageutils collection utilities messaging channels channels remoterefs execpt modelled queue hence hold message channelpidmyid sz constructs channel process pid holds objects type maximum entries sz channel constructor returns object reference type syncobjrefremotechannel passed safely processes isready fetch behaviour remoteref equivalents fetch block elements blocks channel sz elements fetch accept optional keyword argument timeout specifies maximum block request fulfilled requested time mutiltimeoutex exception thrown tspaces tspaces tuple spaces store tuples element tuple key tuple tuples stored queue duplicates allowed tspacepidmyid sz constructs tuple space returns syncobjrefremotetspace ts tuple adds tuple space ts isreadyts fetchts ts require key specified tuple space ts matched element tuples space regex object matched tuples firest element string fetch accept optional keyword argument timeout specifies maximum block request fulfilled requested time mutiltimeoutex exception thrown kvspaces keyvalue store kvspacepidmyid sz constructs keyvalue space returns syncobjrefremotekvspace duplicates allowed existing key overwrites existing value kvs adds key value space kvs isreadykvs fetchkvs kvs require key specified kv space kvs fetch accept optional keyword argument timeout specifies maximum block request fulfilled requested time mutiltimeoutex exception thrown ctasks tasks channels ctasks named tasks channels channels messaging task ctaskfunction pidmyid name returns ctask object passed processors function lanuched processor pid ctask runs till function terminates name specified task addressable name namectask mapping stored kv space pid ctask channels associated incoming messages outbound messages following functions sendrecv messages channels msgtuple appends message tasks outbound channel ctctask msgtuple appends message task ct inbound channel ctnamestring msgtuple appends message task addressed ctname inbound channel pops message current tasks inbound channel ctctask pops message task ct outbound channel ctnamestring pops message task addressed ctname outbound channel pipelining operator send message task example testmsg hello ct add tuple testmsg hello ct inbound channel accept optional keyword argument timeout specifies maximum block request fulfilled requested time mutiltimeoutex exception thrown note julia compatible version send recv renamed consist