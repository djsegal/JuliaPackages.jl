mcintegration robust efficient monte carlo calculator dimensional integral mcintegrationjl provides monte carlo algorithms calculate regularsingular integrals finite inifinite dimensions quick start following examples demonstrate basic usage package example dimensional integral demonstrate example highly singular integral following command evaluates int fraclog sqrt dx julia res integrate log sqrt solver vegas print integral chi dof julia report res print iteration history integral iter integral wgt average chi dof ignore default function performs iterations iteraction costs e evaluations adjust values using niter neval keywords arguments final result obtained inversevarianceweighted average iterations excluding importance sampling results stored res result struct access statistics resmean resstdev reschi resdof resiterations exclude iterations final estimations iterations call resultres averaged result iteration program adjusts distribution mimic integrand improving importance sampling consequently estimated integral iteration accurate iterations neval sufficiently estimated integrals iterations statistically independent justifying average iterations weighted inverse variance assumption statistical independence explicitly verified chisquare test chidof value approximately integrate function choose specific monte carlo mc algorithm using solver keyword argument example employs vegas algorithm vegas additionally package provides markovchain monte carlo mcmc algorithms numerical integration vegasmc mcmc comparing mcmc algorithms vegasmc offers accuracy mcmc keeping robustness vegas slightly accurate vegasmc robust considering trade accuracy robustness integrate defaults using vegasmc information consult algorithm section defining integrand evaluation function provide arguments represents integration variable default falls range considered pool infinitely random variables follows distribution access th random variable understanding refer example variables section struct holds monte carlo mc configuration contains additional information evaluating integrand practical example example complexvalued integral type complexf call integrate dtype complexf specify integrand data type error real imaginary estimated independently suppress output information setting print information calculation simply call reportres check mc configuration call reportresconfig example multidimensional integral symmetric variables mcintegrationjl variable represented pool random drawn distribution instance explicitly initialize set variables range follows julia continuous create pool continuous variables adaptive continuous variable domain max variable learning rate approach simplifies evaluation dimensional integrals involving multiple symmetric variables example calculate quarter unit circle julia res integrate var dof integral chi dof example multidimensional integral generic variables variables multidimensional integrand symmetric define types sampled adaptive distributions julia continuous create pool continuous variables adaptive continuous variable domain max variable learning rate julia continuous create pool continuous variables adaptive continuous variable domain max variable learning rate julia res integrate log sqrt var solver vegas integral chi dof example using markovchain monte carlo mcmc algorithm vegasmc leads noticeable decrease accuracy compared vegas algorithm julia res integrate log sqrt var solver vegasmc integral chi dof decrease accuracy due markovchainbased algorithm selecting variable type update mc step resulting strongly correlated samples accurate estimations update variable types simultaneously mc step combine composite variable modification integration accuracy comparable vegas algorithm julia cv compositevar adaptive composite variable components max julia res integrate log sqrt var cv solver vegasmc integral chi dof example evaluate multiple integrands simultaneously calculate multiple integrals simultaneously integrands similar evaluating integrals simultaneously sigificantly reduces cost following example calculate quarter circle volume eighth sphere julia integrate var continuous dof integral chi dof integral chi dof dof defines degrees freedom variables type example n n m m means integral involves n varibales type n variables type integral involves m variables type m variables type dof integrals program figure optimally padding integrands match degrees freedom julia syntax improve readability example julia integrate var continuous dof r r return r r components integrands preallocate integrand weights function integrate provide inplace key argument achieve goal default applies solver vegas vegasmc inplace integrate call userdefined integrand function preallocated vector store user calculated weights following example demonstrates usage julia integrate var continuous dof inplace true example configuration interface mcintegration configuration integrands explained example userdefined integrand signature variable configuration struct stores essential information monte carlo sampling particularly relavent configuratoin include userdata pass keyword argument userdata integrate function stored access integrand evaluation function var tuple variable variable tuple argument integrand var hand multiple variables tuple var obs vector observables element accumulated estimator integrand words lengthobs lengthdof integrands normalization estimation integrals obs normalization configuration returned result result returned integrate function contains configuration integration detailed report call reportresconfig configuration stores optimized random variable distributions sampling useful evaluate integrals similar integrands optimized distributions call integrate config resconfig pass entire configuration call integrate var resconfigvar pass selected variables following example call initialized optimized distribution iteration accurate compared row example output julia res integrate log sqrt integral chi dof julia res integrate log sqrt print config res config integral iter integral wgt average chi dof ignore integral chi dof example measure histogram study integral changes tuning parameter following example solve histogram measurement julia julia grid julia function integrand vars config grid config userdata radius bin vars unpack variables gridbin binned variable r circle r sphere return r r julia function measure vars obs weights config obs prototype observables integral bin vars unpack variables obs bin weights circle obs bin weights sphere julia res integrate integrand measure measure measurement function var continuous discrete continuous discrete variable pool dof integral continuous discrete variables integral continous discrete variables obs zeros zeros observable prototypes integral userdata grid neval e integral chi dof integral chi dof visualize returned result res plotsjl commands resmean resstdev mean stdev histogram th integral julia using plots julia plt plot grid res mean yerror res stdev xlabel label circle aspectratio xlim julia plot plt grid res mean yerror res stdev label sphere algorithm package provides solvers vegas algorithm vegas monte carlo algorithm importance sampling variancereduction technique vegas iteratively builds piecewise constant weight function represented rectangular grid iteration consists sampling step followed refinement grid exact details algorithm found lepage comp phys lepage report clns cornell univ ithaca vegas algorithm based markovchain monte carlo vegasmc markovchain monte carlo algorithm vegas variancereduction technique accurate vanilla vegas algorithm meanwhile tends robust complicated dimensional integral vanilla vegas algorithm fail learn piecewise constant weight function algorithm metropolishastings algorithm sample integrand improves weight function learning markovchain monte carlo mcmc algorithm useful calculating bundled integrands calculate examples pathintegral world lines quantum particles involves hundreds thousands nested spacetime integrals algorithm metropolishastings algorithm jump integrals evaluate integrand monte carlo step vegas vegasmc algorithm learns piecewise constant weight function reduce variance assumes access integrand step tends accurate algorithms lowdimensional integrals signature integrand measure functions mcmc solver receices additional index argument vegas vegasmc solvers shown examples integrand measure functions latter solvers integrandvars config measurevars obs weights config weights vectors carries values integrands current mc step hand mcmc solver requires integrandidx vars config measureidx vars weight config idx index integrand current step argument weight scalar carries value current integrand sampled variables package supports couple common types random variables create using following constructors continouslower upper adapt true alpha continuous realvalued variables domain lower upper mc learn distribution using vegas algorithm perform imporant sampling accordingly discretelowerint upperint adapt true alpha integer variables closed set lower upper mc learn distribution perform imporant sampling accordingly iteration code try optimize variables sampled regimes integrals sampled frequently setting alpha truefalse distribution learning parameter alpha controls learning rate call constructor creates unlimited pool random variables type size pool dynamically determined call solver variables pool sampled distribution dimensional integrals integration variables contribute integral similar sampled variable pool example code example integral circle sphere volume involve variable type continuous former dof latter dof evaluate integrand choose variables evaluate integral rest variables pool serve dummy ones cause computational overhead variable pool trick significantly reduce cost learning distribution possibility calculating integrals infinite dimensions example pathintegral particle worldlines quantum body physics variables paired example continuous variables representing d vector pack joint random variable constructed following constructor compositevarvar var adapt true alpha product types random variables samples var var producted distribution packed variables sampled markovchain based solvers vegasmc mcmc updates generate independent samples compared unpacked version sometimes reduce autocorrelation time markov chain algorithm efficient moreover packed variables usually indicate nontrivial correlations distributions future learn correlation sample packed variables efficiently parallelization mcintegration supports mpi multithread parallelization mix mpi run code mpi mode simply command mpiexec ncpu julia yourscriptjl ncpu workers internally mc sampler send blocks controlled argument nblock example code workers collect estimates root node note install package mpijl mpi mode link instruction configuration user essentially write additional code support parallelization tricky output function mcintegratoinintegrate root node returns meaningful estimates workers simply returns multithreading mcintegration supports multithreading mpi run code multiple threads start julia julia ncpu yourscriptjl note threads share memory userdefined integrand measure functions implemented threadsafe example careful reading data thread write recommend user read julia official documentation parallelize code multiple threads evaluate multiple integrals thread call function mcintegrationintegrate integral following example threads evaluate integrals altogether note threads initialize julia threads julia threads threads println thread threads threadid returns integrate print thread returns integral e chi dof thread returns integral e chi dof thread returns integral chi dof main thread calls function mcintegrationintegrate parallelize internal blocks multiple threads call function mcintegrationintegrate key argument parallel thread approach utilize julia threads example julia println thread threads threadid return integrate print parallel thread thread return integral chi dof thread return integral chi dof thread return integral e chi dof