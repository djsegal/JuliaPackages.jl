debugger julia debugger build status note looking docs juno ide debugger link instead installation install debugger using pkg julia import pkg pkg add debugger usage starting debugger interface debug interface entered using enter macro using debugger function foo bigint enter foo interface allows manipulating program execution stepping functions line stepping local variables setting breakpoints evaluating code context functions debugger commands square brackets denote optional arguments following commands prompt debug misc current line editor quit debugger returning toggle compiled mode toggle lowered code instead source code increase decrease lines source code shown stepping basic step line int step line line past current line step call step current call sl step call current line steps line sr step return continue execution breakpoint hit int th function call stack stepping function top call stack int functions call stack stepping advanced nc step call se step expression step si se step call call expression sg step generated function querying st status current function source code current expression run bt backtrace fr int variables current th frame evaluation add expr add expression watch list watch expressions evaluated current function context rm int remove th watch expression breakpoints bp bp add bp add filejlline cond add breakpoint att file filejl line line condition cond bp add func line cond add breakpoint function func line line defaulting line condition cond bp add funcfloat intline cond add breakpoint methods matching signature line line defaulting line condition cond bp add func line cond add breakpoint method matching types local variable etc condition cond bp add line cond add breakpoint line file current function condition cond bp breakpoints bp rm int remove th breakpoint bp toggle int toggle th breakpoint bp disable int disable th breakpoint bp enable int enable th breakpoint bp bp error break error bp throw break throw empty command execute previous command changing frames int change prompt debug stepping commands return subset normal commands continue addition debugging commands type enter evaluation mode indicated prompt julia evaluation mode expression type executed debug context example local variable named evaluation mode typing value advancing line hit backspace character line return debug mode breakpoints add manipulate breakpoints bp add command debug interface juliainterpreter breakpoint api documented common run function breakpoint hit shortcut macro run provided equivalent starting debug mode enter executing continue command julia using debugger julia breakpoint abs julia run sin hit breakpoint abs float jl abs float absfloat run absfloat debug bt abs float jl float sin special trig jl float datatype float breakpoint error halt execution error thrown calling exported function breakonerror julia using debugger julia breakon error julia julia run breaking error error stringindexerror stringindexerr strings string jl noinline stringindexerr abstractstring integer run throw stringindexerror debug bt stringindexerr strings string jl string int getindexcontinued strings string jl string int uint xb val bool false getindex strings string jl string int uint xb uint xb repl julia juliainterpreter breakoff error julia run error stringindexerror stacktrace breakpoints source code sometimes convenient choose source code break instance matlaboctave keyboard browser bp macro julia using debugger julia function bp else println generic function method julia run julia run hit breakpoint repl function bp else println run return debug bt repl int compiled mode support breakpoints debugger interprets code code stepped currently interpreter slow feasible workaround compiled mode toggled pressing debug repl mode note change prompt color using compiled mode code stepped executed normal julia compiler run fast normally drawback course breakpoints code stepped missed syntax highlighting source code preview syntax highlighted highlighting options theme set calling debuggersetthemetheme theme highlightsjl theme completely alternatively quality settings colors chosen calling debuggersethighlightopt opt debuggerhighlightoption enum choices highlightoff highlightsystemcolors highlightcolors highlightbit system colors pretty terminals terminals exception windows bit termin