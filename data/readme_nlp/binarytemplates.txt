binarytemplates binarytemplatesjl assembles file chunks byte offsets useful creating files quickly sparse data containers data added example usage create mibibyte template chunks byte offsets chunks bytes length template takes bytes template applied file exist create mib file applytemplate function checks overwriting zeros file zero values chunks throw exception function returns binarytemplate representing data overwrote chunks backup template written backup file overwriting zero values opted ensurezeros keyword applying template time obtain backup template backup template equal original template applied julia using binarytemplates julia binarytemplatemib binarytemplate rand uint rand uint rand uint binarytemplate expectedfilesize mib offsets length chunk checksum x x x xcf xffc xece julia base summarysize binarytemplatemib julia fn tempname applytemplate fn binarytemplatemib binarytemplate expectedfilesize bytes offsets length chunk checksum x x x x xffc x julia filesize fn julia backup applytemplate fn binarytemplatemib error zero value found users kittis appdata local temp jlvqivuwowz applying template keyword ensurezero false override stacktrace error string base error jl applytemplate targetfilename string binarytemplate backupfilename string ensurezero bool truncate bool binarytemplates users kittisopikulm julia dev binarytemplates src io jl applytemplate targetfilename string binarytemplate binarytemplates users kittisopikulm julia dev binarytemplates src io jl top level scope repl julia backup applytemplate fn binarytemplatemib ensurezero false binarytemplate expectedfilesize mib offsets length chunk checksum x x x xcf xffc xece julia backup binarytemplatemib true applications templating technique create hdf files metadata confined chunks hdfbinarytemplatesjl package file written efficiently applytemplate writes metadata chunks seek skip regions chunks dataset