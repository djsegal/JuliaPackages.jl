permutations introduction package defines permutation type julia consider permutations sets form positive integer permutation object created dimensional array integers containing values exactly julia julia permutation observe permutation printed disjoint cycle format elements permutation determined using length function julia length permutation converted array equal array construct permutation row matrix follows julia data element arrayint julia tworow x arrayint evaluation permutation particular element performed using square bracket parenthesis notation julia julia course bad happen inappropriate element julia error boundserror getindex cycle structure permutation character string array arrays cycles julia cycles element arrayarrayint list disjoint cycles recover permutation julia randompermutation julia randompermutation julia cycles element vectorvectorint julia permutation operations composition composition denoted julia permutation julia julia repeated composition calculated using exponent negative inverse inverse permutation computed using inv julia inv julia square root sqrt function returns compositional square root permutation sqrt note permutations square roots square roots unique julia julia sqrt julia true matrix form function matrix converts permutation square matrix entry otherwise julia randompermutation julia matrix arrayint note permutation matrix converted permutation calling permutation julia randompermutation julia matrix julia permutation sign sign permutation permutation odd permutation julia permutation julia sign julia sign reverse permutation sequence applying reverse permutation returns permutation based reversal sequence example julia randompermutation julia tworow x arrayint julia tworowreverse x arrayint additional constructors convenience identity random permutations constructed julia permutation julia randompermutation addition permutation create th permutation set course requires julia permutation function transposition create permutation containing single cycle transposition create permutation swaps julia transposition function requires properties fixed permutation value function fixedpoints returns list fixed permutation julia randompermutation julia fixedpoints element arrayint function longestincreasing subsequence permutation elements increasing likewise longestdecreasing decreasing subsequence example julia randompermutation julia tworow x arrayint julia longestincreasing element arrayint julia longestdecreasing element arrayint iteration function permgen creates permutation iterator integer argument permgen creates iterator permutations length julia permgen println alternatively permgen called dictionary lists list lists argument permutations generated property value permutation argument values stored example derangements julia element vectorvectorint allowable values position permutation forth equally julia dictint vectorint julia setdiff julia dictint vectorint entries create nine derangements julia permgen element vectorpermutation permgen iterator generates permutations time calculation memory julia sumlengthfixedpoints permgen aside notice answer fun exerice permutations fixed provide derangegen generates derangements permutations fixed julia derangegen println thanks jonah scheinerman implementation permgen restricted permutations conversion dict permutation calling dict returns dictionary behaves julia randompermutation julia dict dictintint entries coxeter decomposition permutation expressed product transpositions coxeter decomposition permutation product transpositions form permutation form coxeterdecomposition julia permutation julia pp coxeterdecomposition permutation original permutation recovered julia permutationpp