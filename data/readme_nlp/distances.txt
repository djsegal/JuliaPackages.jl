distancesjl julia package evaluating distances metrics vectors package provides optimized functions compute columnwise pairwise distances substantially faster straightforward loop implementation benchmark section details supported distances euclidean distance squared euclidean distance periodic euclidean distance cityblock distance total variation distance jaccard distance rogerstanimoto distance chebyshev distance minkowski distance hamming distance cosine distance correlation distance chisquare distance kullbackleibler divergence generalized kullbackleibler divergence rnyi divergence jensenshannon divergence mahalanobis distance squared mahalanobis distance bhattacharyya distance hellinger distance haversine distance spherical angle distance mean absolute deviation mean squared deviation root mean squared deviation normalized root mean squared deviation braycurtis dissimilarity bregman divergence euclidean distance squared euclidean distance cityblock distance minkowski distance hamming distance weighted version provided basic library supports computation computing distance iteratorsvectors zipwise computation pairwise computation computation modes arbitrary iterable objects size computing distance iterators vectors distance corresponds distance type compute distance iterators vectors equal length using following syntax evaluate dist dist dist instance distance type example type euclidean distance euclidean distance types introduced section compute euclidean distance evaluate euclidean euclidean common distances convenient functions distance evaluation example compute euclidean distance vectors euclidean computing distances corresponding objects columnwise suppose matrix compute distances corresponding columns batch using colwise function colwise dist output vector length particular distance batch computation typically runs considerably faster calling evaluate columncolumn note single vector colwise function computes distance vector column argument computing pairwise distances columns respectively rows pairwise function dims argument computes distances pair columns pairwise dist dims output matrix size distance computing distances pairs using pairwise function remarkably faster evaluting pair individually compute distances columns matrix write pairwise dist dims statement result matrix distance pairwisedist typically efficient pairwisedist former advantage symmetry dist semimetric including metric compute pairwise distances matrices observations stored rows argument dims computing columnwise pairwise distances inplace vectormatrix store results preallocated storage creating array using following syntax colwise dist pairwise dist dims pairwise dist dims please pay attention difference functions inplace computation colwise pairwise instead colwise pairwise distance type hierarchy distances organized type hierarchy top hierarchy abstract class premetric defined function satisfies semimetric abstract type refines premetric formally semimetric premetric symmetric metric abstract type refines semimetric formally metric semimetric satisfies triangle inequality type system practical significance example computing pairwise distances set vectors perform computation half pairs derive values immediately remaining half leveraging symmetry semimetrics note types semimetric metric completely follow definition mathematics require distance able distinguish types imply compared mathematical definition semimetric metric property change computations practice distance corresponds distance type type name corresponding mathematical definitions distances listed following table type name convenient syntax math definition euclidean euclidean sqrtsum sqeuclidean sqeuclidean sum periodiceuclidean peuclidean sqrtsumminmodabs modabs cityblock cityblock sumabs totalvariation totalvariation sumabs chebyshev chebyshev maxabs minkowski minkowski sumabs hamming hamming sum rogerstanimoto rogerstanimoto sum sum sum sum sum sum jaccard jaccard summin summax braycurtis braycurtis sumabs sumabs cosinedist cosinedist dot norm norm corrdist corrdist cosinedist mean mean chisqdist chisqdist sum kldivergence kldivergence sum log genkldivergence gkldivergence sum log renyidivergence renyidivergence logsum jsdivergence jsdivergence kl kl spannormdist spannormdist max min bhattacharyyadist bhattacharyya logsumsqrt sqrtsum sum hellingerdist hellinger sqrt sumsqrt sqrtsum sum haversine haversine haversine formula sphericalangle sphericalangle haversine formula mahalanobis mahalanobis sqrt sqmahalanobis sqmahalanobis meanabsdeviation meanad meanabs meansqdeviation msd meanabs rmsdeviation rmsd sqrtmsd normrmsdeviation nrmsd rmsd maximum minimum weightedeuclidean weuclidean sqrtsum weightedsqeuclidean wsqeuclidean sum weightedcityblock wcityblock sumabs weightedminkowski wminkowski sumabs weightedhamming whamming sum bregman bregman innerdot inner note formulas using julia functions formulas mainly conveying math concepts concise actual implementation faster arguments iterable objects typically arrays real iteratorarray parameters weights periods iteratorsarrays distinct elements iteratorsarrays bools finally iteratorsarrays forming discrete probability distribution expected sum precision euclidean sqeuclidean efficiency benchmarks euclidean sqeuclidean blas matrixmatrix multiplication calculate distances corresponds following expansion xy equality precise presence roundoff error particularly nearby accurate consequently euclidean sqeuclidean allow supply relative tolerance force recalculation julia reshape julia pairwise euclidean arrayfloat e julia pairwise euclidean e arrayfloat benchmarks implementation carefully optimized based benchmarks script benchmarkbenchmarksjl defines benchmark suite variety distances columnwise pairwise settings benchmarks obtained running julia computer quadcore intel core ik processor ghz extended versions tables replicated using script benchmarkprinttablejl columnwise benchmark generically columnwise distances computed using straightforward loop implementation sqmahalanobis specialized methods provided distancesjl table compares performance measured terms average elapsed time iteration generic specialized implementation task iteration compute specific distance corresponding columns matrices distance loop colwise gain sqmahalanobis s s mahalanobis s s pairwise benchmark generically pairwise distances computed using straightforward loop implementation distances major computation quadratic form performance drastically improved restructuring computation delegating core gemm blas table compares performance measured terms average elapsed time iteration generic specialized implementations provided distancesjl task iteration compute specific distance pairwise manner columns matrices result distance matrix distance loop pairwise gain sqeuclidean s s euclidean s s cosinedist s s corrdist s s weightedsqeuclidean s s weightedeuclidean s s sqmahalanobis s s mahalanobis s 