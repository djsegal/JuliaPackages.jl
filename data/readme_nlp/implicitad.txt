implicitadjl summary automate adjoints implicit functions compatible algorithmic differentiation differenting inside solvers allow custom rules explicit functions calling external code mixed mode ad author andrew ning taylor mcdonnell features compatible forwarddiff reversediff compatible solver differentiation occurs inside solver simple drop functionality customizable subfunctions accommodate iterative linear solvers custom jacobian vector products etc version ordinary differentiation equations discrete unsteady adjoint analytic overrides linear systems analytic overrides eigenvalue provide custom rules inserted ad chain provides finite differencing complex step defaults ad available calling language implicit motivation engineering analyses implicit functions represent implicit function residual functions wish drive zero inputs variables outputs system equations solved words implicit function chose appropriate solver converge residuals differentiation perspective compute dydx algorithmic differentiation ad explicit function unroll iterations solver set instructions explicit inefficient worse inaccurate lot effort obtain accurate derivatives propgating ad solver solver solved tight tolerance tighter required converge primal values sometimes feasible operations inside solvers overloaded ad especially true calling solvers languages tight convergence hood overloaded usually computationally inefficient instead implicit differentiation allow ad seemlessly implicit functions differentiate package provides implementation simple line change applied allow ad propgated solver note implementation solver ad compatible ad occur inside solver package overloaded forwarddiffjl reversediffjl optional inputs subfunction behavior customized preallocation custom linear solvers custom factorizations custom rule motivation related propagate ad functions ad compatible common example call subfunction language larger ad compatible function packages provides simple wrapper estimate derivatives subfunction finite differencing forward central complex step derivatives inserted ad chain overall function seamlessly forwarddiff reversediff functionality useful function ad compatible efficient rule available provide jacobian jacobian vector vector jacobian products directly common example mixed mode ad subfunction efficiently differentiated reverse mode overall function differentiated forward mode provide custom rule subfunction inserted forward mode chain documentation start tutorial learn usage api described reference page math particularly helpful provide custom subfunctions theory page run unit tests pkg activate pkg test packages nonconvexjl implicitdifferentiationjl prior implementations nonlinear sciml provides support continuous unsteady adjoints odes recently added implementation nonlinear