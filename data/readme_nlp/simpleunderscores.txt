simpleunderscoresjl simpleunderscoresjl aims provide locally construct anonymous functions arguments listed body taking approach differents underscoresjl complicated scoping rules julialangjuliaissues default exports macro expression acted interprets underscores placeholder function argument hence means bare underscore argument function julia using simpleunderscores julia map element vectorint multiple arguments click expand write function acting multiple arguments write instance mean fourth argument function returned arguments argument placeholder specified julia julia julia error methoderror method matching var int int closest candidates var julia map element vectorint signify varargs julia julia main limitation dealing tuples commas click expand parser commas parse tighter macros julialangjulia comment write code map actually parsed map map simpleunderscores macroexpand map desired behaviour unfortunately simpleunderscoresjl tell difference means write anonymous function using simpleunderscoresjl returns tuple write tuple potential fixing discussed julialangjuliaissues parsing behaviour unfortunately means somewhat confusing error thrown try construct tuple top level containing julia error syntax expression outside call repl julia error syntax expression outside call repl julia var probably instead follow pr news potential fix julialangjuliapull nested macros click expand macros appearing inside macro recursively hit macroexpand approporiate module filter correctly names click expand unexported macros inside package exact people prefer names prefer simply using simpleunderscores using simpleunderscor