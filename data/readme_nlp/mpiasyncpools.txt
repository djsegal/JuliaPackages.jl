mpiasyncpoolsjl package implementing stragglerresilient distributed algorithms methods stochastic gradient descent systems composed coordinator process multiple worker processes stragglers workers experience bursts latency due network congestion workers significantly reduce rate convergence distributed optimization methods unless implementation resilient stragglers initiate communication creates mpiasyncpool coordinator handles connecting workers via mpiirecv mpiisend example pool mpiasyncpool pool consisting nodes mpi ranks pool mpiasyncpool pool consisting nodes mpi ranks asyncmap function broadcast data iterate gradient descent workers collect responses asyncmap returns results received nwait fastest workers alternatively define custom condition wait worker workers communicate using regular mpiirecv mpiisend mpijl documentation examples directory complete example asyncmap docstring asyncmap asyncmappoolmpiasyncpool sendbufabstractarray recvbufabstractarray isendbufabstractarray irecvbufabstractarray commmpicomm nwaitunionintegerfunctionpoolnwait epochintegerpoolepoch taginteger send data sendbuf asynchronously via mpiisend workers wait respond via corresponding mpiisend nwait integer function returns nwait workers responded hand nwait function function returns nwaitepoch repochs evaluates true argument repochs vector length equal workers pool th element epoch transmission corresponding worker initiated returns repochs vector similarly mpigather function elements recvbuf partitioned chunks equal workers hence length recvbuf divisible workers data recieved th worker stored th partition buffers isendbuf irecvbuf internal function changed accessed outside length isendbuf equal length sendbuf multiplied workers irecvbuf length equal recvbuf