sympy package bring python sympy functionality julia via pycall sympy python library symbolic mathematics excellent pycall package julia access features sympy library julia session sympy package provides light interface features sympy library makes sympy objects bit easier documentation inludes introduction document version sympy tutorial translated python syntax julia installation package python sympy library installed system pycall installed using conda default system python found underlying sympy library installed via conda package loaded otherwise installing python sympy library requires mpmath means anaconda distribution suggested provides single installation python includes sympy scientific libraries profitably accessed julia via pycall otherwise install python download sympy library install upgrade underlying sympy library releases rate similar julia installed conda following commands available using pkg pkgaddconda using conda condaupdate pycall interface sympy package using pycall access sympy somewhat cumbersome following define symbolic value sine evaluate symboic expression equal pi using pycall sympy pyimportsympy sympysymbol pyobject sympysin pyobject sin subs sympypi pyobject convertfloat sympy object imported line provides access sympy functionality allowing access functions sympysin properties modules sympy classes sympysymbol sympypi symbol sin operations found imported sympy module seen referenced python dot call syntax implemented pycall specialized getproperty method sympy functionality found methods bound object class subs method object example methods accessed python dotcall syntax call substitutes value sympypi symbolic variable leaves object pyobject storing brought julia conversion explicit convert call alternatively pycall method sympysymbol sympypi sympysin convertfloat subs sympy package replaced julia syntax using sympy symbols syms sinpi subs specific symbol substitute object create type sym simple proxy underlying pyobject package overloads familiar math functions symbolic expressions natural julia idioms final result symbolic value prints pyobject convert numeric value julia function acts float conversion attempt preserve variable type subtlety value pi irrational julia converted symbolic pi math constant coerced floating value encounters symbolic object symbolic value pi alias sympypi sympy mix function calls sin method calls subs function calls objects base sympy module sympy package loaded addition specialized methods generic julia functions sin priviledged set function calls sympy imported generic functions narrowed argument symbolic object constructed syms sym symbols calling importfromsympy import function calls basic usage follows generic methods julia imported functions sympy namespace called fnobject sympy methods called python dotcall syntax objectfn contructors sympysymbol function calls sympy qualified sympyconstructor qualified calls useful argument symbolic calls sin sinsym sympysin involves symbolic values third related return symbolic value sin dispatches symbolic argument sym third dispatch refers sympy function sympy object argument converted pycall python object function process initial example slightly rewritten issued symbols sinpi subs line calls provided alias sympysymbols defined allow string symbol argument dispatches sympysin pi symbolic multiplication promotes symbolic value third line dotcall syntax pycall call subs method symbolic object illustrated classes objects sympy brought default accessed using qualification sympyfunction syms define symbolic funct