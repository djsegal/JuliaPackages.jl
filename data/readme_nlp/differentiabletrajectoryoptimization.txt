differentiabletrajectoryoptimizationjl dito differentiabletrajectoryoptimizationjl dito short package di fferentiable rajetory ptimization julia supports forward reverse mode differentiation via forwarddiffjl chainrulescorejl integrates seamlessly machine learning frameworks fluxjl substantial machine learning ml algorithms relies ability propagate gradient signals entire learning pipeline traditionally models limited artificial neural networks simple analytic functions recent focused extending class admissible models gradientbased learning sorts procedures differentiable efforts range differentiable physics engines differentiable rendering differentiable optimization dito focuses special latter category differentiable trajectory optimization dito algorithmically provides local answer question optimal solution inequality constrained trajectory optimization change changes implementation initially developed research learning mixed strategies trajectory games dito allowed efficiently train neural network pipeline rapidly generate feasible equilibrium trajectories multiplayer cooperative dynamic games component proven useful context decided factor stand package installation install dito simply add via julia package manager repl hit enter pkgmode repl pkg add differentiabletrajectoryoptimization usage construct parametric optimization d integrator inputs horizon stages box constraints inputs please consult documentation types information example type parametrictrajectoryoptimizationproblem learn setup consult tests additional source implicit documentation setup entry getting started package set choice parametrictrajectoryoptimizationproblem using differentiabletrajectoryoptimization dito horizon statedim controldim parameterdim cost xs params sum sum params sum zip xs dynamics inequalityconstraints stateconstraints controlconstraints control control control xs params mapreduce stateconstraints vcat xs mapreduce controlconstraints vcat parametrictrajectoryoptimizationproblem cost dynamics inequalityconstraints statedim controldim parameterdim horizon optimizer setup instance parametrictrajectoryoptimizationproblem construct optimizer backend qpsolver optimizer optimizer backend currently dito supports following optimization backends mcpsolver casts trajectory optimization mixed complementarity mcp solves via path option nonlinear convex qps solver fast specialized qp solver path solver source provides free license setting license key backend please consult documentation pathsolverjl learn loading license key qpsolver treats convex qp linearizing constraints quadraticizing cost priori true qp solution exact nlpsolver solves trajectory optimization nlp using ipopt solver mostely historic reasons provide source backend nlps mcpsolver backend using path faster solving optimizer solve instance initial x parameter values params x zeros statedim params randn optimizer x params background dito achieves differentiable trajectory optimization augmenting existing optimization routines custom derivative rules apply implicit function theorem ift resulting kktsystem formulation dito avoids differentiation entire potentially iterative algorithm leading substantially accelerated derivative computation facilitating differentiation optimization backends written pure julia following body provides information iftbased differentiation approach ralph daniel stephan dempe directional derivatives solution parametric nonlinear program mathematical programming amos brandon zico kolter optnet differentiable optimization layer neural networks international conference machine learning pmlr