warning current tagged version warnings tests github trunk fail time maintain code caveat emptor sorry intmodnjl pragmatic meaning incomplete written understood library modular arithmetic aim encapsulate amount theory describe relationships structures enable arithmetic various types motivated practical crypto code examples types integers modulo polynomials polynomials integral coefficients polynomials gf quotient factor rings incomplete pull requests welcome examples tests simultaneous equations answering question gf julia using intmodn zfield begin assert polynomial arithmetic julia gf zpzfieldint julia zpzfieldint julia zpzfieldint julia divrem zpzfieldintzpzfieldint julia println mod fast polynomials gf examples modulus chose gf common following gf trade lack flexibility speed compactness encoded bit patterns julia gfxuint gfpolyuint julia gfpolyuint julia gfpolyuint julia divrem gfpolyuintgfpolyuint julia assert rijndael multiplication described julia gfxuint gfpolyuint julia rijndael gfpolyuint julia printzfrijndael zfrijndael mod mod mod note rinjdael requires bits storage currently representation implicit msb types residue integer abstract superclass provide common utilities automatic promotion integers integers modulo zmodninteger residue abstract superclass integers modulo value modulus typically int integer type value concrete subclasses prime define multiplicative inverse zring integer zmodn zfield integer zmodn assumes prime includes division constructors directly check arguments consistent assumptions code values range etc associated functions zr zf suitable normal check primality fields include support factory functions julia zf uint zfield uint julia zf zfield int julia gf zf anonymous function julia gf zfield int macros zring zfield convert integers scope julia zring begin x arrayintmodn zring int polynomials poly residue abstract superclass polynomials share basic conventions accessing coefficients iterators types form rings fields polynomials inverses note originally code polynomialjl weird design decisions wrote code polynomialsjl fixed issues sense revert package polynomials integral coefficients zpolyinteger poly simple wrapper array integral coefficients including zmodn subclasses coefficients usual ith coefficient leading coefficient zero array empty integers mod constructor directly preferable zp various forms addition support natural syntax via julia zf zp intmodn zfield int julia zp intmodn zfield int polynomials gf gfpolyunsigned poly specialized support polynomials gf coefficients bit fields integers values constructor directly utilities gfp gfx bit pattern displayed bits addition binary xor julia gfx uint gfpoly uint julia gfpoly uint julia gfpoly uint julia gfpoly uint julia bits bits bits quotient factor rings spearate type handled zring zfield polynomial arguments latter appropriate ideal irreducible maximal rijndael exampl