julia devito inversion framework judi documentation build status overview judi framework scale seismic modeling inversion designed enable rapid translations algorithms fast efficient code scales industrysize d focus package lies seismic modeling pdeconstrained optimization waveform inversion fwi imaging lsrtm wave equations judi solved devito python domainspecific language automated finitedifference fd computations judi modeling operators layers convolutional neural networks implement physicsaugmented deep learning algorithms thanks implementation chainrules rrule linear operators representing discre wave equation interact contribute gladly welcome encourage contributions community improve software usability feel free issues bugs start discussions interact developer questions pr bug fixes improvements faq faq answers issues faq installation prerequisites installation instructions wiki installation gpu judi supports computation wave equation gpu via devito gpu offloading support note wave equation computed gpu julia arrays cpu arrays cudajl supported installation enable gpu support judi install devito supported offloading compilers strongly recommend checking wiki installation steps reach devito community gpu compiler related issues nvcpgcc recommended simplest installation install compiler following nvidia installation instruction hpcsdk aompcc amd compiler running amd gpus installation tested judi recommend reach devito team installation guidelines openmpclang installation requires compilation source openmp clang llvm install version openmp enabling gpu offloading instructions installation devito wiki setup required setup gpu support environment variables devito currently supported nvcopenacc setup export devitolanguageopenacc export devitoarchnvc export devitoplatformnvidiax running docker install judi run judi docker image possibility run docker container jupyter notebook judi provides docker images judi release julia versions lts stable version images names mlouboutjudijver jver julia version docker images contain preinstalled compilers cpus gcc nvidia gpus nvc via nvidia hpc sdk environment automatically set devito based hardware available note wish gpu install nvidiadocker run docker run gpus gpus available runtime image run judi via docker execute following command terminal docker run mlouboutjudi command downloads image launches container link copypaste browser access notebooks alternatively run bash session start regular interactive julia session run example scripts downloadstart container bash session docker run mlouboutjudi binbash inside container examples located directory appjudiexamplesscripts previous versions version v judi ship versiontagged images mlouboutjudijverver ver version judi example current judi version julia mlouboutjudiv development version additionally provide images corresponding development version judi master branch images called mlouboutjudijverdev similar testing complete test suite included judi tested via github actions run test locally via julia project using pkgpkgtestcoveragefalse default judi base api tested testing suite supports modes controlled via environment variable judi julia project using pkgpkgtestcoveragefalse supported modes judi base api linear operators vectors basics generic modeling inversion tests core behavior isoop isotropic acoustic operators isoopfs isotropic acoustic operators free surface ttiop transverse tilted isotropic operators ttiopfs transverse tilted isotropic operators free surface filename provide filename testjudivectorjl test file run single files tti free surface currently supported relies baseargs setup configure compiler openmp devito time compilation underlying wave equation solves default compiler intel changed specified compiler gnu run following command command line add bashrc file export devitoarchgnu devito shared memory openmp parallelism solving pdes openmp disabled default enable openmp define threads pde solve follows export devitolanguageopenmp enable openmp export ompnumthreads openmp threads waveform inversion judi designed set objective functions passed standard packages gradientbased optimization following example demonstrates perform fwi d overthrust model using spectral projected gradient algorithm minconf library included software test dataset mb model downloaded ftp server run wget ftp run wget ftp step load velocity model observed data julia setting bound constraints inversion prevent low velocities final result furthermore define hertz ricker wavelet source function using pyplot hdf segyio judi slimoptim statistics random load starting model m read hopen overthrustdinitialmodelh m model model m tuples m array bound constraints vmin ones float model f vmax ones float model f mmin vec f vmax convert slowness squared km mmax vec f vmin load segy data block segyread overthrustdsegy dobs judivector block set wavelet srcgeometry geometry block key source segydepthkey sourcedepth read source position geometry wavelet rickerwavelet srcgeometry srcgeometry dt f hz wavelet judivector srcgeometry wavelet fwi example define objective function passed minconf optimization library included julia devito software package allow maximum function evaluations using spectralprojected gradient spg algorithm save computational cost function evaluation randomized subset shot records instead shots optimization parameters fevals function evaluations batchsize sources iteration fvals zeros opt options optimalcheckpointing false set true enable checkpointing objective function minconf library count function objectivefunction model reshape model fwi function value gradient randperm dobs nsrc batchsize fval grad fwiobjective model dobs options opt grad reshape grad model grad f reset gradient water column grad f grad maximum abs grad scale gradient line search global count count fvalscount fval return fval vec grad data fwi spg projbound median mmin mmax dims bound projection options spgoptions verbose maxiter fevals memory fsave funevals minconfspg objectivefunction vec m projbound options example script run parallel requires roughly mb memory source location execute following code generate figures initial model result function values figure imshow sqrt adjoint m title initial model figure imshow sqrt adjoint reshape model title fwi figure plot fvals title function value squares reversetime migration judi includes matrixfree linear operators modeling linearized born modeling write algorithms migration follow mathematical notation standard squares example demonstrates julia devito perform squares reversetime migration d marmousi model start downloading test data set gb model run wget ftp run wget ftp load starting model data set source wavelet example ricker wavelet hertz peak frequency setting matrixfree linear operators info structure dimensions required using pyplot hdf judi segyio random load smooth migration velocity model m read hopen marmousimigrationvelocityh m model model m load data block segyread marmousidsegy dd judivector block set wavelet srcgeometry geometry block key source segydepthkey sourcedepth wavelet rickerwavelet srcgeometry srcgeometry dt hz wavelet judivector srcgeometrywavelet set info structure ntcomp getcomputationalnt geometrydd geometrymodel computational time steps info info prod model dd nsrcntcomp speed convergence imaging example set basic preconditioner model data space consisting mutes suppress oceanbottom reflection data sourcereceiver imprint image operator represents linearized modeling operator adjoint corresponds migration rtm operator forward adjoint pair basic lsrtm example stochastic gradient descent set matrixfree linear operators opt options optimalcheckpointing true set false disable optimal checkpointing judimodeling model geometry dd geometry options opt judijacobian hand preconditioners model topmute juditopmute model mute grid taper lefthand preconditioners ml judidatamute geometry dd geometry t data topmute starting ms samples stochastic gradient zeros float info zero initial guess batchsize subset shots iteration niter fval zeros float niter niter println iteration select batch set lefthand preconditioner randperm dd nsrc batchsize compute residual gradient ml ml dd adjoint adjoint adjoint ml step size update variable fval f norm norm norm global machine learning judi implements chainrulescore reverse rules integrate modeling operators convolutional neural networks deep learning example following code snippet create shallow cnn consisting convolutional layers nonlinear forward modeling layer judi enables backpropagation flux automatic differentiation tools calls corresponding adjoint judi operators hood jacobian w judijacobian f b randn float numsamples connected layer w randn float nout numsamples b randn float nout network loss network w w b b loss flux mse network compute gradient flux params w b b gs tracker gradient loss gs gradient judi allows implementing physicsaugmented neural networks seismic inversion loopunrolled seismic imaging algorithms example following results conventional rtm image lsrtm image loopunrolled lsrtm image single simultaneous shot record authors package written philipp witte mathias louboutin seismic laboratory imaging modeling slim georgia institute technology software research please cite geophysics paper article wittejudi author philipp witte mathias louboutin navjot kukreja fabio luporini michael lange gerard gorman felix herrmann title scale framework symbolic implementations seismic inversion algorithms julia journal geophysics volume pages ff doi geo url eprint visit devito homepage information references contact authors via mlouboutingatechedu