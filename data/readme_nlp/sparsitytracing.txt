sparsitytracingjl automatic jacobian sparsity detection using minimal scalar tracing autodifferentiation limitations alternatives detected sparsity pattern code path followed specified variable parameter values conditional logic generates code paths result sparsity patterns handled workaround choose values generate sparsity add anomittedvariable conditional paths relying sparsitytracing includes structural zeros generated jacobian call multiple times merge sparsity patterns ie add sparse jacobians package considered interim solution symbolicsjl jacobian tracing implemented currently symbolics v requires awkward workarounds conditional logic error relatively slow issue models juliasymbolicssymbolicsjl benchmark results sparsitytracing x faster demonstrating usage similar hence easy swap earlier sparsitydetectionjl package marked deprecated installation julia add sparsitytracing example julia import sparsitytracing ad julia function rober du yyy kkk du k y k y y du k y k y k y y du k y julia julia e e julia uad ad createadvec julia duad similar uad julia rober duad uad julia ad deriv duad element sparsearrays sparsevectorfloat int stored entry e julia jad ad jacobian duad length duad sparsearrays sparsematrixcscfloat int stored entries e e implementation algorithm essentially sparslinc described bischof etal except simpler efficient data structure implements scalar type sparsitytracingadvalreal holds value binary tree scalar derivatives including element indices leaf nodes tree initialised vector leaf nodes sparsitytracingcreateadvec populated derivatives calculated diffrulesjl julia function called eg function calculating rhs ode sparsitytracingjacobian walks tree calculates jacobian sparse matrix provides robust detecting jacobian sparsity test purposes slow calculating actual derivative sparsity pattern generate matrix colouring fast ad package eg sparsedifftoolsjl time increases approximately linearly scalar operations speed approx scalar op ghz laptop core x slower primitive types scalar operation generates memory allocation add tree node references christian bischof peyvand khademi ali buaricha carle alan efficient computation gradients jacobians dynamic exploitation sparsity automatic differentiation optimization methods software doi