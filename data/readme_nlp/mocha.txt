update dec mochajl deprecated version julia v existing legacy codebase mocha updates julia v pull request contains fixes cpu backend unit tests passed julia v development mochajl happens relative days julia julia ecosystem evolved significantly exciting tech writing gpu kernels directly julia autodifferentiation supports mocha codebase excessively primitive reworking mocha technologies requires trivial efforts exciting solutions exist nowadays time retirement mochajl deep learning julia please check alternative packages date actively maintained particular knetjl fluxjl purejulia solutions mxnetjl tensorflowjl wrapper existing deep learning systems mocha tutorials documentation release notes roadmap issues mocha deep learning framework julia inspired framework caffe efficient implementations stochastic gradient solvers common layers mocha train deep shallow convolutional neural networks optional unsupervised pretraining via stacked autoencoders highlights modular architecture mocha clean architecture isolated components network layers activation functions solvers regularizers initializers etc built components sufficient typical deep convolutional neural network applications added release easily extended adding custom subtypes level interface mocha written julia level dynamic programming language designed scientific computing combining expressive power julia package ecosystem playing deep neural networks mocha easy intuitive example ijulia notebook example using pretrained imagenet model image classification portability speed mocha comes multiple backends switched transparently pure julia backend portable runs platform supports julia reasonably fast models thanks julia llvmbased time jit compiler performance annotations useful prototyping native extension backend compiler available runs times faster pure julia backend gpu backend nvidia cudnn cublas customized cuda kernels provide highly efficient computation times speedup observed modern gpu device especially larger models compatibility mocha widely adopted hdf format store datasets model snapshots easy interoperate matlab python numpy existing computational tools mocha provides tools import trained model snapshots caffe correctness computational components mocha backends extensively covered unittests source mocha licensed mit expat license installation install release version simply run pkg add mocha julia console install development version run following command instead pkg clone run built unit tests pkg test mocha verify functioning properly machine hello world please refer mnist tutorial prepare mnist dataset following example complete code example located examplesmnistmnistjl detailed documentation tutorials user guide using mocha data hdfdatalayer name traindata source traindatalisttxt batchsize conv convolutionlayer name conv nfilter kernel bottoms data tops conv pool poolinglayer name pool kernel stride bottoms conv tops pool conv convolutionlayer name conv nfilter kernel bottoms pool tops conv pool poolinglayer name pool kernel stride bottoms conv tops pool fc innerproductlayer name ip outputdim neuron neurons relu bottoms pool tops ip fc innerproductlayer name ip outputdim bottoms ip tops ip loss softmaxlosslayer name loss bottoms ip label backend defaultbackend init backend commonlayers conv pool conv pool fc fc net net mnisttrain backend data commonlayers loss expdir snapshots solvermethod sgd params makesolverparameters solvermethod maxiter regucoef mompolicy mompolicy fixed lrpolicy lrpolicy inv loadfrom expdir solver solver solvermethod params setupcoffeelounge solver saveinto expdir statisticsjld everyniter report training progress iterations addcoffeebreak solver trainingsummary everyniter save snapshots iterations addcoffeebreak solver snapshot expdir everyniter performance test data iterations datatest hdfdatalayer name testdata source testdatalisttxt batchsize accuracy accuracylayer name testaccuracy bottoms ip label testnet net mnisttest backend datatest commonlayers accuracy addcoffeebreak solver validationperformance testnet everyniter solve solver net destroy net destroy testnet shutdown backend documentation mocha documentation host