decisiontreejl julia implementation decision tree cart random forest algorithms created developed ben sadeghi bensadeghi maintained juliaai organization available via automlpipelinejl create complex ml pipeline structures using simple expressions combinemljl heterogeneous ensemble learning package mljjl machine learning framework julia scikitlearnjl julia implementation scikitlearn api classification prepruning max depth min leaf size postpruning pessimistic pruning multithreaded bagging random forests adaptive boosting decision stumps using samme cross validation fold support features encoded real string regression prepruning max depth min leaf size multithreaded bagging random forests cross validation fold support numerical features note regression implied labelstargets type arrayfloat installation install decisiontreejl using julia package manager pkg add decisiontree scikitlearnjl api decisiontreejl supports scikitlearnjl interface algorithms crossvalidation hyperparameter tuning pipelines etc available models decisiontreeclassifier decisiontreeregressor randomforestclassifier randomforestregressor adabooststumpclassifier model help eg decisiontreeregressor repl information classification example load decisiontree package using decisiontree separate fisher iris dataset features labels features labels loaddata iris adult digits datasets data loaded type array cast concrete types performance features float features labels string labels pruned tree classifier train depthtruncated classifier model decisiontreeclassifier maxdepth fit model features labels pretty print tree depth nodes optional printtree model apply learned model predict model probability label predictproba model println getclasses model returns columns predictproba output run fold cross validation cv folds scikitlearnjl installation instructions using scikitlearn crossvalidation crossvalscore accuracy crossvalscore model features labels cv look classification regression notebooks native api classification example decision tree classifier train tree classifier model buildtree labels features prune tree merge leaves combined purity default model prunetree model pretty print tree depth nodes optional printtree model apply learned model applytree model apply model sames preds applytree model features generate confusion matrix accuracy kappa scores decisiontree confusionmatrix labels preds probability label applytreeproba model irissetosa irisversicolor irisvirginica run fold cross validation pruned tree nfolds accuracy nfoldcvtree labels features nfolds set classification parameters respective default values pruningpurity purity threshold postpruning default pruning maxdepth maximum depth decision tree default maximum minsamplesleaf minimum samples leaf default minsamplessplit minimum samples split default minpurityincrease minimum purity split default nsubfeatures features select random default keyword rng random generator seed default randomglobalrng nsubfeatures maxdepth minsamplesleaf minsamplessplit minpurityincrease pruningpurity seed model buildtree labels features nsubfeatures maxdepth minsamplesleaf minsamplessplit minpurityincrease rng seed accuracy nfoldcvtree labels features nfolds pruningpurity maxdepth minsamplesleaf minsamplessplit minpurityincrease verbose true rng seed random forest classifier train random forest classifier using random features trees portion samples tree maximum tree depth model buildforest labels features apply learned model applyforest model probability label applyforestproba model irissetosa irisversicolor irisvirginica add trees model buildforest model labels features run fold cross validation forests using random features split nfolds nsubfeatures accuracy nfoldcvforest labels features nfolds nsubfeatures set classification parameters respective default values nsubfeatures features consider random split default sqrt features ntrees trees train default partialsampling fraction samples train tree default maxdepth maximum depth decision trees default maximum minsamplesleaf minimum samples leaf default minsamplessplit minimum samples split default minpurityincrease minimum purity split default keyword rng random generator seed default randomglobalrng multithreaded forests seeded int nsubfeatures ntrees partialsampling maxdepth minsamplesleaf minsamplessplit minpurityincrease seed model buildforest labels features nsubfeatures ntrees partialsampling maxdepth minsamplesleaf minsamplessplit minpurityincrease rng seed accuracy nfoldcvforest labels features nfolds nsubfeatures ntrees partialsampling maxdepth minsamplesleaf minsamplessplit minpurityincrease verbose true rng seed adaptiveboosted decision stumps classifier train adaptiveboosted stumps using iterations model coeffs buildadabooststumps labels features apply learned model applyadabooststumps model coeffs probability label applyadabooststumpsproba model coeffs irissetosa irisversicolor irisvirginica run fold cross validation boosted stumps using iterations niterations nfolds accuracy nfoldcvstumps labels features nfolds niterations verbose true regression example features randn weights rand labels features weights regression tree train regression tree model buildtree labels features apply learned model applytree model run fold cross validation returns array coefficients determination nfolds r nfoldcvtree labels features nfolds set regression parameters respective default values pruningpurity purity threshold postpruning default pruning maxdepth maximum depth decision tree default maximum minsamplesleaf minimum samples leaf default minsamplessplit minimum samples split default minpurityincrease minimum purity split default nsubfeatures features select random default keyword rng random generator seed default randomglobalrng nsubfeatures maxdepth minsamplesleaf minsamplessplit minpurityincrease pruningpurity seed model buildtree labels features nsubfeatures maxdepth minsamplesleaf minsamplessplit minpurityincrease rng seed r nfoldcvtree labels features nfolds pruningpurity maxdepth minsamplesleaf minsamplessplit minpurityincrease verbose true rng seed regression random forest train regression forest using random features trees averaging samples leaf portion samples tree model buildforest labels features apply learned model applyforest model run fold cross validation regression forest using random features split nsubfeatures nfolds r nfoldcvforest labels features nfolds nsubfeatures set regression buildforest parameters respective default values nsubfeatures features consider random split default sqrt features ntrees trees train default partialsampling fraction samples train tree default maxdepth maximum depth decision trees default maximum minsamplesleaf minimum samples leaf default minsamplessplit minimum samples split default minpurityincrease minimum purity split default keyword rng random generator seed default randomglobalrng multithreaded forests seeded int nsubfeatures ntrees partialsampling maxdepth minsamplesleaf minsamplessplit minpurityincrease seed model buildforest labels features nsubfeatures ntrees partialsampling maxdepth minsamplesleaf minsamplessplit minpurityincrease rng seed r nfoldcvforest labels features nfolds nsubfeatures ntrees partialsampling maxdepth minsamplesleaf minsamplessplit minpurityincrease verbose true rng seed saving models models saved disk loaded jldjl package using jld save modelfilejld model note features labels type array supported highly recommended data cast explicit types ie float string etc significantly improves model training prediction execution times drastically reduces size saved models mljjl api decsiontreejl models mlj ensure mljjl mljdecisiontreeinterfacejl julia environment example install fresh environment using pkg pkg activate myfreshmljenvironment shared true pkg add mlj pkg add mljdecisiontreeinterface detailed usage instructions available model using doc method example using mlj doc decisiontreeclassifier pkg decisiontree available models adabooststumpclassifier decisiontreeclassifier decisiontreeregressor randomforestclassifier randomforestregressor feature importances following methods provide measures feature importance models impurityimportance splitimportance permutationimportance query document strings details visualization decisiontree model visualized using printtree function native interface example section classification example addition abstraction layer using abstracttreesjl implemented intention facilitate visualizations rely implementation details decisiontree information look docs srcabstracttreesjl wrap function creates layer decisiontree model apart abstracttreesjl brings implementation printtree citing package publications doi bibtex entry softwarebensadeghi author ben sadeghi poom chiarawongse kevin squire daniel jones andreas noack cdric stjean rik huijzer roland schtzle ian butterworth yufong peng anthony blaom title decisiontreejl julia implementation cart decision tree random forest algorithms month nov publisher zenodo version doi zenodo url