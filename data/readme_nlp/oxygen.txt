oxygenjl breath fresh air programming web apps julia oxygen microframework built top httpjl library breathe easy knowing quickly spin web server abstractions re familiar features straightforward routing post patch delete route macros autogenerated swagger documentation box json serialization deserialization customizable type definition support path parameters built multithreading support built cron scheduling endpoints functions middleware chaining application router route levels static dynamic file hosting route tagging repeat tasks installation pkg add oxygen minimalistic example create webserver lines code using oxygen using http greet function req httprequest return hello world start web server serve request handlers request handlers functions means valid express request handlers defined routes imported modules spread multiple files request handlers routes declared multiple modules files using oxygen greet function hello world saluer begin bonjour le monde saludar hola mundo salutare ciao mondo function declared module function subtract req float float return register foreign request handlers subtract subtract start web server serve path parameters path parameters declared braces passed directly request handler using oxygen path params type definitions defaults strings add function req return parse float parse float path params type definitions automatically converted multiply function req float float return parameters matter name matters subtract function req int int return start web server serve query parameters queryparams function extract parse parameters url using oxygen using http query function req httprequest extract return query params request object return queryparams req start web server serve interpolating variables endpoints interpolate variables directly paths makes dynamically registering routes breeze thanks anandijain idea using oxygen operations dict add multiply pathname operator operations pathname function req float float return operator start web server serve return json objects automatically deserialized json using json library using oxygen using http data function req httprequest return dict message hello value start web server serve deserialize serialize custom structs oxygen provides box serialization deserialization objects requires structtypes converting structs using oxygen using http using structtypes struct animal id int type string name string add supporting struct type definition json serialize deserialize automatically structtypes structtype typeanimal structtypes struct function req httprequest serialize struct json automatically structtypes return animal cat whiskers post echo function req httprequest deserialize json request body animal struct animal json req animal serialize struct json automatically structtypes return animal start web server serve routers router function hof function allows reuse path prefix properties multiple endpoints helpful api starts grow path operations organized arguments router function router prefix string tags vector middleware vector interval real cron string tags organize endpoints autogenerated docs middleware setup router routespecific middleware interval support repeat actions calling request handler set interval cron specify cron expression determines call request handler using oxygen routes router automatically math tag autogenerated documenation math router math tags math assign route specific tags math multiply tags multiplication function req float float return math divide function req float float return serve cron scheduling oxygen comes built cron scheduling system allows call endpoints functions automatically cron expression matches current time job scheduled task created runs background task cron expression current time determine sleep execute cron parser oxygen based specifications spring information spring cron expressions page cron expression syntax following breakdown parameter cron expression represents specification closely resembles defined spring exact match string six single spaceseparated time date fields minute hour day month month jandec day week monday tue sunday partial expressions supported means subsequent expressions left defaulted example expression defined means following expressions automatically defaulted expressions cron function println runs scheduling endpoints router function keyword argument called cron accepts cron expression determines endpoint called keyword arguments reused endpoints share routers overridden inherited endpoints execute clock day router cronexample cron function req println execute endpoint whenever currentseconds every router cron cron endpoint inherits cron expression every function req println endpoint executes whenever currentseconds instead every cron function req println scheduling functions addition scheduling endpoints cron macro schedule functions useful run code specific times visible callable api cron function println runs cron function println runs day starting stopping cron jobs run serve serveparallel registered cron jobs automatically started server stopped killed running jobs terminated stop server repeat tasks cron jobs calling terminate function manually killing server ctrl addition oxygen provides utility functions manually start stop cron jobs startcronjobs stopcronjobs functions outside web server repeat tasks router function interval parameter call request handler set interval note request handlers property define additional function parameters outside default httprequest parameter example repeathello endpoint called hello printed console time using oxygen repeat router repeat interval tags repeat repeat hello function println hello override properties setting route specific values repeat bonjour interval function println bonjour serve mounting static files mount static files using handy function recursively searches folder files mounts files loaded memory startup using oxygen mount files inside content folder static path staticfiles content static start web server serve mounting dynamic files similar staticfiles function mounts path rereads file request means changes files server started displayed using oxygen mount files inside content folder dynamic path dynamicfiles content dynamic start web server serve performance tips disabling internal logger provide massive performance gains helpful scenarios anecdotally seen x speedup serve x speedup serveparallel performance disable internal logging modes serve accesslog serveparallel accesslog logging oxygen provides default logging format allows customize format using accesslog parameter functionality available serve serveparallel functions read logging options default logging format serve customize logging format serve accesslog logfmt timeiso request status disable internal request logging serve accesslog middleware middleware functions easy create custom workflows intercept incoming requests outgoing responses executed passed left set application router route layer middleware keyword argument middleware additive middleware defined layers combined executed middleware executed following application router route middleware action using oxygen using http const corsheaders accesscontrolalloworigin accesscontrolallowheaders accesscontrolallowmethods post options function corsmiddleware handler return function req httprequest println cors middleware determine preflight request browser http method req options return http response corsheaders else return handler req passes request authmiddleware function authmiddleware handler return function req httprequest println auth middleware actual security check http headercontains req authorization true return http response else return handler req passes request application function middleware handle function req println middleware handle req function middleware handle function req println middleware handle req set middleware router level math router math middleware middleware set middleware route level math divide middleware middleware function req float float return set application level middleware serve middleware corsmiddleware authmiddleware custom response serializers oxygen default response serializer add create special middleware function serialize response add middleware chain serve serveparallel serialize keyword argument toggle default serializer using oxygen using http using json divide function req httprequest float float return regular middleware function function myserializer handle function req try response handle req convert responses json return http response body json write response catch error error error exception error catchbacktrace return http response server encountered myserializer middleware function list serve middleware myserializer serialize false multithreading parallelism scenarios handle amounts traffic run oxygen multithreaded mode utilize mode julia thread start julia session threads using command julia threads serveparallelqueuesize starts webserver streaming mode spawns worker threads queuesize parameter sets requests scheduled queue julia channel start getting dropped worker thread pops requests queue handles asynchronously thread using oxygen using structtypes using base threads atomic struct serializable structtypes structtype typeatomicint structtypes struct atomic int function return increment function atomicadd return start web server parallel mode serveparallel autogenerated docs swagger swagger documentation automatically generated route register application route name parameter types responses automatically created default view generated documentation docs schema found docsschema values changed whatever using configdocs function opt autogenerated docs entirely calling disabledocs function starting application add additional details built mergeschema setschema functions directly modify schema merge generated schema swaggermarkdownjl package recommend latter example merge schema generated swaggermarkdownjl package using oxygen using swaggermarkdown example merge autogenerated docs swaggermarkdownjl api swagger divide description return result parameters name path required true description value numerator schema type responses description successfully returned divide function req float float return title version required info dict title demo api version openapi openapi info swaggerdocument build openapi merge swaggermarkdown schema internal schema mergeschema swaggerdocument start web server serve example manually modify schema using oxygen using swaggermarkdown basic information parsed route generating docs multiply function req float float return example update schema mergeschema multiply dict dict description return result example update schema allows modify properties defined root schema title summary etc mergeschema dict paths dict multiply dict dict description return result common issues tips julia repl recurring issue occurs writing testing code repl people changes reflected rerun server reason routing utilities defined macros executed precompilation stage changes effect move route declarations init function module module oxygenexample using oxygen using http called whenever load module function init greet function req httprequest return hello world call function repl start server function runserver serve api reference macros post patch delete path func parameter type description path string router required route register func function required request handler route register function specific endpoint handle corresponding type request route route methods path func parameter type description methods array required types http requests register route path string router required route register func function required request handler route lowlevel macro allows route handle multiple request types staticfiles staticfiles folder mount parameter type description folder string required folder serve files mountdir string root endpoint mount files default static serve static files folder function recursively searches directory mounts files mount directory using relative paths request helper functions html html content status headers parameter type description content string required string returned html status integer http response code default headers dict headers http response default contenttype header set texthtml charsetutf helper function designate content returned html queryparams queryparams request parameter type description req httprequest required http request object returns query parameters request dict body functions text text request parameter type description req httprequest required http request object returns body request string binary binary request parameter type description req httprequest required http request object returns body request binary file returns vector uint json json request classtype parameter type description req httprequest required http request object classtype struct struct deserialize json object deserialize body request julia struct