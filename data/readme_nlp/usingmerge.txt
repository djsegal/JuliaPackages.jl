usingmergejl package exports single macro usingmerge differs using merges exported definitions automatically wish started thread time julia knowing julia realized introduce example gapjm package port gap libraries julia function invariants computes invariants finite reflection benchmarktools debug performance package following julia julia invariants warning gapjm benchmarktools export invariants module main qualified error undefvarerror invariants defined stacktrace toplevel scope repl evalmodule bootjl evaluserinput replreplbackend buildworkerworkerpackagelinuxbuildusrsharejuliastdlibvreplsrcrepljl runbackendreplreplbackend homejmicheljuliapackagesrevisekqqwsrcrevisejl toplevel scope none annoying qualify call function invariants timing code import methods using benchmarktools julia using benchmarktools btime actually exported name benchmarktools except invariants conflict code julia namesbenchmarktools element arraysymbol symbolballocated symbolbelapsed symbolbenchmark symbolbenchmarkable symbolbtime symboltagged benchmarkgroup benchmarktools addgroup allocs gctime improvements invariants isimprovement isinvariant isregression judge leaves loadparams mean median memory params ratio regressions rmskew rmskew trim tune warmup julia using benchmarktools ballocated belapsed benchmark benchmarkable btime tagged benchmarkgroup benchmarktools addgroup allocs gctime improvements isimprovement isinvariant isregression judge leaves loadparams mean median memory params ratio regressions rmskew rmskew trim tune warmup conflict invariants method invariants package invariants args benchmarktools invariantsbenchmarkgroup invariants invariants benchmarkgroup invariants methods apply conflict method arguments method qualified type defining invariantsbenchmarkgroup benchmarktoolsinvariants invariants benchmarktoolsinvariants invariants benchmarkgroup benchmarktoolsinvariants invariants benchmarktoolsinvariants docstring benchmarktoolsinvariants accessible help invariants happens docstring adds doc invariants doc doc benchmarktoolsinvariants invariants call result process merging package benchmarktools current package announce macro usingmerge automatically julia using usingmerge julia usingmerge benchmarktools function determines conflicting method names package merges using conflicting names using usingmerge names package julia usingmerge benchmarktools invariants ratio macro usingmerge optional arguments julia usingmerge reexport benchmarktools reexport conflicting names conflicting name definition environment exported export julia usingmerge verbosetrue benchmarktools print conflicts resolved verbose print executed commands information docstring usingmerge wrote function found hoped modularity benefits code example gapjmjl package modules perms permutations cycs cyclotomic sums complex roots unity pols univariate laurent polynomials mvpsjl multivariate puiseux polynomials posetsjl posets ffieldsjl finite fields designed independent stand packages importing else package usingmerge instead writing unpleasant glue code advocate replacing semantics using usingmerge feel usingmerge nice tool using packages write glue code modify packages meaning pirating type little bit wider context method invariants benchmarktools polite methods possibly conflicting name types signature program merges methods functions conflicting name macro struct type message printed name merged feedback welcome implementation parse printed output methods accessing internal structure returned object officially accessible comments code functionality documentation please contact