gridapdistributed parallel distributedmemory version gridapjl purpose gridapdistributedjl provides parallel distributed memory extension gridapjl library allows users approximate pdes parallel computers multicore cpu desktop computers hpc clusters supercomputers subpackage designed intrusive result sequential julia scripts written level api gridapjl verbatim minor adjustments parallel context using gridapdistributedjl gridapdistributedjl provides scalable parallel data structures grid handling finite element spaces setup distributed linear system assembly latter global distributed sparse matrices vectors gridapdistributedjl relies partitionedarraysjl distributed linear algebra backend documentation gridapdistributedjl gridapjl share level api refer documentation gridapjl details api example minor differences apis gridapjl gridapdistributedjl refer following tutorial gridapdistributedjl documentation additional examples rationale execution modes execute program mode gridapdistributedjl driver programs run sequential execution mode useful developingdebugging parallel programs testsequential folder examples messagepassing mpi execution mode deploy code actual parallel computer perform fast simulation testmpi folder examples access parallel machine able run modes local desktoplaptop gridapdistributedjl driver program written sequential execution mode available testsequentialpoissontestsjl executed terminal julia script julia testsequentialpoissontestsjl hand driver program written mpi execution mode shown snippet section involves invocation mpiexecjl script mpiexecjl julia gridapdistributedmpimodeexamplejl appropriate mpi tasks particular example simple example mpiparallel execution mode following julia code snippet solves d poisson parallel unit square example follows mpiparallel execution mode note mpibackend argument withbackend function call executed mpi tasks note mesh partitioned using instructions user sequential execution mode replaces mpibackend sequentialbackend call withbackend gridapdistributedjl sequential execution mode scripts executed julia sequential script using gridap using gridapdistributed using partitionedarrays partition withbackend mpibackend partition domain meshpartition model cartesiandiscretemodel domainmeshpartition reffe referencefe lagrangianfloat testfespace modelreffedirichlettags boundary trialfespace triangulation model d measure d d op affinefeoperator uh solve op writevtk results cellfields uh uh graduh uh domain discretized using parallel cartesian mesh generator built gridapdistributed minimal difference respect sequential gridap script call withbackend function partitionedarraysjl beginning program function programer sets partitionedarraysjl communication backend mpi example specifies layout x partition example provides function using julia block syntax function arguments example run function body equivalent sequential gridap script except cartesiandiscretemodel call gridapdistributed requires argument passed withbackend function using parallel solvers gridapdistributedjl library parallel linear solvers linear solver kernel gridapdistributedjl defined backslash operator sparse lu solver applied global system gathered master task scalable useful testing debug purposes provide set scalable linear nonlinear solvers petsc library gridappetscjl example combines gridapdistributed gridappetscjl refer following tutorial additional examples found test folder gridappetsc linear solver libraries top gridapdistributed developed future partitioned meshes gridapdistributedjl provides built parallel generator cartesian meshes arbitrarydimensional topologically cube domains distributed unstructured meshes generated using gridapgmshjl refer gridappestjl petascale handling meshes decomposed forest quadtreesoctrees computational domain examples distributed solvers combine building blocks found following tutorial complex example mpiparallel execution mode following example combine gridapdistributed parallel implementation pde discretisation gridapgmsh distributed unstructured mesh gridappetsc linear solver step mesh file found using gridap using gridapgmsh using gridappetsc using gridapdistributed using partitionedarrays withbackend mpibackend options ksptype cg pctype gamg kspmonitor gridappetsc args split options model gmshdiscretemodel demomsh dirichlettags boundary boundary uboundary uboundary reffe referencefe lagrangianfloat testfespace modelreffedirichlettags dirichlettags trialfespace uboundaryuboundary interior model d measure d op affinefeoperator solver petsclinearsolver uh solve solverop writevtk demo cellfields uh uh build using gridapdistributedjl package build mpijl package refer main documentation package configuration instructions mpiparallel julia script execution instructions execute mpiparallel gridapdistributedjl driver leverage mpiexecjl script provided mpijl click installation instructions example assuming located root directory gridapdistributedjl hypothetic mpiparallel gridapdistributedjl driver named driverjl executed mpi tasks mpiexecjl project julia driverjl optional highly recommended reduce jit compilation times assumed julia system image pregenerated driver hand using packagecompilerjl package testtestappcompile folder example scripts system image generation test application source available testtestapp scripts triggered githubworkflowsciyml file github ci actions issues warning executing mpiparallel drivers data race conditions generation precompiled modules cache cite gridapdistributed credit gridap gridapdistributed contributors simply cite gridap main project indicated subpackages indicated corresponding repositories please reference publication gridapdistributed articlebadia doi joss url publisher journal volume pages author santiago badia alberto martn francesc verdugo title gridapdistributed massively parallel finite element toolbox julia journal journal source software contributing gridapdistributed gridapdistributed collaborative project contributions contribute please account pr significant contribution contact project administrators issue describing willing implement wait feedback community adhere contribution codeconduct instructions gridapjl project available resp please carefully read follow instructions files pr contribution help issues waiting help start contributing gridapdistributed project solving issu