npcfsjl efficient computation isotropic correlation function npcf julia implements algorithms compute npcf particles dimensions naive count tuplets particles complexity algorithm philcox slepian makes hyperspherical harmonics convert computation pair count compute npcf basis discussed philcox slepian features correlation functions cartesian geometries dimensions optionally periodic boundary conditions spherical geometries dimensions arbitrary particle weights distributed computation arbitrary processors notes spherical coordinates parametrize phi theta polar coordinates phi pi theta pi radial bins equally spaced cossigma sigma circle angle sphere primary particle secondary particles shifted primary particle origin real basis functions ell ell current limitations parity basis functions computed ell ell support included anisotropic basis functions installation install npcfsjl package simply run following julia terminal add npcfs alternatively add download source package loaded using using npcfs usual run test suite command test npcfs quickstart examples compute pcf d particles single node load relevant modules load npcf code using npcfs load additional packages testing using statistics random printf initialize npcf structure relevant parameters assume d periodic box size cartesian coordinates radial bins range lmax boxsize npcf npcf verb true periodic true volume boxsize coords cartesian rmin rmax nbins lmax create data particle positions weights specifications particles pos hcat rand boxsize ones columns weight run code using simple pairwise estimators npcfoutput computenpcfsimple pos npcf npcfoutput computenpcfpairwise pos npcf compute error meanerr mean npcfoutput npcfoutput mean npcfoutput stderr std npcfoutput npcfoutput mean npcfoutput printf fractional error e e meanerrstderr wait code run look output array shape nbins nbins nangular pcf columns index radial bin filling entries binbin final column angular information indexing array functions summarizenpcf print summary npcf parameters angularindicesnpcf return lists angular indices final column npcfoutput arrays example pcf pcf returns list l l l flattened form compute pcf d particles sphere distributed computing distributed computing load npcfs module main process workers using distributed addprocs add workers println using nworkers workers load npcf code locally workers using npcfs using npcfs load additional packages testing using statistics random printf initialize npcf structure create data spherical coordinates theta phi particles randomly positioned sphere radial bins equal cosine angular distance sphere connecting restricted npcf npcf verb true periodic false volume pi coords spherical rmin rmax nbins lmax npart phiarr rand npart pi uniform pi thetaarr acos rand npart costheta uniform pos hcat phiarrthetaarr ones npart run code additional information required specify using distributed computing code figure automatically chunk operations available workers npcfoutput computenpcfsimple pos npcf npcfoutput computenpcfpairwise pos npcf compute error meanerr mean npcfoutput npcfoutput mean npcfoutput stderr std npcfoutput npcfoutput mean npcfoutput printf fractional error e e meanerrstderr output takes similar form array size nbins nbins nbins nangular columns radial bins binbinbin fourth angular index translated l l l indices using l l l angularindicesnpcf authors oliver philcox princeton ia