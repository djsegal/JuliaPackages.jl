overseer entity component system package supplies lightweight performant julian implementation entity component system ecs paradigm applications game development imho programming paradigm benefit broad range applications results clean flexible gradually build applications separated blocks remaining inherently performant due data structured accessed api performance package thoroughly tested practice development glimpsejl mid level rendering toolkit tradingjl comprehensive realtime trading backtesting framework romeodftjl robust global dft based energy optimizer ecs basics main idea ecs separation data logic data logicfree components logic datafree systems systems perform logic set components care usually iterating entities particular combination components systems tend care specific entities allows ideal performance data accessed iterating packed arrays allowing degree flexibility attaching components entities fly ecs implemented lot slightly behaviors introduction specifics implementation understand effectively entity purely identifier index component componentdata data attached entities subtype componentdata stored contiguously component entity index component retrieve data componentdata purely store data logic attached creation accessing system stage logic system empty struct except maybe holding settings info subtypes system overloads functions overseerupdatesystem abstractledger overseerrequestedcomponentssystem perform update perform system main logic latter system added abstractledger component system cares systems stage pairsymbol vectorsystem allow updating specific systems desired abstractledger entities components stages abstractledger takes care creating entities accessing components updating systems runs example understanding action example simulate oscillation rotation entities define components using overseer using geometrytypes component struct spatial position pointfloat velocity vecfloat component struct spring center pointfloat springconstant float component struct rotation omega float center pointfloat axis vecfloat define systems struct oscillator system overseer requestedcomponents oscillator spatial spring function overseer update oscillator abstractledger entitiesin spatial spring newv velocity position center springconstant spatial spatial position newv struct rotator system overseer requestedcomponents rotator spatial rotation function overseer update rotator abstractledger dt entitiesin rotation spatial axis center position theta omega dt nnd dot spatial spatial pointf center nnd nnd cos theta cross sin theta velocity struct mover system overseer requestedcomponents mover spatial function overseer update mover abstractledger dt spat spatial entitiesin spat espat spat spat spatial espat position espat velocity dt espat velocity oscillator cause velocity inwards towards center spring rotator causes rotation axis rotational velocity mover updates positions velocity system iterates entities components rules entitiesin using form entitiesinledger componentdata componentdata entitiesincomp comp comp componentdata comp componentdata rules form entitiesin iterate entities component systems simulation stage construct ledger basic abstractledger generate entities stage stage simulation oscillator rotator mover ledger stage creates overseer system stage makes requested components added e entity spatial point vec spring point e entity spatial point vec rotation point vec e entity spatial point vec rotation point vec spring point e entity spatial point vec created entities acted systems following e oscillator update velocity mover change position e rotator update position mover velocity e ocillator rotator mover act e mover act changes velocity move origin forever ready update look entities evolved notice stages updated sequentially systems inside stage update e componentdata associated e e e e springe accesses spring data entity e entities deleted completely scheduled deletion delete e instantly deletes slow check components e scheduledelete e schedule e batch deletion deletescheduled executes batch deletion data assigned entities e spring point entities removed specific component pop spring e examples please look documentation implementation implementation originally inspired entt using slightly modified sparseintsets track entities hold compon