bitcoinrpcjl package provides julia interface bitcoin jsonrpc api blockchain mining rpcs implemented performing chain analytics primary motivation remaining ones added pull requests welcome install press enter pkg prompt add bitcoinrpc prerequisite run node using gui bitcoin core headless version called bitcoind instructions daemon started bitcoinconf configuration file generated configuration file rpc options enabled allow package communicate node rpc server setting username password credentials authentication example shown rpc accept command line jsonrpc commands server username hashed password jsonrpc connections field userpw comes format usernamesalthash rpc clients connect using rpcuserusernamerpcpasswordpassword arguments generate value option specified multiple times rpcauthvnegieccbbcfbecbbacaeddebbdfbfaaafe listen jsonrpc connections port rpcport set threads service rpc calls rpcthreads set depth queue service rpc calls rpcworkqueue gui daemon started software download copy entire blockchain onto disk means data starting block mined genesis block default download location usually bitcoin free select mind gb space recent blocks recommended authentic reliable data fetched trusted set peers usually nodes running computers world wise trust sources help examples available functions expected output shown detailed usage information obtained via repl help press enter help mode type function name press enter documentation example usage auth userauth rpcuser rpcpassword rpcport julia showblock auth blockhash showbestblockhash auth verbosity dictstring entries time datetime t difficulty e bits previousblockhash bdcaeddffbebbceafbeadf merkleroot bebfaeecefafddaeeabbe height confirmations strippedsize version hash eafbaddfbaad tx eadeefceddaadcfffdcafbb eafbfdedbbaacbfd ize versionhex eight mediantime datetime t tx chainwork cfdccd nonce julia showchaintxstats auth nblocks blockhash showblockhash auth height dictstring entries txcount windowtxcount time datetime t windowinterval windowfinalblockheight windowfinalblockhash fcfebaabbeeaca windowblockcount txrate julia time collectblockstats auth allocations mib gc time dataframe row avgfee avgfeerate avgtxsize blockhash height ins maxfee maxfeerate maxtxsize medianfe float float int string int int float float int float e fbcbf e e cbf e e ddca e e caadc e e ddae e requests batch mode supported recommended performing chain analytics blocks difference time shown compared example julia time collectblockstatsbatch auth batchsize allocations mib gc time dataframe row avgfee avgfeerate avgtxsize blockhash height ins maxfee maxfeerate maxtxsize medianfe float float int string int int float float int float e fbcbf e e cbf e e ddca e e caadc e e ddae e julia collectnetworkstatsbatch auth batchsize dataframe row height time networkhash difficulty int datetime float float t e e t e e t e e t e e t e e results chain analytics cached via memoizationjl dramatically speed repeated calls function example comparison caching julia time collectblockstatsbatch auth batchsize allocations mib gc time compilation time allocations mib gc time allocations mib gc time allocations mib allocations mib gc time caching julia time collectblockstatsbatch auth batchsize allocations mib gc time compilation time allocations bytes allocations bytes allocations bytes allocations bytes provided plotting functions key blockchain metrics visualized repl unicodeplotsjl generate plots examples shown julia plottotalfee auth batchsize daily average total fee block total fee btc time days julia plotnumtxs auth batchsize daily transactions num txs time days julia plotnetworkhashrate auth batchsize daily average network hashrate e hashes e time days julia plotblocktimedist auth batchsize distribution btc block times block time mins counts note idea provide quick visual insight generate proper plots consider using vegalitejl plotsjl maki