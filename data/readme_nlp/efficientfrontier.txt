efficientfrontierjl entire efficient frontier statussegment method features installation license documentation efficientfrontierjl solves following beginarray cl min fracmathbfprimemathbfvzmathbfprime boldsymbolmu mathbfazmathbfmathbb mathbfgzleqmathbfmathbb boldsymbolleqmathbfleqboldsymbolmathbb array mean vector boldsymbolmumathbb variance matrix mathbfmathbbtimes textcolorblue varying infty efficient critical line segments computed using closedform formulas efficient frontier recorded corner portfolios connected parabolas analytical parameter wait quick example statussegment method stage method status asset weight asset falls upper lower bounds interval dn middle interval efficient segment cl critical line value range slope ev plane efficient segment cl provide status information adjacent cls efficient segment adjacent cl found immediately status efficient frontier found entire efficient frontier found features entire efficient frontier calculate entire efficient frontier single frontier portfolio analytical solutions analytical solutions calculations numerical method iterate convergence paper coming soon faster single frontier portfolio solution faster accurate numerical methods clarabel calculate analytical solution numerical iteration convergence versatile simplest shortsale model lower upper bounds inequality constraints equality constraints theoretically require variance matrix symmetric positive definite variance matrix subblocks set symmetric positive definite please refer sp rankdeficient example weather critical line algorithm cla markowitz markowitz todd requires model degenerate asset toggling perturbation method solve degenerated calculations suffer example incorrect results obtained cla perturbation algorithm plugin simplex method combinatorial search method built methods identify status cl example plugin using clarabel provided status value start calculation source code available github distributed mit license arbitrary precision arithmetic support bigfloat v installation efficientfrontierjl added import pkg pkgaddefficientfrontier pkg add efficientfrontier pkg dev efficientfrontier testing nightly version registered version pkg free efficientfrontier license project licensed mit license license file detail