alignedbinaryformat package provides simple powerful interface handle memory mapped data data form array bitarray support table interface eltype array julia primitive type accessing data avoid reinterpret aligning arrays disk convenience string datatype arbitrary serialization saved labels memory mapped memory mapped string considering using vectorchar memory mapped usage example using alignedbinaryformat temp tempname write data following abf abfopen temp write memory mapping requires write abf array rand float abf array rand char alias writeabfrand close abf block syntax abfopen temp abf abf rand write abf bitmat rand write abf log perform serialization wrap type serialized saving datatype wrap serialized struct foo vectorfloat int struct bar string abfopen temp abf write abf type bar write abf foo abfserializer foo rand abf abfopen temp alignedbinaryformatabffileread file tmpjlcmroho label type shape bytes status bitmat bitarray b unloaded foo foo b unloaded log string b unloaded array arrayfloat b unloaded type datatype b unloaded array arraychar b unloaded arrayfloat b unloaded methods accessing data read getindex simply alias read allows dictionary syntax data accessed reference item cached dictionary contained abffile instance permits reference returned remapping data multiple times due repeated read calls strings memory mapped copied directly cache dictionary count abf bitmat read abf array calling readabf label loads array println read abf log abf countabfbitmat alignedbinaryformatabffileread file tmpjlcmroho label type shape bytes status bitmat bitarray b loaded foo foo b unloaded log string b loaded array arrayfloat b loaded type datatype b unloaded array arraychar b unloaded arrayfloat b unloaded example bitmat array memory mapped log cached abfbitmat readabf bitmat return reference bitmat bitmat abf bitmat bitmat read abf bitmat bitmat bitmat bitmat bitmat true close unlink references memory mapping persists file closed unlinked reference garbage collected recommended block syntax avoid unintended access abf abfopen temp write abf rand read abf print stdout mime textplain println abf println close abf abf print stdout mime textplain println element arrayfloat alignedbinaryformatabffilereadwrite file tmpjlcmroho label type shape bytes status arrayfloat b loaded alignedbinaryformatabffileclosed file tmpjlcmroho label type shape bytes status element arrayfloat file permissions modifying data disk mode read data modify data add data description read mode readwrite existing file overwrites existing file write overwrites existing file readwrite modify existing file create exist write modify existing file create exist readwrite read permission required memory map write data file read memorymap memorymapped arrays using read file arrays modified println file abfopen temp abf write abf rand try read abf catch println println file abfopen temp abf write abf rand read abf println file abfopen temp abf abf abf write abf rand abf println file abfopen temp abf read abf abf try catch println println file abfopen temp abf try read abf catch println write abf rand println file abfopen temp abf read abf read abf file alignedbinaryformatabfreaderroriostreamfile tmpjlcmroho file file abf abf file abf readonlymemoryerror file alignedbinaryformatabfreaderroriostreamfile tmpjlcmroho file readabf readabf jldhdf support memory mapping julia isbits primitive type supported data types memory mapping return array reinterpretarray forcing abstractarray type function definitions rand float rand typeof typeof typeof typeof arrayfloat typeof bitarray typeof arrayfloat using jld hdf jldopen temp mmaparrays true write write write jldopen temp mmaparrays true ismmappable typeof read typeof read typeof read rm temp ismmappable false typeofread arrayfloat typeofread bitarray typeofread basereinterpretarrayfloatuintarrayuint matrixfloat able memory mapped vectorfloat read reinterpretarray jld jld actually support memory mapping comment file layout example examine structure following file look abfopen temp abf abf myx rand float abf whybitarr abf log log information file abf somez rand abf alignedbinaryformatabffilereadwrite file tmpjlcmroho label type shape bytes status log string b unloaded myx arrayfloat b unloaded somez arrayfloat b unloaded whybitarr bitarray b unloaded file following layout stored arrays uint indicating endianness numeric data contained uint indicates following data littleendian uint indicates following data endian depends host machine generating file currently conversion little endian supported int indicating length key lengthkeyname string key array int indicating length stringunionarraybitarray string representation container array bitarray string arbitrary code evaluation types determined via immutabledictstringdatatype array int string int indication dimensions int shape array buffer aligned data note labels displayed sorted label written file sequentially bof beginning file x uint little endian length myx myx label item length array array length float float dimensions length dimension length dimension alignment spacing data x uint little endian length whybitarr whybitarr label item length bitarray bitarray dimensions length dimension length dimension alignment spacing data x uint little endian length log log label third item length string string length log information log information x uint little endian length somez somez label fourth item length array array length float float dimensions length dimension alignment spacing data eof file acknowledgements inspiration drawn gist