beta machine learning toolkit machine learning simple beta machine learning toolkit package including algorithms utilities implement machine learning workflows julia python language julia binding currently following models available betaml name mlj interface category perceptronclassifier linearperceptron supervised classifier kernelperceptronclassifier kernelperceptron supervised classifier pegasosclassifier pegasos supervised classifier decisiontreeestimator decisiontreeclassifier decisiontreeregressor supervised regressor classifier randomforestestimator randomforestclassifier randomforestregressor supervised regressor classifier neuralnetworkestimator neuralnetworkregressor multitargetneuralnetworkregressor neuralnetworkclassifier supervised regressor classifier gmmregressor supervised regressor gmmregressor gaussianmixtureregressor multitargetgaussianmixtureregressor supervised regressor kmeansclusterer kmeans unsupervised hard clusterer kmedoidsclusterer kmedoids unsupervised hard clusterer gmmclusterer gaussianmixtureclusterer unsupervised soft clusterer featurebasedimputer simpleimputer unsupervised missing data imputer gmmimputer gaussianmixtureimputer unsupervised missing data imputer rfimputer randomforestimputer unsupervised missing data imputer universalimputer generalimputer unsupervised missing data imputer minmaxscaler data transformer standardscaler data transformer scaler data transformer pca unsupervised dimensionality reduction transformer onehotencoder data transformer ordinalencoder data transformer confusionmatrix predictions assessment theoretical notes describing algorithms companion repository models implemented entirely julia hosted repository wrapper thirdparty models favorite option model missing try implement pull request share section contribute request implementation issue thanks jit compiler julia indeed sweet spot easily write models level language running efficiently documentation please refer package documentation julia inline package system press question mark special help prompt help type module function name package documentation distinct extensively commented tutorial covers library reference manual covering library api looking introductory material julia look book julia quick syntax reference apress online course scientific programming machine learning julia implemented julia package easily python employing juliacall pyjulia respectively relevant section documentation examples using artificial neural network multinomial categorisation example train neural networks model predict specie name th column floral sepals petals measures columns famous iris flower dataset load modules using delimitedfiles random using pipe plots betaml load betaml auxiliary modules random seed fix random seed obtain reproducible results load data iris readdlm joinpath dirname base findpackage betaml test data iriscsv skipstart convert arrayfloat iris convert arraystring iris encode categories levels using separate column category aka hot encoding ohmod onehotencoder yoh fit ohmod split data trainingtesting sets xtrainxtestytrainytestytrainohytestoh partition yoh ntrain ntest size xtrainxtest define artificial neural network model l denselayer relu activation function relu l denselayer activation function identity default l vectorfunctionlayer softmax add parameterless layer activation function softmax defined nodes mynn neuralnetworkestimator layers lllloss crossentropydescr multinomial logistic regression model sepal batchsize epochs build nn crossentropy error function swith autotuning autotunetrue train model using adam optimizer default res fit mynn fit scaler xtrainytrainoh fit model scaled data obtain predictions test ground true observations train pipe predict mynn fit scaler xtrain inversepredict ohmod note scaling reverse hot encoding functions test pipe predict mynn fit scaler xtest inversepredict ohmod trainaccuracy accuracy ytraintrain testaccuracy accuracy ytesttest analyse model performances cm confusionmatrix fit cmytesttest print cm confusionmatrix betamlmodel fitted confusion matrix scores actual rows vs predicted columns matrix labels virginica versicolor setosa virginica versicolor setosa normalised scores actual rows vs predicted columns matrix labels virginica versicolor setosa virginica versicolor setosa confusion report accuracy misclassification rate classes class precision recall specificity fscore actualcount predictedcount tpr tnr support virginica versicolor setosa simple avg weigthed avg info mynn lossperepoch plot length ylabel epochs xlabel error legend title avg error epoch sepal dataset heatmap info cm categories info cm categories info cm normalisedscores cgrad white blue xlabel predicted ylabel actual title confusion matrix examples examples models advanced techniques improve predictions provided documentation tutorial basic examples python micro examples usage various functions studied unittests available test folder limitations alternative packages focus library skewed userfriendliness computational efficiency code relatively easy read heavily optimised currently models operate cpu data fits pc memory data suggest specialised packages list category packages ml toolkitspipelines scikitlearnjl automlpipelinejl mljjl neural networks fluxjl knet decision trees decisiontreejl clustering clusteringjl gaussianmixturesjl missing imputation imputejl todo short term implement autotuning gmmclusterer using bic aic add silhouette method check cluster validity implement pam variants kmedoids mid term add rnn support improve convolutional layers speed reinforcement learning markov decision processes contribute contributions library welcome particularly covered todo list please consider focus didacticresearch easy read documented code simple api reasonable defaults highly optimised algorithms reason fine verbose names please issue discuss ideas directly documented pull request repository required means customising betaml writing example neural network layer type subclassing abstractlayer sampler subclassing abstractdatasampler mixture component subclassing abstractmixture please consider community pull request integrate betaml citations betaml please cite lobianco betaml beta machine learning toolkit selfcontained repository machine learning algorithms julia journal source software article lobianco doi joss url publisher journal volume pages author antonello lobianco title betaml beta machine learning toolkit selfcontained repository machine learning algorithms julia journal journal source software acknowledgements development package bureau economie thorique et applique beta nancy supported french national research agency laboratory excellence arbre investissements avenir program anr labx