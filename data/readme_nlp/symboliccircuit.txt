symbolic system quantum computing install install type julia repl input pkg add https github com overshiki symboliccircuit jl quick start define simplify quantum circuit using symboliccircuit x ugate gx loc h ugate gh loc y ugate gy loc circ x x h y x x h ncirc egraphsimplify circ val defaultrule simplify circ ncirc according commute cancel rules test circuit equivalent according commute cancel rules symboliccircuit areequal val defaultrule circ ncirc return true circ ncirc equivalent otherwise missing yaojl symboliccircuitjl provides method symbolic circuit defined yaoblock yaojl power yaojl avaliable yaocirc toyaocirc numqubits printlnyaocirc plot circuit toyaoplottestplotpng circ plot circuit using yaoplotsjl symboliccircuitjl provide symboliccircuitjl provides symbolic system representation quantum circuit manipulate quantum circuit using term rewriting equality saturation techniques using package easily define syntactic rules quantum circuit example mutation quantum gates apply term rewriting equality saturation modules provided metatheoryjl project highly dependent highly motivated metatheoryjl tasks circuit simplification equivalence detection code generation easily achievable symbolic system symboliccircuitjl quantum gates symboliccircuitjl quantum gates represented instances gate struct example pauli gate st qubit defined using symboliccircuit x ugate gx loc ugate alias gatenormal counterpart gatedagger stands daggered version ugate gx represents type pauli gx short gate loc indicates gate applied qubit define multiqubits gate example cnot gate st qubit controlled nd qubit cnotc ugate gx loc cloc cloc indicates gate controlled nd qubit define parametric gate rotate controlled parameter theta rx ugate rx theta loc simplifying vqe circuits result rotate gate controlled multiple parameterssum multiple rotate angles allow rx ugate rx theta theta theta loc quantum circuit wellknown symbolically quantum circuit chain quantum gate applied left symboliccircuitjl define quantum circuit expression gates connected operator using symboliccircuit x ugate gx loc h ugate gh loc y ugate gy loc circ x x h y x x h allows flexible defining circuit example using symboliccircuit circ headcircuit x h y circ syntactic rules core idea symboliccircuitjl quantum circuit represented using symbolic expression rules mutation rules represented using syntactic rules expressions term rewriting equality saturation system manipulate circuit symboliccircuitjl provide easy define type syntactic rules imagine example simple commute rule cancel rule defined using symboliccircuit using metatheory commute rules comrule rule gate gate iscommute cancel rules canrule rule gate gate iscancel iscommute iscancel functions provided srcgatejl determine gates commute cancelled currently iscommute considers gate gate common loc cloc gate gate gate cnot gate cloc index loc iscancel considers gate gate identical belong unitary hermitian gate gate dagger version gate note rule defination process normal rule defination process metatheoryjl users define rewrite rule using equality rule using following document metatheoryjl symboliccircuitjl provides system gate expression circuit expression metatheoryjl applied addtionally symboliccircuitjl provides built rules applications including circuit simplification equivalence detection code generation release included srcrulejl users symboliccircuitjl course define rules details refer tutorial term rewriting equality saturation core operation symboliccircuitjl apply variaty syntactic rules term rewriting equality saturation system provided metatheoryjl allows powerful circuit manipulate functions example term rewriting transform pauli gates circuit following rewriting rule hxh easily handled using symboliccircuitjl using symboliccircuit using symboliccircuit isz iscommute iscancel using metatheory using metatheory passthrough postwalk x ugate gx loc y ugate gy loc z ugate gz loc z ugate gz loc circ x z y z x z function gethxh gate ugate gh loc ugate gx loc return rule gate gethxh isz postwalk passthrough circuit circ expr course simple rewriting rule using symbolic systems direct coding qiskityaojlmindquantum example mindquantum circuits represented object list class python manipulation easily using pop insert operations power symboliccircuitjl comes qquality saturation techniques symbolic compiler community equality saturationeqsat term rewriting allowed handled example bidirectional rules gate commute rule allowed key eqsat allows combination rewriting operations stored memoryusually efficient egraph data structure implemented metatheoryjl efficiently traversed set search goal search specific expressions equivalent expressions resulted rewriting rules complex task symbolic systems eqsat techniques qiskityaojlmindquantum demonstrate consider circuit simplification operation consider combination commute rule commute cancel rule cancelled simple rules provide strategy simplify circuit pair gates circuit commute cancel try commutation cancellation progress symbolic system eqsat strategy implemented using heuristic approach saturation guarantee saturation guarantee lot codings symboliccircuitjl easily achiveable guarantee combination traversed using symboliccircuit using metatheory using metatheory library rightassociative leftassociative abstractrule push rule gate gate iscommute push rule gate gate iscancel push rule gate push rule gate ra rightassociative la leftassociative push ra push la function simplify circuit egraph circuit params saturationparams timeout eclasslimit report saturate params circuit extract astsize return circuit circ x x h y x x h ncirc simplify circ result ugate gy loc powerful function provided system allows detect circuit equivalence rules example continue circuit simplification task areequal circ ncirc results true tell circ ncirc equivalent rules practical usage symboliccircuitjl openbox toolset practical task symboliccircuitjl currently provides built functions including circuit simplification equivalence detection default set syntactic rules simplification target code generation function list functions egraphsimplify circuit simplification using default set rules circ x x h y x x h circ egraphsimplify circ val defaultrule verbose false areequal overload areequal function metatheoryjl using default set rules symboliccircuit areequal val defaultrule circ circ circ information information please refer test folder issue pr welcomed step examples example folder rewriting rules gate reduction functions codegen numerical simulation document