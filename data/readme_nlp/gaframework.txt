gaframework genetic algorithm framework multithreading gaframework framework writing genetic algorithms julia supports parallelism calculating crossovers fitness using julia multithreading capabilities gaframework stores entire genetic algorithm object allows save entire file allows continue running ga load file stop generation allows change parameters crossovermutation parameters stop generation continue stopped gaframework replicable respect pseudorandomness specify random generator gaframework replicate ga run threads runs gaframework contains genetic algorithm implementation minimizes function box coordinate space installation using pkg pkgaddgaframework implementing ga specific create ga specific create concrete subtype gamodel create relevant functions subtypes demonstrate create ga optimizing function box coordinate space function import gaframework module import relevant functions using gaframework import gaframework fitness genauxga crossover mutation selection randcreature printfitness savecreature create subtype gamodel contains function corners box xmin xmax span box xspan contains clamp field clamp true clamp mutated crossovered box solutions inside box otherwise solutions constrained struct functionmodel gamodel xmin xmax xspan xmaxxmin clamp bool function functionmodel xminxmaxclamp bool true xspan xmax xmin functionmodel typeofxspan xminxmaxxspanclamp create type contains chromosomes creature value field objective value function objvalue field calculate objective value creating coordinatecreature object struct coordinatecreature value objvalue float coordinatecreature value model functionmodel coordinatecreature value model value genetic algorithms maximize fitness function minimizing objective value set fitness negative objective value depending selection function fitnesscoordinatecreature negative probability value etc bulk calculation relegated coordinatecreature object created fitness function repeatedly called selection sorting fast simple function identity negation fitness coordinatecreature objvalue following creates randomly generated coordinatecreature object creates random drawn uniform probability box note aux store auxiliary scratch space minimize memory allocations aux created overloading genauxgamodelfunctionmodel function produce memorysafe respect multithreading auxiliary scratch space example scratch space randcreature functionmodel aux rng abstractrng coordinatecreature xmin xspan rand rng length xspan following defines crossover operator define crossover average crossover operator note re memory object creating coordinatecreature function crossover coordinatecreature coordinatecreature coordinatecreature st gastate aux rng abstractrng value value value coordinatecreature value st model following defines mutation operator draw vector circular normal distribution scale box shift original drawn vector mutation operator clamping optionally restrict inside box function mutation coordinatecreature functionmodel params curgen aux rng rand rng params rate value xspan randn rng length value clamp value clamp value xmin xmax coordinatecreature value else tournament selection selection operator selection pop vectorcoordinatecreature integer rng selection tournamentselection pop rng defines print details creature compressed form printfitness curgen integer coordinatecreature println curgen curgen value value obj value objvalue defines save creature file gaframework save creature file using function savecreature filenameprefix abstractstring curgen integer creature coordinatecreature model functionmodel save filenameprefix creature curgen jld creature creature summary implement ga using following code module coordinatega using gaframework import gaframework fitness crossover mutation selection randcreature using random struct functionmodel gamodel xmin xmax xspan xmaxxmin clamp bool function functionmodel xminxmaxclamp bool true xspan xmax xmin functionmodel typeofxspan xminxmaxxspanclamp struct coordinatecreature value objvalue float coordinatecreature value model functionmodel coordinatecreature value model value fitness coordinatecreature objvalue randcreature functionmodel aux rng abstractrng coordinatecreature xmin xspan rand rng length xspan function crossover coordinatecreature coordinatecreature coordinatecreature st gastate aux rng abstractrng value value value coordinatecreature value st model function mutation coordinatecreature functionmodel params curgen aux rng rand rng params rate value xspan randn rng length value clamp value clamp value xmin xmax coordinatecreature value else selection pop vectorcoordinatecreature integer rng selection tournamentselection pop rng variation ga srcmodelscoordinategajl examples srcmodelspermgajl srcmodelsmagnagajl running ga takes care implement using gaframework define creating functionmodel fun minimize function sin interval model functionmodel sin minimize function sin d euclidean space rectangle using linearalgebra model functionmodel dot sin minimize function dimensional euclidean space box using linearalgebra x model functionmodel norm x minimum corner maximum corner box create ga population size maximum generations fraction elite creatures mutation rate printing objective value iterations gastate function generates population contains data required startrestart ga generation ga create children using crossover selected using selection parents replace elites current generation children respect fitness mutate population using mutation gastate model ngen npop elitefraction params dict mutationrate printfitnessiter runs ga ga pop creature fitness version functionmodel coordinatecreature included gaframework executing statement using gaframeworkcoordinatega restarting finish ga run using ga decide continue optimizing generations following change maximum generations restart ga continuing ga stopped earlier ngen ga replicability respect pseudorandomness gaframework pseudorandom operations replicate ga run using rng option using random generators provided functions generate random setting rng object subtype abstractrng percolate throughout ga allowing replicate run default rng set mersennetwisterranduint state gastate model ngen npop elitefraction params dict mutationrate printfitnessiter rng mersennetwister best ga state state gastate model ngen npop elitefraction params dict mutationrate printfitnessiter rng mersennetwister best ga state println getfield state getfield state fieldnames gastate true println best best true saving creature file save creature file iterations using following gastate ngen npop elitefraction params dict mutationrate printfitnessiter savecreatureiter filenameprefix minexp finish ga run using ga decide save creature file afterwards following savecreature minexp ngen pop model saving ga file save ga file iterations using following note unfortunately functionmodel contains function field types contain functions gastate ngen npop elitefraction params dict mutationrate printfitnessiter savecreatureiter filenameprefix minexp happens middle running ga reload file th generation follows restart ga saved generation loadgastate minexpstatejld ga directly save using following savegastate minexp ngen