pegparser pegparser peg parser julia packrat capabilties pegparser inspired pyparsing parsimonious boostspirit defining grammar define grammar write grammar name begin rule rule allowed rules following rules terminals strings characters optional zero look ahead regular expressions za lists listrule delim listrule delim min suppression rule semantic action rule expr semantic actions expr variables node value children value variable corresponding alias element children i index children examples using todo multiple example start creating simple calculator operator result define grammar grammar calc begin start op op plus minus space plus space minus space space grammars default start starting rule specify starting rule parse function desire starting rule composed rules op calculator allow note written concisely op space rule matches digit note spaces appear front terminals pegs handle spaces automatically run grammar input ast pos error parse calc println ast result following output nodestart andrule node andrule node regexrule nodeplus andrule nodeplus terminal node andrule node regexrule input correctly parsed input traverse tree result change output parse change output parse semantic actions rule semantic action attached normally set return node tree rule child node example change rule emit actual space parseint value curlybraces rule allows expression function action child space suppressed specified parsed integer rewrite grammar actions defined rules grammar calc begin start op apply eval op plus minus space parseint value plus space symbol value minus space symbol value space data ast pos error parse calc data println ast answer parse calculation code found calcjl calcjl providing realistic useful calculator example calcjl approach instead trying calculate answer immediately syntax tree created allows transformed forms example transform tree julia code grammar calc begin start expr exprop term op expr expr exprop term termop factor op term term termop factor factor pfactor pfactor lparen expr rparen op add sub op mult div space float parsefloat value space integer parseint value add space symbol value sub space symbol value mult space symbol value div space symbol value lparen space rparen space space notice instead trying define integer float manually using predefined parsers custom parsers defined defining grammars easier add types functionality maintaining symbol tables grammar ready parse strings ast pos error parse calc results following ast nodestart referencedrule nodeexprop andrule float symbol nodetermop andrule int symbol nodeexprop andrule int symbol float ast create transforms convert ast julia code toexpr node cnodes matchruledefault cnodes toexpr node cnodes matchruletermop expr call cnodes cnodes cnodes toexpr node cnodes matchruleexprop expr call cnodes cnodes cnodes transforms code transform toexpr ast generate expr expr head symbol call args array symbol float expr head symbol call args array symbol int expr head symbol call args array typ typ typ caveats progress test coverage error handling lot currently single error emitted hope allow multiple errors return