metamergejl package currently registered repl clone julia pkgclonegit v changed merge fmerge avoid potential name conflicts base ironic plan added support arbitrary module function arguments fmerge added tracking mechanism sorts methods added via fmerge motivation example usage suppose create function main julia generic function method suppose intend following modules module export immutable foo foo print foo int module export immutable bar bar print bar int julia unqualified name common modules name elicit behavior depends declare using modules julia using warning using module main conflicts existing identifier warning using module main conflicts existing identifier julia methods method generic function none julia foo error method matching foo julia foo foo suppose unqualified refer correct object depending signature argument called package offers functionality fmerge function merges methods original function defined main core extending defined main allows unqualified name dispatch signatures methods defined modules julia fmerge julia methods methods generic function none xafoo xbbar julia foo foo julia bar bar merged methods argument name module method originates appended argument method definition seen help track methods modules machinery track recent module method originates method merged multiple times multiple modules ultimate origin obscured note method signature int merged methods signature choose merge optional priority keyword argument takes array module function tuples priority rank julia fmerge priority julia methods methods generic function none xafoo xbbar xaint julia signature method exists module module method whichever module module rank lower numerical rank merged module function arguments passed fmerge omitted priority default lowest rank module module rank occur specified priority neither method merged means omits priority argument methods signatures unambiguously specify precisely module function arguments passed fmerge merged warning figured reflection distinguish otherwise identical signatures userdefined types name module defined foo type defined method foo methods seen conflict fmerge call fmerge modules main module export using metamerge union fmerge conflictsfavor int result unqualified module dispatch methods defined check repl julia methods methods generic function none none xafoo xaint xbbar julia hope versatility makes fmerge suitable outside repl free fmerge functions names functions module currently merge handles module function tuples argument future able call merge arguments merge merge featured v currently merge multiple functions modules merge set names individually future mergeall function automatically merges commonly named functions modules mergeall conflictsfavor generates list function names common merge handle name clashes user defined types modules warn