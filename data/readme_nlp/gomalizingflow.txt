gomalizingflowjl julia package flowbased sampling algorithm abstract gomalizingflowjl package generate configurations using flow based sampling algorithm julia programming language software serves main purposes acceralate research lattice qcd machine learning easy prototyping provide independent implimentation existing code pythonpytorch gomalizingflowjl implements flow based sampling algorithm namely realnvp metropolishastings test dimension dimensional scalar field switched parameter file hmc theory implemented comparison code cpu nvidia gpu usage tl dr git clone cd gomalizingflowjl install docker gnu command docker compose run rm julia julia begintrainingjl cfgsexampledtoml usage detailed description re familiar julia especially deep learning gpu setup environment via julia using pkg pkg instantiate julia using gomalizingflow julia hp gomalizingflow loadhyperparams cfgsexampledtoml deviceid pretrained result result julia gomalizingflow train hp otherwise recommend create using docker container following instructions step step step setup environment using docker install docker precisely nvidia container toolkit gnu author development environment linuxubuntu cat etclsbrelease distribidubuntu distribrelease distribcodenamejammy distribdescriptionubuntu lts version gnu built xpclinuxgnu copyright free software foundation inc license gplv gnu gpl version free software free change redistribute warranty extent permitted law docker version docker version build aeeb nvidiasmi fri mar nvidiasmi driver version cuda version gpu name persistence busid disp volatile uncorr ecc fan temp perf pwrusagecap memoryusage gpuutil compute mig nvidia geforce c p w w mib mib default nvidia geforce c p w w mib mib default cat etcdockerdaemonjson defaultruntime nvidia runtimes nvidia args path nvidiacontainerruntime step build docker image create docker image named gomalizingflowjl tips nvidiasmi cuda version run instead cudaversion step start training using docker syntax train model via docker compose run rm julia julia begintrainingjl pathconfigtoml example docker compose run rm julia julia begintrainingjl cfgsexampledtoml run realistic time using gpu accelerator generate artifacts resultsexampled ls resultexampled manifesttoml evaluationscsv src projecttoml historybson trainedmodelbson configtoml historybestessbson trainedmodelbestessbson trained model trainedmodelbson training log evaluationscsv configurations generated flow based sampling algorithm historybson tips training d field theory run docker compose run rm julia julia begintrainingjl cfgsexampledtoml d field theory parameter gpu training nvidiasmi command found container gomalizingflowjl docker compose run rm julia bash nvidiasmi environments produce result bash line nvidiasmi command found try docker compose run rm juliagpu bash nvidiasmi instead note juliagpu refers service name found dockercomposeyml juliagpu image gomalizingflowjl runtime nvidia containername gomalizingflowjljuliagpu volumes workingdir command julia project step watch evaluationscsv training training watch value ess epoch run training script usual docker compose run rm julia julia begintrainingjl pathconfigtoml terminal run following docker compose run rm julia julia watchjl pathconfigtoml display plot terminal docker compose run rm julia julia watchjl cfgsexampledtoml creating gomalizingflowjljuliarun info serving atelierarithgomalizingflowjlresultexampled info evaluationscsv updated evaluation ess ess epoch support acceptancerate adding item acceptancerate docker compose run rm julia julia watchjl cfgsexampledetoml item acceptancerate creating gomalizingflowjljuliarun info serving resultexamplede info evaluationscsv updated evaluation acceptancerate acceptancerate epoch step analyse results training step load trained model specify calculate zeromomentum functions using cuda flux parameterschedulers require call restore function using gomalizingflow plots progressmeter backend unicodeplots select backend call gr backend gr resultexampled resultexampled trainedmodel history gomalizingflow restore hp gomalizingflow loadhyperparams joinpath configtoml latticeshape hp pp latticeshape cfgs flux mlutils batch history eltype cfgs yvalues showprogress hp pp gomalizingflow mfgc cfgs push yvalues plot hp pp yvalues label affinecouplinglayer result julia plot hp pp yvalues label affinecouplinglayer affinecouplinglayer playgroundnotebookjuliaanalysistoolmd playgroundnotebookjulia examples directory structure directory structure project tree cfgs playground process trial error documented notebook julia python pluto src contains training script etc test test runs package testruntestsjl file assets pymod playground lots jupyter notebooks playgroundnotebookjulia regarding project readers learn trial error process led release software run jupyter lab server locally usual via docker compose lab creating gomalizingflowjllab attaching gomalizingflowjllab stuff happen gomalizingflowjllab gomalizingflowjllab access server file browser gomalizingflowjllab filehomejovyanlocalsharejupyterruntimejpserverhtml gomalizingflowjllab copy paste urls gomalizingflowjllab gomalizingflowjllab click link terminal track jupyter notebooks md power jupytext ipynb citation bibtex item obtained inspirehep articletomiyameu author tomiya akio terasaki satoshi title gomalizingflowjl julia package flowbased sampling algorithm lattice field theory eprint archiveprefix arxiv primaryclass heplat month appendix gomalizing sense humor understand combinationalconvolution flowbased sampling algorithm code available gomalizingflowjlplaygroundnotebookjuliadflowcmd combiconv tag