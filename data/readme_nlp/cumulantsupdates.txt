cumulantsupdatesjl updates following statistics variate data th moment tensor array moment tensors realisations variate data update returns array updated cumulant tensors store symmetric tensors symmetrictensors type requires symmetrictensorsjl convert array run julia array st symmetrictensors convert run julia symmetrictensor array requires cumulantsjl kdomino lead maintainer package installation julia run pkg add cumulantsupdates install files julia required parallel computation parallel computation run julia addprocs julia using cumulantsupdates functions data update update data update observation window size vcat run julia dataupdat matrix xplus matrix abstractfloat condition fulfilled julia ones arrayfloat julia zeros arrayfloat julia dataupdat arrayfloat moment update update moment tensor symmetrictensor data update run julia momentupdat symmetrictensor matrix xplus matrix abstractfloat returns symmetrictensor moment tensor updated multivariate data dataupdat moment momentupdat moment momentupdat faster recalculation julia ones julia symmetrictensor float union arrayfloat true julia ones julia momentupdat symmetrictensor float union arrayfloat true function momentarray compute array moments data julia momentarray matrix int int abstractfloat symmetrictensor parameter block size update array moments calling julia momentupdat arraysymmetrictensor matrix xplus matrix abstractfloat returns arraysymmetrictensor moment tensors updated multivariate data dataupdat m momentarray momentupdatm momentarray cumulants update functions design sequent update multivariate cumulant tensors hence applied data streaming scheme suppose data subsequent coming updates suppose compute cumulant tensors observation window size time update comes store data amd moments following structure mutable struct datamoments abstractfloat following fields data maximal moment series block size moment series initialise following constructor julia datamoments matrix int int abstractfloat array moments computed update datamoments structure compute updated cumulants run julia cumulantsupdate dm datamoments xplus matrix abstractfloat function updates datamoment structure returns series cumulants dm updated data julia ones julia datamoments julia zeros julia cumulantsupdate symmetrictensor float union arrayfloat true save datamoments structure julia savedm dm datamoments dir string load julia loaddm dir string returns datamoments structure stored directory norm julia norm st symmetrictensor unionfloat int abstractfloat returns norm tensor stored symmetrictensors supported output normst nornconvertarray st normstsymmetrictensor block structure implemented symmetrictensors hence faster decreases computer memory requirement julia te julia st symmetrictensor reshape te julia norm st julia norm st julia norm st convert cumulants moments moments cumulants vector moments change vector cumulants using julia function momscums vectorsymmetrictensor abstractfloat convert vector cumulants vector moments running julia function cumsmoms vectorsymmetrictensor abstractfloat julia momentarray ones element arraysymmetrictensorfloat symmetrictensor float union arrayfloat false symmetrictensor float union arrayfloat false symmetrictensor float union arrayfloat union arrayfloat false julia momscums julia element arraysymmetrictensorfloat symmetrictensor float union arrayfloat false symmetrictensor float union arrayfloat undef false symmetrictensor float union arrayfloat undef undef undef union arrayfloat undef false julia cumsmoms element arraysymmetrictensorfloat symmetrictensor float union arrayfloat false symmetrictensor float union arrayfloat undef false symmetrictensor float union arrayfloat undef undef undef union arrayfloat undef false performance tests analyse computational time cumulants updates vs cumulantsjl recalculation supply executable script comptimesjl script saves computational times resjld file scripts accept following parameters int cumulant maximum default vararg int marginal variables default int realisations random variable default vararg int realisations update default int blocks size default int processes default analyse computational time cumulants updates block sizes int supply executable script comptimesblocksjl script saves computational times resjld file scripts accept following parameters int cumulant default int marginal variables default vararg int realisations update default int processes default analyse computational time cumulants updates workers supply executable script comptimesprocsjl script saves computational times resjld file scripts accept following parameters int cumulant default int marginal variables default vararg int realisations update default int blocks size default int maximal processes default plot computational times run executable resplotcomptimesjl chosen jld file citing krzysztof domino piotr gawron algorithm arbitrary cumulant tensor calculation sliding window data streams international journal applied mathematics computer science vol issue pp project partially financed national science centre poland project st