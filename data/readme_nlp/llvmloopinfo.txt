llvmloopinfo llvm docs info loop info julia allows specifying loop info convenient api package aims provide using llvmloopinfo loopvectorization benchmarktools rand rand function fmdot set baseline zero base promoteeltype eachindex inbounds fastmath function simddot set baseline zero base promoteeltype inbounds simd eachindex function lvdot set baseline zero base promoteeltype turbo eachindex function vpdot zero base promoteeltype generate single loop body mask loopinfo predicate eachindex inbounds fastmath function vdot zero base promoteeltype elementssimd vector loopinfo vectorwidth eachindex inbounds fastmath function vpreddot add multiple loop info zero base promoteeltype generate single loop body mask loopinfo vectorwidth predicate eachindex inbounds fastmath function udot zero base promoteeltype unroll count loopinfo unrollcount eachindex fastmath inbounds function udot zero base promoteeltype unroll loopinfo unroll eachindex fastmath inbounds function noudot zero base promoteeltype unroll loopinfo unroll false eachindex fastmath inbounds btime fmdot btime simddot btime lvdot btime vpdot btime vdot btime vpreddot btime udot btime udot btime noudot sample result julia btime fmdot ns allocations bytes julia btime simddot ns allocations bytes julia btime lvdot ns allocations bytes julia btime vpdot ns allocations bytes julia btime vdot ns allocations bytes julia btime vpreddot ns allocations bytes julia btime udot ns allocations bytes julia btime udot ns allocations bytes julia btime noudot ns allocations bytes julia versioninfo julia version dev commit e c utc platform info os linux x generic linux cpu intel core tm i cpu ghz wordsize libm libopenlibm llvm libllvm orcjit skylake avx threads virtual cores options include vectorize predicate implies vectorize llvmloopinfo mapsymbol unroll automatically expanded options note manually specify loopinfo varllvmloopunrollcount option available re looking missing please file pr explanation example cpu benchmarking avx default llvm create loops unrolled vectorized loop ll unroll x bit vectors cpu avx bit vector hold x float scalar epilogue loop evaluating dot product vectors length ll evaluated iteration loop covering iterations iterations scalar loop happens fmdot simddot loops enabling predicates instead create single unrolled vector loop masks excess iterations vpdot evaluate loop times using masked operations overshoots iteration faster scalar epilogue setting vector width means iteration unrolled vectorized loop cover iterations loop iterations total words setting vector width means vector iterations scalar epilogue iterations slow enabling vector width predication means instead masked vector iterations fast ties loopvectorizationjl turbo predication masking turbo unrolls faster trip counts unrollcount means unroll unrollfalse vector width mean unmasked vector iterations followed scalar iterations setting unrolltrue generates nasty looking assembly shuffles performance vectorize epilogu