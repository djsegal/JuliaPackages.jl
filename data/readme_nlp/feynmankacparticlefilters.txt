feynmankacparticlefilters package perform particle filtering likelihood estimation smoothing using feynmankac formalism filtering likelihood estimation illustrated stochastic diffusion equation models coxingersollross cir model dimensional continuous wright fisher model continuous time infinite population jenkins span instance particle smoothing wrightfisher model implemented lack tractable form transition density outputs marginal likelihood samples filtering distribution samples marginal smoothing distribution implemented bootstrap particle filter adaptive resampling forward filtering backward sampling ffbs algorithm potentially useful functions evaluation transition density coxingersollross process based representation bessel function random trajectory generation coxingersollross process based gamma poisson expansion transition density preliminary notions feynmankac formalism feynmankac formalism allows formulate types particle filters using abstract elements input generic particle filter feynmankac model mt gt gt potential function evaluated values simulate mdx mtxt dxt particles choice unbiased resampling scheme multinomial algorithm draw variables rs distribution adaptive resampling addition scalar using formalism boostrap filter expressed gx fyx emission density gtxt xt fytxt mdx pdx prior hidden mtxt dxt ptxt dxt transition function install package press julia interpreter enter pkg mode input pkg add https github com konkam feynmankacparticlefilters jl package example cir model transition density cir process available easy simulate moreover consider poisson distribution emission density start simulating data function simulate transition density available package using feynmankacparticlefilters distributions random random seed t nobs nsteps nparts timegrid t nsteps times t nsteps feynmankacparticlefilters generatecirtrajectory timegrid map rand poisson nobs data zip times dict element arrayfloat filtering define logpotential function gt simulator transition kernel coxingersollross model resampling scheme multinomial mt feynmankacparticlefilters createtransitionkernelscir data loggt feynmankacparticlefilters createlogpotentialfunctionscir data rs rand categorical length running boostrap filter algorithm performed follows pf feynmankacparticlefilters genericparticlefilteringadaptiveresamplinglogweights mt loggt nparts rs sample nsamples values th filtering distributions nsamples feynmankacparticlefilters samplefromfilteringdistributionslogweights pf nsamples element arrayfloat smoothing forward filtering backward sampling ffbs perform simple particle smoothing cir process using ffbs algorithm additionally function evaluates transition density cir process transitionlogdensitycir xtp xt tp feynmankacparticlefilters cirtransitionlogdensity xtp xt tp transition density obtain ffbs filter ps feynmankacparticlefilters genericffbsalgorithmlogweights mt loggt nparts nparts rs transitionlogdensitycir sample nsamples values th smoothing distribution nsamples feynmankacparticlefilters samplefromsmoothingdistributionslogweights ps nsamples element arrayfloat references briers doucet maskell smoothing algorithms space models annals institute statistical mathematics chopin papaspiliopoulos concise introduction sequential monte carlo appear del moral feynmankac formulae genealogical interacting particle systems applications probability applications springer verlag york jenkins span exact simulation wrightfisher diffusion annals applied prob