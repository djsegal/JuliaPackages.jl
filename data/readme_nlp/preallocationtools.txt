preallocationtoolsjl preallocationtoolsjl set tools helping build allocating precached functions performance computing julia tools handle edge automatic differentiation easier users performance code generation change function called diffcache diffcache type doublypreallocated vectors compatible allocating forwardmode automatic differentiation forwarddiffjl forwarddiff chunked duals forward pass vector sizes required arrays properly defined diffcache creates dispatching type solve passing qualifier automatically switch required cache method typestable dynamic performance using diffcache diffcache abstractarray int forwarddiff pickchunksize length levels int diffcache abstractarray abstractarrayint diffcache function builds diffcache object stores version cache dual version allowing precached vectors forwardmode automatic differentiation note diffcache due design compatible arrays contain concretely typed elements access caches gettmp tmp diffcache element subtype dual returns dual version cache otherwise returns standard cache calls automatic differentiation preallocate size diffcache specified correct matching chunk size dual larger chunk size specified gettmp automatically resize dispatching remains typestable allocating comes expense additional memory differential equation optimization etc default chunk size computed vector creates diffcache via diffcache match default chunking solver libraries diffcache compatible nested automatic differentiation calls levels keyword level computed using based size vector specifying array integers chunk sizes enables control chunk sizes differentation levels diffcache example direct usage using forwarddiff preallocationtools randmat rand sto similar randmat stod diffcache sto function claytonsample sto randmat randmat sto gettmp sto sto randmat return sto size sto sto sto sto sto return sto forwarddiff derivative claytonsample stod forwarddiff jacobian claytonsample stod chunk size dual selected based size randmat resulting chunk size derivative calculated respect jacobian calculated respect specifying diffcache stod diffcachesto stod diffcachesto respectively memory efficient performing calculations relevant larger diffcache example odes using linearalgebra ordinarydiffeq function foo du tmp mul tmp du tmp prob odeproblem foo ones ones zeros solve prob trbdf fails tmp real automatic differentiation tmp cache dual value dual dispatch based using linearalgebra ordinarydiffeq preallocationtools function foo du tmp tmp gettmp tmp mul tmp du tmp chunksize prob odeproblem foo ones ones diffcache zeros chunksize solve prob trbdf chunksize chunksize using default chunking using linearalgebra ordinarydiffeq preallocationtools function foo du tmp tmp gettmp tmp mul tmp du tmp chunksize prob odeproblem foo ones ones diffcache zeros solve prob trbdf diffcache example nested ad calls optimization involving hessian matrix using linearalgebra ordinarydiffeq preallocationtools optimization optimizationoptimjl function foo du tmp reshape size tmp du tmp gettmp tmp mul tmp du tmp coeffs collect cache diffcache zeros levels prob odeproblem foo ones coeffs cache realsol solve prob trbdf saveat reltol e function objfun prob realsol cache prob remake prob u eltype prob u cache sol solve prob trbdf saveat reltol e ofv retcode success sol ofv e else ofv sum sol realsol return ofv fn objfun optfun optimizationfunction fn optimization autoforwarddiff optprob optimizationproblem optfun zeros length coeffs prob realsol cache solve optprob newton solves optimization coefficients coeffs appearing differential equation optimization optimjl newton algorithm involves automatic differentiation ode solver calculation hessians automatic differentiations nested diffcache specified levels fixedsizediffcache fixedsizediffcache lot diffcache stores dual caches instead flat array avoid view little bit performant generating caches array types lot flexible diffcache recommended chunk size advance example ode solvers array interface exactly except constructor fixedsizediffcache abstractarray chunksize valforwarddiff pickchunksize length fixedsizediffcache abstractarray chunksize integer note fixedsizediffcache support duals chunk size preallocated ones larger size nested duals supported construct lazybuffercache lazybuffercache identity lazybuffercache dict type caches automatically defines cache arrays demand required function maps sizeofcache size default creates cache arrays size note lazybuffercache cause dynamic dispatch typestable ns overhead reduce performance sufficiently sized calculation odes measurable upside lazybuffercache user worry potential issues chunk sizes lazybuffercache easier example using linearalgebra ordinarydiffeq preallocationtools function foo du lbc tmp lbc mul tmp du tmp prob odeproblem foo ones ones lazybuffercache solve prob trbdf generallazybuffercache generallazybuffercache identity generallazybuffercache dict type caches automatically defines caches demand required function generates cache matching type subsequent indexing reuses cache type ben seen note lazybuffercache cause dynamic dispatch return typeinferred means slowest preallocation methods example previous cache array preallocate differentialequations odeintegrator object object created via differentialequationsinitodeproblemodefnc y tsit saveat optimize changes type forwarddiff generallazybuffercache holds integrator objects defined indexing retrieve cache time called build integrator subsequent calls reuse cache defining cache function build integrator looks lbc generallazybuffercache function differentialequations init odeproblem odefnc y tsit saveat lbc smart reuse caches example looks following using random differentialequations linearalgebra optimization optimizationnlopt optimizationoptimjl preallocationtools lbc generallazybuffercache function differentialequations init odeproblem odefnc y tsit saveat random seed y t t y exp y randn odefnc function loglik data integrator y data u integrator reinit integrator u solve integrator y integrator sol log sum negloglik loglik lbc fnc optimizationfunction negloglik optimization autoforwarddiff zeros prob optimizationproblem fnc y lb e ub solve prob lbfgs similar projects autopreallocationjl tries automatically compiler level allocjl tries bump alloc