mexjl embedding julia matlab process mexjl embeds julia matlab process using matlab mex interface allows julia functions called matlab allows embedded julia call matlab functions prerequisites package matlab ab versions currently incompatible matlabjl mexjl requires matlab julia compiler configured matlab mex command required building mexjulia mex function check compiler properly configured executing mex setup matlab command prompt installation ensure matlabjl julia package properly installed enter package manager typing run following pkg add mex build process julia determine build options build mexjulia mex function source add mexjulia directory matlab path default mexjl matlab installation version specify specific matlab installation set environment variable matlabroot quick start jleval parse evaluate matlab strings julia expressions jleval ans int evaluate multiple expressions single call jlevalsinpi cospi note julia stdout stderr redirected matlab console matlab launched terminal appear jlevalprintlnhello world jlevalwarnoh avoid parentheses string quotes using jleval simple wrapper jleval matlab command syntax jleval ans int jleval printlnhello world hello world jlcall call julia function specified name string jlcallfactorial int ans load julia code calling jlinclude jlincludemyownjuliacodejl exercise control data marshaled matlab julia defining julia function mex signature invoking jlmex jleval import matlab jleval doubleitargsvectormatlabmxarray matlabjvaluearg arg args rand jlmexdoubleit ans argument jlmex name function invoked remaining arguments treated function arguments jlmex expects functions invoked accept single argument type vectormatlabmxarray return iterable collection values matlabmxarray successfully invoked value type vectormatlabmxarray additional examples additional usage examples found examples folder performance learn reduce overhead associated package performance example folder credits starting development package mexjulia project designed embed versions julia matlab process