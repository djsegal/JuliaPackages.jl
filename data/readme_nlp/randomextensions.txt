randomextensions package explores extension rand related functionalities random module code initially julialangjulia note type piracy committed hopefully useful package experimental hence unstable user feedback design implementation contributions welcome essentially define distribution objects class status features provided random example randnormal equivalent randn available distributions exponential closeopen generation floats close range friends uniform wrap implicit uniform distribution define methods combine distributions objects multiple scalars pair tuple complex describe generate complex objects containers extend randrng dims api allow generation containers arrays set dict sparsearray string bitarray define rand iterator produces lazily random values defines distribution type incompatible distributionsjl package input unify approaches welcome core package provides vocabulary define generation scalars require argument described pairs int randpair int regular containers array calling putting arguments rand directly simplicity composability call occurs argument rand rng omitted example randarray creates array matrices course achieved ad hoc struct clearer normal float valnormal experimental feature following alternative api available rand equivalent rand rand equivalent rand convenience readable efficient due type pair containing type exact type pair int type pairunionalldatatype rand infer type generated value thanks inlining inferred types sufficiently tight randcomplex int type vectorcomplexint instead vector allows rand set produce set length values idea randrng cont etc equivalent randrng cont etc design goes somewhat trend base create containers using constructors achieved via rand iterator terse approach simply generalizes containers current rand api creating arrays issue linked discussion topics convenience following names random reexported package rand abstractrng mersennetwister randomdevice rand base functions randn randstring considered obsoleted package reexported import random separately functions extend rand api namely randsubseq shuffle randperm randcycle mutating variants documentation rand docstring updated examples julia rand closeopen float equivalent randfloat julia rand closeclose f generation f f f julia rand openopen exactness guaranteed unreasonable values true julia rand normal explicit parameters julia rand uniform equivalent rand julia rand pair normal random pair distinct distributions julia rand pair normal specify pair type pair julia rand pairfloatint equivalent randpair float int julia rand tuple uint openclose xb julia rand tuplefloatint equivalent randtuple float int julia rand ntuple produces tuple values julia rand ntupleuint x x x x x julia rand ntuple pair bool calls nested false true false julia rand complex normal coordinate drawn normal distribution im julia rand complex normal distinct distributions im julia rand normal complexf equivalent randncomplexf im julia rand set set julia rand ans exponential set julia rand set try rand set set julia rand dictstringint dictstringint entries vxybibae boftwuq julia rand pair normal dict dictintfloat entries julia rand sparsevector equivalent sprand element sparsevectorfloatint stored entries julia rand normal sparsematrixcsc equivalent sprandn sparsematrixcscfloatint stored entries array sparse arrays enjoy special cased sparsevector sparsematrixcsc omitted rand call call julia rand sparsevector bug ugly output empty sparsematrixcscsparsevectorintintint stored entries julia rand string equivalent randstring o julia rand string string creation container syntax julia rand string equivalent call julia rand string set string considered scalar set dfqjyr ilngfcrz htieyk julia rand bitarray equivalent unfortunately verbose bitrand element bitarray true true false julia julia rand bernoulli bitvector using bernoulli distribution element bitarray false false false false true false true false false true julia rand ntuple ntuple considered container equivalent randntuple julia rand tupleintuint bigfloat tuple types x julia rand namedtuple named tuples julia randomextensions randomstaticarrays poor conditional modules ugly warning julia rand mvector abstractstring string smatrix sarraytuple marraytuple abstractstring indices soneto soneto szpkxhfk efxauim rjnhwhb jqflcya fmtkcby eoytnntd fzddl uxswgmu ffjuutjq hmaqriv ptoyfjw ofcfjjr julia set iterators rand randomdevice rng defaults randomglobalrng set note set elements rand generates duplicates julia collect iterators uniform distributions iterated using randomglobalrng implicitly element arrayint julia rand complex int equivalent randcomplex int experimental im julia rand pair string int equivalent randpair string int experimental odnxiepk rand iterator provide efficiency gains compared repeated calls rand mechanism array generation example zeros bitset rand times faster randref note seen examples string considered scalar container rand api call randstring apis coincide randstring construct string length container api array strings default length currently package chooses interpretation partly implemented actually useful offers tersest api compete randstring package unstable choice revisited future note easy result interpretation via randstring randstring randstring vector extend function meant extensible helper functions easy experimental default args create maketype args object contain args fields type stable code rand machinery likes exact type object generated rand maketype args supposed return type example maketypepair uint pairintuint define rand documented random module randrngabstractrng spsamplertrivial pair randsp randsp convenience maketype defaults means simple rand function defined pair maketype defined generated type assumed pair concrete type hence suboptimal package started frustration limitations random module besides generating simple scalars arrays little supported box example generating random dict complex moreover functions taste rand randn randexp sprand exotic rfn parameter sprandn sprandexp randstring bitrand mutating counterparts believe randn terse hope package serve starting towards improving random