strs strsjl container packages juliastring main goals drop replacement built string char types adding types faster easier using interfacing languages safer option built string literal syntax printf sprintf macros formatted output brings following type string literal using strliterals strformat strentities form swiftstyle escape sequences xxxx unicode constants instead uxxxx uxxxxxxxx advantage worry digit letter occurring hex digit unicode constant means common character latex strings output currencies string quoted expr interpolation swift instead name expr advantage worry character string someday allowed name allows embedding unicode characters using variety easy remember names instead hex codes emojiname latexname unicodename htmlname examples dagger yen account snake returns string default formatting based type argument returns returns based default format set abstractfloat types format information set defaults types change defaults floats strings etc supports style formatting count position argument instead sprintfname f name f faster flexible set string character types asciistr latinstr ucsstr utfstr indexed character easier deal nextind prevind etc alleviates common source bugs julia people unfamiliar difference indexing byte codeunit offset instead codepoints characters using types code help speed faster validated utfstr type julia built string type allows storing invalid sequences strs provides textstr type holding strings invalid utf encoding microsoft cp especially built regex support julia incorrectly passes flag saying argument checked valid utf sequence skipping check pcre regex matching faster leaves attacks using regex unchecked string input types binary strings strings text strings encoding utf commonly accepted invalid sequence representing characters uffff bytes bit surrogate characters encoding null byte xcx instead jis cp etc highly optimized string functions operating characters time intend optimize using vector instructions intel arm power architectures process characters time threadsafe regex support threadsafe lts term support version julia currently v fixed v release regex support assume string values valid utf attacking programs written julia passing unvalidated strings pcre library speed utfstr type instead string using instead appreciate constructive criticism help implementing ideas ideas perform bikeshedding names api etc love contributions benchmark code samples strings pointers lots tweets test mixed text emojis example package release release date package evaluator unit tests description moduleinterfacetools tools create common api packages strapi common api stringcharacter functionality charsetencodings basic typessupport character sets encodings character set encodings chrbase chrcharsetcodeunittype type support murmurhash pure julia implementation murmurhash pcre pcre library support format python style formatting based formatting strbase strcse hash subset cache type strregex regex support string types strliterals extensible string literal support strformat formatting extensions literals strtables lowlevel support entity tables htmlentities html character sequences emojientities emoji names including composite ones latexentities julia latex character names unicodeentities unicode standard character names strentities entity extensions literals internedstrings save space interning strings oxinabox package moduleinterfacetools set consistent easy api cooperating packages worry imports exports using functions public api ones internal development api packages extend architecture operations philosophy architecture follows single easy type replace string conforms recommendations unicode organization internally types implemented currently julia union indexing characters code units types represent binary strings raw unvalidated strings byte codepoints types validated ascii latin ucs bit bmp basic multilingual plane utf utf utf encoded strings optimizations multi code unit encodings utf utf moved strutf strutf packages splitting functionality slower generic methods extra space faster speed extensions converting unicode encodings windows cp china official character set gb package strencodings subtypes directly support substrings caching hash values caching versions string originally unmodified byte bit bit word stream input valid valid utf similar python cache utf version string utf encoded version performance interoperating languages javascript swift java os apis windows expect utf abstractchar codeunits originally implemented package added base master moved support file provide v codepoints iterator iterates unsigned integer codepoints string strings codeunitsingle trait basically codeunits iterator using ability add properties allow views string matter stored internally example mystringutf view mystringutf view internal cached copy available optimization types currently following types str parameterized string type chr parameterized character type binarystr storing textual data sequence bytes asciistr ascii string composed asciichr byte codepoints latinstr string using latin subset unicode composed latinchr byte codepoints ucsstr string composed characters ucschr unicode bmp stored byte code units store single codepoint utfstr string valid unicode characters xdff xexffff stored byte code units utfstr string valid unicode characters utfstr encoded using utf conforming unicode organization standard encodings surrogates invalid bytes utfstr string similar utfstr encoded via utf conforming unicode standard isolated surrogates textstr text string contain sequence bytes textstr text string contain sequence bit words textstr text string contain sequence bit words unistr union type following types asciistr internal types latinstr byte string contain character xf ucsstr word string contain character xff utfstr bit word string contain character xffff real difference handling latinstr latinstr uppercasing characters unicode b category ll letter lowercase unicode ff category ll letter lowercase produces bmp characters unicode c category lu letter uppercase unicode category lu letter uppercase respectively latinstr optimization storing unicode character set ansiiso character set ise code unicode internal types directly indicated leading name built str types corresponding built character set encoding binarycse latincse utfcse etc similar built character sets defined charset character types chr cse function returns character set encoding string type string charset returns character set encoding returns encoding example cseutfstr returns utfcse charsetutfstr returns charsetutf encodingutfstr return encodingutf functions api indexing searching v due deprecation overbroad causing type type piracy deprecating methods types base replaces findfirst replaces findlast replaces findnext prev replaces findprev indexstr pos replaces thisindstr pos index replaces nextind indexprev replaces prevind readable function names separate words avoid hard understand abbreviations is ascii digit space numeric valid defined empty assigned iscntrl iscontrol isgraph isgraphic isprint isprintable ispunct ispunctuation isalpha isletter isalnum isalphanumeric isgraphemebreak isgraphemebreak isgraphemebreak isgraphemebreak occursin occursin textwidth textwidth lowercasefirst lowercasefirst uppercasefirst uppercasefirst startswith startswith endswith endswith addition added isalphabetic kudos island achieve stand shoulders giants thank giants particular cocreators julia jeff bezanson viral shah alan edelman stefan karpinski uncompromising greediness none tom breloff ecosystem created julia build providing nice code pr shamelessly pirated create format advice juliacon ismael venegas castell encouraging tweet julia starting juliacon advice guy chris rackaukas simply star julia guy advice blogs stuff usually head julia incredibly lucky jacob quinn collaborating discussions strings ideas string support julia lot hard dear databases importingexporting data sqlite odbc csv weakrefstrings datastreams feather json milan bouchetvalat discussions string handling encoding stringencodings tim holy famous holy trait trick extensively str packages matt bauman julia arrays extensible performing hence useful steven johnson illuminating create package lines code started learning julia decfp tony kelman thorough reviews prs learned deal julians comments including code anymore performance desired lyndon white appropriated nice internedstrings package lucky gotten join organization bogumi kamiski job testing reviewing strs stringcharacter support julia base input design glad coopted org julia mathematical artist blogger extraordinaire cormullion creator wonderful logo thanks answered sometimes stupid questions gitter discourse kudos contributors julia expanding julia ecosystem