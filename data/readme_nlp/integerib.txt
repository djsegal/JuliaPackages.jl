integeribjl julia module apply information bottleneck clustering dealing categorical data package categoricaltimeseriesjl appveyor information bottleneck concept context categorical data analysis clustering words look categories equivalent functions timeseries looks concise representation data preserves meaningful information sense lossy compression algorithm information preserve seen ability predictions specific context coming predict goal algorithm cluster categorical data preserving predictive power learn information bottleneck look quick overview simple ib clustering categorical data follow instantiate model optimize data readdlm pathdata model ib call ib beta beta real controls amount compression iboptimize model results printresults model rows clusters columns correspond input categories result probability category belonging cluster probabilities low printresults sets otherwise ease readability usage options example concrete example dataset chorales bach input categories types diatonic chords described classical music theory bach csv read data bachhistogram pxy matrix bach sum matrix bach model ib pxy instantiate model probability distribution instead timeseries iboptimize model printresults model output perfect accordance western music theory tells category corresponds tonic function classical harmony category clustered harmony calls subdominant finall category joined dominant function usage types algorithm choose original ib algorithm tishby soft clustering deterministic ib algorithm dj strouse hard clustering former produce meaningfull clustering instantiating model ibarrayfloat algorithm ib change argument algorithm dib deterministic ib algorithm changing default parameters parameters ib clustering amount compression definition relevant context amount compression governed parameter provide instantiating ib model ibarrayfloat algorithm ib compression bigger mutual information cluster original category undesirable situations maximal compression achieved information lost effectively compression dib algorithm happen ib algorithm happen values algorithm doesnt optimize metrics effectively practice using ib algorithm value starting definition context essential specify meaningfull information preserve default behavior care predictions context defined element example timeseries context vector try compress representation share informations definition context element previous call data csv read data coltrane context gety data stands adjacent neighbors model ib data context giving context input instantiation iboptimize model functionalities value metrics calcmetricsmodelib function algorithm guaranteed converge global maxima searchoptimamodelib niter initialize optimize model niter times select optimization lowest value modification call iboptimizemodelib calling searchoptima raw probabilities optimization printresults filters ease readability access ptx model qtx similarly modelqyt modelqt finally function getibcurveib start stop step glob false plot optimal ib curve example bach chorale dataset using plots bach csv read data bachhistogram pxy matrix bach sum matrix bach model ib pxy getibcurve model plot color black linewidth label optimal ib curve title optimal ib curve bach chorale dataset scatter color black markersize xlabel ylabel label legend topleft citing module scientific publication please consider citing package article neliascategoricaltimeseries title categoricaltimeseries jl toolbox categorical timeseries analysis author nelias corentin journal journal source software volume pages installation import using pkg pkg clone https github com johncwok integerib jl git using integerib acknowledgments special thanks nori jacoby learned lot subject ib code tested data reproduces results implementation adapted dj strouse paper python implementation improve display results prettytablesjl implement simulated annealing global maxima consistent fashion