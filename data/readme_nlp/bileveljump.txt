bileveljumpjl bilevel optimization extension jump package build status introduction bileveljump package modeling solving bilevel optimization julia extension jump package bileveljump allows users employ usual jump syntax minor modifications describe query solutions bileveljump built top mathoptinterface makes strong features reformulate single level solve available mip nlp solvers currently available methods based rewriting using kkt conditions lower level strong dualizationjl example using bileveljump scip model bilevelmodel scip optimizer mode bileveljump sosmode variable lower model variable upper model objective upper model min constraints upper model begin objective lower model min constraints lower model begin optimize model objectivevalue model value value option bileveljumpsosmode indicates solution method kkt reformulation emplying sos model complementarity constraints solve mip solvers cbc xpress gurobi cplex scip alternatively option bileveljumpindicatormode equivalent previous main difference relies indicator constraints instead constraints available mip solvers third classic option bileveljumpfortunyamatmccarlmode relies fortunyamat mccarl method requires mip solver basic functionality binary variables main drawback method provide bounds primal dual variables bounds method efficient previous bound hints compute ms passed methods setprimalupperlowerboundhintvariable bound primals setdualupperlowerboundhintconstraint bound duals call fortunyamatmccarlmodeprimalbigm vp dualbigm vd vp vd repspectively fallback values primal dual variables variables bounds otherwise bounds instead option bileveljumpproductmode reformulates complementarity constraints products solved nlp ipopt knitro solvers mip solvers aid binary expansions quadratictobinaryjl note binary expansions require variables upper lower bounds note gurobi solver supports products requires setting nonconvex options finally bileveljumpmixedmodedefault mode mode modes described method set complementarity reformulations constraint bileveljumpsetmodectr mode alternative complementarity constraint reformulation strong duality reformulation add constraint enforcing primal dual equality option bileveljumpstrongdualitymodeeps eps tolerance enforcing constraint