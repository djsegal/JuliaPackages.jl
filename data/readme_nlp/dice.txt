dicejl dynamic integrated model climate economy dice model family popular capable type simple integrated assessment model iam climatechange economics pioneered william nordhaus sterling professor economics yale university economists financiers chemical engineers love using gams ide solve optimisation dice runs gams excel purchases expensive nlp solver top initial arguably expensive price parent software perfectly capable source linear solvers existence repository holds various dice implementations require money operate models implemented vr vanilla version vr rocky road version vr beta vr testing phase dicecjl planned vr van der ploeg safe carbon budget suggestions additions welcomed usage prerequisites using package jump nlp solver ipopt choice packages system installed add package current packaged version ipopt rollingrelease os arch linux coinipopt package system updated release currently package tested feel free packaged recent version add following juliaconfigstartupjl file create exist env juliaipoptlibrarypath usrlib env juliaipoptexecutablepath usrbin arch distributions path useful check ipopt verify correct path built ipoptjl bundled version simply build environment set julia import pkg pkgbuild ipopt linear solver default ipopt comes packaged mumps linear solver dicejl solver effort function scenarios unknown issue solver requiring specific modifications predefined scenarios brittle tracked issue read detail addition mumps efficient compared solvers dicejl attempts hsl ma solver default obtain academic license free solver found machine mumps fallback additionally providing linearsolver option dicesolve command allows set linear solver system available note dicejl tested mumps ma time using arch linux package builds available running functioning ipopthsl system coincoinhsl provide coinhsltargz file licensed coinipopt technically aur version hsl linked linux distributions please look package builds ipopt installation guide details system detailed instructions setting solvers machine viewed jump documentation exactly solvers ipopt perform dicejl unknown please file issue specific solver function notebooks self contained notebooks found separate dicejlnotebooks repository run default instances model plot major results compare output original source data available run notebook server cloned copy repository git clone gitgithubcomlibbumdicejlnotebooksgit cd dicejlnotebooks julia julia v pkg activate dicejlnotebooks pkg instantiate dicejlnotebooks pkg precompile jupyter lab follow generated link browser final command jupyter notebook lab installed process run jupyter lab command dicejlnotebooks directory interact notebook curious output github renders notebooks natively click read output notebooks stored previously executed outputs rendered module using module control inputs system ultimately allows compare versions model input data permitted create project install dice module moment metadata add via repository directly cd pathprojects julia julia v pkg generate myproject julia shell cd myproject v pkg activate myproject pkg add simplest files run default solution looks using dice dice solve optimalprice vr dice results utility fleshed example enabling alter configuration simple using dice import jump using ipopt using plots unicodeplots version vr vanilla flavour conf options version lim alter upper limit control rate ipopt jump optimizerwithattributes ipopt optimizer printlevel print output optimising solution linsolve ma hsl ma linear solver defalt ma default mumps hsl machine dice solve baseprice version config conf optimizer ipopt linearsolver linsolve dice results plot sccylabel trillion xlabel title scc legend false yielding estimated global cost carbon emissions optimal carbon price scc trillion license code herein distributed mit license feel free distribute terms solver listed source ipopt codebase epl include solver repository distribute license epl compatible mit gpl instance welcomed alternate solver suit jump framework integrates please remain aware licensing restrictions license choices domain incompat