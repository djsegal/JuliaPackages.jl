easyffts sick tired preprocessing visualize fft look easyffts aims automate common preprocessing fft aimed visual inspection frequency spectrum main workhorse package simple function easyfft modifies output fft rfft fftwjl slightly function offers main benefits using fftw functions directly output scaled default absolute value response correspond directly amplitude sinusoids signal simple short syntax getting associated frequencies sample frequency frequencies response sorted increasing frequency fftshift talking rfft automatically called real input signals avoiding common mistake using fft makes half symmetric spectrum computed returned reduces computation allocations loss information spectrum easymirror usage demonstrated docstring examples easier explain example examples package setup analyze define sampletimestamps julia using easyffts julia fs sampling frequency julia timestamps range step fs signal duration signal composed pure sinusoids frequencies hz hz sampled timestamps julia f a julia f a julia a sin f timestamps a sin f timestamps easyfft bind output ef julia ef easyfft fs easyfft samples dominant component frequency magnitude output type easyfft understand output bound ef understand type complicated essentially acts namedtuple reason wrapping output type pretty printing seen automatic plotting note pretty printing rounds values significant digits easyfft type type easyfft contains frequencies corresponding complex responses access frequencies responses named tuples dot syntax julia ef freq element vectorfloat julia ef resp element vectorcomplexf e im im im im forget freq resp base julia function propertynames remind julia propertynames ef freq resp method iteration allows destructuring assignment seperate variables julia frequencies response easyfft fs julia ef freq frequencies true julia ef resp response true third final accessing frequencies response indexing julia ef freq frequencies ef true julia ef resp response ef true convenience functions defined extract magnitude phase response julia magnitude ef abs ef resp true julia phase ef angle ef resp true appending phase angle degrees analogous sin sind julia phased ef raddeg phase ef true plotting returned value custom type automatic plot recipes defined plotsjl using plots plot ef datapoints plot defaults stem plot appropriate discrete quantities stem plots messy slow default changes line plot datapoints change keywords seriestype markershape call plot custumize behaviour programically dominant frequencies functions provided finddomfreq indices dominant frequencies julia finddomfreq ef element vectorint index directly frequency vector domfreq julia domfreq ef element vectorfloat finally symmetric spectrum using easymirror julia easymirror ef easyfft samples dominant component frequency magnitude amplitudes ajusted correctly halving magnitude component except hz component wraps examples check docstrings source code detail