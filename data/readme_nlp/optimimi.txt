optimimi optimization mimi models optimimi provides simplified interface finding optimal parameter values mimi models core interface consists define optimization calls solution solve package provides major approaches performing optimization linear programming approach allows takes models applies linear optimization techniques optimize parameters linear programming approach allows models define linear operation matrices represent computations perform mimi runtimestep function addition optimimi offers automatically generate matrices optimimi supports autodifferentiation using forwarddiff model object created optional argument specify type handle dual model optimization created optimimi gradient algorithms approach optimimi algorithms nlopt blackboxoptim linear programming approach solver supported mathprogbase constructing optimization approach setup optimization function model names lowers uppers objective constraints algorithm model mimi model parameters intended optimization components names lists parameter names optimized length lowers uppers list lower upper bounds length names bounds values parameter array objective function takes mimi model parameters set executed returns value maximized constraints optional vector inequality constraint functions takes mimi model parameters set necessarily executed return constraint satisfied algorithm optional symbol currently chosen nlopt algorithms return value object optimizationproblem type passed solution example start creating mimi model ensuring runs parameters set example mymodel model agriculture component regions evaluated single timestep consume energy produce corn optimization maximizes economic value trading value corn cost energy fertilizer add constraint total fertilizer million kg reduce environmental impacts using optimimi prices pf global price food kg corn pe global price fuel kwh objective maximize economic output function objectivemodelmodel summymodelagriculture cornproduction pf mymodelagriculture cornenergyuse pe constraints model summodelcomponentsagricultureparametersfertilizer e setup optimization optprob mymodel agriculture fertilizer e objective constraintsconstraints note objective function provided prepared model raw initialization values values set optimized fertilizer parameter lower upper bounds specified solving optimization optimization returned solved solution solutionoptprob generator maxiter verbose optprob result function generator function arguments returns set parameter values values concatenated parameters names stochastic specified model fails constraints generator called succeeds maxiter optional maximum iterations optimization currently maximum times generator called verbose optional boolean specify status messages printed return value tuple maximum found objective value concatenated collection model parameters produced example continuing example solve optimization maxf maxx solutionoptprob printlnmaxf printlnmaxx generator function generate single initial condition solution initialize model usnig setparameters function setparametersmymodel agriculture fertilizer maxx useful multiple parameters optimized parameters multiple dimensions constructing optimization linear programming approach linear programming allows vastly faster optimizations constraints objective translated linear algebra relationships details optimimi matrix vectors define linear programming constraints objective developed segments line model organization structure mimi computations relate variables parameters kept separate organized component computations directly variables component constrained parameters component optimized connected multiple components defining entire matrix optimimi allows segments matrix specific component defined separately segments constraint matrix encapsulated linearprogrammingroom objects combine sparse matrix information single model parameter variable column vector combined information single model parameter variable encapsulated linearprogramminghall linearprogrammingshaft transpose object linearprogramminghouse contains set matrices optimization variety functions available create objects manipulate commonly operations roomdiagonal creates variable direct scaling parameter allows multiplied corresponds connecting variable parameter allows hall shaft multiplied results weighted sum variables objective roomrelabel relabel variable corresponds parameter name connected multiplied usual process setting linear programming follows mimi components written normal defcomp calls mimi model constructed external parameters initialized individual functions specified component describing gradient variable respect parameter using functions automated option makeroomjl naming typically follows gradcomponentvariableparametermodel constraintoffsetcomponentvariablemodel linearprogramminghosue constructed specifying optimization parameters constraint variables parameters constcomponents variables objective specified setobjective call sum variable specified gradient function varsumgradcomponentcostparametermodel constraints specified setconstraint setconstraintoffset calls relationship specified variable offset looks gradcomponentvariableparametermodel setconstraintoffsethouse constraintoffsetcomponentvariablemodel optimization performed using solver supported mathprogbase houseoptimize function example using mathprogbase using gurobi solver gurobisolver sol houseoptimizehouse solver result studied using summarizeparameters optimzation failed findinfeasiblepair