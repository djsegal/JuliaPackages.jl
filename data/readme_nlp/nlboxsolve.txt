nlboxsolvejl introduction nlboxsolvejl package containing collection algorithms solving systems linear equations subject boxconstraints lb ub elementelement assumed boxconstraint admits solution package solve mixed complementarity leveraging linear boxsolvers collection contains seven algorithms solving boxconstrained linear systems based newton newtonraphson method based levenbergmarquardt trust region methods based newtonkrylov methods jacobianfree installing nlboxsolvejl registered package installed using package manager type following repl using pkg pkg add nlboxsolve solving boxconstrained systems equations formulating key elements vectorfunction containing system equations solved initial guess solution darray lower lb darray default enteries equaling inf upper ub darray default enteries equaling inf bounds form boxconstraint objects defined solve system using soln nlboxsolve lbub jacobian function provided soln nlboxsolve lbub function jacobian function meaning argument preallocated array course optional arguments function call allows six keyword arguments example soln nlboxsolve lbubxtol e ftol e iterations method jfnk sparsejac krylovdim xtol convergence tolerance applied solution default e ftol convergence tolerance applied default e iterations maximum iterations default method specifies algorithm default lmar sparsejac selects sparse jacobian default krylovdim default specific newtonkrylov methods ignored methods solution algorithms solution algorithms following constrained newtonraphson method nr kanzow yamashita fukushima method lmkyf amini rostami method lmar default method kimiaei method tr nonmonotone adaptive trust region method bellavia macconi pieraccini method dogleg sometimes codosol chen vuik method nk jacobianfree newton krylov method jfnk algorithm returns solution structure following fields solutionmethod initial zero fzero xdist fdist iters trace hopefully selfexplanatory explicit value satisfies zero field nature convergence convergence determined fzero xdist fdist iters path solver stored trace field examples example consider following fivediagonal function function fivediagonal similar length return function fivediagonal length x solna nlboxsolve fivediagonalxxtol e ftol e krylovdim method jfnk solnb nlboxsolve fivediagonalxxtol e ftol e krylovdim method jfnk consider function example similar return function example obtain solution x lb ub solnc nlboxsolve examplexlbubftol e xtol e method lm obtain solution x lb ub solnd nlboxsolve examplexlbubftol e xtol e method lm final example involving user defined jacobian consider borrowed package nlsolvejl function similar sin exp return function zeros exp cos exp return function sin exp function exp cos exp x lb ub solne nlboxsolve xlbubxtol e ftol e method nr solnf nlboxsolve xlbubxtol e ftol e method nr solng nlboxsolve xlbubxtol e ftol e method nr solnh nlboxsolve xlbubxtol e ftol e method nr solving mixed complementarity vectorfunction fi li le xi le ui mixed complementarity expressed box govorned fi li lt xi lt ui ii fi gt xi li iii fi lt xi ui appropriate assignment variables functions dictated solved mixed complementarity reformulated allow solved using tools developed solving boxconstrained systems nonlinear equations package allows reformulations mid reformulation recasts hi xi midliuixifi seeks solve le le reformulation selected reformulation mid reformulation default fischerburmeister reformulation makes transform hi sqrtxi fi xi fi reformulation selected reformulation fb chenharkerkanzowsmale reformulation makes transform hi sqrtxi fi xi fi reformulation selected reformulation chks formulating previously key elements vectorfunction containing system equations solved initial guess solution darray lower lb darray default enteries equaling inf upper ub darray default enteries equaling inf bounds form boxconstraint objects defined solve system using soln mcpsolve lbub vectorfunction passed mcpsolve solvers underpin mcpsolve accessable nlboxsolve function function call allows seven keyword arguments example soln mcpsolve lbubxtol e ftol e iterations reformulation mid method nr sparsejac krylovdim xtol convergence tolerance applied solution default e ftol convergence tolerance applied default e iterations maximum iterations default reformulation selects transform reformulate default mid method specifies algorithm default lmar sparsejac selects sparse jacobian default krylovdim default specific newtonkrylov methods ignored methods example consider following function function simple array array undef length return function simple array array x lb ub solna mcpsolve simplexlbubxtol e ftol e reformulation mid method nr solnb mcpsolve simplexlbubxtol e ftol e reformulation mid method nr related packages nlsolvejl complementarityjl nonlinearsolversjl nonlinearsolvejl references amini rostami steps modified levenbergmarquardt method line search systems nonlinear equations journal computational applied mathematics pp bellavia macconi pieraccini constrained dogleg methods nonlinear systems simple bounds computational optimization applications pp chen vuik globalization technique projected newtonkrylov methods international journal numerical methods engineering pp kanzow yamashita fukushima levenbergmarquardt methods strong local convergence properties solving nonlinear equations convex constraints journal computational applied mathematics pp kimiaei class nonmonotone adaptive trustregion methods nonlinear equations box constraints calcolo pp