sampledsignals sampledsignals collection types intended multichannel sampled signals audio radio data eeg signals etc provide interoperability packages read data files streams dsp packages output display packages sampledsignals provides types stream store sampled data samplebuf spectrumbuf samplesource samplesink intervalsets represent contiguous ranges using convenient syntax feature copied axisarrays package inspired implementation package unitful package enable indexing using realworld units hertz sampledsignals reexports relevant unitful units ns ms s hz khz mhz ghz thz db import unitful explicitly buffer stream types samplerate channelcount aware package automatically handle situations writing mono source stereo buffer resampling match sample rates greatly simplifies process writing streaming sample implement fundamental readwrite operations sampledsignals handle plumbing types samplebufspectrumbuf samplebuf spectrumbuf represent multichannel regularlysampled data providing handy indexing operations difference samplebuf timedomain spectrumbuf frequencydomain affects indexed displayed subtypes abstractarray drop compatible raw arrays exception indexing row single frame multiple channels result xn result frame multichannel buffer instead d vector array behavior main advantages types samplerate aware support indexing realworld units hertz depending domain defining methods types abstractsamplebuf type refer collectively methods samplerate samplerate nchannels nframes domain channelptr samplesource samplesource abstract type representing source samples instance represent microphone input read method single frame xn channel samplebuf read integer samples amount time package includes samplebufsource type useful example test implementations stream interface methods samplerate nchannels blocksize samplesink samplesink abstract type representing sink samples written instance representing laptop speakers main method write writes samplebuf samplesink package includes samplebufsink type useful example test implementations stream interface methods samplerate nchannels blocksize stream readwrite semantics sampledsignals tries semantics reading writing simple consistent read write attempted space samples available stream operation block task proceed stream closed check return value operation partiallycompleted read write specifying read write durations terms frames specify read write return operation completes returned duration exactly match duration check equality readsource buf reads source data buf returns frames read returned length buf source closed read complete readsource reads frames source returns buffer filled contents length returned buffer shorter source closed read complete writesink buf writes contents buf sink returns frames written fewer frames written length buf sink closed write complete writesink source reads source writes sink block time returns frames written sink writesink source reads source writes sink block time returns frames written sink streams stay return writing frames readsource sink reads source writes sink block time returns frames read source method currently implemented note connecting source sink difference read write return value sampling rates match value returned samplerate conversion plotting support sampledsignals adds domain function samplebuf domain realworld units buffer sampling rate especially useful plotting simply run plotdomainbuf buf axis frequencydomain buffers spec fft buf plot domain spec abs spec data magnitude spectrum plotted actual frequencies repl display displaying buffer repl sampledsignals length channel count sample rate duration coarse audio waveform signal amplitude db julia buf buf frame channel samplebufpcmsample sampled hz jupyter notebook display jupyter notebook display rich html representations samplebuf waveform display allow listen buffer using browser webaudio support defining custom sinksource types library moves audio network interfaces softwaredefined radio hardware able easily tap sampledsignals infrastructure following subtype samplesink samplesource implement sampledsignalsunsafereadsourceyoursource bufarray frameoffset framecount sources sampledsignalsunsafewritesinkyoursink bufarray frameoffset framecount sinks assume channel count sample rate type match stream type buffer type methods listed stream readwrite semantics section implemented terms base unsaferead unsafewrite calls sampledsignals call methods d d nframes nchannels array channel column note unsafe methods called times level read write avoid allocating buffers instead store temporary buffers inside stream type created implement sampledsignalssamplerate sampledsignalsnchannels baseeltype type sampledsignals stream reported properties methods decide conversions plugging streams instance stream type supports writing bit integer data sampledsignalseltypesinkmysink pcmsample sampledsignals time calls unsafewrite method converted datatype type preferred blocksize implement sampledsignalsblocksize otherwise fallback implementation return meaning preferred blocksize example define mysource type implement base read src mysource buf array base eltype source mysource sampledsignals samplerate source mysource sampledsignals nchannels source mysource methods modifying read samplerate converting versions timebased indexing handled sampledsignals implementation dummysamplesink dummysamplesource dummysamplestreamjl jackaudiojl portaudiojl packages complete examples connecting streams addition reading writing buffers streams set direct streamstream connections using write function instance sink source connect write block current task stream optional third argument samples write limited amount implementation reads block time writes received data set blocksize keyword argument write blocksize read blocks frames time default blocksize frames conversions sometimes source data samplebuf samplesource format stream write instance audio file recorded khz play soundcard configured khz samplerate conversion play mono microphone signal stereo soundcard channel conversion generated buffer floating values write bit integer wave file format conversion sampledsignals handles conversions transparently sampledsignals wrapper types implement conversion normally wrappers created automatically attempt operation conversion create explictly instance sink sink operating khz soundcard output source source khz code writesink source equivalent wrapper resamplesink sink khz write wrapper source samplerate conversion resamplesink wrapper type wraps sink writing wrapper sink resample data pass original sink maintains writes interpolation correct boundaries multiple writes resamplesink handles resampling polyphase fir resampling filter channel conversion upmixsink downmixsink types wrap multichannel singlechannel sink respectively write mono signal stereo multichannel output written channels write multichannel signal mono sink mixed format conversion format conversion handled automatically julia write data buffer type potential gotchas consider dealing integer samples represent fixed fixedpointnumbersjl example bit integer samples represented fixedint sampledsignals provides handy aliases signed fixed samples pcmsample pcmsample pcmsample pcmsample julia convert properly fixed floating values bit fixed data represent values interval scale floating data run converting fixed values solution multiply signal typemaxpcmsample converting sticky design issues issues process figuring interpolation currently realvalued indices time rounding nearest sample index interpolated value user specify type interpolation idea allow interpolation type symbol indexing s cubic little weird option linearinterpolator cubicinterpolator etc wrappers determine interpolation behavior relative vs absolute indexing slice samplebuf span s s s audio buffer indexing domain result specifically ss ss timedomain signals indexing relative beginning buffer frequencydomain buffers usually frequency information keeping track time information useful split signal processing recombin