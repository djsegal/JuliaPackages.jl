repo info repo stats contributing replferencejl replferencejl package addresses challenges provides materials beginners learn basic programming julia julia versatile repl instead searching online basic julia questions elsewhere beginners richfeature repl learn aims solve accessing methods julia using dot syntax frustrating users oop languages users easily learn methods call object using dot syntax editor shown example julia refers property bundled method bundled methods bundled objects julia users type tab repl return properties defined shown example limitation leads reinventing wheel write methods looking break workflow online method ongoing discussion julia discourse forum note julia provides functions methods methodswith help users challenge users struggle functions return exhaustive list methods finally convenience package abstracttreesjl dependency print sub supertypes type tree format installing install follow steps julia enters package mode pkg add replference julia using replference enjoy using replferencejl ensure package automatically loaded julia session explicitly call using replference time repl simply add following line juliaconfigstartupjl file file exist create eval using replference usage package provides functions usage explained note examples truncated readme file concise function returns manual topic object julia manual object pass object julia ascii unicode category lu letter uppercase julia characters refer characters computer programming necessarily limiting view characters english speakers familiar examples familiar characters include letters etc etc common punctuation julia isvalid dff true julia dff dff unicode dff category cn assigned re seeing manual topic simply pass topic symbol characters invalid topic entered printed screen fun fun function returns names related topic called julia object names called object pass object fun julia fun macros assert doc showtime methods abstractchar cchar char cuchar cwchart datatype ref pair operators pass keyword argument named extmodbool function default value extmod false extmod true fun prints methods called object methods modules standard library loaded using import julia fun extmod true macros assert doc showtime methods stdlib printf printf printf pointer printf format printf sprintf printf positioncounter unicode isassigned printf format printf spec unicode juliachartransform re seeing functions topic simply pass topic symbol funcharacters invalid topic entered printed screen names suffixed unexported qualified module qualified base core interactiveutils name available subtree function prints subtypes object tree format type otherwise error thrown julia subtree integer integer bool signed bigint int int int int int unsigned uint uint uint uint uint