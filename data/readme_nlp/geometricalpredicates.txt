geometricalpredicatesjl fast robust d d geometrical predicates generic types implementation follows algorithms described arepo paper illustris simulation license mit bug reports welcome calculations initially performed float bounding max absolute errors unable determine result fall exact calculation using bigint form floating filtering calculations cached fast repeated testing incircleintriangle predicates current limitations due numerical methods coordinates internally represented float addition reside range range according ieee float constant exponent hence mantissa mapping integers exact calculations using bigint assumed primitive vertices overlap currently responsibility user assumed tetrahedron vertices lie line user responsibility testing assumed overlap vertices usual user responsibility except st restriction easily implemented currently features missing features please issue develop installation add geometricalpredicates julia pkg add geometricalpredicates using geometricalpredicates create d mypoint typeof mypoint pointd create d mypoint typeof mypoint pointd getting coordinates getx mypoint gety mypoint getz mypoint pointd subtype abstractpointd pointd subtype abstractpointd implement custom types subtyping abstract types custom types rest package type mycustompointtype abstractpointd x float y float mass float getx mycustompointtype x gety mycustompointtype y implementing getx gety getz d interface package expecting function return float immutables types default pointd pointd immutables coordinates reside region read limitation convenience constants defined mincoord max coord representing minimal maximal feasible values coordinates triangles tetrahedrons aka primitives triangle d primitive tetrahedron d primitive create triangle using mytriangle primitive typeof mytriangle unorientedtrianglepointd triangle unoriented sense orientation advance immutable change triangle updated orientation calculated triangle created updated read definition orientation triangle created using inheriting abstractpointd implement getx gety using coordinates directly mytriangle primitive getting triangle geta mytriangle pointd getb mytriangle pointd getc mytriangle pointd goes tetrahedrons except d instead d ones create tetrahedron using mytetraedron primitive typeof mytetrahedron unorientedtetrahedronpointd applications primitives orientation calculate achieved passing orientation flag primitive creation function mytetrahedron primitive positivelyoriented typeof mytetrahedron positivelyorientedtetrahedronpointd orientation mytetrahedron constant calculated mytetrahedron primitive negativelyoriented typeof mytetrahedron negativelyorientedtetrahedronpointd orientation mytetrahedron constant calculated note primitive oriented real orientation calculated assumed user doubt unoriented primitives cost actual calculation updating primitives seta setb etc methods seta mytriangle updating primitive fire relevant precalculations triangle unoriented orientation calculated oriented precalculations update efficient update setab mytriangle setbcd mytetrahedron combinations exist name contains names alphabetical inner primitive data changed manually giving correct results functions package predicates incircle popular name test lies inside sphere defined primitive mytriangle primitive incircle mytriangle outside incircle mytriangle inside incircle mytriangle exactly circle possibility circle defined primitive infinite radius impossible tell inside outside mytriangle primitive incircle mytriangle tell intriangle popular name test lies inside primitive mytriangle primitive intriangle mytriangle inside intriangle mytriangle outside intriangle mytriangle exactly ab intriangle mytriangle exactly ac intriangle mytriangle exactly bc negative means outside exact value information regarding direction lies outside means test front outside triangle means test front outside triangle means test front outside triangle goes tetrahedrons note front arbitrarily chosen name performance means test inside positive values means test front exactly triangle means test front exactly triangle means test front exactly triangle extends tetrahedrons lines polygons orientation tests primitive orientation d means left line defined ab directionality exactly line d means plane defined abc note means direction plane normal depends orientation plane exactly plane convenience api test orientation d using line performance advantages creating triangle line println orientation println orientation println orientation create simple d polygons ll lr ur ul poly polygon ll lr ur ul inpolygon poly assumes convex basic geometrical properties orientation primitive orientation volume centroid circumcenter circumradius exported hope self descriptive spatial scale scalefree peanohilbert available look nice explanation hilbert sorting nice explanation multiscale sort implemented peanokey peano key regular grid cells peanokey peano key regular grid cells cells specified default d d inverse key pointd pointd finer grid accurate scaledependent hilbert stuff balance workload computing nodes particles spatially scale independent method hilbert rand rand e hilbertsort keys calculated grid median policy adjusting actual distribution parameters defaults links understand mean algorithm delaunay tesselation sometimes multiscale sort hilbert sort mssort course adds default parameters decent defaults read links understand