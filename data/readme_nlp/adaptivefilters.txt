adaptivefilters simple adaptive ar filters export functions yh adaptivefilter alg mspi lr filters adaptive ar poles filter specified returns yh predicted output adaptive line enhancer ale noise wideband signal narrowband yh desired filtered signal noise narrowband signal wideband yh desired filtered signal arguments alg stochastic approximation algorithm weight function examples omap mspi omas adam exponentialweight equalweight exponentialweight corresponds recursive squares algorithm rls adam corresponds roughly normalized mean squares nlms algorithm options exist onlinestats loaded input signal filter lr learning rate weight depending alg function focusedadaptivefilter band fs args kwargs allows specify frequency band tuple focus attention adaptive filter fs denotes sample rate hz installation using pkg pkg add adaptivefilters demo app using adaptivefilters plots interact inspectdr preferred plotting backend waveforms sin randn sin randn function app req manipulate lr linrange alg exponentialweight mspi omap omas adam yh adaptivefilter alg lr lr yh plot yh lab measured signal prediction layout false sp plot lab error sp title rms mean abs app save filtered sound disk using wav yh adaptivefilter omap yh wavwrite filteredwav fs fs internals lightweight wrapper functionality onlinestatsjl heavy lifting usage python install julia install package julia install pyjulia using instructions following python import julia julia import adaptivefilters af yh af adaptivefilter fails try replacing line julia api import julia jl julia compiledmodules false keyword args etc normal af adaptivefilter af adam example adaptive cicada filtering following function reasonable job filtering sound cicadas audio recording cicadafilter fsargs kwargs focusedadaptivefilter data fsargs kwarg