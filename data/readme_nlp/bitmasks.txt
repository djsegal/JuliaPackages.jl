bitmasks lightweight package zero dependencies aimed manipulating bitmasks using enum interface bitmasks combinations boolean flags encoded specific bits integer type example flags represented uint b b bitmask instance value b package provides define bitmasks flag values mask presets operators manipulate create bitmask type julia using bitmasks julia bitmask mask uint begin flags bita bitb bitc mask presets bitab bitbc bitabc mask mask presets optional handy parameters especially specific masks strong semantic meaning flags hand assignments required integer literals moment combine flags masks create masks example julia bita bitc mask bita bitc julia bita bitb mask bitab julia bita mask bitbc julia bitbc bitab mask bita bitc julia bitbc bitc mask bitc performs union flags masks intersection complement xor complement intersection note read instead semantic perspective noticed specific printing defined try compact combinations based provided presets reduce verbosity utilities defined extraction flags mask conversion integers bits extra type safety avoid mixing flags coming masks julia enabledflags bitabc element vectormask mask bita mask bitb mask bitc julia int bita julia mask mask bita julia bitmask mask uint begin bita bitb bitab mask julia bita bitb error bitwise operation allowed incompatible bitmasks mask mask finally common base methods added convenience julia zero mask mask julia iszero zero mask true julia typemax mask mask bitabc related packages package aims relatively simple designed integers similar packages slightly feature sets include flagsetsjl bitflagsjl