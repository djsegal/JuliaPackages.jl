grpcclientjl julia grpc client generating grpc service client grpc services declared proto files grpcclientgenerate generate client code specification files grpc code generation protoc protobufjl package able generate grpc client code protobuf package installed grpcclient protoc file service generation python java option ccgenericservices true option pygenericservices true option javagenericservices true julia code generated improper package name declared proto specification set suitable package name julia using pkg julia pkg add protobuf installed protobuf v downloading artifact protoc julia pkg add grpcclient julia pkgdeveloppackagespecurl julia using grpcclient julia grpcclient generate routeguideproto info generating grpc client proto routeguideclientsrouteguideproto outdir routeguideclients info detected package routeguide service routeguide info generated outdir routeguideclients generated code published package included module julia using grpcclient julia include routeguideclientsrouteguideclientsjl julia using routeguideclients julia import routeguideclients feature getfeature julia base io io location print io string location latitude location longitude julia base io io feature feature print io string feature name feature location julia client routeguideblockingclient julia latitude longitude request param julia feature statusfuture getfeature client julia grpccheck statusfuture check status request true julia feature api return value berkshire valley management trail jefferson nj usa generated module named package declared proto file service pair clients generated form servicenameclient servicenameblockingclient service methods generated servicenameclient identical ones generated servicenameblockingclient except spawn actual call task accept callback method invoked results servicenameblockingclient intuitive service method returns calls blocking clients values result julia struct channel streaming output grpc status grpccheck method checks status success failure note methods streams input output grpc status ready method completes status check stream separate tasks sync begin inchannel channel routeguideclientsroutenote async begin send inputs input inputs inchannel input close inchannel outchannel statusfuture routeguideclients routechat client inchannel async begin consume outputs output outchannel output async begin grpccheck statusfuture apis implementation details generated grpc client routeguideblockingclient example grpc controller channel scenes communicate server grpccontroller grpccontroller contains settings control behavior grpc requests grpc client holds instance controller created using keyword arguments passed constructor grpccontroller maxage int keepalive int negotiation symbol httppriorknowledge revocation bool true requesttimeout real inf connecttimeout real maxmessagelength defaultmaxmessagelength maxrecvmessagelength maxsendmessagelength enablesharedlocks false verbose bool false maxage maximum age connection beyond reused default setting keepalive interval send tcp keepalive messages connection default negotiation negotiate http httppriorknowledge negotiation default httptls http upgrade tls http http upgrade revocation check certificate recovation default true requesttimeout request timeout connecttimeout connect timeout default setting maxmessagelength maximum message length default mb maxrecvmessagelength maximum message length receive default maxmessagelength setting maxsendmessagelength maximum message length send default maxmessagelength setting enablesharedlocks enable locks using grpcclient tasksthreads concurrently experimental default false verbose print verbose communication logs default false grpcchannel grpcchannel baseurl string grpcchannel represents connection specific service endpoint service baseurl grpc server channel usually single network connection multiple streams requests flow time streams multiplexed negotiated client server grpcstatus grpcstatus represents status request following fields success request completed successfully grpcstatus grpc status code returned message error message request successful grpccheck grpccheck status throwerror bool true method check response grpc request raise grpcexception failed throwerror set false returns true false indicating success instead grpcexception grpc request returns result future representing status grpc request grpccheck method status future check request status throw grpcexception successful abstract grpcexception type following concrete implementations grpcmessagetoolargeexception grpcservicecallexception grpcmessagetoolargeexception grpmessagetoolargeexception exception thrown message encountered size limit configured specifically maxrecvmessagelength receiving maxsendmessagelength sending grpmessagetoolargeexception following limit limit value exceeded encountered amount data actually received sent error triggered note correspond size data error thrown actually materializing complete data grpcservicecallexception grpcservicecallexception thrown grpc request successful following grpcstatus grpc status code request message error message request successful todo concurrent grpcclient somewhat flaky credits package originally developed julia comput