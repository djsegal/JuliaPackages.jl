convexfitjl fit vectors convex combinations data columns convexfitjl lightweight julia package fitting vectors convex combinations data columns notably coefficients restricted nonnegative sum restriction arises naturally circumstances predictions involving extrapolation undesirable instance constructing weights synthetic controls optimization coefficients convex combinations obtained solving constrained optimization following form min ax st matrix containing data columns vector coefficients unit simplex vector fitted ax nonnegative regularization parameter euclidean norm supported moment optimization solved iteratively conditional gradient method frankwolfe algorithm directly searches solution candidates unit simplex practice extent regularization desired controlled magnitude choice depends context specific left zero default appropriate consider selecting based leave cross validation implemented package quick start functionality accessed calling convexfit fit vector convex combination columns regularize coefficients using convexfit convexfit results stored solverresult retrieved corresponding fields example sol optimal fit fitted values select optimal based leave cross validation provide grid convexfit exhaustive search specify solver searches optimal interval example latter solver optimjl follows using convexfit optim specify solver function takes objective function argument returned object tuple solver result minimizer function fmin function optimize brent abstol e storetrace true return minimizer fit optimal selected based leave cross validation convexfit optim fmin details found help mode julia repl reference jaggi martin revisiting frankwolfe projectionfree sparse convex optimization proceedings th international conference machine learn