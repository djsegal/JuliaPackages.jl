geoparamsjl typical geodynamic simulations involve material parameters nonlinear constitutive relationships writing code benchmarking debugging implementation material parameters involve wise calculations independent discretisation method finite difference finite element finite volume package main objectives create nondimensionalization object transfer dimensional dimensional parameters helps numerical solvers create object specify material parameters employed geodynamic simulations provide allocationfree computational routines gpu cpus integrated solvers replaces wise calculations compute material parameters equations example material parameter object designed extensible passed solvers creep laws features readily added computational routines provide features immediately available codes finite element finite difference amr codes etc implement typically creep law parameters tools plot versus compare results published papers minimize mistakes note package remains development api fixed feel free look aware change incorporate codes commentsideassuggestions highly apprecciated contents nondimensionalization material parameters plotting output computational engine installation documentation dependencies contributing funding nondimensionalization typical geodynamic simulations involve dimensions kilometers viscosities e pas values directly employed numerical solvers result roundoff errors common practice nondimensionalize input parameters dividing typical values result closer specifying characteristic values length stress temperature viscosity basic units physical units derived input parameters nondimensionalized accordingly dimensionalized plotting saving output learned physics common approach using si units meters convenient geodynamics usually deal lengthscales kilometers timescales millions provide geo object allows input parameters convenient units julia using geoparams julia chardim geounits length km temperature stress mpa viscosity e pas employing geo units characteristic values length km time myrs stress mpa temperature types geo units units length code expected kilometers time million myrs stresses mpa e pa si units values si units meters pascal none input parameters nondimensional units chardim structure created derived parameters example julia chardim strainrate e dimensionalize parameters julia e mpa mpa julia and nondimensionalize chardim convert units julia uconvert pa e pa material parameters geodynamic simulations require specifying material parameters nonlinear viscous constitutive relationships equation parameters usually specified phase provide framework simplifies thanks flexibility julia actually directly embed function computations structure makes straightforward extend add creep laws directly solvers examples constant density constant linear viscosity julia matparam setmaterialparams name viscous matrix phase density constantdensity creeplaws linearviscous e pa phase viscous matrix dimensional units density constant density kg gravity gravitational acceleration creeplaws linear viscosity e pa dimensionalization parameters julia chardim geounits length km temperature stress mpa viscosity e pas julia matparam setmaterialparams name viscous matrix phase density constantdensity creeplaws linearviscous e pa chardim chardim phase viscous matrix dimensional units density constant density e gravity gravitational acceleration e creeplaws linear viscosity define tuple phase information julia chardim geounits length km temperature stress mpa viscosity e pas julia matparam setmaterialparams name viscous matrix phase density constantdensity creeplaws linearviscous e pa chardim chardim setmaterialparams name viscous sinker phase density ptdensity creeplaws linearviscous e pa chardim chardim julia matparam phase viscous matrix dimensional units density constant density e gravity gravitational acceleration e creeplaws linear viscosity phase viscous sinker dimensional units density dependent density e t p gravity gravitational acceleration e creeplaws linear viscosity nonlinear creep laws add predefined linear creep laws julia phase setmaterialparams name viscous matrix phase density constantdensity creeplaws setdislocationcreep wet olivine hirth kohlstedt linearviscous e pa phase viscous matrix dimensional units density constant density kg gravity gravitational acceleration creeplaws dislocationcreep name wet olivine hirth kohlstedt e apparatus linear viscosity e note dictionary dislocationcreepinfo predefined creep laws overview type julia dislocationcreepinfo dictstring dislocationcreep entries dry olivine hirth kohlstedt dislocationcreep mpa wet olivine hirth kohlstedt dislocationcreep mpa plotting output typical geodynamic simulation involves lot parameters creating data tables scientific publications describe parameters employed usually hand likes experience lot errors happen units mixed creep laws weird units mpa parameters forgotten help provide functions simplify creating plots manner publications report laboratory experiments create creep laws directly compared original results create publicationready figures provide tools automatically generate data tables input parameters saves time minimizes errors plotting simple functions provided plot various parameters example plot melting parameterisation julia using geoparams plots adding plotting routines geoparams julia meltingparamthorder julia plotmeltfraction automatically create data tables writing scientific papers describes numerical modelling results usually include tables lists model parameters employed errorprone usually job provide routines automatize process define phase julia matparam setmaterialparams name viscous matrix phase density constantdensity creeplaws setdislocationcreep quartz diorite hansen carter setmaterialparams name viscous sinker phase density ptdensity creeplaws linearviscous e pa setmaterialparams name viscous bottom phase density ptdensity creeplaws setdislocationcreep diabase caristan create latex table defined phase julia parametertable matparam filename parametertable format latex rdigits markdown table julia parametertable matparam filename parametertable format markdown rdigits computational engine implemented parameter geoparams provide allocationfree computational routines called solver following manner args arrays tk arrays computedensity rho matparam phases args rho array densities matparam tuple material parameters explained section phases array integers indicates phase args contains arguments compute density temperature pressure computational routine cpu gpu combination parallelstenciljl using constant density example specified matparam setmaterialparams name crust phase density constantdensity kg using density employs phase diagram depends pressure temperature invoked matparam setmaterialparams name mantle phase density perplexlamemdiagram testdata importantly change code density parameterisation implementing geoparams sufficient makes easy identical material parameters range codes eliminates risk mistakes saves substantial amount time developing codes experience debugging time devoted fixing bugs material parameters installation install package specifying julia pkg add geoparams test pkg test geoparams documentation online documentation accessed clicking blue button top page sometimes helpful look call routines test directory dependencies key packages rely unitfuljl deal si units parametersjl structures easier modify latexstringsjl able add equations structures describe employed material laws contributing help developing package highly appreciated contribute example adding creep laws adding constitutive relationships invest bit time save community lot time simplest cloning repository creating branch feature happy added added test ensure future changes create pull request evaluate merge funding development package supported european research council erc cog magma