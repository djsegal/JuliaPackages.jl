testenv function package testenvactivate activate test enviroment package pkgactivate activate main enviroment consider example chainrulesjl test dependency chainrulestestutilsjl main dependency pkg activate julia dev chainrules julia using testenv julia testenv activate julia using chainrulestestutils pkgactivate reactivate previous environment pkgactivatejuliadevchainrules pass name package activate package test dependencies testenvactivatejavis example activate javisjl test environment finally pass function run environment using testenv retest testenv activate example retest code astute reader probably notice default branch git repo basically empty code branches minor release release release etc testenvjl accesses ton interals pkg internals change basically single release maintaining compatibility single branch multiple julia versions leads code nightmare instead maintain branch julia minor version tag releases branch major minor versions matching julia version supported patch versions allowed change freely release contains code support julia v release contains code support julia v release contains code support julia v release contains code support julia v release contains code support julia v v v rare goldern ages internals pkg change release contains code support julia v release contains code support julia v v period stability internals pkg change continue release contains code support julia v prs cover branch except update readme instead probably pr branch current version julia bit weird semver features added patch release ported branches patch releases reason support patch release branch ones yanked start causing issues people projecttoml compat section using dependency package supports versions julia wonder projecttoml compat section fear package manager compat testenv equivalently package manager free choose compatible version chose corret minor version testenv compatible loaded version julia discourse release announc