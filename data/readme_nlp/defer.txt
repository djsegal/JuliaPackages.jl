deferjl deferjl provides simplified resource cleanup julia julia programs interface external resources wrapping external libraries arrange resources freed closed cleaned otherwise disposed package provides golang inspired defer macro easier users free resources correct time package meant pathfinder eventual language feature meantime usable current form adopting convention ready future help shape language determining forms useful corner cause friction basic usage basic usage create scope execute code scope schedule code execution scope terminates scope begin defer printlnworld printlnhello prints hello world shortcut deferring call close type string baseclose printlnclosing printlnusing scope begin prints using closing module development module authors defer schedule cleanup resources allocated init function global toplevel scope exists user execute pending defer ed actions calling popscope module reinitialized user calling init modules defer finalizer schedule cleanup resources allocated user instead add method baseclose user schedule cleanup resource easily adding constructor called module example includelibfoojl global context library const foocontext reffoocontexttcnull initialize library module reloaded function init foocreatecontextfoocontext atexit defer action instead defer foodestroycontextfoocontext object library available julia users immutable foo ptrfoothingt create object wrapper constructor function foo reffoothingt foocreatethingfoocontext schedule destroyed foo extend close function user call foo create object control destroyed baseclosefoofoo foodestroythingfoocontext fooptr usage sometimes scope inconvenient scope macro function scope equivalent applied method definition scope wraps body scope scope equivalent scope applied statement wrap statement scope automatically schedule ed variables closed scope devnull println hello exceptions scope deferred actions propagate caller multiple exceptions wrapped compositeexception try scope defer throwdeferred exception throwexception catch prints compositeexceptionexceptiondeferred exception future package offered example deferred resource clean julia package authors experiment feature useful maintainers language follow example lessons learned implementing similar feature julia additional questions resolved adopt feature include following function dispose resources chose close purpose exists base extension function unlikely conflict usage extending finalize interferes function usage call finalizers scheduled object options dispose destroy cleanup etc suitable commonly packages package conflict community adopt function export base deferred actions executed package requires user specify deferred actions run declaring scopes built language feature adopt rule currently executing function block particular deferred actions executed lines repl ijulia cells terminate module initialized module initialization special suggested init function run scope exist life module alternately corresponding uninit function similar effect package author schedule destruction resources returned user current practice scheduling resources destruction constructor calling finalizer similar convenient called directly repl user usually worry resource clean performance sensitive code option handle resource cleanup manually useful community adopt single convention package authors follow addressing competing desires disclaimer distribution statement approved public release distribution unlimited massachusetts institute technology subject patent rights ownership contractor spdxlicenseidentifier mit material based supported undersecretary defense research engineering air force contract fa opinions findings conclusions recommendations expressed material author necessarily reflect views usd softwarefirmware provided basi