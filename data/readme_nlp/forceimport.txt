forceimportjl macro force imports conflicting methods julia modules usage forces imports exported methods module conflicts force using module using package force strong module example allows using packages export conflicting definitions methods imports module module foo export module bar using forceimport force using foo julia bar note conflicting definition method import force effective julia julia force using foo warning ignoring conflicting import foo main hence macro called relevant methods called local method extension technique principle force users mind goal extend base methods locally affecting global method table type piracy able import package local effect avoid type piracy define local complementary ary method fall base method arguments tiered alternative dispatch layer local package scope redirects default base dispatch generically advantages including x improvement precompile time precompilation tiered actually makes difference technique applied operations reduce module extendedpackage base symbol expr call locally force macro automatically forces imports exported methods module newscope using forceimport force using extendedpackage property julia base newscope false newscope extended plus falls base main takes application principle pioneered development reducealgebra module defined srcargsjl srcunaryjl main difficulty lies properly designing redirection tiered method dispatch infix operations naturally variety syntax