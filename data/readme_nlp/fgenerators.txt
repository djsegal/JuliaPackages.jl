fgenerators foldl humans fgeneratorsjl package defining transducersjlcompatible extended foldl simple yield based syntax examples creating adhoc generators julia using fgenerators julia fgenerator function generate yield yield yield julia collect generate element arrayint julia sum generate julia fgenerator function organpipe integer yield true return yield julia collect organpipe element arrayint julia fgenerator function organpipe yieldfrom yieldfrom julia collect organpipe element arrayint fgeneratorsjl spin generatorsxjl floopsjl iterate items yielded generator julia using floops julia floop generate adding fold protocol existing type foldl protocol implemented existing type using syntax fgeneratorfoldable julia struct organpipe foldable int julia fgenerator foldable organpipe foldable yieldfrom yieldfrom julia collect organpipe element arrayint note inheriting foldable using base api collect using transducersjl api including floopsfloop defining parallelizable collection fgenerator using parallel loops collection easily supported defining splittablesbasehalve length splittablesbaseamount length hard define halve length implemented existing type fgenerator notation extending organpipe example julia using splittablesbase julia function splittablesbase halve foldable organpipe foldable return julia base length foldable organpipe foldable julia floop organpipe reduce using floop fgenerator floop inside fgenerator julia fgenerator function ffilter xs floop xs yield julia collect ffilter isodd generate element arrayint julia collect ffilter isodd organpipe element arrayint julia collect ffilter isodd fallback baseiterate element arrayint