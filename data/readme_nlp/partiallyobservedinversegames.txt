partiallyobservedinversegamesjl inverse game solver inferring objectives noisecorrupted partial observations cooperative multiagent interactions paper inproceedingspetersrss title inferring objectives continuous dynamic games noisecorrupted partial observations author peters lasse fridovichkeil david rubiesroyo vicen tomlin claire stachniss cyrill booktitle proc robotics science systems rss codeurl videourl url setup code tested julia versions basic clone reposistory git clone cloned repository install dependencies versions recorded manifesttoml navigate installation directory cd juliadevpartiallyobservedinversegames start julia project mode julia project hit enter package mode run pkg instantiate finally run unit tests via test confirm setup successful ready package directory layout details binary data version control beyond dvc binary data version control setup required load results binary data reproducing rerunning experiments dvc installed follow install dvc http support pip install dvchttp optional setup git hooks automate process checking dvccontrolled files dvc install download binary data figures running dvc pull directory layout src contains implementations method baseline inverse planning beyond contains implementations forward game solvers visualization utilities test contains unit integration tests code src experiments contains code reproducing monte carlo study running example experimentsunicyclejl highway overtaking scenario experimentshighwayjl setting dvc described running dvc pull directory data contains binary data results bson file visualization pdf file reproducing results results monte carlo study reproduced running corresponding scripts experiments player running example collision avoidance experimentsunicyclejl player highway overtaking scenario experimentshighwayjl caching scripts located experiments check cached results data cached results found loaded figures reproduced data reproduce results scratch cache calling clearcache implemented experimentsutilssimplecachingjl alternatively remove runcached macro front function calls experiment disable caching call distributed experiments running scale monte carlo study substantial amount time package distributedjl parallelization multiple workers registered worker pool experiment scripts automatically parallelize heavy lifting implemented using distributedpmap workers run machine remote cluster requirement code loaded remote worker achieved mounting repository shared directory available nodes potentially heterogeneous cluster utilizing rsync suit useful utility functions task found distributorjl