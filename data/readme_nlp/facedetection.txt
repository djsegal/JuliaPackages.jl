facedetection using violajones robust algorithm object detection caveats help currently main love help reading pretrained data files greatly help training object detection framework creating scalable bounding boxes detected objects loves visual grandmother box ll switch code people pictures project helped getfaceness function idea scoring faceness image data project burner help items issues forever gratitude introduction julia implementation violajones object detection algorithm opencv port julia illmaintained algorithm created commercial widely documented implementations github implementation repository based simon hohberg pythonic repository written starred python implementation github necessarily measure julia python alike easy read write thinking easy replicate julia except pythonic classes struct easier replicate example js highlystarred repositories implore collaboration undergraduate student formal education computer science computer vision form matter code refinedoptimised programmers please help simplified manner violajones algorithm stages takes image converts array intensity values greyscale constructs integral image element array integral image element sum elements left makes calculations easier step haar features integral image training phase using sets phase called adaboost short adaptive boosting boosting method ensemble learning ensemble learning methods bagging stacking differences bagging boosting stacking bagging equal weight voting trains model random drawn subset training set boosting trains model instance emphasize training instances previous models misclassified accuracy comparing bagging tends overfit stacking trains learning algorithm combine predictions learning algorithms despite method developed start century blazingly fast compared machine learning algorithms widely finally algorithm cascading classifiers identify page original paper specific cascade explanation read paper wikipedia page algorithm quick start using facedetection constants postrainingpath negtrainingpath numfaces numnonfaces length filteredls postestingpath length filteredls negtestingpath simple training images numclassifiers minfeatureheight maxfeatureheight minfeaturewidth maxfeaturewidth scale scaleto true training images standardised size x train model classifiers facedetection learn postrainingpath negtrainingpath numclassifiers minfeatureheight maxfeatureheight minfeaturewidth maxfeaturewidth scale scale scaleto scaleto results correctfaces sum ensemblevoteall postestingpath classifiers scale scale scaleto scaleto correctnonfaces numnonfaces sum ensemblevoteall negtestingpath classifiers scale scale scaleto scaleto println correctfaces numfaces recognised println correctnonfaces numnonfaces identified examples examples miscellaneous notes timeline progression aabf algorithm mainly figuring implementation fdec julia adaptation algorithm lot bugs figure fcae started bug fixing using srcfdajl main example file ffbea getting bug fixing created struct haar feature updated weighting calculations fixed hstack translation nested arrays added detailed comments function aeeb draft algorithm image reconstruction bfd finally algorithm enhancements bba ee implemented facelike scoring wrote score data csv efd implemented writing training data file reading data save computation time e changed sequential processing aad baecb optimised performance acknowledgements thank simon honberg original source python code repository based provided easyread foundation julia implementation algorithm michael jones tirta susilo suggesting method facelikeness measure mahdi rezaei helping understand process violajones object detection ying bi happy answer questions mainly lack programming knowledge conceptual help bing xue lockwood peck comp sci students answered questions finally people julia slack channel dealing probably stupid questions mind micket david sanders eric forgy jakob nissen roel note running bsd default juliaplots backend gr provide binaries freebsd build source statsplots dependency example main packag