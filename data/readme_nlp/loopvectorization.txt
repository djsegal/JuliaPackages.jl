loopvector instal use pkg pkg add loopvector loopvector support julia test julia night warn misus loopvector serious consequ inbound misus lead segfault memori corrupt expect time avx macro block code index array bound avx perform bound check iter empti collect iter empti loop eachindex float undefin behavior result bound memori access ensur loop behav correct reli specif execut avx oper loop insid scope correct depend particular implement cumsum avx use multipl loop level nest loop usag librari provid avx macro prefix loop broadcast statement tri vector loop improv runtim perform macro assum loop iter reorder current support simpl nest loop loop bound inner loop constant iter outer loop singl loop level loop nest limit remov futur version benchmark pleas document benchmark versus base julia clang icc ifort gfortran eigen believ code compil flag improv submit benchmark julia code use loopvector test perform regress semi regular basi pleas feel file issu code sampl exampl dot product llvm julia default generat essenti optim code primari vector loop dot product vector loop comput simd vector width iter time cpu run benchmark float data simd vector width mean comput iter time llvm slow handl tail length iter reason benchmark plot perform drop size remaind increas simpl loop dot product loopvector optim handl tail effici julia use loopvector benchmarktool julia function mydot inbound simd eachindex mydot generic function method julia function mydotavx avx eachindex mydotavx generic function method julia rand rand julia btime mydot alloc byte julia btime mydotavx perform similar alloc byte julia rand rand julia btime mydot loop shorter remaind slow alloc byte julia btime mydotavx perform remain unchang alloc byte matrix multipli vector fancier loop familiar exampl dive julia function mygemm inbound fastmath axe axe cmn zero eltyp axe cmn cmn mygemm generic function method julia function mygemmavx avx axe axe cmn zero eltyp axe cmn cmn mygemmavx generic function method julia julia matrix float undef randn randn julia similar similar julia benchmark mygemmavx benchmarktool trial memori estim byte alloc estim minimum time median time mean time maximum time sampl eval sampl julia benchmark mygemm benchmarktool trial memori estim byte alloc estim minimum time median time mean time maximum time sampl eval sampl julia use linearalgebra test julia test test pass julia blas set num thread blas vendor mkl julia benchmark mul benchmarktool trial memori estim byte alloc estim minimum time median time mean time maximum time sampl eval sampl julia test test pass julia produc macro kernel implement matrix multipl abl handl matric perform block pack array prevent oper memori bottl neck day loopvector tri model cost memori movement cach generat loop macro kernel follow low view tool generat effici comput kernel leav task parallel cach effici broadcast exampl straightforward oper express via broadcast type lazi matrix multipl oper julia use loopvector linearalgebra benchmarktool test blas set num thread julia rand rand rand rand julia view julia avx view julia test test pass julia buf matrix float undef size size julia buf similar julia btime view mul buf buf alloc byte julia btime avx view alloc byte julia test test pass julia amulbtest view julia amulbtest view julia test test pass lazi matrix multipl oper escap broadcast fuse easi write code avoid intermedi recomend check split oper piec isol matrix multipl increas perform especi matric separ multipl leverag blas advantag thread improv optim loopvector improv note loop faster broadcast behavior broadcast determin runtim inform dimens lead dimens size broadcast compil time julia function amulbtest avx axe axe cmn zero eltyp axe cmn cmn amulbtest generic function method julia amulbtest view julia test test pass julia benchmark amulbtest view benchmarktool trial memori estim byte alloc estim minimum time median time mean time maximum time sampl eval sampl deal struct key avx macro perform gain leverag knowledg exact data float int handl cpu strightforward general avx macro array contain struct matrix complex float instead current recommend user wish appli avx array struct packag structarray transform array element struct struct element array use structarray write matrix multipli gemm kernel matric complex float complex int use loopvector linearalgebra structarray benchmarktool test blas set num thread blas vendor const matrixfint union matrix float matrix int function mul avx matrixfint matrixfint matrixfint avx size size cmn zero eltyp size cmn cmn function mul add avx matrixfint matrixfint matrixfint factor avx size size cmn zero eltyp size cmn factor cmn const structmatrixcomplexfint union structarray complexf structarray complex int function mul avx structmatrixcomplexfint structmatrixcomplexfint structmatrixcomplexfint mul avx mul add avx mul avx mul add avx mul avx kernel accept structarray matric complex multipli effici julia julia structarray randn complexf julia structarray randn complexf julia structarray matrix complexf undef julia collect similar julia btime mul avx alloc byte julia btime mul collect collect collect structarray regular array alloc byte julia test test pass similar approach kernel varieti numer struct type dual doublefloat etc packag use loopvector gaius mabla octavian paddedmatric recursivefactor snparray tullio yisyaiframework tropicalgemm trixi use loopvector pleas feel free file ad list