slurmmanagers repository forked clustermanagersjl using julia interactively slurm cluster hacky changes changes addprocsslurm function properly deals cpuspertask argument set environment variable julianumthreads accordingly threaded blas enabled add default slurm arguments slurm parameter default value ntasks process cpuspertask threads process threadspercore disable hyperthreading topology masterworker architecture hint jobfileloc pwd output log output relative path unit min extra functionalities basethreads linearalgebra loaded addprocsslurm successful connected required nodes using equivalent statement global scope using linearalgebra base threads workerinfo information workers package hwloc dictionary workerid myid worker id cpu sys cpuinfo model cpu model hwinfo getinfo architecture info nthreads threads nthreads julia threads blasthreads blas getnumthreads blas threads blasconfig blas getconfig blas configuration memfreegb sys freememory free memory gb remotecallfetch workerinfoi remotecallfetch workerinfo test reliability functionalities tests slurm cluster intel xeon cpus assume mkljl default enablemkltrue blas cluster amd cpus recommended set enablemklfalse installation install package running using pkg pkg add example usage worker setup import package please note mkllinearalgebra imported implicitly slurmmanagers packages decorated macro using mkl linearalgebra using distributed using slurmmanagers add processes set worker pool wpool addprocsslurm yourpartition ntasks cpuspertask wpool workerpool workers test cluster node sockets intel xeon gold r cores cores total slurm system automatically assigned nodes running tasks physical cores check workers interact master node distribute jobs dynamically check information remotecallfetch myid return remotecallfetch workerinfo return dict define job define job myfun requires input arguments include worker begin function myfun real rand symmetric elapsed eigvals return assign job worker worker remotecall fetch simply remotecallfetch example pass worker wait finishes job return result remotecallfetch myfun return remote worker assign multiple jobs workers pmap xs rand core local machine limited memory bridge elapsed myfun xs worker cores cores total elapsed sync pmap myfun wpool xs batchs