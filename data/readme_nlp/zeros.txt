zero modul provid singular datatyp name zero instanc datatyp ident repres valu zero zero subtyp integ common oper etc defin oper propag zero type return valu correct real ieee inf nan exampl zero reduc zero compil time effect zero inf zero nan valu behaviour sometim refer strong zero valu zero compil time complier abl optimis function call argument type julia liter constant propag function compil time similar effect hard control liter propag tri convert nonzero valu zero throw inexacterror attempt divid zero throw divideerror return inf nan compil time zero denomin usual sign piec code written optim testzero function chang type variabl equal zero exampl foo testzero call foo nonzero zero call foo zero instead function foo compli specif input type zero result speed up outweigh cost branch attempt creat complex zero imaginari result real typic result faster code execut advanc usag zero complex exampl usag exampl complex julia complex cours write code handl make exampl special real complex imaginari equal zero imaginari real equal zero common creat special type class real imaginari complex nine method handl combin argument binari oper exampl real time imaginari imaginari time complex etc zero type defin defin type constructor use zero abstract type myabstractcomplex real struct mycomplex real myabstractcomplex struct myreal real myabstractcomplex zero struct myimaginari real myabstractcomplex zero myreal real myreal zero myimaginari real myimaginari zero mycomplex real zero myreal mycomplex zero real myimaginari mycomplex zero zero mycomplex zero zero zero disambigu worth note zero requir storag myreal myimaginari requir half storag mycomplex defin type field defin function use abstract type exampl defin multipl base myabstractcomplex myabstractcomplex mycomplex defin multipl combin myreal myimaginari mycomplex tri multipli pure imaginari julia myimaginari myimaginari myreal int magic type infer julia figur imaginari time imaginari equal real result comput effici hand code myimaginari myimaginari exampl zero type found doubledoubl defin doubl type field field zero common separ type singl defin instead type field creat zero type requir storag exist function requir modif zero type particular type assert restrict