nonlinearsystemsjl solve nonlinear systems equations nonlinear squares julia nonlinearsystemsjl julia package solving nonlinear systems equations nonlinear squares renovates trusted solution algorithms highly performant extensible implementation native julia language nonlinearsystemsjl special emphasis low evaluations updating jacobian matrix flexibility swapping underlying linear solver based array type hardware zero memory allocation incurred iteration steps moment solution algorithm implemented modified version powell hybrid method trust region method dogleg relations existing packages discussed towards quick start nonlinearsystemsjl adopts commonsolvejl interface wraps residual function oncedifferentiable defined nlsolversbasejl optionally userprovided jacobian function interface shared solving rootfinding solving squares using nonlinearsystems residual function function sin exp return jacobian function optional function exp cos exp return initial value x evaluate jacobians via finite differencing methods finitediffjl solve hybridrootfinding x userspecified jacobian function separate initialization step init hybridleastsquares x solve details please documentation related packages nonlinearsystemsjl addresses following limitations related packages minpackjl gsljl option swapping linear solver rank update jacobian matrix factorization adjusted wrappers interface native julia implementation minpackjl apple silicon nlsolvejl option swapping linear solver rank update jacobian matrix factorization iteration steps allocating support nonlinear squares nonlinearsolvejl trust region solver trustregion provide correct answers test version rank update jacobian matrix factorization iteration steps allocating support nonlinear squares leastsquaresoptimjl solves nonlinear squares rank update jacobian matrix factorization lsqfitjl solves nonlinear squares performance dominated leastsquaresoptimjl roadmap development nonlinearsystemsjl stage moment trustregion methods considered linear involved iteration solved dense matrix factorization following features added future support sparse jacobian matrices support conducting linear algebra gpus references mor jorge danny sorenson burton garbow kenneth hillstrom minpack project sources development mathematical software ed wayne cowell jersey prenticehall nocedal jorge stephen wright numerical optimization nd ed york springer powell michael hybrid method nonlinear equations numerical methods nonlinear algebraic equations ed philip rabinowitz london gordon breach