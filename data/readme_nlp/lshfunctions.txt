lshfunctionsjl julia package localitysensitive hashing accelerate similarity search lsh installation supported similarity functions examples lsh traditionally data similar database compute similarity database whichever similar instance type approach classic nearest neighbors algorithm major time similar linear database similarity search prohibitively expensive moderately datasets addition time complexity compute similarity datapoints typically linear dimensions datapoints data dimensional thousands millions dimensions similarity computation perform fairly costly localitysensitive hashing lsh technique accelerating kinds similarity searches instead measuring similar query database calculate hashes query compare experiences hash collision localitysensitive hash functions randomly generated fundamental property similarity increases probability hash collision increases installation install lshfunctionsjl julia repl pkg add lshfunctions supported similarity functions hash functions similarity functions cosine similarity simhash jaccard similarity minhash l manhattan taxicab distance lhash l euclidean distance lhash inner product signalsh recommended mipshash functionspace hashes supports l l cosine similarity montecarlohash chebhash package lot including improvement documentation api examples easiest start constructing hash functions calling lshfunction following syntax hashfn lshfunctionsimilarity function hash functions generate lsh familyspecific keyword arguments example following snippet generates localitysensitive hash functions bundled single simhash cosine similarity julia using lshfunctions julia hashfn lshfunction cossim julia nhashes hashfn julia similarity hashfn cossim hash inputs calling hashfn julia randn julia xhashes hashfn details check lshfunctionsjl document