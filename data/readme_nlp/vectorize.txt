vectorize features vectorizejl provides unified interface performance vectorized functions provided apple accelerate framework os intel vml mkl yeppp currently functions supported accessed using vectorizelibrarynamefunction syntax vectorizeaccelerateexp vectorizevmlerf vectorizeyeppplog furthermore complete benchmarking suite run package installation automatically selects fastest implementation architecture functionfunction basis means calls vectorizesin transparently mapped accelerate vml yeppp implementation based performance frameworks particular machine type mapping happens package installation occurs runtime overhead expect wait extra normal install package benchmarking suite run vectorizejl provides vectorize macro automatically converts call julia standard implementation fastest vectorized equivalent available machine cos standard julia implementation vectorize cos converted yeppp vml accelerate compile time macro provides easy method code quickly converted vectorizejl little additional effort vectorizejl provides replacebase macro automatically overloads base broadcasting calls fastest vectorized equivalent available standard julia broadcast implementation cis standard julia broadcast implementation replacebase cis overloads broadcast calls cis provided cis fused broadcast replacebase note pow currently available vml call vectorizepow cis call vectorizecis replacebase overload functions benchmarked vectorizejl macro allows preexisting code advantage optimized vectorized implementations line code note broadcast call multiple function calls fused vectorizejl version care write simple broadcasts performance benefits significant plots runtime reduction selection operators available vectorizejl data collected ghz intel i running os function called immediately prior benchmarking ensure precompilation calculating average ten executions using vectorfloat length functions provide magnitude performance standard functions julia fold improvements common functions throughout libraries functions designed operate moderate sized arrays tend performant standard julia functions arrays length elements vectorizejl vectorizejl transparently select frameworks available machine required particular framework installed tends provide performance frameworks strengths users running os strongly recommend installing intel vml free source projects community license licenses available library available osx systems yeppp yeppp provides collection functions package currently supports functions float float complexfloat complexfloat vectorizeyeppp provides access various yeppp functions uint uint uint uint int int int int benchmarked neither accelerate vml provide equivalent functions function provided vml currently supported alongside vast majority optimized yeppp functions equivalent portion accelerate please documentation complete list provided functions implementations installation install version vectorize master run pkgclone julia repl os linux windows windows wget zip installed available path download decompress yeppp package finished cloning run pkgbuildvectorize print build status terminal notified build completes successfully attempt determine frameworks available machine incorporate frameworks benchmarking process unable locate yeppp download local copy store vectorizejl package directory changes system installing vectorizejl build process report frameworks able unable systeminstalled version yeppp mkl please ensure system path build fails unable systeminstalled packages correctly please create issue github copy output pkgbuild issue help debugging build failur