genieauthorisation role based authorisation rba plugin geniejl installation genieauthorisationjl package role based authorisation plugin geniejl highly productive julia web framework requires installation environment geniejl mvc application allowing plugin install files configuring authentication using authorisation genieauthorisationjl tandem genieauthenticationjl authentication plugin geniejl apps genieauthorisationjl adds authorisation layer top authentication features provided genieauthenticationjl please genieauthenticationjl configured geniejl application following instructions genieauthenticationjl plugin installed configure authenticated access protect role based authorisation step add user authentication app refine access via authorisation add plugin application supports user authentication time add user authorisation add plugin environment geniejl app protect autorisation julia mygenieapp pkg add genieauthorisation added install function add files geniejl app required installation julia using genieauthorisation julia genieauthorisation install dir command set plugin files geniejl app potentially add views controllers models migrations initializers etc usage bulk authorisation features provided package series database migrations set database tables configure rba system set database plugin db support store configuration roles permissions various relations migration files dbmigrations folder run running migrations julia using searchlight julia searchlight migration allup individually running migrations julia using searchlight julia searchlight migration createtableroles julia searchlight migration createtablepermissions julia searchlight migration createtablerolesusers julia searchlight migration createtablepermissionsroles create table users roles permissions role based authorisation system implements access control permissions features accessible users permission instance require authorisation useradmin permission route level route adminusers authorised usersadmin code accessed users usersadmin permission permissions assigned directly users roles role multiple permissions example admin role permissions finally users assigned roles getting access role respective permissions role permissions user roles genieauthorisationjl exposes api makes checking users permissions straightforward handle actual roles roles permission assignment manageable bundle permissions roles assign roles users remove permissions user remove role eliminate risk failing remove forbidden permissions creating permissions roles permissions roles stored database searchlightjl manage data using genieauthorisation create roles user admin user admin findoneorcreate role name save create permissions create read update delete findoneorcreate permission name save roles permissions created assign permissions roles using genieauthorisation assignpermission findone role name admin findone permission name create assignpermission findone role name admin findone permission name read assignpermission findone role name admin findone permission name update assignpermission findone role name admin findone permission name delete assignpermission findone role name user findone permission name read assigned create read update delete permissions admin role read permissions user role assign roles users example user username essenciary admin using genieauthorisation genieauthentication users assignrole findone user username essenciary findone role name admin heads users explicitly assigned roles permissions permissions available roles means users role permissions makes sense automate role assignment example assigning default basic role user registration autorising access permissions roles users defined relationships enforce user authorisation app authorisedpermission authorised macro checks current user permission permission exception automatically thrown stopping current thread execution using genieauthorisation route adminusersdeleteuserid authorised delete code accessed users usersadmin permission haspermission haspermission function check user permissions function returns boolean allowing implement conditional logic based status authorisation haspermission currentuser update haspermission currentuser delete li class navitem dropdown class navlink dropdowntoggle href data toggle dropdown user management div class dropdownmenu haspermission currentuser update class dropdownitem href adminusersedituserid edit user haspermission currentuser delete class dropdownitem href adminusersdeleteuserid delete user div li deleting authorisation deleting authorisation removing relationships stored database using searchlightjl api example remove permission role using searchlight genieauthorisation relationship findone role name admin findone permission name delete delete role user using searchlight genieauthorisation genieauthentication users relationship findone user username essenciary findone role name admin delete finally remove roles permissions delete respective entities using searchlight genieauthorisation remove delete permission delete findone permission name delete remove admin role delete findone role name admin