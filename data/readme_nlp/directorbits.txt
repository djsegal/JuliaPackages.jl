directorbitsjl privately registered version development page retained compatibility history tools solving keplerian orbits context direct imaging primary mapping keplerian orbital elements cartesian coordinates times plotsjl recipe included easily plotting orbits values calculates projected positions planets stellar radial velocity proper motion anomaly tool visualizing orbits examples generating nice animations plots luxorjl package designed performance composability wide range packages julia ecosystem including forwarddiff fit orbits observations directdetectionsjl directimagesjl usage using directorbits units conventions parameters elements keplerianelementsdeg plx display period orbit run using plots using plots plot elements label planet note default horizontal axis flipped match look sky horizontal coordinates generated functions flipped coordinates sample image flip image negate coordinate array hundreds thousands orbits visualize pass array plot opacity orbits reduced appropriate amount projected cartesian coordinates milliarcseconds epoch julia pos kepcart elements time days componentvector floattypenamestaticarrayssarray mas mas mas mas mas convenience functions including periodelements period companion days distanceelements distance system pc meanmotionelements mean motion primary radiansyr projectedseparationelements orbital elements time projected separation primary companion raoffelements offset ascension milliarcseconds decoffelements offset declination milliarcseconds radvel radial velocity planet star docstring propmotionanom proper motion anomaly star due planet milliarseconds orbital elements object repl print useful summary julia elements keplerianelementsfloat au plx mas period yrs distance pc mean motion yr componentvectors wrapping svectors chosen return values stack allocated allow access property name behave arrays makes easy compose packages units conventions main constructor keplerianelements accepts following parameters semimajor axis astronomical units au inclination radians eccentricity range epoch periastron passage fraction orbit graviataion parameter central body expressed units solar mass argument periastron longitude ascending node radians plx distance system expressed milliarcseconds parallax thee parameter represents epoch periastron passage fraction planet orbit follows convention orbitize read choice ther faq parameters specified position keyword arguments mix positional arguments recommended creating objects tight loop convenience constructor keplerianelementsdeg accepts units degrees instead radians diagram wikipedia reference conventions package note replaced celestial north pole image warping image system warp image pixel test particle following kepler laws easy disk system planets look time captured directorbitsjl create orbitaltransformation objects follow conventions set coordinatetransformationsjl compatible imagetransformationsjl example ot orbitaltransformation plx platescale maspx dt days forward time imgcentered centered img imgfuture warp imgcentered ot axes display directimagesjl using directimages imshow img imgfuture clims cmap seabornicefiregradient orbital transformation note arguments platescale dt required position pixel space uniquely determines semimajor axis epoch periastron passage rest orbital parameters platescale units milliarsecondspixel overall scale transform correct orbital transformation linear care composing orbitaltransformation coordinatetransformations scaling image change amount rotation occurs separation dt amount time days project image forward negative project image past makie recipe basic makie plot recipe allows plot keplerianelements using cairomakie elements keplerianelementsdeg plx lines elements axis autolimitaspect xreversed true note makie reverse axis manually whereas plotsjl set automatically installation package registery personal registry related packages install add directregistry containing related packages enter pkg mode pkg registry add https github com sefffal directregistry pkg add directorbits run gauntlet tests type followed test directorbits performance core i laptop library able calculate projected position set orbital elements ns circular orbit ns eccentric helper functions heap allocations using standard numeric types parameters precalculated creating keplerianelements object slight advantage re object sampling positions orbital elements talking nanoseconds numerical derivatives package autodiff package forwarddiffjl example using forwarddiff forwarddiff derivative radvel elements negligible overhead maybe compared calculating value access value derivative recommend diffresults package calculate x speedup using diffresults elements elements raoff elements set result type resultout diffresults diffresult calculate value derivative btime res forwarddiff derivative resultout ns allocations bytes access rv diffresults value res drvdt diffresults derivative res val zygote reverse diff package currently directorbitsjl calculating orbits gpu using cuda structarray packages easily calculate ensembles orbits gpu example using directorbits using structarrays using cuda create vector initial conditions elements keplerianelementsdeg plx convert storage struct array instead array structs elementssa structarray elements send gpu elementscusa replacestorage cuarray elementssa allocate output storage zeros length elementssa cpu outcu zeros length elementscusa gpu calculate radial velocity orbit time zero time radvel elementssa cpu time cuda sync outcu radvel elementscusa gpu laptop pitiful gpu timing gpu calculation times faster cpu