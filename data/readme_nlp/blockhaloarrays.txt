blockhaloarrays blockhaloarray type array type extend abstractarray designed sharedmemory multithreaded workloads typical sharedmemory parallelization via multithreaded loops threads tturbo etc threads threads jlo jhi ilo ihi type parallelization tends scale especially memorybandwidth limited workloads especially true stencil operations functions access memory addresses aim blockhaloarray type minidomain decomposition separate threadspecific chunks blocks memory thread operate data race conditions memory bandwidth contention context shared memory operations efficient compared typical mpi domain decomposition method thread able operate block memory maintain numaaware locality communication via copies mpi library calls future releases include mpiaware blockhaloarray facilitate mpithreads hybrid parallelization example blockedstyle stencil operation looks following note advantage singlethreaded turbo macro vectorize nestedloop function stencil blockhaloarray blockid ilo ihi jlo jhi looplimitsblockid data views blocksblockid turbo jlo jhi ilo ihi data data data data data data data data data data stencil function split threads via sync blockid nthreads tspawnat blockid stencil blockid blockhaloarray types taskbased parallel workload scaling multithreaded loops synchronization required exchange halo data benchmark results coming soon exports types blockhaloarray blocked array type extent abstractarray sharedmemory type system partitions array blocks operated threads constructors blockhaloarray dims ntupleint halodims ntuplenint nhalo integer nblocks nthreads float usenuma true blockhaloarray dims ntupleint nhalo integer nblocks nthreads float usenuma true blockhaloarray abstractarray nhalo integer nblocks nthreads blockhaloarray abstractarray halodims ntupleninteger nhalo integer nblocks nthreads example using threads using threadpools using blockhaloarrays dims matrix nhalo halo entries dimension nblocks nthreads nblocks nthreads warning issued blockhaloarray dims nhalo nblocks float create empty data blockhaloarray rand dims nhalo nblocks create existing array create d array halo exchange nd rd dimensions newdims haloax monotonically increasing outer dims blockhaloarray newdims haloax nhalo nblocks float fill block corresponding threadid value function init dom domainview threadid fill dom threadid thread initialize block sync tid nblocks tspawnat tid init a block sync halo region neighbors updatehalo anew flatten anew d array blockhaloarray mpiblockhaloarray implemented mpiaware version blockhaloarray facilitates halo communication nodes via mpi functions flatten return flattened array copy repartition nblocks repartition blockhaloarray block layout updatehalo includeperiodicbcfalse sync block halo regions sync loop tspawnat sync block updateblockhalo blockid includeperiodicbcfalse sync halo regions single block sync spawn calls domainview blockid return view domain halo regions block blockid onboundary blockid current block blockid boundary help apply boundary conditions user code additional overloaded methods include eltype abstractblockhaloarray eltype blocks size abstractblockhaloarray globaldims size abstractblockhaloarray dim size blocks dim axes abstractblockhaloarray axes blocks axes abstractblockhaloarray dim axes blocks dim abstractblockhaloarray blocks firstindex abstractblockhaloarray firstindex blocks abstractblockhaloarray blocks lastindex abstractblockhaloarray lastindex blocks eachindex abstractblockhaloarray eachindex blocks nblocks abstractblockhaloarray length block