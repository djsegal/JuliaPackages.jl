avsfldio file io avs format field data files extension fld julia language conjunction fileio package data format supports dimensional arrays real methods following fileio api package provides export methods avsfldioloadfilename avsfldiosavefilename data export following methods header isexternalfile fid fldopenfile dir chatfalse header fldheaderfilestring dir chatfalse data fldreadfilestring dir chatfalse fldwritefile data kwargs chattrue verbose debugging output dirsomepath prepend path file docstrings details usage users simply fileio load save methods follows using fileio version data rand random d data file testfld save file data throw error file exists data load file assert data data file format overview avs fld data format comes flavors avs internal format ascii header top file header followed formfeed characters followed data binary format avs external format header data separate files ascii header file includes name data file data file contain ascii binary data avs internal format array dimension varies fastest consisting short integers int julia format avs internal header avs field file ndim dim dim nspace veclen datashort fielduniform followed form feeds short integers binary format d array size bit floating host cpu endianness header avs field file ndim dim dim dim nspace veclen datafloat fielduniform save method library writes avs internal format default filename extension fld avs external format suppose stored array data binary file named sinodat homebrew header consists bytes suppose convert homebrew format avs internal format avs external format creating ascii file named sinofld containing avs field file ndim dim dim nspace veclen datashort fielduniform variable filesinodat filetypebinary skip add additional comments headers using lines begin skip option indicates byte header skipped reading binary data format allow additional headers buried data binary header omit skip line altogether data ascii format hopefully replace filetypebinary filetypeascii ascii data skip option refers ascii entries bytes table supported types data line complete avs fld format includes features supported io library library supports extensions standard avs handy single d header file multiple d files treated single entity documentation coming request magic bytes convention avs fld file begins avs line illustrated examples interface library fileiojl byte string magic bytes magic file type file string start header simply add editor including newline data types following table supported options data field header options le be sun extensions designed portability options int portable hosts endianness format julia type endian bytes byte uint shortbe uint shortsun uint xdrshort uint shortle uint le int int intle int le intbe int xdrint int float float floatle float le floatbe float xdrfloat float double float doublele float le doublebe float xdrdouble float entries native host cpu portable byte format unsigned bits following table saved output data field various input julia data fields assuming little endian le default avsfldiofldwrite julia type data note bool byte uint byte int shortle int intle int intle downgraded float floatle upgraded float floatle float doublele bigfloat doublele downgraded history application visualization system avs interactive graphics computation framework developed s widely medical imaging community article overview avs data files extension fld software frameworks provide file io support format authors jeff fessler university michigan contributor