gr module julia module provides julia interface gr framework visualisation applications installation julia repl date version installed julia using pkg julia pkg add gr pkg replmode pkg add gr julia package manager download install precompiled runtime hardware architecture gr software installed recommended locations getting started julia simply type using gr begin calling functions gr framework api start simple example generate random create histogram histogram function automatically chooses appropriate bins cover range values shape underlying distribution using gr histogram randn using gr backend plotsjl plots powerful wrapper julia visualization backends gr favorite ones impression complex visualizations easier plots look examples plots real power comes ecosystem surrounding information alternatives besides gr plots nice package called grutils provides userfriendly interface lowlevel gr subsytem julian modular style newcomers recommended package detailed documentation found gr grutils currently developed parallel plans merge modules future runtime environment grjl wrapper gr framework gr runtime libraries required software provided via grjlljl package autogenerated package constructed using binarybuilder default setting alternative binaries gr tarballs provided directly gr developers stand distributions selected platforms regardless programming language gr runtime environment required language environments julia python installation path specified environment variable grdir env juliadebug gr debug statements gr package env grdir path gr installation usrlocalgr using gr information setting local gr installation gr framework website permanently gr runtime set environment variable grdir accordingly starting julia macos linux export grdirusrlocalgr windows set grdirgr please note method shown grjll imported switching binaries via grgrpreferences aid switching binarybuilder upstream framework binaries grgrpreferences module implements methods usesystembinary useupstreambinary usejllbinary preferencesjl configure grjl grjlljl existing gr install invoke usesystembinary using gr gr grpreferences usesystembinary pathgr force true download switch upstream binaries invoke useupstreambinary using gr repeat error gr grpreferences useupstreambinary force true usesystembinary useupstreambinary accept override keyword set following depot default overridestoml julia depot normally resides juliaartifactsoverridestoml project localpreferencestoml usually located near projecttoml active project environment depot project override mechanisms switch binarybuilder binaries supplied grjll invoke usejllbinary using gr repeat error gr grpreferences usejllbinary force true reset depot project override mechanisms encounter difficulties switching binaries diagnostics function provide useful information please include information assistance using gr gr grpreferences diagnost