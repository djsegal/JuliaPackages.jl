multisets set unordered collection item appear multiset unordered collection repetition permitted version multiset subtype abstractset set operations multiset set bitset supported operators removed instead operators removed instead function issubset creating multiset julia using multisets julia multiset type type type elements held int string type omitted defaults collection list elements vector set invoking multisetlist creates multiset elements list appear appropriate multiplicity example multisetonesint creates multiset julia multiset julia multiset julia eltype int addingdeleting elements push increases multiplicity added pushincr increases multiplicity incr allow incr negative decrease multiplicity explicitly sets multiplicty delete removes effect keysvaluespairs keys returns iterator elements multiplicyt values returns iterator multiplicities elements pairs returns iterator element multiplicity pairs julia multiset alpha beta beta gamma gamma gamma alphabetabetagammagammagamma julia collect keys element arraystring alpha gamma beta julia collect values element arrayint julia pairs dictstringint entries alpha gamma beta access determine multiplicity returns added list elements collect julia collect element arrayint notice elements repeated multiplicity list elements elements appear collectkeys convert julia set effectively set multiplicities set julia set set printing result println controlled following functions suppose multiset created follows julia multiset string julia push alpha julia push beta setbracesshow causes multisets printed list enclosed curly braces alphabetabeta default multiset empty printed setshortshow causes multisets printed abbreviated format multisetstring elements setjuliashow causes multisets printed form proper julia definition multiset multisetstringalphabetabeta setkeyvalueshow causes multisets printed element multiplicity keyvalue pairs multisetstringalpha beta operations unionintersection functions union intersect compute union intersection multisets example julia multiset julia multiset julia union julia intersect multiplicity union max multiplicity intersect min disjoint union behaves productsumdifference cartesian product multisets computed element element multiplicity nonnegative integer multiset result multiset multiplicy disjoint union computed element element multiplicity difference multisets computed result multiplicity max setdiff setdiff multiset element completely removed julia multiset julia multiset julia julia setdiff cardinality function length computes cardinality elements multiset including multiplicities function isempty returns true exactly length comparison operator function issubset provided determine equal submultiset expressed note holds issubset holds test element multiset following iteration iterating multiset element repeated according multiplicity julia multiset julia println julia sum multisets counters multisets useful devices counting example suppose program reads words text file count word appears file multisetstring step words file pushing instance basic structure looks word file push word word return word seen file counters module miscellaneous implementation multiset consists single data field called data dictionary mapping elements multiplicities various multiset functions ensure integrity data enforcing nonnegativity function clean purges data field elements multiplicity equal hash function provided multiset key dictionary etc hash multiset simply hash cleaned data field note clean function exported probably reason user invoke desired multisetsclean copy multiset multiset assigns object changes affects julia multiset julia julia julia julia independent copy copy deepcopy julia multiset julia deepcopy julia julia julia note deepcopy duplicates elements multiset elements immutable deepcopy efficient copy hand elements mutable deepcopy slower creates independent copies el