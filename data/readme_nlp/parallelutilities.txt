parallelutil parallel mapreduc help function hpc meant primarili embarass parallel oper requir split list task subsect process individu core instal instal packag use pkg add parallelutil julia use parallelutil export function pmap relat function pmapreduc pmapreduc commut pmapsum pmapreduc elementwis pmapsum elementwis function split tupl rang evenlyscatterproduct nworkersact workersact workerrank whichproc procrang recast localindex procid localindex extremadim extrema commonlastdim util function queri cluster gethostnam nodenam nproc node quick start julia addproc element array int julia use parallelutil julia pmapreduc one myid hcat nworker array float julia pmapreduc commut one myid sum nworker element array float julia pmapsum one myid nworker element array float usag packag split collect rang subpart rough equal length core approxim equal load understood use exampl function defin julia begin paramet take valu rang sampl entir paramet space exampl choos rang julia xrang yrang zrang rang strict increas total combin rang split evalu function processor describ simpl evalu explain achiev set paramet split use function evenlyscatterproduct exampl processor receiv chunk list julia collect evenlyscatterproduct xrang yrang zrang element array array tupl int int int six processor receiv tupl paramet final receiv split various function describ pmap relat function packag provid version pmap option reduct provid distribut key aspect first iter product argument pass function argument elementwis task iter product arg arg specif set paramet exampl second iter pass function batch elementwis left function iter collect third task pass processor sort rank task pass processor worker task assign task approxim distribut processor assum function take equal amount time run set paramet function pmapbatch elementwis export pass element function unwrap tupl produc result pmap worker assign batch approxim equal size iter product pmapbatch pmapbatch elementwis exampl demonstr evalu function rang paramet list julia pmapbatch elementwis xrang yrang zrang julia tupl check correct julia map vec collect iter product xrang yrang zrang true pmapbatch elementwis produc result pmap intern julia pmapbatch elementwis element array int julia pmap element array int function pmapbatch deal batch paramet pass processor pmap elementwis call function hood process paramet direct entir batch reason read valu disk entir set paramet exampl demonstr obtain result use pmapbatch julia pmapbatch xrang yrang zrang julia tupl pmapsum pmapreduc parallel execut follow reduct sum result reduct commut result matter commut matter function export carri task pmapreduc commut pmapreduc former preserv latter former slight faster sort result preserv conveni packag provid function pmapsum choos sum reduct oper map reduc oper similar distribut loop provid julia main differ reduct oper binari function packag sum add result differ function paramet batch function suffix elementwis take paramet individu unwrap tupl function pmapreduc paramet elementwis implement futur exampl sum list parallel call julia pmapsum elementwis ident map function ident return argument sum squar list julia pmapsum elementwis choos arbitrari reduct oper function pmapreduc pmapreduc commut elementwis function pmapreduc commut elementwis reduct carri binari tree worker comput parallel julia pmapreduc commut elementwis prod function pmapreduc sort result obtain processor use concaten julia worker element array int signatur pmapreduc fmap freduc iter julia pmapreduc one myid hcat nworker array float function pmapreduc produc result pmapreduc commut reduct oper commut result receiv children worker matter function pmapreduc commut faster sort result receiv worker reduct function pmapsum choos reduct oper sum julia sum worker comput one sum worker parallel julia pmapsum one myid nworker element array float specifi return type map reduc oper function specifi infer use base return type specifi return type follow variant julia pmapreduc one myid vector float hcat matrix float nworker array float julia pmapsum one myid vector float nworker element array float specifi type lead type coercion error convers help assert correct result obtain exampl result convert vector float vector int convers integ julia pmapsum one myid vector int nworker element array int convers fail aren integ julia pmapsum rand vector int nworker error worker inexacterror int instanc type infer desir function return output type paramet valu type infer specifi keyword argument infer type fals julia pmapsum one myid nworker infer type fals element array float note keyword argument infer type return type specifi call function productsplit exampl talk task distribut approxim equal worker detail distribut describ packag provid iter productsplit list rang paramet pass core equival achiev use iter iter drop iter productiter appropri chosen paramet productsplit behav similar productsplit support extra featur index elimin actual iter scenario signatur constructor productsplit tupl rang processor processor rank processor rank take valu processor note mpi rank start exampl check task pass processor julia productsplit xrang yrang zrang productsplit tupl int int int unitrang int julia collect element array tupl int int int object loop valu valu sort revers lexicograph index increas slowest index increas fastest rang roll expect task distribut remaind split processor exampl six processor receiv task receiv evalu length productsplit oper processor julia tupl length productsplit xrang yrang zrang object generat function evenlyscatterproduct use signatur julia evenlyscatterproduct xrang yrang zrang productsplit tupl int int int unitrang int index iter support fast index julia julia btime alloc byte use paramet analyz processor julia xrang yrang zrang julia param xrang yrang zrang julia productsplit param productsplit tupl int int int unitrang int julia length julia btime length fast alloc byte julia btime fast iter alloc byte julia btime alloc byte julia btime alloc byte comput index particular set paramet iter somewhat slower evalu log time use binari search valu exist list evalu time julia val julia val true julia localindex val julia val julia btime val alloc byte true julia btime localindex val alloc byte use function whichproc return rank processor specif set paramet total processor comput use binari search julia whichproc param val julia btime whichproc param val alloc byte extrema comput rang variabl processor time julia extrema extrema paramet processor julia tupl extrema minimum maximum similar julia minimum maximum julia btime extrema alloc byte