linkedlistsjl linkedlist collections julia package provides singly linked list doubly linked list implementation julia collections singly linked lists supported cons car cdr standard collection doubly linked lists included samples collection fancy create array nodes maybe linkedlist linkedlist doubly linked list deletions happen constant time code contains index item list removing items list invalidate index usage linkedlist int create list type isempty test items empty remove items length entries operation test item entry list returns bool missing eltype returns item type int indexin index list value item list item list item value push add item list returns index item pop remove return item list pushfirst add item start list return index item popfirst remove item return value append items add items list prepend items add items start list index list reference list node treated opaque index wrapper functions provided convert nodes integer positions getindex index returns value item index setindex index sets item value index lastindex returns index node operation insert index insert item index pushing values return index deleteat index delete item index return list splice index remove value index returning data value splice index replace item index data value findfirst predicate index element predicate returns true indextoposition index returns position node indextoposition indexes returns vector positions nodes positiontoindex returns node list position positiontoindex ps returns vector nodes list positions elements ps kinds iterators linkedlist access items loops indices linkedlist int prepend item int println item index keys item getindex index println item slinkedlist slinkedlist singly linked list items type appending list takes items list usage slinkedlist int create list type isempty test items empty remove items eltype returns item type int item list unshift add item start list return index item shift remove item return value prepend items add items start list index list reference list node treated opaque index wrapper functions provided convert nodes integer positions getindex index returns value item index setindex index sets item value index insert index inserts index returns index indextoposition index returns position node indextoposition indexes returns vector positions nodes positiontoindex returns node list position positiontoindex ps returns vector nodes list positions elements ps following methods singly linked lists included completeness indication using doubly linked list vector choice length entries test item entry list returns bool missing indexin index list value item list item value push add item list returns index item pop remove return item list append items add items list lastindex returns index node deleteat index delete item index return list splice index remove value index returning data value splice index replace item index data value findfirst predicate index element predicate returns true linkedlist kinds iterators slinkedlist access items loops indices slinkedlist int prepend item int println item index keys item getindex index println item implementation notes code comments time method classes differs interfaces described collections manual differences stem assumption index collection integer comments especially wrong idea write code julia please send email credit lots credit goes adolgert library adapted cod