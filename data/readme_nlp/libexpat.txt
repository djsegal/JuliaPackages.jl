libexpat julia wrapper libexpat usage xpath queries parsed tree relevant apis xpparsestring returns parsed object type etree called parseddata libexpatpdetree elementpathstring search elements parsed data object returned xpparse pdetreexpathstring xpathpdetree xpathstring search elements parsed data object returned xpparse using subset xpath specification examples elementpath foobarbaz returns array elements etree objects tag baz foobar foobaz returns array elements etree objects tag baz foo foobarbaz returns etree object representing element type baz foobarbazqux returns string representing attribute qux element type baz qux attribute foobarbazqux bar element picks baz nd bar foobarqux returns string representing attribute qux foobar foobarbazstring returns string representing stringvalue element path stringvalue concatenation text nodes descendants node note whitespace preserved concatenated string subelement exists index assumed omitted foobarbazqux foobarbazqux returns empty list element path found note elementpath starts search starts pd root pd argument elementpath start search starts children root pd argument navigate returned etree object directly using libexpat relevant etree type etree name xml tag attr dict tag attributes namevalue pairs elements vector child nodes etree string xpath search consists parser search calling xpathxpathexpression xpathxpstring construct xpath object passed argument xpath search search via parseddataxpathstring xpathparseddata xpathstring xpath string macro required recommended performance ability variable interpolation xpath called macro parse path elements starting julia variables perform limited string interpolation xpathcontains parser handles xpath specification following features currently missing accessing parents attributes xpath functions namespaceuri lang processinginstructions comment name localname account xmlns namespaces correctly parenthesized expressions xmlns namespace parsing correct output xpath axes namespace following followingsibling preceding precedingsibling escape sequences using xpath string macro streaming xml parsing store tree memory libexpat offers abbility define callbacks streaming parsing parse document creata xpcallbacks instance define callbacks receive type xpcallbacks available callbacks default initialised dummy function callback handed argument xpstreamhandler following parameters startcdata start cdata section endcdata cdata sections comment commentstring comment characterdata txtstring character data section default txtstring handler characters document otherwise handled defaultexpand txtstring default handler inhibit expansion internal entity reference startelement namestring attrsdictstringstring start tagelement endelement namestring tagelement startnamespace prefixstring uristring start namespace declaration endnamespace prefixstring scope namespace using initialized xpcallbacks object start parsing using xpstreamingparse takes xml document string xpcallbacks object arbitrary data object reference context parsing data object accessible data attribute xpstreamhandler instance passed callback data fit memory alternative xpstreamingparsefile parse xml document lineline lines read passed expat controlled keyword argument bufferlines ijulia demonstration notebook libexpat ijulia demo