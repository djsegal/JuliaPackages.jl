salt solver development salt equations steady abinitio lasing theory solving directly sparse nonlinear system equations described esterhazy liu liertzer cerjan ge makris stone melenk johnson rotter scalable numerical approach steady abinitio laser theory phys rev august originally written standalone program currently process connecting scripting front julia language prerequisites code requires petsc slepc installed version mumps solver easily satisfy ubuntu simply sudo apt install petscdev sudo apt install slepcdev add following bashrc export petscdirusrlibpetscdirpetscxlinuxgnureal export slepcdirusrlibslepcdirslepcxlinuxgnureal note using ubuntu installed directories maintainer package chose instead petsc compiler language due limitation breaks compatibility complex header file please build petsc source described macos homebrew petsc formula mumps solver option build petsc source described homepage build mumps following configure command configure downloadfblaslapack downloadparmetis downloadmetis downloadmumps downloadscalapack downloadopenmpi follow instructions configure script prints install build slepc source finally set petscdir slepcdir environmental variables respective toplevel build directories build salt solver source files cd saltjldeps line output begins mpicc mpicxx petsc built incorrectly rebuild petsc source language instead example example simple d ring laser uniform dielectric gain convenience files prepared found examples directory lasing threshold passive pole frequency simply runring passive runring file section creeper variable set creeperin passring out threshring dd dmax outputdeps newtonftol e reuselu printnewton finally runring creeper command passive linear eigensolver passive poles near frequency outputs matlab mode files reason matlab format petsc defaults files completely compatible julia read using include command usual provided characters comments matlab replaced characters comments julia command creeper takes mode files increments pump strength value solving salt equations intermediate pump strengths incrementing pump strength passive threshold modes threshold outputs mode files threshold pump strength creeper command solve lasing threshold modes discuss examine main executable bash script runring contains parameters lasing mode d ring laser file geometrical specifications geonc nx ny nz npmlx npmly npmlz lowerpml hx hy hz epsfile epsringtxt epsifile epsiringtxt fproffile fringtxt wa gamma manualepspml outputepstilde nc components electric field tmpolarized modes te vectorial fields nx ny nz total pixels including perfectly matched layer pml pixels describe d geometries ny nz set d geometries nz set npml fields pixels pml placed boundaries set zero d ring loss modelled imaginary dielectric soon describe lowerpml parameter determines pml upper lower boundaries set upper boundary set hx hy hz parameters determine width arbitrary length units single pixel note code chooses speed light parameters directly determine frequency units results additionally note set ny nz values hy hz chosen matter look input files epsfile set existing text file values real dielectric function nynz grid simply repeated times epsringtxt ring uniform dielectric value unity file epsifile specifies imaginary dielectric text file epsiringtxt repeated times simulate uniform radiation loss cavities outgoing boundary conditions model radiation loss realistically instead npml nonzero epsifile option simply omitted result code taking dielectric purely real file option fproffile file gain profile ones file unlike epsifile optional remaining parameters block wa gamma atomic gain frequency relaxation polarization rate salt theory respectively finally manualepspml outputepstilde advanced features manually providing pml function instead computed npml parameters outputting total dielectric function debugging purposes block parameters invoked calling passive passivewreal wimag bx bz kx e ky kz norm passiveout passring nev sttype sinvert line guess pole passive command poles nev parameter bottom roughly eigenpairs looking poles near i told eigensolver save approximately eigenpairs set parameters mirror boundary conditions relevant lowerpml parameter set zero simulate half computational cell direction setting bx impose odd mirror boundary conditions lower direction possibilities include dirichlet zero field set lowerpml parameter trying simulate cell boundaries default dirichlet line contains bloch wave vectors directions example simulate lasers periodic media photonic crystals set kx wave vector e equivalent periodic boundary conditions direction parameter norm simply provides overall scaling electric field eigenvector usually parameter adjusted numerical stability issue modifications finally line contains passiveout parameter specifies filename prefix output mode files passive command example set value option passring output files passive passring passring third block parameters calling creeper creeperin passring out threshring dd dmax outputdeps newtonftol e reuselu printnewton in out parameters filenames extension input modes output modes input file exist prior calling creeper initial pump strength automatically read input mode file situation multiple lasing modes in out lasing mode suffix third lasing mode caveat input modes pump strength else error occur line parameters include dd pump strength increment solve salt equation dmax final desired pump strength positive indicates threshold negative rest parameters advanced settings running commands runring passive runring creeper listed file thresringfile mode exactly threshold closer look file variable file psi contains information mode psi variable nxnynznc elements expression comes field complex real imaginary components comes additional variables real frequency imaginary negative mode threshold mode amplitude positive threshold remaining variables file selfexplanatory exception ifix simply position normalize fix phase mode usually ignored threshold file element psi indeed zero set explicitly creeper routine threshold found tolerance final step threshold mode increase pump strength starts lasing modify creeper block bash script creeperin threshring out lasingring dd dmax outputdeps newtonftol e reuselu printnewton note moved threshring value out in existing file input file threshold approxiately hence choose dmax twice runring creeper lasing mode pump strength output file lasingringfil