trycatchjl package provides julia macro try provide similar error handling semantics python macro adding catch else finally annotations code block redirect error flow block try try macro main utility package annotating code block error redirections control error flow block try begin codeblock catch condition codeblock catch condition codeblock else codeblock finally codeblock catch condition codeblock catch annotation provides run block code error occured condition met idea multiple catch annotations queried top bottom conditions met block run following blocks ignored condition met original error rethrown note catch blocks effect return value error caught try macro return affiliated catch block return value try sqrt except return query condition lambda function returning boolean example except isa methoderror query triggered methoderror convenience provide additional shorthand notations condition except foomethoderror shorthand except foofoo isa methoderror except foo isa methoderror foo isa othererror etc shorthand except foofoo isa methoderror foo isa othererror etc leftmost symbol foo exception expection usually named convention restriction else codeblock else annotation provides run block code trycode ran errors note else effect return value else reached try macro return else block return value try else return finally codeblock finally annotation provides forcefully run final block code regardless error encounters finally code block partake value returning semantics try finally return example julia using trycatch julia try begin sqrt catch isa methoderror println oops sqrt string else println execute error occurs finally println execute oops sqrt string methoderror sqrt xcc execute julia try sqrt catch methoderror println oops oops julia try sqrt catch errorexception println oops error methoderror method matching sqrt string closest candidates sqrt unionfloat float math jl