combinedparsers pure julia package combining parsers transforming strings julia types compose parsers parsimoneously functional parser combinator paradigm utilize julia type inference transformations log conveniently debugging julia compile parser performance combinedparsers design fast due julia parametric types compiler optimizations generated functions parsing result transformations infer domain data types composable optimizable julia method dispatch provides flexible public api parsing matching iteration defined pcre ebnf syntax getting started combinedparsersjl registered package install add combinedparsers example rational arithmetics example demonstrates reading arithmetical terms rational reflecting operator precedence term subterm interleaved subterm integer syntax subterm rationalint numericparser int convert true subterm additive term parentheses syntax parentheses subterm mult evaluate join subterm charin infix prefix syntax term evaluate join mult charin infix prefix sequence term combinedparser definition lines registers termstring macro parsing evaluating rational arithmetics julia term rational answer ultimately inverse universal question life details documentation example acknowledgements package leverages julia compiler superior type system parsing thankful contributions inspiration packages textparsejl bunch fast text parsing tools csvjl combinedparsers composes fast textparsejl combinedparser textparseabstracttoken providing method textparsetryparsenext leveraging supreme julia compiler type package architecture seek support csv example please contact address text field parsing inspirations strongly inspired scala fastparse package elm parser parsersjl collection parsers date primitive types inspired parse methods automajl julia package text validation parsing tokenizing based machine compiler package compiles deterministic finite automata currently interoperation automa processing parsed tokens actions parsercombinatorjl inspiration decided design focus transformations type inference parametric types instead basing parsercombinator written fixed julia combinedparsers integrates julia iteration api union types instead using nullables compiler optimizations generated functions provide benchmarks comparisons parsercombinatorjl steps syntax freeze comments appreciated decide error tracing strategy backtracking collaborate stepping debugging please reach performance optimizations streaming test coverage underestimated pcre tests included travis contributing questions contributions feedback welcome especially regarding brief syntax constructor dispatch please issue encounter question contact mail