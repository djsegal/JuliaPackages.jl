nlopt modul julia modul provid julia languag interfac free sourc nlopt librari nonlinear optim nlopt provid common interfac optim algorithm includ global local optim algorithm use function valu deriv free algorithm exploit user suppli gradient algorithm unconstrain optim bound constrain optim nonlinear inequ equal constraint nlopt introduct overview type address nlopt access special api use generic mathprogbas interfac nonlinear optim method document instal julia instal nlopt packag packag manag pkg add nlopt window platform nlopt binari automat instal platform julia attempt build nlopt sourc compil instal use mathprogbas nlopt implement mathprogbas interfac nonlinear optim mean interchang optim packag model packag jump provid hand written deriv note nlopt exploit sparsiti jacobian nlopt solver name nloptsolv take paramet algorithm stopval ftol rel ftol ab xtol rel xtol ab constrtol ab maxev maxtim initi step popul seed vector storag algorithm paramet requir option mean accept valu paramet except constrtol ab match descript special nlopt api constrtol ab paramet absolut feasibl toler appli constraint tutori follow exampl code solv nonlinear constrain minim nlopt tutori use nlopt function myfunc vector grad vector length grad grad grad sqrt return sqrt function myconstraint vector grad vector length grad grad grad opt opt mma opt lower bound inf opt xtol rel opt min object myfunc inequ constraint opt myconstraint inequ constraint opt myconstraint minf minx ret optim opt numev opt numev function evalu println minf minx numev iter return ret output iter return xtol reach nlopt interfac languag creat opt object analog nlopt opt encapsul dimension algorithm mma various function specifi constraint stop criteria aspect solv use jump interfac nlopt use jump use nlopt model solver nloptsolv algorithm mma variabl variabl nlobject min sqrt nlconstraint nlconstraint setvalu setvalu status solv println getobjectivevalu getvalu getvalu output note mathprogbas interfac set slight converg toler default output ident refer main purpos section document syntax uniqu featur julia interfac detail under featur pleas refer document nlopt refer use julia api nlopt julia julia program includ line use nlopt import nlopt modul symbol altern import nlopt nlopt symbol namespac prefix function nlopt nlopt opt opt type nlopt api revolv object type opt via function act object paramet optim specifi dimens algorithm stop criteria constraint object function etcetera final call optim function perform optim object normal creat via constructor opt opt algorithm algorithm nlopt algorithm valu dimension optim paramet wherea algorithm specifi nlopt algorithm constant form nlopt mma nlopt cobyla etcetera julia algorithm valu symbol form mma cobyla etcetera nlopt prefix replac creat julia symbol copi opt opt function copi object equival nlopt copi api error function except thrown algorithm dimens paramet object immut chang construct object queri object ndim opt opt algorithm string descript algorithm via algorithm name opt opt object function object function specifi set properti opt min object opt max object depend wish minim maxim object function respect function form function vector grad vector length grad set grad gradient return valu return valu valu function float array length optim paramet dimens pass opt constructor addit argument grad empti length grad grad float array length return set gradient function respect optim paramet grad return contain partial deriv grad empti optim algorithm gradient inform algorithm list deriv free grad argument empti comput algorithm gradient inform grad empti call note grad modifi function mean use index oper grad overwrit content grad exampl grad grad array overwrit content instead explicit loop grad bound constraint bound constraint specifi set properti opt lower bound union abstractvector real opt upper bound union abstractvector real real array length dimens pass opt constructor conveni instead singl scalar set lower upper bound optim paramet singl constant retriev valu lower upper bound properti opt lower bound opt upper bound return vector float array specifi unbound dimens inf nonlinear constraint nonlinear constraint specifi nonlinear inequ equal constraint function inequ constraint opt opt tol equal constraint opt opt tol argument form object function option tol argument specifi toler default zero judg feasibl purpos stop optim default tol opt inequ constraint opt equal constraint call function add constraint set constraint replac constraint remov inequ equal constraint call follow function remov constraint opt opt vector valu constraint nonlinear constraint specifi vector valu nonlinear inequ equal constraint function inequ constraint opt opt tol abstractvector equal constraint opt opt tol abstractvector tol array toler constraint dimens dimension constraint determin length tol constraint function form function result vector vector grad matrix length grad set grad gradient result valu result valu result float array length equal dimension constraint length tol return set constraint result float array length dimens pass opt constructor return valu function ignor addit argument grad empti length grad grad array size return set gradient function respect optim paramet grad return contain partial deriv grad empti optim algorithm gradient inform algorithm list deriv free grad argument empti comput algorithm gradient inform grad empti call inequ constraint correspond equal constraint correspond toler tol purpos termin criteria add multipl vector valu constraint scalar constraint stop criteria explain api refer introduct multipl option stop criteria specifi unspecifi stop criteria disabl innocu default stop criteria properti opt opt object set valu stop criterion mean criterion exact api opt stopval stop object valu stopval found default inf opt ftol rel opt ftol ab relat absolut toler function valu default opt xtol rel opt xtol ab absolut relat toler optim paramet default xtol ab set scalar toler input vector length dimens specifi opt constructor toler paramet opt maxev stop function evalu exceed mev negat limit default opt maxtim stop optim time exceed negat limit default forc termin caller wish forc optim halt reason unknown nlopt exampl user press ctrl error sort object function throw except insid object constraint function optim halt grace except thrown caller regard except julia equival nlopt forc stop api throw forcedstop except perform optim desir optim paramet specifi object opt opt perform optim call optf optx ret optim opt opt abstractvector input array length dimens opt constructor give initi guess optim paramet return valu optx array contain optim valu optim paramet optf contain optim valu object function ret contain symbol indic nlopt return code altern optf optx ret optim opt opt vector float modifi return optx failur negat return code optim throw except except return valu return valu return valu api except nlopt prefix replac return valu success xtol reach etcetera instead nlopt success etcetera except error code api replac julia api thrown except follow except thrown various routin object constraint function throw except execut optim caught nlopt optim halt grace opt optim throw except caller local subsidiari optim algorithm algorithm especi mlsl auglag optim algorithm subroutin typic local optim chang local search algorithm toler set opt local optim local opt opt local opt opt object paramet determin local search algorithm stop criteria algorithm paramet object function bound nonlinear constraint paramet local opt ignor dimens local opt match opt make copi local opt object freeli chang origin local opt afterward affect opt initi step size api set initi step size deriv free optim algorithm via opt initi step properti opt initi step array nonzero initi step dimens singl wish initi step dimens initi step opt opt abstractvector return initi step start guess optim opt stochast popul api set initi popul stochast optim algorithm properti opt popul popul zero default impli heurist default decid individu algorithm pseudorandom stochast optim algorithm nlopt pseudorandom generat mersenn twister algorithm base code makoto matsumoto default seed random generat system time sequenc pseudorandom time run program determinist sequenc pseudorandom sequenc run run set seed call nlopt srand seed integ reset seed base system time call nlopt srand time normal don call call automat use random pseudorandom call nlopt srand set determinist seed vector storag limit memori quasi newton algorithm api set store vector limit memori quasi newton algorithm via integ valu properti opt vector storag default nlopt heurist nonzero valu determin individu algorithm version version nlopt global variabl nlopt version versionnumb versionnumb built julia type julia standard librari author modul initi written steven johnson subsequ contribut author git histori