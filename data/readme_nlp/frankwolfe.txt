frankwolfejl package toolbox frankwolfe conditional gradients algorithms overview frankwolfe algorithms designed solve optimization form min differentiable convex function convex compact set especially useful optimize linear function efficient paper package mathematical explanations numerous examples found frankwolfejl performance flexible toolbox frankwolfe algorithms conditional gradients installation recent release available via julia package manager using pkg pkg add frankwolfe master branch pkg add url rev master getting started minimize euclidian norm probability simplex using frankwolfejl code looks dimension julia using frankwolfe julia sum abs objective function julia grad storage storage gradient computation function argmin st julia lmo frankwolfe probabilitysimplexoracle julia p julia popt frankwolfe grad lmo p verbose true vanilla frank wolfe algorithm memorymode frankwolfe inplaceemphasis stepsize adaptive epsilon e maxiteration type float momentum gradienttype info memorymode memory iterates written x type iteration primal dual dual gap time sec e e e e inf e e e e e julia popt element vectorfloat documentation examples explore content package documentation beyond documentation implemented examples folder run activate test environment simply testenvjl recommend install base julia julia using testenv julia testenv activate tmpjluxwkeprojecttoml plotting julia include examplesplotutilsjl julia include exampleslinearregressionjl plotting utilities code plotsjl included current project run using plots using frankwolfe include joinpath dirname pathof frankwolfe examplesplotutilsjl