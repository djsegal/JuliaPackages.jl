pytorchtrainingjl julia package allows train pytorch models fluxtrainingjl prototype approach integrating pytorch models fluxml ecosystem created pycallchainrulesjl changes fluxtrainingjl setup add pytorchbackend callback load pytorch model using pycalljl pass learner using fluxtraining pycall pytorchtraining model pycall pyimport torchvision models resnet pretrained true learner learner model data optim lossfn pytorchbackend cuda example finetuning pretrained vision model package useful following apply pretrained pytorch models research models published pytorch models wait julia model compile time gradient model compile times package re fine standard ml pytorch covers benefit hundreds person pytorch people hyperoptimizing standard lower memory usage probably performance larger batches julia expensive preprocessing steps data pipeline overview tradeoffs machine learning compilers pytorch fluxjl suggest reading engineering tradeoffs automatic differentiation tensorflow pytorch jax julia chris rackauckas example example complete code finetuning pretrained image classifier torchvision imagenette dataset fastaijl data loading preprocessing using fastai fluxtraining pycall pytorchtraining const torchvision pyimport torchvision function loadresnet int load pretrained resnet replace block outputting classes adapted model torchvision models resnet pretrained true model fc torch nn linear model fc infeatures return model load dataset create data loaders fastaijl stuff data blocks loaddataset imagenette image label method imageclassificationsingle blocks dls methoddataloaders data method length blocks classes create learner model loadresnet learner learner loadresnet length blocks classes dls adam converted torchoptimadam flux logitcrossentropy pytorchbackend device cuda available else cpu train fit learner caveats nice package pycalljl python torch library included build step installing set tries translate flux optimisers loss functions pytorch equivalents implemented translations optimisersjl lossjl pass loss functions tensors pytorch optimisers directly learner implement methods source require using custom training loop via callback custom trainig loops vae tutorial callbackjl automatically permutes dimensions julia arrays converting pytorch tensors pytorch conventions array dimension example batch dimension julia pytorch image channel dimension comes spatial dimensions julia pytorch current default rules pytorchtrainingjl decides permute bit adhoc extensible tensorjl features exhaustive list features add hyperparameter scheduling pytorchoptimiser compatibility metric unnecessary copi