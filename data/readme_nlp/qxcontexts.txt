qxcontexts qxcontexts julia package simulating quantum circuits using tensor network approaches targeting distributed memory clusters hardware accelerators developed quantex project individual software projects wp prace ip qxcontexts family packages aim qxcontexts package designed bulk computations makes distributed compute resources via mpijl hardware accelerators omeinsumjl tensoroperationsjl currently carry tensor contraction operations installation qxcontexts julia package installed using julia inbuilt package manager julia repl using import pkg pkgaddqxcontexts directly github repository import pkg pkgaddurl custom system image using custom system image greatly reduce latency starting computations build custom system image run following commands julia repl import qxcontexts qxcontextscompile half hour compile produce shared object system image file root folder project suffix depending platform linux systems dylib macos dll windows systems system image sysimage equivalently providing path system image example julia project sysimage development useful system image functions qxcontexts begin compiled call compile function dev set true qxcontextscompiledevtrue example usage qxcontexts input files generated qxtools describe computation performed example input files five qubit ghz circuit provided examplesghz folder example run directly using examplesghzexamplejl script run using cli binqxrunjl script following command julia project binqxrunjl examplesghzghzqx examplesghzghzjld examplesghzghzyml examplesghzjld switches describe dsl file input data file parameter file respectively switch refers output file files prefix provide name dsl file example run command julia project binqxrunjl examplesghzghzqx examplesghzjld output written jld file utility script called examineoutputjl provided allows examination output julia project binexamineoutputjl examplesghzjld enable timing timing information sections code code instrumented timeroutputsjl enable add timings switch cli command julia project binqxrunjl examplesghzghzqx examplesghzjld enable debugging detailed debugging information include package name juliadebug environment variable example juliadebugqxcontexts julia project binqxrunjl examplesghzghzqx examplesghzjld generates verbose output care taking using runs enable logging log debug performance information files qxcontexts loggermodels qxlogger default stdout logger useful single node single process logging interactive qxloggermpishared mpiio sharedfile logger mpi ranks share single file writing respective logs blocking qxloggermpiperrank mpienabled file rank logger blocking debug files created mpi rank loggers individually instantiated selecting global logger following globalloggerqxcontextsloggerqxlogger globalloggerqxcontextsloggerqxloggermpishared globalloggerqxcontextsloggerqxloggermpiperrank running mpi mpi multiple processes computation mpiexecjl script launch julia multiple processes mpijl documentation details set example run example processes following mpiexecjl project julia binqxrunjl examplesghzghzqx examplesghzjld amplitudes calculated split processes larger partitions amplitude useful split calculation processes subcommunicatorsize option specify size subcommunicators amplitude example mpiexecjl project julia binqxrunjl examplesghzghzqx examplesghzjld processes split communicators processes using gpus systems nvidia gpus passing gpu flag qxrunjl command line contributing contributions users welcome encourage users issues submit mergepull requests feature requests details contribution guidelines building documentation qxsimjl using documenterjl generate documentation build documentation locally run following toplevel folder time instantiate environment install dependencies julia projectdocs using pkg pkgdeveloppackagespecpathpwd pkginstantiate build documentation julia projectdocs docsjl serve generated documentation locally julia projectdocs using pkg pkgaddliveserver using liveserver servedirdocsbuild python using docsbuild folder using python httpserver generated documentation viewable locally brows