threadedarrays proofconcept implementation easy parallelism injection approach broken useful limited principled approach parallelmagicsjl available threadedarraysjl provides inject parallelism code written happened parallelizable vanilla multiple dispatch mechanism route base apis sum juliafoldsbased implementation julia using threadedarrays exports threadedarray julia julia threadedarray julia using julia threads nthreads julia btime sum sin ms allocation bytes julia btime sum sin ms allocations kib apis usage following base apis supports addition preconditions required standard apis user responsible verifying userspecified functions denoted op safe invoked multiple tasks synchronizations dataracefree map xsthreadedarray reduceop xsthreadedarray init mapreduce op xsthreadedarray init xsthreadedarray init xsthreadedarray init count xsthreadedarray init maximum xsthreadedarray init minimum xsthreadedarray init extrema xsthreadedarray init findall xsthreadedarray init findfirst xsthreadedarray init findlast xsthreadedarray init maximum xsthreadedarray init minimum xsthreadedarray init findmax xsthreadedarray init findmin xsthreadedarray init argmax xsthreadedarray init argmin xsthreadedarray init prod xsthreadedarray init sum xsthreadedarray init unique xsthreadedarray init issortedxsthreadedarray cumsumxsthreadedarray cumsumys xsthreadedarray cumprodxsthreadedarray cumprodys xsthreadedarray accumulateop xsthreadedarray init op init monoid accumulateop ys xsthreadedarray init op init monoid setxsthreadedarray dictxsthreadedarray limitations limitation safety guarantee usability threadedarraysjl safe provided user programmer writing code constructs threadedarray writes reviews code invokes apis supported threadedarrays passing threadedarray library code fundamentally unsafe parallelizability implementation detail interestingly implication semverbased code compatibility reasoning threadedarraysjl released hypothetically consider pure addition implementation dispatch breaking change users relying parallel semantics base api parallelized version threadedarraysjl implementation added users code base check apis implementation support parallelized execution counterintuitive usual view compatibility addition apis considered breaking change limitation vanilla method dispatch threadedarraysjl supports limited set dataparallel processing example unfortunately support simple composition data parallel processing xs threadedarrayint sum gcd xs isodd base dispatch pipeline designed support furthermore semantically unclear happen threadedarray composite data structures zip abstractarray threadedarray sum zip mapreduce equival