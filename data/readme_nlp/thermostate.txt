thermostatejl thermostatejl basic block interfacing specifying thermodynamic models package proposes provides tools create common property interface form property modelunit basics package proposes following conventions naming properties molproperty property units mol molar volume molar helmholtz energy molar enthalpy etc massproperty property units kg totalproperty property units total helmholtz energy joule units following properties accepted accesor function property units accessor function keywords spec molar volume mmol molvolume molv mass volume mkg massvolume massv total volume m totalvolume totalv molar density molm moldensity mol rho molrho mass density molkg massdensity mass massrho temperature temperature pressure pa pressure molar enthalpy mol molenthalpy molh mass enthalpy kg massenthalpy massh total enthalpy totalenthalpy totalh molar gibbs mol molgibbs molg mass gibbs kg massgibbs massg total gibbs totalgibbs totalg molar helmholtz mol molhelmholtz mola mass helmholtz kg masshelmholtz massa total helmholtz totalhelmholtz totala molar internal energy mol molinternalenergy mola mass internal energy kg massinternalenergy massa total internal energy totalinternalenergy totala molar entropy mol molentropy mols mass entropy kg massentropy masss total entropy totalentropy totals amount moles mol moles moles amount mass kg mass mass molar fraction units molfraction xn mass fraction units massfraction xm molar mol molnumber mass kg massnumber molar vapor fraction units molvaporfraction vfrac mass vapor fraction units massvaporfraction quality current phase units phase phase sat aditional options units options options view keywords kwtospec constant following functions accepted keyword spec defined package property units accessor function notes molar mass kgmol molarmass molecular weight ponderated material amounts molar c mol molcp impl interop mass c kg masscp impl interop molar c mol molcv impl interop mass c kg masscv impl interop speed sound soundspeed impl interop defining property specifications package defines abstractspec types spec container individual specification defined using unitful thermostate h spec molh kgmol create various specifications function st mol mass mg extract values property models massrho massdensity fromstate st kg mol specification object spec spec tagged value constructed typevalue constructor t spec types temperature t spec types temperature normalized t spec types temperature false normalized typevalue constructor using specstr macro t spec spec t spec spec normalized t spec spec false normalized default unitful quantities unit stripped normalized si units argument normalizeunits change default keyword constructor t spec t spec t spec normalizeunits false keyword arguments stored kwtospec dict keys main difference typevalue constructor keyword constructor resolved compile time runtime cost result operations spec struct julia t spec u spec julia typeoft specthermostatetypestemperaturefloat julia valt valuet extracting value julia spect specificationt specification t temperature example enthalpy specification julia h specmolh specmolh mol julia specificationh enthalpymolar julia typeofh specthermostatetypesenthalpythermostatetypesmolarfloat specification type parametric singleton struct enthalpymolar molar parameter spec modifier dispatch unit transformations conversions molar mass units example special parameters volume amounts molar total specific volume mass molar density material compound proportions mass mol mass fractions mol fractions volume amounts tagged specification volumeamountspecmodifierspecmodifier material compounds tagged specification materialcompoundsspecmodifierspecmodifier examples julia using thermostatetypes importing spec types shorter printing julia typeofspecificationspecmolv volumeamountmolarvolume julia typeofspecmolv volumeamountmolarvolume julia typeofspecificationspecmassrho volumeamounttotaldensity julia typeofspecificationspecxn materialcompoundsmolarfraction julia typeofspecificationspec materialcompoundsmasstotalamount special types phasetag keyword phase options keyword options useful signal underlying model calculate phase example cubic equations root calculation vapor liquid volumes options accepts named tuple passed underlying model specify numerical options choice differentiation method maximum iterationsetc thermodynamicstate specification sufficient define system gibbs phase rule specifies system equilibrium degrees freedom numberofcomponents numberofphases thermodynamicstate struct collection spec creating object gibbs phase rule evaluated specification arguments check validity example julia umol thermodynamicstate properties temperature molar density mol neither phase amount compounds specified function assumes system mol phase single component build thermodynamicstate struct directly passing spec arguments julia h specmolh t spec st ht julia st ht thermodynamicstate properties molar enthalpy mol temperature skip check gibbs phase rule using check false keyword building using keywords decide normalize units via normalizeunits false keyword obtaining properties thermodynamicstate struct basics section query properties created thermodynamicstate struct obtaining properties calling property function interface proposed package following prop property model mymodel thermodynamicstate unit unitfulunit defaultargs dispatching model type calculate properties specifications contained package exports single model fromstate calculate checks selected property argument returns numerical unit stripped value default units returned correspond si units obtain appropiate units passing corresponding unit argument fromstate model corresponding molecular weight mw argument calculate derived properties example mw umol massvolumefromspecscmmw mw argument depending situation vector units provided default units mol assumed conversion unit accepts molar total mass specifications mass moles molar mass fractions molar mass variable thermodynamicstate sometimes direct approach properties example create function accepts temperature pass ode system optimization system purpose singleton variablespec provided pass spec create thermodynamicstate object resulting spec callable julia at variablespecumol thermodynamicstatex properties temperature x molar density mol julia at thermodynamicstate properties temperature molar density mol variablespec added thermodynamicstate spec variablespec note functor created accepts arguments arguments passed function example st variablespecvariablespec return functor form st whereas st variablespecvariablespec create functor reversed st dispatching type statetype struct designed store thermodynamic properties create functions dispatch specific combination thermodynamic specifications using function statetypestthermodynamicstate julia st umolstatetypest volumeamountmolardensity temperature singlecomponent tuple thermodynamic specifications representation specifications contained st umol st umolnormalizeunitsfalse statetypes statetypes true abstract tuple types saved thermostatequickstates tuple types exported singleptmultipt singlevtmultivt singlepvmultipv singlepsmultips singlephmultiph singlesattmultisatt phase equilibrium singlesatpmultisatp singletmultit vapor fraction singlepmultip singlemtmultimt mass vapor fraction quality singlempmultimp singlentmultint molar vapor fraction singlenpmultinp singletmultit temperature exported utilities tounits sometimes unitful quantities default convention property accessors return units si system automatically prefix correct unit accessor function adding tounits macro start expression st pa t temperature fromstate st returns t tounits temperature fromstate st returns t tounits temperature fromstate st specstr calling speckey valuenormalizeunitstrue simple runtime cost specspabstractspecvaluenormalizeunitsbooltrue determined compile time interface writing correct type cumbersome example molar n spec materialcompounds molartotalamount type declaration specstr helps situation creating abstractspec type corresponding input keyword n spec spec shorter n n true statement specspec defined compile time normalizeunitsval normal identity vectors unitfulquantity converts unit equivalent si unit strips unit information normalizeunits convertunitval converts unit unit stored unit stored units equal justs returns val val unit convert unit val unit convertunit pa kpa convertunit pa kpa atm defaultunitsval returns si unit thermodynamic specification type function name corresponding types function defaultunits moldensity mol thermodynamic specification type defaultunits pressure pa implementing model using thermostate interface using package implement basic ideal gas model calculates pressure temperature molar volume using relation pvrt using thermostate unitful using thermostate quickstates provides singlevt dispatch statetype import thermostate pressure import functions overload custom property import thermostate molecularweight name files recommended interop packages struct myidealgas mw float molecularweight model myidealgas model mw implementation pressure pass type dispatch available properties function pressureimpl mt singlevt model myidealgas return function pressure model myidealgas st thermodynamicstate unit pa return pressure statetype stmodelstunit function pressure mt singlevt model myidealgas st thermodynamicstate unit molvolume fromstate st mol mw temperature fromstate st val pressureimpl mtmodel return convertunit pa unitval mass kg totalv model myidealgas pressure model using variable tx mass kg totalv var free variable pressure model tx plist map pressure model tx actual function form propertyimplmtmodelargs accepts positional arguments form indicated result obtained statetypest example doesnt useful posible implementation singlevt helps posible pair input function example dispatch struct watermodel enthalpy pressure temperature function molenthalpyimpl singlept watermodel enthalpy volume temperature function molenthalpyimpl singlevt watermodel enthalpy entropy temperature function molenthalpyimpl singlest watermodel enthalpy pressure entropy function molenthalpyimpl singleps watermodel thermostate interface function molenthalpy model watermodel st thermodynamicstate unit mol return molenthalpy statetype stmodelstunit dispatch apropiate implementation extracting args st function molenthalpy mt singlevt model watermodel st thermodynamicstate unit molvolume fromstate st mol mw temperature fromstate st val molenthalpy mtmodel return convertunit mol unitval provide automatic conversion mass total units defining following functions function massenthalpy model watermodel st thermodynamicstate unit kg molh molenthalpy modelst dont care statetype result obtain massh divide kgmol kgpermol molarmass fromstate st kgmol molecularweight model overload molarmasswatermodelst massh molh kgpermol return convertunit kg unitmassh function totalenthalpy model watermodel st thermodynamicstate unit molh molenthalpy modelst obtain totalh divide moles mol moles fromstate st mol molecularweight model overload moleswatermodelst totalh molh mol return convertunit kg unittotalh seen easy repetitive boring task thankfully julia metaprogramming helps lot lot properties evaluate functions eval actual piece code waterifjl published implementation functions defined hand whereas thermostate interface defined eval loop op helmholtz gibbs internalenergy enthalpy cp cv volume entropy molopimpl symbol mol op impl massopimpl symbol mass op impl totalopimpl symbol total op impl molop symbol mol op massop symbol mass op totalop symbol total op op volume unit kg molunit mol totalunit elseif op cv cp entropy unit kg molunit mol totalunit else unit kg molunit mol totalunit eval begin dispatch basic mass impl correct region function massopimpl mt singlept model industrialwater id regionid mtmodel return massopimpl mt ifregion id function massop model industrialwater st thermodynamicstate unit unit return massop statetype stmodelstunit impl function massop mt singlept model industrialwater st thermodynamicstate unit pressure fromstate st temperature fromstate st res massopimpl mtmodel return convertunit unitunitres mol op function molop model industrialwater st thermodynamicstate unit molunit prod molarmass fromstate st kgmol molecularweight model res massop statetype stmodelst unit prod return convertunit molunitunitres op cv cp total ops cv cp dont total operations eval begin function totalop model industrialwater st thermodynamicstate unit totalunit prod mass fromstate st kg molecularweight model res massop mtmodelstunit prod return convertunit totalunitunitres op enthalpy eval begin enthalpy define ph impl function massopimpl mt singleph model industrialwater id regionid mtmodel return massopimpl mt ifregion id function massop mt singleph model industrialwater st thermodynamicstate unit pressure fromstate st massenthalpy fromstate st res massopimpl mtmodel return convertunit unitunitres op entropy eval begin entropy define ps impl function massopimpl mt singleps model industrialwater id regionid mtmodel temperatureimpl mt ifregion id transform singlept mt quickstates pt return massopimpl mtmodel function massop mt singleps model industrialwater st thermodynamicstate unit pressure fromstate st massentropy fromstate st res massopimpl mtmodel return convertunit unitunitres loop defined property accessor functions molar mass total units implementations except enthalpy entropy implement