minimalrlcorejl core rl frameworks julia follows wisdom brought adam white brian tanner development rlglue key attributes hard seperation agent environment experiment concepts separate type trees minimal api opinionated decisions complete experiments ideas separate sister repositories minimal implementation allow mucking prior reinforcementlearningbasejl package nice project implement core reinforcement learning concepts julia nice set interfaces core rl topics core design principle packages believe overall goals projects package apart juliaml reinforcejl issues passing agent environment terminal makes unusable research rlcore focuses defining environmentagent interaction tries opinions learning happens types information agent decide action core differences allow user tinker allow default ideas example found agent episode interface reliably guess environment return environment actually return typical reward termination agent return sorts information user taking idea framework expects agent return action namedtuple action component action passed environment namedtuple passed user experience tuple user wish concept prediction experiments return prediction agent makes action allow user manage rng running experiments threads pre v results consistent allows users pass specific starting environment start montecarlo rollouts inclusion gvf specification functions goals principles goal project provide tools reinforcement learning researchers research science achieve goal decided core design principles limited obfuscation written runs core reason decided phd julia transparancy tools absence object orientation believe oop central cause mistakes rl ml empirical studies functions transparent minimal layers composition little surprising decisions issue core repository decisions overall collection repositories reinforcment learning research limit surprising defaults undocumented optimizations attributes burden community unreported hard impossible code realeased believe researchers responsibility code consistent design functions user managed random generator rng global requirement design principle probabilistic component code researcher code libraries means provide little default agents little fixing users mistakes results researcher positive tldr limited obfuscation layer abstraction hidden surprisesoptimizationsdecisions runtime consitency loud error