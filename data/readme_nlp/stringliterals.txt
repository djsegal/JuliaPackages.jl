stringliterals stringliterals package attempt bring cleaner string literal syntax julia easier producing formatted strings borrowing python formatted printing syntax adds support using latex emoji html unicode entity names looked compiletime currently adds swift style string macro swift syntax interpolation expression means worry strings character frequent applications unicode sequences represented swift hexdigits hex digits syntax eliminates worry outputting hex digits prevent characters immediately following finally added representing characters literal string emojiname latexname htmlname unicodename makes life lot easier text program ascii able write programs using characters display correctly editor adds string macro instead building string print strings interpolated values directly create string finally uppercase versions macros supports legacy sequences string interpolation followed hex digits followed hex digits followed hex digits fork package provide formatting capability tom breloff pr juliaioformattingjl provides capability using settable printing defaults based types argument formatting code extensively modified followed legacy modes allowed unlike standard julia string literals unsupported characters error swift outputs nul byte x note swift octal sequences supported nul byte outputs alarm bell control code x outputs backspace control code x outputs escape control code xb outputs formfeed control code xc outputs newline linefeed control code xa outputs return carriage return control code xd outputs tab control code x outputs vertical tab control code xb hexdigits represent unicode character hex digits followed latex entity name followed outputs character sequence name valid followed emoji name followed outputs character sequence valid name followed html entity name followed outputs character sequence valid name followed unicode entity name insensitive followed outputs unicode character valid name expression simply interpolates value expression expression standard julia string literals cccformatcodearguments interpolated call cfmtccccformatcodearguments cccformatcode style format string arguments interpolated call fmtarguments especially useful defaults set type argument fmtdefaulttype symssymbol kwargs sets defaults particular type fmtdefaultsymssymbol kwargs sets defaults types symbols currently ljust left rjust commas zpad zeropad ipre prefix resettype resets defaults particular type defaultspec return defaults type defaultspectype return defaults type currently support python style formatting progress intending improve syntax close python format strings currently syntax formatstringexpression plan changing shortly expression equivalent pyfmt expression expressionformatstring equivalent pyfmtformatstring express