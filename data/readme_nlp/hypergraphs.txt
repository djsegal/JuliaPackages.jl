hypergraphsjl main aim package implement concepts graph theory hypergraphs basic level allows represent relationships objects complete freedom choose type objects secondary aim follows realisation flavours hypergraphs specific oriented weighted hypergraphs define methods hypergraph level programmatically specialise hypergraph types currently implemented fundamental constructors unoriented unweighted hypergraphs via hypergraph hyperedge types specific oriented weighted hypergraphs chemical hypergraphs via chemicalhypergraph chemicalhyperedge types set functions allow modify hypergraphs adding deleting hyperedges vertices flavours hypergraphs hyperedges implemented traits via simpletraitsjl traits implemented isoriented isweighted example applications hypergraphsjl check sibling package simulacrumjl notation naming rules code xs refer hypergraphs respectively applies es hyperedges vs vertices current idea allow natural extension core functions respect set standard field names defining custom concrete type custom field names explicitly connected core methods vertices hyperedges mainly currently field names set vertices hypergraph hyperedge set hyperedges hypergraph src set source vertices oriented hyperedge tgt set target vertices oriented hyperedge objs objects incidence mults multiplicities objects incidence weight weighted hyperedge custom names built top ratechemicalhyperedge weight implemented symbols chosen differentiate hypergraphs graphs graphs hypergraphs hypergraphs graphs hypergraph defined alternative option name hypergraphs letter following logic meant changing symbol hyperedges impractical using emphasises difference hypergraphs graphs using edges retains continuity ordinary graphs notation functions defined hypergraphs edges consistency useful add clarity differentiate variables chemical hypergraph defined chx chemical hyperedge che notes code word caution progress functions perfectly proofread correctness especially operations neighbor functions parallel multihyperedges loops currently add hyperedges hypergraph vertices hyperedges vertex set prevented happening eventually graph flavour implemented performance ease interfacing accessing information mind carry redundant information mathematical syntax hopefully true current code improvements definitely implementation notes hopefully documentation core source target oriented hyperedge referred head tail former notation explicit default values default field values implemented overloading basegetproperty means objectsomefield return value despite object corresponding somefield field objects type abstracthyperedge default weight value chemical hypergraphs chemical hyperedges chemical hypergraphs represent reaction networks rooted graph theory main reference probably jost implementation liberty name chemical hyperedges reactions following logic naming chemical hypergraph hypergraph represents system reactions specific hypergraph hyperedge namely hyperedge incidence multiplicity restricted positive integers representing stoichiometries graph theoretical concepts natural interpretations context chemical reactions represented chemical hypergraphs instance vertexhyperedge incidence multiplicity represents times vertex occurs hyperedge encodes stoichiometry information hyperedgehypergraph incidence multiplicity encodes parallel hyperedges currently implemented constructors set default value reactions rate stoichiometries simplify syntax instance calls equivalent speciesset speciesset speciesset speciesset compared implementations reaction networks easier specify stoichiometry reaction reactants stoichiometries reactant stoichiometries specified species involved properties vertex degree usual definition degree vertex edges incident definition breaks loop following strictly implies loop degree loop edge incident vertex agreed degree bretto bollobas kaminski zaslavsky definition probably incidences zaslavsky zaslavsky following definition degree loop loop twice incident zaslavsky former definition implement definition degree degree vertex defined sum weights edges incident weight edge appears according multiplicity words degree sum edges edge weight times incidences edge definitions discussed special definition means degree return values type depending type edge weights cause unexpected behaviours concepts rely maximum sum defined degree values effectively assume degrees defined positive integers including zero vertex degree referred valency additionally degree graph maximum vertex degree zhu implemented avoid confusion edge cardinality cardinality edge endpoints interpreted obvious loops vertices edge treated multiset tuple oriented edges loop cardinality comes loop coinciding endpoints zaslavsky zaslavsky cardinality multiset sum multiplicities elements instead treated set loop cardinality defined dorfler berge bretto concisely loop cardinality counting endpoints counting elements multiset tuple counting elements set suggested page spivak map sends set empty tuples set edges set empty subsets vertices decrease cardinality approach adopt definition considering vertices edges multiset tuple leaves freedom build specialised functions top hyperedge cardinality referred zhu size neither implemented former confused hypergraph latter conflict basesize properties size hypergraph defined gallo cambini implemented hypergraphsize avoid confusion basesize hypergraph vertices wang zaslavsky note refer maximum cardinality hypergraph zhu unusual note rank reaction network maximum linearly independent reactions shinar confused rank hypergraph reference volume hypergraph kaminski operations functions name implies loop undesirable specific application check hyperedge added hypergraph loop weak deletion deletes incidences whereas strong deletion deletes object incident object deleted means weak vertex deletion removes occurrence vertex hyperedges incident vertex delete hyperedges chen rusnak note vertex deletion incidence dual edge deletion rusnak note currently internal function delvertex methods unoriented oriented hyperedges former method remove vertex vertices latter remove source target sets objects multiplicities naturally vertices oriented hyperedge somewhat messy ideally mentioned methods built automatically hyperedge flavour oriented vs unoriented via traits edge switching implemented level swapping source target sets oriented hyperedge switching fundamentally defined negation incidences reff rusnak future developments mainly personal repository play hypergraphs plan add functionalities time note potential future breaking change behaviour src tgt currently return objects set incidences return set incidences future depending makes sense means currently extension base check equal multiplicity slightly incorrect references berge berge hypergraphs combinatorics finite sets amsterdam york oxford tokyo elsevier bollobas bollobs modern graph theory graduate texts mathematics vol york ny springer doi bretto bretto hypergraph theory introduction mathematical engineering vol heidelberg springer doi burgio burgio matamalas gmez arenas evolution cooperation presence interactions networks hypergraphs entropy doi cambini cambini gallo scutell flows hypergraphs mathematical programming series doi chen chen liu robinson rusnak wang characterization oriented hypergraphic laplacian adjacency matrix coefficients linear algebra applications doi dorfler drfler waller categorytheoretical approach hypergraphs archiv der mathematik doi gallo gallo longo pallottino nguyen directed hypergraphs applications discrete applied mathematics doi hellmuth hellmuth ostermeier stadler survey hypergraph products mathematics computer science doi jost jost mulas hypergraph laplace operators chemical reaction networks advances mathematics doi kaminski kamiski poulin praat szufel thberge clustering via hypergraph modularity plos doi reff reff rusnak oriented hypergraphic approach algebraic graph theory linear algebra applications doi rusnak rusnak oriented hypergraphs introduction balance electronic journal combinatorics doi shinar shinar feinberg structural sources robustness biochemical reaction networks science doi spivak spivak dimensional models networks arxiv retrieved wang wang egorova mokryakov development hypergraph theory journal computer systems sciences international doi zaslavsky zaslavsky signed graphs discrete applied mathematics doi zaslavsky zaslavsky orientation signed graphs european journal combinatorics doi zaslavsky zaslavsky matrices theory signed simple graphs arxiv retrieved zhu zhu masahito efficient verification hypergraph physical review applied doi