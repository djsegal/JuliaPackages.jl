redi redi featur redi client julia program languag implement attempt easi understand minimalist api mirror actual redi command close basic redi api resid redi modul use redi main entrypoint api redisconnect repres state tcp connect singl redi server instanc singl constructor allow user set paramet suppli usual redi default redisconnect creat access expect redi command conn redisconnect host port password conn redisconnect host port password supersecur set conn foo bar conn foo return bar string normal accept keyword pass type pass type method string function set conn keyword valu conn keyword return valu redi command julia function call command redi command space space replac underscor familiar avail redi command convent api relat straightforward understand except convent due conflict julia type key command keytyp eval script command evalscript user finish interact redi connect destroy prevent resourc leak disconnect conn disconnect function connect type detail command option redi command complex syntax allow option pass command redi support option final vararg paramet function exampl scan option pass individu string function mention earlier keyword type pass option coerc string scan conn match foo scan conn count user api improv provid custom function complex command except option syntax function zinterstor zunionstor specif implement allow eas due complex pipelin redi support pipelin pipelineconnect command execut standard redi command pipelin pipelin conn set pipelin somekey somevalu command sent direct redi server wait respons respons read time futur use read pipelin command respons read pipelin pipelin respons current pipelineconnect implement threadsaf multipl thread requir access redi pipelin separ pipelineconnect creat thread limit address futur commit transact redi support multi exec transact method use redisconnect direct use special transactionconnect deriv parent connect transact use redisconnect user build transact singl time execut server simplest send command redi cli multi conn set conn foo bar conn foo return queu exec conn return bar conn foo return bar note final call exec redisconnect return normal transact use transactionconnect user plan use multipl transact connect sens user separ connect transact transactionconnect ident redisconnect except multi block user manual call multi transactionconnect tran transact conn set tran foo bar tran foo return queu exec tran return bar tran foo return queu multi tran throw serverexcept notic subtl differ previous exampl call exec transactionconnect place multi block return normal redisconnect pub sub redi provid support redi pub sub publish accomplish use command normal publish conn channel hello world subscript handl use subscriptionconnect similar transactionconnect subscriptionconnect construct exist redisconnect creat subscriptionconnect maintain simpl event loop call user defin function whenev messag receiv specifi channel push sub subscript conn subscrib sub baz publish conn baz foobar return foobar multipl channel subscrib provid dict string function push sub subscript conn dict string function baz bar println subscrib sub publish conn baz foobar return foobar publish conn bar written stdout pattern subscript psubscrib function channel unsubscrib unsubscrib punsubscrib note async event loop current run subscriptionconnect disconnect regardless subscript client activ event loop error handl improv updat api subscript error handl subscriptionconnect instanc creat via subscript spawn routin run background process event receiv server redi encount error loop default behavior disregard error continu user finer control error handl subscript accept option function paramet final argument provid redi call provid function pass caught except paramet sentinel redi provid function interact redi sentinel instanc sentinelconnect sentinel function ping implement sentinel function sentinel sentinelconnect constructor option redisconnect sentinel master sentinel return array dict string string master info sentinelconnect subscribableconnect allow user build subscriptionconnect monitor cluster health sentinel messag redi sentinel document inform note actual api usag found test redi test redi command return nil follow method return union valu correspond redi nil string conn exist key mget conn exist key exist key exist key list lindex conn exist list lindex conn element list lpop conn exist list rpop conn exist list rpoplpush conn exist list list set spop conn empti set srandmemb conn empti set sort set zrank conn set exist zrevrank conn set exist zscore conn set exist hash hget conn hash exist field hmget conn hash nofield nofield