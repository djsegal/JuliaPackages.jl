simulationlogsjl documentation build status simulationlogs log variables differentialequationsjl ode simulation basics log variable log macro existing variable declaration simulation syntax looks log log expression output variable creating variable simulation following syntax log extract logged values simulation loggedsolve function obtain logged solution call getlog function existing solution object example using differentialequations using simulationlogs function lorenz du log log du du du u tspan prob odeproblem lorenz u tspan sol solve prob extract simulation log getlog julia getlog sol simulationlog signals float float julia element vectorfloat julia element vectorfloat scope visually inspect signals simulation requires using plotsjl library interactive scope pan zoom etc plotlyjs backend plots calling plotlyjs using plots plotlyjs scope sol news version handle parameters change discretecallback callback callback set passed getlog function keyword callback alternatively replace solve loggedsolve handled automatically logged variables loggedsolve accessed solution object sol sollog faqs time stepping variable caches despite name log actually log simulation running logging actually happens calculating values stored solutions getlog called wait global simulationlog default log macro basically getlog function global log calls simulation function derivative function vector field whatever call time supplied default saved time copy global simulation log passed output user global log erased logging variables slow simulation nope runtime overhead logging actually happening simulation log called multiple times time step subfunction called logged solution matrix time steps times log macro called single time step parameters changed simulation include callback change parameters getlog function keyword argument callback changed parameters using callback results incorrect changing parameters callback anyway simulation depends changing global solutions changed global handled log incorrect results attributions icons freepik