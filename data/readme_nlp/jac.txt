jac immediately binder cloud jena atomic calculator jac computation atomic representations processes cascades jac provide public version jac jena atomic calculator source julia package atomic computations jac relativistic electronic structure code computation atomic electron interaction amplitudes properties excitation decay processes shell atoms ions periodic table forthcoming moreover jac facilitate studies atomic cascades responses external fields particles timeevolution atoms ions selected symbolic computations expressions racah algebra primary guiding philosophy jac develop easy toolbox atomic physics community including interface equally accessible spectroscopiests theoreticians code developers beside simple wish provide modern code design reasonable detailed documentation code features integrated testing particular typical computations handling atomic data appear code similar appear spoken written language shortly speaking jac aims provide powerful platform daily extent atomic theory towards applications short community platform atomic computations remark major efforts undertaken past jac development includes various features partly implemented tested detail despite failures deficiencies code annouce jac kindly potential users developers response support encouragement kinds computations detail jac distinguishes aims support partly future nine kinds computations summarized follows figure atomic computations based explicitly specified electron configurations refers computation level energies atomic representations atomic properties selected levels multiplet help compute selected process time atomic levels multiplets involved atomic transition atomic representations concerns representations atomic wave functions particular includes systematicallyenlarged restricted activespace ras computations atomic level energies due prespecified active space orbitals due virtual excitations account ras computations normally performed stepwise electron orbital functions prior step atomic representations refer approximate atomic green functions future combined techniques concepts closecoupling exterior complex scaling dmrg perturbation theory interactive computations set methods jac program applied interactively directly repl using short julia script compute evaluate desired observables atomic parameters energies expansion coefficients transition matrices amplitudes rates cross sections etc interactive computation typically prepares applies instances jac data types orbitals configuration functions csf atomic bases levels multiplets julia built level functions methods jac provides required language elements performing specific atomic computations degree complexity sophistication atomic cascade computations cascade typically includes ions element charge connected atomic processes photoionization dielectronic recombination auger decay radiative transitions relative level population charge determined set geometry experiment cascade computations usually based predefined cascade approach enables automatically select space ions choose atomic processes considered various steps cascade specify additional restrictions computations feasible atomic responses partly support computations intense laser field help analyze response atoms incident beams light pulses particles fieldinduced ionization processes harmonic generation responses detailed structure atoms ions considered partialwave formulation strongfield processes enables distinguish contributios due atomic target volkov shape phase incident light atomic timeevolution statistical tensors wish simulate population coherences atomic levels using liouville equation atoms ions irradiated intense light pulses computations assume level structure atoms kept intact decay processes excited atoms ions takent account loss rate atoms leave prespecified space sublevels particular plan consider interaction atoms ions pulses shape polarization strength duration atomic descriptors building models machine learning definition proper atomic descriptors feature transformations central predicting physical properties behaviour atoms ions provide various descriptors useful atomic physics semiempirical estimates atomic properties cross sections stopping powers asymptotic behaviour etc empiricalcomputation typically based simple model computations fit functions implemented data abinitio computations involved processes appears feasible examples refer electronimpact ionization chargeexchange processes symbolic evaluation expressions racah algebra refers algebraic transformation simplification racah expressions include wigner symbols various integrals spherical harmonics wigner rotation matrices kronecker triangular deltas course complexity racah expressions increases rapidly wigner symbols involved symbolic evaluation expressions naturally based knowledge set special values orthogonality relations sum rules include rules multiple summation dummy indices cf monography varshalovich et al documentation news detailed user guide compendium theoretical background jac available describes underlying atomic theory jac code news recent developments jac summarized licence reference code repository distributed mit licence associated user guide compendium theoretical background jac distributed creative commons attribution international cc license reference using code please computer physics communications publication jac fritzsche fresh computational approach atomic structures processes cascades computer physics communications gaigalas fritzsche angular coefficients symmetryadapted configuration jjcoupling comp phys commun fritzsche palmeri schippers atomic cascade computations symmetry fritzsche symbolic evaluation expressions racah algebra symmetry fritzsche surzhykov approximate atomic green functions molecules fritzsche dielectronic recombination strengths plasma rate coefficients multiplycharged ions a fritzsche level structure properties shell elements atoms fritzsche photon emission hollow ions near surfaces atoms fritzsche bning strongfield ionization amplitudes atomic electron targets atoms fritzsche application symmetryadapted atomic amplitudes atoms fritzsche maiorova wu radiative recombination plasma rate coefficients multiplycharged ions atoms fritzsche jiao wang sienkiewicz collision strengths astrophysical multiply charged ions atoms citationbib relevant references installation julia install jac package package entering package manager typing pkg add moreover run tutorials jupyter notebooks runningtyping julia jupyter run linux windows script install julia jupyter jac via via snap jac apple mac system experience please installation guides mac found solution operating systems hardware architectures hints please send useful comments email fritzschegside happy add facilitate dependencies external code jac jac code makes standard julia packages specialfunctions fortranfiles gaussquadrature gsl quadgk matrix elements gaigalas fritzsche comp phys commun quickstart simplest access jac toolbox using binder cloud click jupyter notebook call using jac julia jac completely installed run examples calls computer bit slower factor help run examples shown example folder decide wish install code locally directly access getting started jac tutorial cloud similar tutorials distributed code details found user guide compendium theoretical background jac index text search selected items pdf user guide simple example discussed cpc reference refers lowlying level structure einstein coefficients s p s p d s p transition array fe ions spectrum fe perform computation framework jac specify initial final configurations instance atomiccomputation specifier processradiative provide title line multipoles default e gauge forms coupling radiation field applied calculations grid radial grid true setdefaults standard grid grid defaultssettings photoemission settings photosettings photoemission settings defaultssettings multipoles e m gauges usecoulomb usebabushkin printbefore true comp atomic computation atomic computation name energies einstein coefficients spectrum fe grid grid nuclearmodel nuclear model initialconfigs configuration ne s p configuration ne s p d finalconfigs configuration ne s p processsettings photosettings perform comp atomiccomputation example discussed tutorials directly cloud tutorials following ijuliajupyter notebooks introduce reader jac demonstrate features toolbox explored statically github run locally software repository cloned installed modify celloutput notebooks print wide tables create modify file jupytercustomcustomcss home directory add line divoutputarea pre fontsize pt getting started julia getting started jac simple estimates hydrogenic atoms ions specifying nuclear models potentials selection atomic potentials selfconsistentfield ci computations carbon generate extended configuration lists determine ls notation atomic levels estimate qed corrections beryllium ions compute atomic level structure debyehckel plasma generate atomic mean field apply ci computations compute transition probabilities fe compute s p photoionization argon compute ll auger rates atomic neon compute ll auger rates debyehckel plasma tutorials available list extended development jac current limitations jac jac designed atoms ions periodic table limitations occur selfconsistentfield computations based local potential corehartree kohnsham dirachartreeslater controlled user serious optimization code restricts computations csf expansion hundred csf continuum orbitals generated dirachartreeslater potential ionic core explicit treatment exchange interaction encouragement contribution scope jac wider plan implement jena jac upload github wish encourage users fork code report improvements failures bugs etc trivial changes code available via pull requests submitting code review users prior merger master code particular encourage contributions atomic physics community overall style package maintained consensus exists add features code goal avoid duplication inhomogeneity package implement specific features cause issues future external support developers include incremental improvements multiple approaches algorithms modules provide tested alternatives instance particular approach properly applications moreover emphasis placed applications receive attention community contrast support developments appears sophisticated detrimental term maintenance code specialized incorporated code left stage development robust tests jac implementation code error free appreciate reports users encountered helpful solutions provided simplest start contributing jac writing tutorial addition provided navigate task user graphical user interface plotting features outcomes atomic computations helpful community suggestions extending improving jac found section user guide compendium theoretical background jac developers stephan fritzsche fritzschegside jena germany yuancheng wang hi jena germany shenyang china supporters birger bning hi jena germany danish dar jena germany gediminas gaigalas vilnius lithuania jiri hofbrucker jena germany liguang jiao hi jena germany jilin changchun china fang liu jena germany anna maiorova hi jena germany stefan schippers giessen germany joseph sienkiwicz gdansk poland andrey surzhykov braunschweig germany martino trassinelli sorbonne paris france andrey volotka hi jena germany zhongwen wu hi jena germany lanzhou china