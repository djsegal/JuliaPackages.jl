advumpsjl julia package realise automatic differentialad variational uniform matrix product vumps package implemented algorithms described differentiable programming tensor networks contraction method namely vumps demonstrating applications gradient based optimization ipeps direct calculation energy densities ipeps via derivatives free energy key implement ad vumps adjoint eigsolve solved automatic differentiation dominant eigensolver applications quantum physics package tensornetworkadjl reference install git clone move file run julia repl press pkg repl v pkg activate activating environment dvumps rojecttoml advumps pkg instantiate julia repl press backspace ctrl precompile advumps julia using advumps info precompiling advumps aa bfc d cdadcd example learn deeply package highly recommend run single test testruntests sequence free energy d classical ising model start constructing tensor tensor network representation d classical ising model tensor constructed using modeltensor function takes model parameter ising inverse temperature julia modeltensor ising arrayfloat vumps environment using vumpsenv function takes model parameter ising inverse temperature environment tenosr physical index dimension julia env vumpsenv ising verbose true random initial vumps environment vumps step error e julia typeof env squarevumpsruntimefloat arrayfloat arrayfloat matrixfloat alias vumpsruntimesquarelattice float arrayfloat arrayfloat arrayfloat using function calculate partition function model site julia env partition function free energy derivative respect times zygote straightforward calculate julia log vumpsenv ising verbose true generic function method julia using zygote julia zygote gradient random initial vumps environment vumps step error e result ploted plotdisingjl finding ground infinite d heisenberg model algorithm variationally minimizes energy heisenberg model dimensional infinite lattice using form gradient descent hamiltonian tensor network operator julia hamiltonianheisenberg arrayfloat heisenberg hamiltonian default parameters jx jy jz initialize ipepstensor calculate energy tensor hamiltonian julia ipeps key initipeps heisenberg tol e maxiter random initial ipeps julia energy heisenberg ipeps tol e maxiter verbose true random initial vumps environment vumps step error e initial energy random minimise combine optim zygote hood provide optimiseipeps function key save log file finial ipeps jld file julia using optim julia res optimiseipeps ipeps key ftol e e e final value energy agrees value found paper extension vumps available package vumpsjl including complex forward backward propagation nixnj unit cell usymmmetry zsymmmetri