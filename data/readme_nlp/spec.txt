specjl spec package expressing specifications specjl library specfiying correctness properties programs specifications documentation testing debugging usage toadd meta dontcheck existential propositions example pre conditions preconditions statements propositions conditions true input function executed purpose using preconditions documentation specifying precise constraints function behaviour communicating expect preconditions specified using pre macro example float sqrt pre float interpreted defining precondition method int specifies input negative feeling lazy avoid writing signature twice instead write float sqrt pre define precondition recently defined method generic function multiple specifications expressed simply adding additional lines example body mass index bmi height weight height weight pre bmi height weight height height positive pre bmi height weight weight weight positive semantics conjuctive specs true example attach description specification relationship methods generic functions julia precondition applied methods generic function following example adds specification divide function strings isnumstring string occursin divide string string parse int parse int pre divide string string isnumstring isnumstring string specapply divide specapply divide aa divide int int convert string asnum string parse int asnum precondition applies methods pre divide asnum denominator zero specapply divide specapply divide example precondition applies string based method whereas precondition applies post conditions specification post condition statement output input proecdure executed canonical example postcondition sorted list list sorted element element position position implies xs sorted issorted xs xs xs length xs length xs sorted version isysortedx xs ys length ys length xs xs ys issorted mysort sort post mysort isysortedx ret result sorted version input capturing seen postcondition values function bother constructs main reason julia procedures effects mutating sort function sortxs input mutated check result sorted version input lost information input solution cap capture variables input post sort isysortedx cap ret result sorted version input using specifications default pre post conditions affect behaviour program incur runtime cost actually check specificatiosn specapply specapply args evaluate args function applications encountered execution args associated spec checked example specs sort divide following snippeet check pre post conditions function rand sort map divide specapply debugging specapply debugging runtime error ressult precondition stack violated example function rand evaluating horribly uninfomrative stack trace instead run function specapply notes concept testing nested specs function call orthogonal pretty else follows method test none specs method spec test input ii samples distribution inputs iii inputs finitely enumerable iv inputs abstract