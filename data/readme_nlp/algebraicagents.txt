algebraicagentsjl dynamical systems cointegration framework context single sketch documentation lightweight framework enable hierarchical heterogeneous dynamical systems cointegration batteries included entangle dynamical systems simulate joint evolution dynamical systems julia ecosystem systems evolve pace framework sync systems access interpolated observables organize systems hierarchies dynamical system contain embedded hierarchy agents systems indexed folders file system wildcards supported sums dynamical systems override default embrace custom system classes package solves typical scaling modeling complex system tears joint dynamics inevitably runs troubles trying provide minimalistic interface featuring compositions dynamical systems approximate joint dynamics separate systems evolutionary laws practice define wrap type custom dynamical system class implement handful common interface methods integrations differentialequationsjl agentsjl algebraicdynamicsjl provided docs dynamical systems organized hierarchies dynamical system contain embedded hierarchy dynamical systems system assigned path overarching hierarchy folder file system dynamical system typically indexes retrieves systems hierarchy via relative paths underlying concept sum join dynamical systems manifested distinct levels dynamical systems implicitly coupled observe interact structural sum operator provided outputs dynamical system usually contains summands hierarchy embedded systems importantly using julia dynamic dispatch customize behavior userdefined dynamical system classes context dynamics value evolution dyve package integral dynamics value evolution dyve computational framework learning designing integrating simulating optimizing process models inform strategic decisions science business framework evolves multiple functionalities matured standalone packages includes reactivedynamicsjl package implements category reaction transportation networktype dynamical systems central concept package stateful parametric transition simultaneous action transitions evolves dynamical system moreover network dynamics specified using compact modeling metalanguage package generatedexpressionsjl implements metalanguage support code expression comprehensions context reactivedynamicsjl expression comprehensions generate complex dynamics userspecified template transitions single sketch integrating custom dynamical system drug entity lives therapeutic aagent freeagent molecule struct smallmolecule age float birthtime float killtime float mol abstractstring profile ntuple float sales float dfsales dataframe note conveniency macro aagent appends additional fields expected required default interface methods provide evolutionary law smallmolecule type extending interface function algebraicagentsstepagent maximal time systems hierarchy projected reaches time mol projected time step implement evolution function algebraicagents step mol smallmolecule projectedto mol current time equals time mol agent projected enforced via algebraicagentsstep log sales volume time push mol dfsales mol sales increment mol age default mols evolve unit step mol age apply sales decay time mol sales salesdecaysmall remove mol sales volume drops level account random effect prob removal increases time mol sales rand exp mol age mol killtime push getagent mol dx removedmols mol mol remove mol system disentangle mol provide additional methods required common interface reinit system cold starts simply remove mol algebraicagents reinit mol molecule disentangle mol return time system projected algebraicagents projectedto mol molecule mol age mol birthtime adding sde models define toy market demand model represent stochastic differential equation defined differentialequationsjl add sde models drug demand respective using differentialequations dt tspan prob sdeproblem tspan dict symbol prob sdeproblem tspan dict symbol sdeproblem utype float ttype float false timespan u internally discovery unit adjust productivity according observed market demand sync market demand dx productivity getobservable getagent dx demand demand defining entangling systems step initiate actual dynamical systems define therapeutic therapeuticarea freeagent therapeuticarea therapeuticarea freeagent therapeuticarea join therapeutic models pharma model pharmamodel therapeuticarea therapeuticarea name pharmamodel initialize push discovery units therapeutic discovery units evolve pace entangle therapeuticarea discovery dx dt entangle therapeuticarea discovery dx dt add sde models drug demand respective demandmodel diffeqagent demand prob em observables dict demand dt demandmodel diffeqagent demand prob em observables dict demand dt push market demand units therapeutic entangle therapeuticarea demandmodel entangle therapeuticarea demandmodel model pharmamodel agent pharmamodel uuid e type freeagent inner agents agent therapeuticarea uuid bacf type freeagent inner agents demand dx agent therapeuticarea uuid ccf type freeagent inner agents demand dx getagent pharmamodel glob therapeuticarea element vectorfreeagent freeagentname therapeuticarea uuid ccf parent freeagentname pharmamodel uuid e parent freeagentname therapeuticarea uuid bacf parent freeagentname pharmamodel uuid e parent simulating system evolve compound model hundred time units argument optional simulate details evolve simulate pharmamodel agent pharmamodel uuid e type freeagent inner agents agent therapeuticarea uuid bacf type freeagent inner agents ybhn nloq ifnjm jbxs ykxlr hejuu tpta gkgf dx cbpw vjwm lgnco jbfx ankr nniw xjqx yyvk prejo krvl hktc dhax arrnv ahpe tnsd qqkxy kojsf qzm npl jlzf dyvji iafx bwsv phpo nmmaj zqrzk kyemh szewc yia eefiu gkuc plgb rbfqp ndhm oqwwt hhkxt ckkh kqll qurs gwyi papqn yitps idos eqqz pcule rpxfx algw zdta tcg nfk demand gvdh kz hcgru yhqu mur hnzpr pvx wkhy dxari tfmhm ughaj medas mgokv kggp llnyd lttiz doskk zfhwv xrbpr fkci ysuh lgvu nxmd pjsra ourh ymtb kvytb yehf eyprj wbvy jxs bfsxh zdn smhsk zjom tuvn lnuvb pquab oijob rzhlz agent therapeuticarea uuid ccf type freeagent inner agents dx aicfe qdfar demand getagent pharmamodel therapeuticareadx agent dx uuid af type main discovery custom properties ratesmall ratelarge productivity dt t removedmols dgslp grjue scx nlbhs dstsw qzokp bfqz yvkb prkig xsbn qqrs cbqv icyh demm vwls dezv zvjl wlbp aqf izg dfoutput dataframe row time removed float int int int rows omitted parent therapeuticarea getagent pharmamodel therapeuticareademand agent demand uuid dfbd type diffeqagent custom properties integrator observables demand index parent therapeuticarea plotting provide custom plotting recipes specializing interface method algebraicagentsdrawagent whenever dynamical system logged single dataframe discovery type utilize convenience macro drawdf load dataframes plots implement plots using dataframes plots algebraicagents drawdf discovery dfoutput action call draw getagent pharmamodel therapeuticareadx