stable equilibria tensegrity frameworks assume tensegrity framework nodes edges embedding edges partitioned rigid bars lengths elastic cables corresponding elasticity coefficients restings lenngths hooke law introduction slack variables elastic cables polynomial system consisting polynomials arises using corresponding potential energy function enables create lagrange multiplier derivative contains critical energy function subject variety generated polynomial system real local minima sufficient condition local minima verified looking lagrange multiplier hessian checking positive definite process thoroughly described underlying paper catastrophe elastic tensegrity frameworks heaton timme installation julia using pkg julia pkgaddurl usage main method program stableequilibria exported module functionsforstableequilibria main module tensegrityequilibria former exports test suite startdemo automatically executed importing main module main method package stableequilibria following inputs corresponding expected format vertices array consists embedded nodes tensegrity framework arrays nodes contain internal variables control parameters included var types numerical algebraic geometry package homotopycontinuation expected input format p pd pm pmd unknownbars array consists rigid bars framework determined choice vertices expected input format lij bar embedded vertices unknowncables array consists elastic cables framework determined choice vertices expected input format rij eij cable embedded vertices listofinternalvariables flat list internal parameters framework paper listofcontrolparameters flat list control parameters framework omega paper targetparams flat initial configuration variables listofcontrolparameters length contains entries type float knownbars list determined bars plotting purposes expected input format bar embedded vertices knowncables list determined cables plotting purposes expected input format cable embedded vertices optional timestamps animation parameters moving curve desired samples curve entered list q q output functions primarily interactive plot created using makiejl configuration involved stable equilibrium interacting plot window moving slider corresponding control parameter argument method via listofcontrolparameters changing position sliders parameter homotopy underlying polynomial system solved real time depending system size nevertheless method significantly faster recalculating solutions scratch time slider moved solving polynomial system library homotopycontinuationjl example consider triangular bipyramid framework equilateral triangel base unknown nodes rigid bar unknown length tensegrity framework realized input var ell stableequilibria sinpicospi sinpicospi ell ell input deduce target value output plotting routine following image vertices framework displayed red rigid bars black elastic cables portrayed blue visibly solutions polynomial system obtained mirroring unknown vertices top bottom image respectively transparently plotted grey shadow vertices finally catastrophe set corresponding choice control parameters samples plotted hypersurface depicts region discontinuous changes framework happen larger d framework