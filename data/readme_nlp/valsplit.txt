valsplitjl compile dynamic dispatch methods val typed arguments val splitting similar union splitting using valsplit macro annotating function definition valsplit choosing arguments split resulting function switch statement val parameters associated chosen arguments requires julia installation valsplitjl registered package install press julia repl enter pkg mode run add valsplit example suppose function soundof takes val typed argument returns animal sounds soundof animal valdog woof soundof animal valcat nyan version soundof takes symbol values directly hence define soundof animal symbol soundof val animal using soundofanimalsymbol function dynamic dispatch occur julia infer value argument animal compile time resulting considerable slowdowns using valsplit avoid issue compiling dispatch logic switch statement simply annotating method definition valsplit annotating argument switch val valsplit function soundof val animal symbol error sound defined animal animal resulting function effectively compiles following switch statement original method body default branch function soundof animal symbol animal dog return woof elseif animal cat return nyan else error sound defined animal animal unlike manuallywritten switch statement valsplit defined functions automatically recompile methods added example add method soundof animal valhuman meh soundofanimalsymbol recompile switch statement additional branch function soundof animal symbol animal dog return woof elseif animal cat return nyan elseif animal human return meh else error sound defined animal animal valsplit annotated functions preserve extensibility achieving runtime performance switch statements constant propagation results compiletime pruning branches motivation valsplit macro intended address following issues dynamic dispatch val typed arguments slow alternative solutions manuallywritten switch statements global dictionaries insufficient purposes extensibility note dynamic dispatch occur values split julia julia compiler automatically generates switch statement soundof animal valdog woof soundof animal valcat nyan soundof animal symbol soundof val animal julia codetyped soundof cat codeinfo invoke main val symbol vala a isa val cat bool goto goto isa val dog bool goto goto main soundof string goto nyan woof string return string methods defined julia compiler performs optimization sound sound eval soundof animal valsymbolanimal sound soundof animal symbol soundof val animal julia codetyped soundof animal codeinfo invoke main val symbol vala a main soundof return avoid dynamic dispatch manually switching set values fastest terms compiletime runtime set values switch extended global dictionaries partially address associating values code const soundof dict symbolfunction woof woof soundof dog woof nyan nyan soundof cat nyan soundof animal symbol soundofanimal dictionary lookup times usually slower compared switch statements addition approach runs issues precompilation preventing downstream module adding entries global dictionary defined module except runtime using init function words global dictionaries extensible module boundaries valsplit macro addresses methods introduced downstream modules resulting recompilation valsplit annotated function effectively julia method table global dictionary avoids overhead dynamic dispatch using generated function tricks implement statichasmethod tricksjl benchmark provided values branch running julia windows machine results benchmark follows manual switch statement s allocations bytes global dictsymbolstring s allocations bytes global littledictsymbolstring s allocations bytes dynamic dispatch ms allocations bytes val splitting valsplit s allocations bytes utilities valsplitjl provides utility functions determining method particular val typed argument exists determine set val parameters associated particular argument particular function valargparams valargparams typestypetuple idxint ptypetype method signature types matching methods concrete val typed argument position idx returns parameter values val typed argument tuple optionally ptype specified filter parameter values instances ptype function statically compiled automatically recompiled whenever method defined determine particular argument particular function specific val parameter valarghasparam valarghasparam typestypetuple param idxint ptypetype method signature types returns true exists matching method val typed argument position idx parameter param parameter type ptyp