historytreesjl multiple construct immutable record history simplest interleave element call root seven elements element protected publishing tree hash calculated tuples root prove inclusion element instance proof rd element included root grows linearly size list alternative hash list merkle tree list elements root hash root allows constructing proof inclusion rd element root grows logarithmically size list issue approach list size padding overcome requires recomputations elements added list approach history trees leaves directly incomplete node seven elements reduce root hash root satisfying padding provides logarithmically sized proofs inclusion element consistency tree history tree constructed tree historytree int tuple push tree element input element hashes element callable hash function elements tuple interchange real hash function importing nettlejl demonstrative purposes quantities tree root length access root roottree length lengthtree signed main server distributed clients clients proof particular element included list server replies proof inclusionprooftree example third element proof client quickly verifies verifyproof root length hash tuple possibility client verify server added elements sync synchronisation client consistency proof constructed follows proof consistencyprooftree client verifies verifyproof root length hash tuple scenario combined client sends element inclusion list receives signed root length inclusion proof client check element list instead inclusion proof server sends consistency proof root length current root length signed client enforces clients messages modified note tree hash currently recomputed element added performance currently multiple tree hashes computed construct proofs inclusionproof consistencyproof improvement store complete subtree hash retrieve calculation prepending bytes leaf node byte security references crosby scott dan wallach efficient data structures tamperevident logging usenix security symposium rfc rfc farhan aly trust logs implementing merkle tree immutable verifiable log