localapproximationvalueiteration package implements local approximation value iteration algorithm julia solving markov decision processes mdps algorithmically similar discretevalueiterationjl package represents space fundamentally manner explained discretevalueiteration user define according api pomdpsjl examples definitions found pomdpmodelsjl installation pomdpsjl registry added readme thereafter add localapproximationvalueiteration package manager mode julia repl using pkg pkg add localapproximationvalueiteration solver example approximate dynamic programming tries approximately optimal value functions policies continuous spaces approach local approximation value iteration assumes near appropriate distance metric similar values computes values userdefined finite set interpolates value function entire space using local function approximation technique details approach described section book decision uncertainty theory application space representation value function approximation solver depends localfunctionapproximationjl package localapproximationvalueiteration solver initialized appropriate localfunctionapproximator object approximates computed value function entire space interpolation multidimensional grid discretization space nearestneighbor averaging randomly drawn set space samples resulting policy object compute actionvalue function action arbitrary query key operational requirement solver mdp represented via equivalent realvalued vector enforced converts function requirements convert instance mdp type realvalued vector vice versa user required implement functions type mdp model usage pomdplinterjl macro showrequirements determines functions solver specific mdp model mentioned localapproximationvalueiteration solver depends localfunctionapproximator object object created invoke requirements solver accordingly running example testruntestsversusdiscretevijl function approximation object grid interpolation localgifunctionapproximator created appropriate rectanglegrid constructed look gridinterpolationsjl details using pomdps pomdpmodels using gridinterpolations using localfunctionapproximation using localapproximationvalueiteration verticesperaxis controls resolutions grid axis grid rectanglegrid range length verticesperaxis range length verticesperaxis interp localgifunctionapproximator grid user modify steps depending interpolation parameters delegated step user extremely domain specific note solver supports explicit generative transition models mdp ismdpgenerative ngenerativesamples arguments localapproximationvalueiteration solver set accordingly requirements depending model mdp functions defined solver created gridworld mdp defined grid size appropriate reward mdp simplegridworld size rewards dict gwpos finally solver created using function approximation object parameters model explicit mdp solved approxsolver localapproximationvalueiterationsolver interp verbose true maxiterations ismdpgenerative false approxpolicy solve approxsolver mdp api querying final policy object identical discretevalueiteration action value functions called solved mdp value approxpolicy returns approximately optimal value action approxpolicy returns approximately optimal act