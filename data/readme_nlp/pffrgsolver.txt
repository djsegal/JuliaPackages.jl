pffrgsolverjl seudo ermion unctional enormalization roup solver julia v introduction package pffrgsolverjl aims providing efficient art multiloop solver functional renormalization equations quantum lattice spin models pseudofermion representation currently applicable spin models described hamiltonians form defined variety preimplemented dimensional lattices internally pffrgsolverjl computes reduced representation lattice employing space symmetries initializing renormalization flow bare couplings optionally solution regularized parquet equations multiloop truncated frg converges construction rg equations integrated using bogackishampine method adaptive step size control stage flow realspace spinspin correlations computed flowing vertices detailed discussion method implementation installation package installed julia package manager switching package mode repl using pkg add pffrgsolver citation pffrgsolverjl please acknowledge package accordingly cite preprint kiese mller iqbal thomale trebst multiloop functional renormalization approach quantum spin systems arxiv suitable bibtex entry misckiesemultiloop titlemultiloop functional renormalization approach quantum spin systems authordominik kiese tobias uller yasir iqbal ronny thomale simon trebst eprint archiveprefixarxiv primaryclasscondmatstrel running calculations simulate nearestneighbor heisenberg antiferromagnet square lattice lattice truncation simply using pffrgsolver launch pathoutput square heisenberg su frg solver allows fine grained control calculation various keyword arguments reference obtained via launch currently available lattices models obtained verbose form latticeavail modelavail postprocessing data calculation generates output files pathoutputobs pathoutputcp hdf format containing observables measured rg flow checkpoints vertex data respectively obtained real space spinspin correlations usually converted structure factors susceptibilities via fourier transform momentum space investigate ground predicted pffrg following example code provided computing momentum matsubara frequency resolved structure factor frg flow single cutoff heisenberg models square lattice using pffrgsolver using hdf generate momentum space discretization brillouin zone square lattice rx pi pi ry pi pi rz getmomenta rx ry rz observable file output file save structure factor filein hopen pathoutputobs fileout hopen pathoutputsf cw compute structure factor flow computestructurefactorflow filein fileout diag read computed structure factor frequency mesh cutoff fileout readstructurefactor fileout diag read computed static structure factor flow momentum largest amplitude respect reference scale ref readreferencemomentum fileout diag readstructurefactorflowatmomentum fileout ref diag read lattice data real space correlations frequency mesh cutoff filein readlattice filein read filein diag compute static structure factor cutoff computestructurefactor close hdf files close filein close fileout vertex data accessed reading checkpoints pathoutputcp using pffrgsolver using hdf checkpoint file frg solver file hopen pathoutputcp load checkpoint cutoff d readcheckpoint file close hdf file close file solver generates parquet true launch command checkpoints converged parquet solution initial condition frg final result flow additional checkpoints created according timer heuristic controlled ct wt keywords launch performance notes pffrgsolverjl package accelerates calculations julia built dynamical thread scheduling threadsspawn systems flow equations integrated tremendous parallelization vital achieve acceptable run times recommend launch julia multiple threads whenever pffrgsolverjl setting respective enviroment variable export julianumthreadsnthreads adding flag julia repl terminal julia nthreads note iterating parquet equations costly compared loop frg calculations contributes substantial overhead computing initial condition flow advisable via parquet keyword launch accordingly computing resources available using package hpc environment precompile cache generated cpu architecture production runs performed loopvectorizationsjl dependency solver unlock compiler optimizations based respective hardware slurm interface calculations pffrgsolverjl medium sized systems usually locally low threads loops increased resolution required calculations time consuming advisable computing cluster available pffrgsolverjl exports commands help people setting simulations clusters utilizing slurm workload manager integration systems plannned future versions example code rough scan phase diagram jj heisenberg model square lattice using pffrgsolver folder add launcher files rough scan phase diagram mkdir jjsquare j savelauncher jjsquarej j jl j j square heisenberg su j num num num num set slurm parameters dictionary sbatchargs dict account myaccount nodes ntasks cpustask time partition mypartition generate job files makerepository jjsquare pathjuliaexe sbatchargs jobs subsequently submitted using file jjsquare job sbatch file submitted run jobs results gathered jjsquarefinished collectrepository command note simulations finished time overwrite flag respective launcher file set false collectrepository resubmitted continue calculations available checkpoint literature reading technical aspects multiloop pffrg