abstractoperatorsjl description abstract operators extend syntax typically matrices linear mappings arbitrary dimensions nonlinear functions unlike matrices abstract operators apply mappings specific efficient algorithms minimize memory requirements particularly useful iterative algorithms scale optimization algorithms installation install package hit julia command line enter package manager pkg add abstractoperators usage using abstractoperators package imports methods multiplication adjoint transposition methods mul example create discrete fourier transform follows julia dft seen domain dimensions size type domaintype float codomain dimensions size type codomaintype complexfloat linear transformation evaluated follows julia randn input matrix julia arraycomplexfloat im im im im im im im im im im im im julia mul evaluation true julia size e true julia mul evaluation arrayfloat notice inputs outputs necessarily vectors combine multiple abstractoperators using calculus rules example abstractoperators concatenated horizontally julia eye complexfloat julia domain dimensions size type domaintype float complexfloat abstractoperators multiple domains multiplied using arraypartition using recursivearraytools corresponding size domain example julia using recursivearraytools julia arraypartition complex arraycomplexfloat im im im im im im im im im im im im similarly abstractoperators multiple codomains return arraypartition example julia vcat eye finitediff x julia ones list available abstractoperators calculus rules found documentation related packages proximaloperatorsjl proximalalgorithmsjl structuredoptimizationjl credits abstractoperatorsjl developed niccol antonello lorenzo stella ku leuven esatstadius