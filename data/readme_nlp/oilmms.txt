oilmmsjl orthogonal instantaneous linear mixing models julia implementation orthogonal instantaneous linear mixing model oilmm python implementation found examples please refer examples directory basic usage quick intro api api broadly follows sthenojl oilmm constructs orthogonal instantaneous linear mixing model object represents distribution vectorvalued functions docstring info represents input locations logpdf compute log marginal probability model rand rng sample random generator rng marginals compute marginal statistics abstractvectorreal length perform inference simply invoke posterior function fpost posterior fpost oilmm posterior distribution convenient properties oilmm public functions docstrings encounter unclear please raise issue fixed example using abstractgps using linearalgebra using oilmms using random specify construct oilmm svd randn oilmm gp sekernel diagonal diagonal rand sample model moinput randn fx rng mersennetwister rand rng fx compute logpdf data model logpdf fx perform posterior inference produces oilmm fpost posterior fx compute posterior marginals rand logpdf postmarginals marginals fpost example using temporalgpsjl temporalgpsjl makes inference learning gps time series efficient performing exact inference plays nicely package accelerate inference oilmm simply wrapping base processes using tosde temporalgpsjl docs info using abstractgps using linearalgebra using oilmms using random using temporalgps specify construct oilmm svd randn oilmm tosde gp maternkernel sarraystorage float diagonal diagonal rand sample model data set moinput regularspacing fx rng mersennetwister rand rng fx compute logpdf data model logpdf fx perform posterior inference produces oilmm fpost posterior fx compute posterior marginals rand logpdf postmarginals marginals fpost notice example nearly identical gprelated packages utilise abstractgpsjl apis example learning parameters provide fitpredict interface instead rely external packages provide similar flexible specifically recommend using mixture parameterhandlingjl optimjl linear optimisation package zygotejl provide example load gprelated packages using abstractgps using oilmms using temporalgps load standard packages julia ecosystem using linearalgebra using optim standard optimisation algorithms using parameterhandling helper functionality dealing model parameters using random using zygote algorithmic differentiation specify oilmm parameters namedtuple utilise orthogonal positive parameterhandlingjl constrain appropriately init orthogonal randn positive rand positive define function builds oilmm namedtuple parameters function buildoilmm namedtuple return oilmm tosde gp maternkernel sarraystorage float diagonal diagonal zeros generate synthetic data train buildoilmm parameterhandling value init const moinput regularspacing fx rng mersennetwister const rand rng fx define function computes nlml parameters function objective namedtuple buildoilmm return logpdf build version objective function optimjl initflat unflatten flatten init unpack vectorreal parameterhandling value unflatten objective vectorreal objective unpack utilise optimjl zygotejl optimise model parameters trainingresults optim optimize objective zygote gradient objective initflat randn length initflat add noise learning trivial bfgs alphaguess optim linesearches initialstatic scaled true linesearch optim linesearches backtracking optim options showtrace true inplace false compute posterior marginals optimal solution opt unpack trainingresults minimizer buildoilmm opt fpost posterior opt fx marginals fpost bib info please refer citationbib fil