julogjl julia package prologstyle logic programming installation enter package manager pressing julia repl run add julog development version installed running add link git repository features prolog syntax interpolation expressions custom function support built predicates logical connectives conversion utilities usage terms horn clauses expressed prolog syntax using julog macro creates term julog teacher bodhidharma huike creates term asserted true julog teacher bodhidharma huike true creates definite clause julog grandteacher teacher teacher julog macro applied list clauses create knowledge base traditional zen lineage chart example clauses julog ancestor sakyamuni bodhidharma true teacher bodhidharma huike true teacher huike sengcan true teacher sengcan daoxin true teacher daoxin hongren true teacher hongren huineng true ancestor teacher ancestor teacher ancestor grandteacher teacher teacher resolve function query knowledge base via sld resolution form backwardchaining proof search prolog query sakyamuni dharma ancestor huineng julia goals julog ancestor sakyamuni huineng list terms query prove julia sat subst resolve goals clauses julia sat true query grandteachers julia goals julog grandteacher julia sat subst resolve goals clauses julia subst element array sengcan bodhidharma daoxin huike hongren sengcan huineng daoxin forwardchaining proof search supported using derive compute list step derivations derivationsclauses derivable iteration rules julia derivations clauses element arrayclause teacher bodhidharma huike ancestor sakyamuni huike set derivable closure fixed julia derivations clauses inf element arrayclause teacher bodhidharma huike ancestor sakyamuni huineng examples found test folder syntax julog syntax similar prolog particular users note argumentfree terms initial capitals parsed variables whereas lowercase terms parsed constants julia typeof julog person var julia typeof julog person const operators prolog shown examples julog prolog meaning humansocrates true humansocrates socrates human mortal human mortal human human mortal mortalgaia mortalgaia gaia mortal mortal canlive candie mortal canlive candie mortal live die words replaces prolog turnstile true replaces stating replaces negation special operator cut replaces bodies definite clauses operator prolog addition constructing prologstyle linkedlists syntax julog list list nested compound term julog syntax reserved creating julia list julog objects list julog clauses lists nested term parsed prolog note list predicates built predicates manually defined clause prolog syntax preferred prolog macro parseprolog functions convert prolog strings directly julog constructs writeprolog converts list julog clauses prolog string conversion presently handle prolog syntax nested infix operators comparison operators caution interpolation similar string interpolation expression interpolation julia interpolate julia expressions constructing julog terms using julog macro julog supports forms interpolation form constant interpolation using operator ordinary julia expressions converted const julia exp julia term julog irrational irrational julia dump term compound name symbol irrational args array term const name float form term interpolation using operator preconstructed julog terms interpolated surrounding julog expression julia const exp julia term julog irrational irrational julia dump term compound name symbol irrational args array term const name float interpolation allows easily generate julog knowledge bases programatically using julia code julia people julog avery bailey casey darcy julia heights julog height cm rand people element arraycompound height avery cm height bailey cm height casey cm height darcy cm custom functions addition standard arithmetic functions julog supports evaluation custom functions proof search allowing users leverage power precompiled julia code providing dictionary functions calling resolve dictionary accept constants allowing store numericvalued fluents lookuptables example shown funcs dict funcs pi pi funcs sin sin funcs cos cos funcs square funcs lookup dict foo hello bar world assert resolve julog sin pi clause funcs funcs true assert resolve julog cos pi clause funcs funcs true assert resolve julog lookup foo hello clause funcs funcs true assert resolve julog lookup bar world clause funcs funcs true testcustomfuncsjl examples unlike prolog julog supports extended unification via evaluation functional terms words following terms unify julia unify julog julog dictvar term entries extent unification limited variables functional expression sufficiently instantiated time evaluation evaluation partial causing unification fail julia unify julog julog true built predicates julog provides built predicates controlflow convenience iso prolog share exact behavior cons cend reserved lists equivalent cons cons cons cend true false operate expect equivalent body julog clause equivalent prologsyntax true proven negation failure unifies true unifies existscond act true act true binding cond forallcond act true act true bindings cond beware infinite loops implycond act cond act true cond false cond act true callpred metacall predicate equivalent pred findalltemplate cond list instances cond true substitutes variables template unifies list result countallcond counts proofs cond unifies result fail causes current goal fail equivalent false cut causes current goal succeed suppresses goals effects prolog julog breadth search sldresolution unlike prolog implementations depth search testbuiltinsjl usage examples conversion utilities julog provides support converting manipulating logical formulae example conversion negation conjunctive disjunctive normal form julia formula julog julia tonnf formula julia tocnf formula julia todnf formula useful downstream applications classical planning note conversions handle implicit existential quantification prolog semantics hence guaranteed preserve equivalence free variables involved particular care negations conjunctions unbound predicates example following expression ravens black julog raven black todnf handle implied existential quantifier equivalent statement ravens exist black julog raven black related packages julia packages related prolog logic programming herbswipljl wrapper swiprolog julog parser interface probloxjl lightweight julia wrapper problog probabilistic variant prolog acknowledgements implementation reference chris meyer python interpreter prolog unification sldresolution algorithms introduction prolog pierre nugu