bandwidthbenchmarkjl measuring memory bandwidth using streaming kernels thebandwidthbenchmark julia package citing original source contains following streaming kernels corresponding data access pattern notation store load wa write allocate variables vectors scalar init s wa initilize array store sum l vector reduction load copy l s wa classic memcopy update l s update vector scalar load store write allocate triad l s wa stream triad scalar daxpy l s daxpy write allocate scalar striad l s wa schoenauer triad sdaxpy l s schoenauer triad write allocate note include sum reduction julia package installation add bandwidthbenchmark example benchmarks benchmarks emmy fau benchmarksemmyfau noctua pc benchmarksnoctuapc noctua pc benchmarksnoctuapc benchmarks showcased readme conducted emmy cluster nhrfau fix cpu frequencies system bwbench keyword arguments default length vectors nthreads default threadsnthreads julia threads niter default times repeat measurement alignment default array alignment verbose default false print result table thread information etc writeallocate default false include write allocate compensation factors highly recommended pin julia threads specific cores according architecture hand simplest probably set juliaexclusive pin julia threads cores system specific pinning threadpinningjl likiwdjl tools numactl useful julia using bandwidthbenchmark julia bwbench verbose true threading enabled using julia threads total allocated datasize mb thread running core thread running core thread running core thread running core thread running core thread running core thread running core thread running core function rate mb rate mflop avg time min time max time string float float float float float init copy update triad daxpy striad sdaxpy likwid write allocate likwidjl loaded bwbench automatically try likwids marker api running juliaexclusive likwidperfctr memdp julia project mathmodefast t bwbenchlikwidjl detailed information hardwareperformance counters example output values check prove write allocates happened inspecting memory bandwith associated read write striad region extracted convenience memory read bandwidth mbytes memory write bandwidth mbytes times reads happened writes naively expect loads store factor instead schnauer triad additional load due write allocate loaded written write allocates happen usually pass writeallocatetrue bwbench account extra loads obtain following table function rate mb rate mflop avg time min time max time string float float float float float init copy update triad daxpy striad sdaxpy note write allocates update daxpy sdaxpy bwscaling bwscaling measure memory bandwidth increasing threads maxnthreads keyword arguments maxnthreads default threadsnthreads upper limit threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb threading enabled using julia threads thread sdaxpy bandwidth mb scaling results threads sdaxpy bandwidth mb bandwidth scaling mb cores bwscalingmemorydomains bwscalingmemorydomains instead bwscaling measure memory bandwidth memory domains numa returns dataframe row contains kernel name threads memory domain domains considered measured memory bandwidth mb keyword arguments maxnnuma default threadpinningnnuma maximum memory domains consider maxnthreads default maximumthreadpinningncorespernuma maximum threads memory domain consider flopsscaling estimate mflops streaming kernels investigate scaling floating performance increasing threads maxnthreads function flopsscaling exactly based triad kernel keyword arguments maxnthreads default threadsnthreads upper limit threads compact vs scattered pinning using flopsscaling example benchmark compare performance thread pinning scenarios compact pinning fill physical cores chronologically socket socket scattered pinning fill sockets simultaneously alternating socket compact pinning mflops cores scattered pinning mflops cores discussion references thebandwidthbenchmark rrzehpc erlangen sister package streambenchmarkjl likwid likiwdjl