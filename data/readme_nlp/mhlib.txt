mhlibjl toolbox metaheuristics hybrid optimization methods project development feedback appreciated mhlibjl collection modules types functions julia supporting effective implementation metaheuristics hybrid optimization approaches solving primarily combinatorial optimization julia mhlibjl emerged python mhlib mhlib similarities differences main purpose library support rapid prototyping teaching efficient implementations due julia highly effective timecompilation mhlibjl developed primarily algorithms complexity tu wien vienna austria contributors gnther raidl primarily responsible nikolaus frohner thomas jatschka fabio oberweger installation major versions pymhlib installed julia repl via add mhlib development versions available installed via add major components note mhlibjl capabilities python pymhlib main module provides following types candidate solutions various functions solution abstract type represents candidate solution optimization vectorsolution abstract solution encoded vector userprovided type boolvectorsolution abstract solution encoded boolean vector permutationsolution abstract solution representing permutations fixed elements subsetvectorsolution solution arbitrary cardinality subset set represented vector form front represents selected elements optionally unselected ones moreover main module provides gitversion function returning abbreviated git version string current project settings global settings defined independently module distributed values parameters provided program arguments configuration files pymhlib modules rely mechanism external parameters modules schedulers type scheduler abstract framework single trajectory metaheuristics rely iteratively applying methods current solution modules gvnss alnss extend type towards specific metaheuristics gvnss type gvnss framework local search iterated local search variable neighborhood search grasp etc alnss type alns framework adaptive neighborhood search alns demos demonstration purposes simple metaheuristic approaches provided test subdirectory following combinatorial optimization started shown respective sections runtestsjl recommended demo template solving onemax basic test goal set digits binary string true graphcoloring graph coloring based vectorsolution maxsat maximum satisfiability based binaryvectorsolution tsp traveling salesperson based permutationsolution mkp multiconstrained knapsack based subsetvectorsolution misp maximum independent set based subsetvectorsolution new