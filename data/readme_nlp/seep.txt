seepjl data basics anodes arrays instances seep builds evaluates computational flow graphs julia computational flow graph cfg directed acyclic graph nodes represent values edges represent data dependencies similar single static assignment form program compilers control flow nodes evaluated time graph executed cfg defined abstract graph using anodes abstract graph specifies size shape variable connected value computed allocate storage define operations instances constructed abstract graph instance julia function evaluates cfg described abstract graph storage values anode allocated statically instance constructed addition callable function instance provides access arrays operates creating abstract graph abstract graphs built anode anode defined input anode constructors types require anode arguments input anode build calling anodenamestring dimsint constructor name optional helps code write using instance bit cleaner sometimes faster started create anode hold single element call julia anode useful create anode assign variable name macro called named exactly create anode named using named macro julia named anode anode treated arrays index abstract perform arithmetic result operating anode anode represents computed value create couple anode compute simple functions julia named begin log creates anode a log named assigned variables workspace a log referenced otherwise visible instantiating graph created six anode instantiate graph julia graph instance anode passed instance constructor evaluated exactly instance evaluated nodes reference a log evaluated evaluating graph graph provide values input nodes arrays allocated instance created available fields instance populate input anode arrays data julia graph julia graph inputs populated evaluate instance calling function julia graph finally results inspecting arrays results stored julia println graph julia println graph information short introduction basic features seep mor information doc directory root source tree supported operations anodes automatic differentiation gradient descent memory pools convolution pooling disclaimer distribution statement approved public release distribution unlimited massachusetts institute technology subject patent rights ownership contractor spdxlicenseidentifier mit material based supported undersecretary defense research engineering air force contract fa opinions findings conclusions recommendations expressed material author necessarily reflect views usd softwarefirmware provided basi