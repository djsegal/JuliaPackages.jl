gaussnewtonjl status coverage klare miller gaussnewton minimizer minimize sum squares residuals using augmented gaussnewton step levenbergmarquardt trust region finitedifference derivatives jacobian updates port fortran code originally kenneth klare kklaregmailcom guthrie miller guthriemillergmailcom usage simple syntax mirrors optimjl package syntax using gaussnewton function rosenbrock x zeros optimize rosenbrock x optimized powerful syntax jacobian calculation passed parameter using gaussnewton function rosenbrock function rosenbrockder x zeros zeros output optimize rosenbrock rosenbrockder x rosenbrockder optional automatically computed autodiff parameter additional optional parameters stptol step size relative convergence test reltol abstol value relativeabsolute convergence test derivstp step derivatives autodiff single mode change function accuracy derivative limit maximum evaluations allowed approximate tuning constants zlowzhigh change bounds trust region del changes path set greatly affect results zcp cauchy step size zcpmin minimum cauchy step size zcpmax maximum cauchy step size mxbad bad steps rank updates newtstepsttrue start newton step linear iscale scaling iscale variable scaling iscale fixed scaling based d allocated function returns final sum squares minimum stored x addition returns detailed result structure success inferred isfatalresultgnresult fatal error occured hasconvergedresultgnresult hasconvergedabstolresult hasconvergedreltolresult hasconvergedstptolresult hasconvergedstptolresultgnresult hasconvergedreltolresultgnresult hasconvergedabstolresultgnresult autodiff parameter explicit jacobian calculation fcnder passed parameter parameter autodiff controls jacobian calculated autodiff forward forwardiff package compute jacobian automatic forward differentiation autodiff centered finitediff package compute jacobian autodiff single single sided finite difference original code klare mil