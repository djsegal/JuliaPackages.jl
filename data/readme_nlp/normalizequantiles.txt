normalizequantiles julia package normalizequantiles implements quantile normalization qn normalizequantiles array provides function calculate sample ranks sampleranks array vector matrix references amaratunga cabrera analysis data viral dna microchips journal american statistical association doi bolstad irizarry astrand speed comparison normalization methods density oligonucleotide array data based variance bias bioinformatics doibioinformatics pmid wikipedia contributors june quantile normalization wikipedia free encyclopedia retrieved august table contents dependencies remarks usage examples normalizequantiles usage missing values sharedarray multicore usage examples offsetarrays behaviour function normalizequantiles data prerequisites remarks data missing values list exported definitions normalizequantiles usage examples sampleranks list exported definitions sampleranks dependencies julia versions julia third party packages none standard library packages distributed sharedarrays random statistics remarks julia code examples output page copied julia repl commit julia support jan ebdffdddfabfdaddb git checkout ebdffdddfabfdaddb usage examples normalizequantiles usage pkg add normalizequantiles using normalizequantiles following array interpreted matrix rows columns array qn normalizequantiles array julia qn arrayfloat columns qn quantile normalized input array dimension larger return type function normalizequantiles arrayfloat missing values data contain missing values nan else changed nan array nan empty julia array array nan empty qn normalizequantiles array julia qn arrayfloat nan nan nan type float similar int types julia typeofnan float convert result arrayunionmissing float qnmissing convert arrayunionmissingfloatqn julia qnmissing arrayunionmissing float nan nan qnmissing isnan qnmissing missing julia qnmissing arrayunionmissing float missing missing sharedarray multicore usage examples remark restart julia addprocs called using normalizequantiles multiple cores single machine standard packages distributed sharedarrays using distributed addprocs using sharedarrays using normalizequantiles sa sharedarray float julia sa sharedarrayfloat qn normalizequantiles sa julia qn arrayfloat remark restart julia data sets using distributed sharedarrays decreases performance using normalizequantiles la randn normalizequantiles la time normalizequantiles la julia time normalizequantilesla allocations mib remark restart julia using distributed addprocs using sharedarrays using normalizequantiles sa sharedarray float randn normalizequantiles sa time normalizequantiles sa julia time normalizequantilessa allocations kib remark restart julia larger data sets performance increases multicore processors using normalizequantiles la randn normalizequantiles la time normalizequantiles la julia time normalizequantilesla allocations gib gc time remark restart julia using distributed addprocs using sharedarrays using normalizequantiles la randn sa sharedarray float la normalizequantiles sa time normalizequantiles sa julia time normalizequantilessa allocations mib gc time using sharedarrays multicore setup slowest julia normalizequantilesla time normalizequantilesla allocations mib gc time offsetarrays remark julia offsetarrays supported julialangjulia released expected julia using normalizequantiles offsetarrays array missing missing oa offsetarrayarray julia oa offsetarrayarrayunionmissing int eltype unionmissing int indices missing missing qn normalizequantilesoa quantile normalized result offsetarray julia qn arrayfloat nan nan behaviour function normalizequantiles quantile normalization sets values column statistical properties quantile normalization reference column function normalizequantiles expects array dimension returns matrix dimensions input matrix type arrayfloat nan values type float strings treated random missing values result value nan remarks data missing values equal values column input matrix quantile normalized values result values assigned proper original positions indistinguishable mean value result values therefor original positions example julia array matrixint julia qn normalizequantilesarray matrixfloat row instead mean result rows data prerequisites quantile normalization data following properties distribution values column similar values column missing values data random nature remarks data missing values currently agreement deal missing values quantile normalization missing value sorted column original position calculating mean rows list exported definitions normalizequantiles normalizequantiles definition arrayfloat function normalizequantilesmatrixabstractarray input type matrixabstractarray return type arrayfloat usage examples sampleranks sampleranks vector calculates element rank position element sorted vector using normalizequantiles sampleranks return value relevant julia element arrayunionmissing int provide matrix array julia array arrayfloat ranks calculated column wise words array treated array sampleranks array julia element arrayunionmissing int optional keyword parameters tiesmethod naincreasesrank resultmatrix sampleranks tiesmethod tmminnaincreasesrank false resultmatrix true sampleranks resultmatrix true equal values vector called ties methods available treat ties tmmin rank ties default tmmax largest rank tmorder increasing ranks tmreverse decreasing ranks tmrandom ranks randomly distributed tmaverage average rounded integer methods defined exported enum qntiesmethods tmmin tmmax tmorder tmreverse tmrandom tmaverage internally ties increasing ranks chosen method applied rank successive values ties rank plus examples sampleranks samplerankstiesmethodtmmin julia element arrayunionmissing int sampleranks tiesmethod tmmax julia element arrayunionmissing int sampleranks tiesmethod tmreverse julia element arrayunionmissing int missing values vector equal remain position sorting rank missing value missingmissing default missing value increase rank successive values giving true keyword parameter naincreasesrank changes behavior increasing rank successive values nan sampleranks julia element arrayunionmissing int missing sampleranks naincreasesrank true julia element arrayunionmissing int missing keyword parameter resultmatrix generate dictionary rank indices allow direct access values rank vectors memory consumption therefor default return empty dictionary type dictintarrayint sampleranks resultmatrix true julia dictintarrayint entries haskey rank exist julia haskey true values rank julia element arrayfloat list exported definitions sampleranks sampleranks definition enum qntiesmethods tmmin tmmax tmorder tmreverse tmrandom tmaverage description tmmin rank ties tmmax largest rank tmorder increasing ranks tmreverse decreasing ranks tmrandom ranks randomly distributed tmaverage average rounded integer sampleranks definition arrayunionmissingintdictintarrayint sampleranksarrayabstractarray tiesmethodqntiesmethodstmmin naincreasesrankfalse resultmatrixfalse keyword arguments input type arrayabstractarray data input type tiesmethodqntiesmethods treat ties default tmmin input type naincreasesrankbool increase rank na default false input type resultmatrixbool create rank dictionary default false return type arrayunionmissingintdictintarrayint