subsetselection subsetselection julia package computes sparse lregularized estimators sparsity enforced explicit cardinality constraint lpenalty supported loss functions regression squares l l svr classification logistic l l hinge loss algorithm formulates mixedinteger saddle solves boolean relaxation using dual subgradient approach quick start install package julia pkg install subsetselection version julia pkg clone git fit basic model julia using subsetselection statsbase julia julia indices sort sample statsbase weights ones replace false julia sample julia randn indices julia sparseregressor subsetselection ols constraint subsetselection sparseestimator subsetselection ols subsetselection constraint algorithm returns sparseestimator object following fields loss loss function sparsity model enforce sparsity indices features selected value estimator selected features values associated dual variables bias term iter iterations required algorithm instance access selected features directly indices field julia sparseregressor indices element arrayint compute predictions julia ypred sparseregressor indices sparseregressor element arrayfloat classification labels convention required optional parameters subsetselection required parameters loss function minimized chosen squares ols lsvr lsvr lsvr lsvr logistic loss logreg hinge loss lsvm lsvm lsvm classification recommend using hinge loss lsvm functions indeed fenchel conjugate logistic loss exhibits unbounded gradients hinders convergence algorithm require steps optional parameters model enforce sparsity adding hard constraint form constraint adding penalty form penalty objective tractability issues highly recommend using explicit constraint instead penalty ensures size support remains bounded algorithm vector outputs size sample size classification settings vector s matrix covariates size samples features respectively addition subsetselection accepts following optional parameters initialization selected features indinit initialization dual variables init value regularization parameter set default intercept boolean true interceptbias term computed default set false maximum iterations subgradient algorithm maxiter value gradient stepsize default stepsize set e demonstrates empirical performance stepsizes dealing datasets logistic loss gradient updates dual variable performed update primal variable gradup anticycling boolean true algorithm stops soon support unchanged iteration empirically accuracy resulting support strongly sensitive noise caution default set false averaging boolean true dual solution averaged past iterates default set true practices tuning regularization parameter default set appropriate scaling regression instances optimal performance especially classification noisy settings recommend performing grid search using crossvalidation assess sample performance grid search start low value maximum sum train iteratively increase factor mean square error curve rocanalysis implementation commonly performance metrics regression classification tasks respectively instances algorithm fails converge reported occur try normalize data matrix relaunch algorithm algorithm fails converge reduce stepsize factor increase iterations maxiter factor refer