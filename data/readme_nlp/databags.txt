flexible data containers julia databags julia package providing databags quick store structured data databags combine properties dictionaries associate keys preferably symbols strings values types flexible user viewpoint databags behave dynamic structures fields modified created syntax structured objects objkey deleted calling deleteobjkey example using databags dates databag date x x value key x sin creates key easy create databag access fields databags indexed keys dictionaries x x cos cos opinion readable boring type especially interactive session databag types subtypes abstractdict expect databags dictionaries instance apply pop merge merge delete etc databag admittedly databags efficient true julia structures overhead retrieving field databag handful interactive sessions designing code exact contents data structures determined databags extend contents pain redefining structures reincluding code recreating objects etc tools revise help automatically determine existing objects type definition changed creation databags databags created calling databag constructor initial contents databags specified keywords keyvalue pairs dictionary abstractdict avoid ambiguities styles mixed examples using databags databag units m x y databag units m x y databag units m x y databag sqrt statements yield databags symbolic keys type symbol databag textual keys type string databag integer keys type int databags store values type accessing value via syntax objkey symbolic textual keys via syntax objkey accessing values via syntax objkey faster symbolic keys textual keys involves converting symbol string databag constructors attempt favor symbolic string keys exploit objkey syntax enforce unspecific values type flexibility override rules parametric versions databag databag constructor key type value type called instead example databag integer sqrt databag integerreal sqrt yield databags integer keys integer type values unspecific values restricted real rules apply databag built existing dictionary remember databags abstract dictionaries databag yields databag keys type integer values type databag built existing dictionary databag creates dictionary store values initializes contents dictionary passed argument creation databag databag original dictionary independent values references objects independent databag stores contents dictionary dict call wrap databag dict instead databag dict arguments keywords specified databag created databag initially empty symbolic keys type values instance dictsymbol storing keyvalue pairs unless iterate overridden iterating abstractdatabag iterating keyvalue pairs calling contents method abstractdatabag yields internal object abstractdict store data databag defining custom databag types databags package provides simple means facilitate creating subtypes databagsabstractdatabag benefit common interface implemented databags following steps type inherit databagsabstractdatabag key type value type abstractdict type dictionary storing keyvalue pairs extend databagscontents method custom type returns dictionary storing keyvalue pairs instance optionally provide constructor facilitate creation objects type consider extending databagswrap method example using databags define concrete subtype databagsabstractdatabag struct bagex abstractdict databagsabstractdatabag data object store keyvalue pairs etc override databagscontents yield dictionary stores data databags contents bagex base getfield data note basegetfield retrieve objects type derived databagsabstractdatabag data object example getproperty setproperty methods overridden implement objkey syntax subtypes databagsabstractdatabag example create databag type bagex dictionary shared databag advantage simple dictionary objkey syntax provided keys type symbol string improve example implement creation rules databag leads following code using databags define concrete subtype databagsabstractdatabag struct bagex abstractdict databagsabstractdatabag data object store keyvalue pairs etc explicitely define inner constructor avoid outer constructor automatically created julia bagex data abstractdict data outer constructor bagex args kdws wrap bagex contents dict args kdws override databagscontents yield dictionary stores data databags contents bagex base getfield data override databagswrap create instance bagex stores data dictionary databags wrap typebagex data abstractdict bagex data example explictely defined inner constructor forbid creating databag shares existing dictionary dict calling constructor bagex calling wrapbagexdict defined outer constructor calls wrap method dictionary created databagscontents method called dict argument followed arguments keywords passed constructor overridden methods databagscontents example databagswrap latter wrap dictionary bagex instance taking care supplying correct type parameters add constructors constraints type keys values look complete implementation databag type summarized struct databag abstractdict abstractdatabag data data databag provide inner constructor outer constructors deal type parameters databag data abstractdict data outer constructors databag args kwds wrap databag contents dict args kwds databag args kwds wrap databag contents dict args kwds databag args kwds wrap databag contents dict args kwds extends contents method benefit api abstractdatabag inline contents databag base getfield data extend wrap method create instances databag wrap typedatabag data abstractdict databag data wrap typedatabag data abstractdict wrap databag data wrap typedatabag data abstractdict wrap databag data wrap typedatabag data abstractdict wrap databag data useful minimalist example databag type provided databags sufficient specialize bit exploit power type dispatching julia implement specific behavior simple example creating subtype takes half dozen lines code using databags struct bagex databagsabstractdatabagsymboldictsymbol data dictsymbol bagex args kwds databags contents dictsymbol args kwds databags contents bagex base getfield data et voil create type bagex instances behave dictionary symbolic keys type values implement objkey syntax set value key shortcut objkey constructed using keywords obj bagexid unitsm usage common macro provided databags package statements reduced using databags databags newtype bagex using macro saves typing encourage creating databag types warrants implementation correct follows evolutions databags packag