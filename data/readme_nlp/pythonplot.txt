pythonplot module julia module provides julia interface matplotlib plotting library python specifically matplotlibpyplot module pythonplot julia pythoncalljl package call matplotlib directly julia little overhead arrays passed copy based fork pyplotjl package pycalljl interface python intended function drop replacement pyplotjl package takes advantage julia multimedia api display plots julia graphical backend including inline graphics ijulia alternatively pythonbased graphical matplotlib backend support interactive plot zooming etcetera installation pythonplot package condapkgjl package automatically install matplotlib configure pythoncall custom python installation install matplotlib inline plotting ijulia require gui backend qt wx gtk backends matplotlib described basic usage matplotlib pythonplot installed using graphicscapable julia environment ijulia simply type using pythonplot begin calling functions matplotlibpyplot api example using pythonplot range stoppi length sin cos plot colorred linewidth linestyle title sinusoidally modulated sinusoid arguments including keyword arguments exactly python minor translations course julia true instead python true none matplotlibpyplot api extensive describe matplotlibpyplot documentation information matplotlib version returned pythonplotversion differences pyplotjl compared pyplotjl package differences api avoid type piracy functions close step fill renamed plotshow plotclose plotstep plotfill respectively access pythonplot etcetera matplotlibpyplot module exported pyplot plt pythoncall package performs fewer automatic conversions python types julia types comparison pycall convert matplotlib return values native julia objects using pythoncall call pyconvert conversion functions exported functions currently documented matplotlibpyplot api exported functions module call matplotlibpyplotfoo pyplotfoo example pyplotplot raw py object matplotlib module accessible pythonplotmatplotlib matplotlib somewhat inconsistent capitalization contourd bard etcetera pyplot renames functions capital histd bard explicitly qualify functions built julia functions particular pythonplotxcorr pythonplotaxes pythonplotisinteractive access matplotlibpyplotxcorr etcetera wish access pyplot functions exclusively pyplotsomefunction conventional python import pythonplot pyplot instead using pythonplot figure objects current figure figure object wrapper matplotlibpyplotfigure calling gcf figure type supports julia multimedia api displayfig figpyfigure io mime fig writemime julia write mime type string imagepng applicationpdf supported matplotlib backend interactive plotting pythonplot interactive julia prompt julia commandline prompt ijulia notebook plots appear immediately plotting function plot etc evaluated pythonplot julia script run interactively julia myscriptjl matplotlib executed interactive mode plot window run plotshow equivalent pyplot python examples interactive versus julia graphics pythonplot julia graphics backend capable displaying png svg pdf images ijulia environment backend simply call pushdisplay desired display julia multimedia display api detail hand wish python matplotlib backends interactive window plot interactive zooming panning etcetera time running pyguitrue pythonbased gui subsequent plots pyguifalse return julia backend python gui running display current figure julia backend running displaygcf julia graphics backend available pythonplot imported pyguitrue default choosing python gui toolkit tk wxwidgets gtk version qt version via pyqt pyqt pyside python gui backends supported pythonplot obviously installed toolkits python default pythonplot picks starts based installed force specific toolkit chosen importing pycall module using pygui function set python backend importing pythonplot using pycall pyguigui using pythonplot gui currently tk gtk gtk qt qt qt wx set default via matplotlib rcparamsbackend parameter matplotlibrc file color maps pythonplot module exports functions types based matplotlibcolors modules simplify management color maps assign values colors various plot types particular colormap wrapper matplotlibcolorscolormap type following constructors provided colormapcolorantnamestring abstractvector gamma constructs component colormap linearly interpolating colors array colorant colortypesjl package name constructed automatically call colormap gamma instead alternatively instead passing array colors pass column matrix rgb rgba components respectively similar listedcolormap matplotlib color maps defined passing arrays yy tuples red green blue optionally alpha components defined matplotlibcolorslinearsegmentedcolormap constructor via colormaprealnamestring abstractvector abstractvector abstractvector gamma colormaprealnamestring abstractvector abstractvector abstractvector alphaabstractvector gamma colormapnamestring returns existing registered colormap equivalent getcmap name matplotlibcolorscolormap objects returned python functions automatically converted colormap type getcmapnamestring getcmapnamestring lutinteger call getcmap function registercmapcolormap registercmapnamestring colormap call registercmap function getcmaps returns vectorcolormap currently registered colormaps note svgsupporting display environment ijulia colormap vectorcolormap objects displayed graphically try getcmaps d plotting pythonplot package imports functions matplotlib mplotd toolkit unlike matplotlib create d plots directly creating axesd object simply calling bard contourd contourfd plotd plotsurface plottrisurf plotwireframe scatterd textd textd exactly correspondingly named methods axesd export matlab synonyms surf plotsurface plottrisurf darray arguments mesh plotwireframe example surfrand plot random surface mesh explicitly create subplot d axes via example subplot projectiond exactly matplotlib call usingd function ensure mplotd loaded happens automatically plotd etc axesd constructor artd module exported latex plot labels matplotlib allows latex equations plot labels titles simply enclosing equations dollar signs string typing latex equations julia string literals awkward escaping prevent julia interpreting dollar signs backslashes example latex equation alpha beta literal string alpha beta julia simplify pythonplot latexstrings package provide latexstring type constructed via escaping backslashes dollar signs example simply write alpha beta abovementioned equation titleplot gamma string contains equations omit dollar signs alpha beta added automatically added benefit latexstring automatically displayed rendered equation ijulia latexstrings package information svg output ijulia default plots ijulia sent notebook png images optionally tell pythonplot display plots browser svg images advantage resolutionindependent display pixellation resolutions example convert ijulia notebook pdf running pythonplotsvgtrue default svg plots browser slower display especially complex plots display inaccurately browsers buggy svg support pythonplotsvg method returns svg display currently enabled note entirely separate manually exporting plots svg format regardless pythonplot svg browser display export plot svg time using matplotlib savefig command savefigplotsvg modifying matplotlibrcparams mutate rcparams dictionary matplotlib global parameters following example pythonplot matplotlib rcparams fontsize author module written steven johnson