pddljl julia parser interpreter compiler interface planning domain definition language pddl planners included symbolicplannersjl software please cite zhixuan pddljl extensible interpreter compiler interface fast flexible ai planning ms thesis massachusetts institute technology installation press julia repl enter package manager run add pddl development version run add features parsing writing pddl domain files level symbolic planning api execution pddl actions plans abstract interpretation pddl semantics domain grounding compilation increased performance support following pddl requirements strips restricted functionality typing hierarchically typed objects equality comparing equality objects quantifiedpreconditions forall exists disjunctivepreconditions predicates conditionaleffects forall effects adl shorthand requirements constants domain constants fluents numeric fluents derivedpredicates domain axioms pddljl include planning algorithms aims provide interface planners pddl domains easily written julia symbolicplannersjl example pddljl parse domains planning written pddl example following file describes world square tiles white black arranged grid change color tiles flip row tiles column tiles grid flipping domain conditional effects universal quantifiers define domain flip requirements adl typing types row column predicates white row column action fliprow parameters row effect forall column white white white white action flipcolumn parameters column effect forall row white white white white corresponding domain tiles white initial alternating pattern black white tiles x grid grid flipping define flip domain flip objects r r r row c c c column init white r c white r c white r c white r c goal forall row column white pddljl parse files julia constructs domain loaddomain flipdomainpddl loadproblem flippddl actions defined domain executed solve initstate domain execute domain pddl flipcolumn c execute domain pddl flipcolumn c execute domain pddl fliprow r check successfully solved final assert satisfy domain goal true examples found test directory documentation found interface pddljl exposes level interface interacting planning domains implement planning algorithms downstream applications documentation interface methods found summary provided satisfy checks logical formula satisfied satisfiable pddl satisfiers returns satisfying substitutions free variables logical formula evaluate returns value functional logical expression context initstate constructs initial pddl domain goalstate constructs partial goal pddl domain transition returns successor applying action set actions execute applies action returning resulting regress computes preimage action respect available checks action executed action specified returns list available actions relevant checks action lead action specified returns list relevant act