blocks framework represent chunks entity represent processor affinities chunks compose actions local remote chunks chaining functions map reduce operations represents typical pattern observed types parallel processing tasks blocks framework leveraged build convenience apis parallelizing tasks composability blocks lends convenient compact syntax examples utility implement chunked distributed operations disk files hdfs files io streams arrays matrices dataframes included blocks module rest available sub modules blocks blocksmatop creating blocks disk files using blocks blockfilefile nblocksint nblocks chunks divide file chunks nblocks defaults worker processes chunk represented file byte range assumes file available processors chunks processed hdfs files using blocks using hdfs blockfilehdfsurl chunk block hdfs processor affinity chunk set machines block replicated hdfs arrays using blocks blockarray dimsarray chunks created dimensions specified dims chunks predistributed chunk processed processor blockarray dimint nblocksint chunked nblocks chunks dimension dim chunks predistributed chunk processed processor matrix operations parallelized operations matrices represented executed using blocks module blocksmatop provides set convenience apis using matopblock object julia using blocks julia using blocksmatop julia create matrices julia m randint julia m randint julia create parallel matrix operation using multiplication julia mb matopblockm m julia represent blocks julia blk blockmb julia execute operation julia result opblk julia verify result julia tr mm julia tr result true blocksmatop abstractmatrix implementation function blocks splits matrix splits tuple ranges returned matsplitranges function matrixpartblk returns chunk block blk represents streams using blocks blockstreamunioniostreamasyncstreamiobufferblockio maxsizeint iterating block created read chunk data stream chunk represent maxsize sized data block read stream blockstreamunioniostreamasyncstreamiobufferblockio approxsizeint dlmchar iterating block created read chunk data stream chunk approximately size approxsize dlm character distributed dataframes discontinued blocks introduces distributed dataframe type named ddataframe holds referenced multiple remote data frames multiple processors table read parallel ddataframe using special dreadtable method using blocks using dataframes dreadtablefilenamestring kwargs dreadtableblocksblock kwargs blocks created disk hdfs files streams described sections dreadtableiosunionasyncstreamiostream chunkszint mergechunksbooltrue kwargs ios stream data chunksz approximate bytes chunk data mergechunks indicates chunks single processor merged merging discards positional information makes dataframe efficient fewer chunks ddataframe easily represented blocks ddataframe blocks implement dataframe operations distributed manner methods defined dataframe ddataframes distributed manner using pmap reduce operate chunks parallely julia using blocks julia using dataframes julia dt dreadtabletestcsv x ddataframe blocks processors julia headdt x dataframe x x x x x x x x x x julia colsumsdt x dataframe x x x x x x x x x x julia dtdt dt true composing actions blocks functions chained applied chunks block pmap pmapreduce julia notation indicate chaining example read block dataframe chunk disk file blockfilefilename asio asrecordio asdataframe function chain output previous function sometimes separate actions applied locally serially reading io stream remaining distributed remote processors creating dataframe data chunk actions chained prepending chain functions prepare macro blockfilefilename prepare asio asrecordio asbytearray asdataframe nrows following list functions provided package user specified functions chained asio creates io instance streams files asrecordio creates io instance streams files begin positions adjusted boundaries delimited records aslines creates array lines io asbufferedio creates buffered io io asbytearray creates bytearray io asdataframe creates dataframe io map reduces blocks regular julia mapreduce methods blocks map methods receive chunks processed chain actions composed blocks julia ba block julia pmapsum ba element array julia pmapreducesum ba julia ba block julia mapsum ba element array julia mapreducesum ba defining blocks type easy define blocks type minimum requirement constructor blockdata block structure returned elements block define chunk information serialized remote node recreated elements affinity define processors corresponding element block accessed prepare function preprocesses block elements master node serialized remote node filter function processes block elements remote node prepare filter functions chained construction addition override default implementations following blocksblock return iterator chunk definitions affinitiesblock return iterator chunk affinities localpartblkblock return blocks local current processor sample todo sorting disk files distributed dataframe streaming data continuous summarization streaming data using datafram