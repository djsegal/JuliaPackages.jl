namedpositionalsjl allows call julia functions named positional parameters function trainmodel model maxiters kweight jweight begin np trainmodel mymodel maxiters kweight jweight rationale feature languages enjoy feel designed python swift miss coding julia feel situations makes code easy read aligns julia goals obviously overboard personally advise sprinkling code refering docs ide hell five floats somelibraryfn usage prefix call np remember add trailing semicolon using namedpositionals function myfunc int int multby int begin return multby np myfunc multby parameter names optional provide np myfunc multby argument names wrong warning printed np myfunc um warning call testfn um um main yourfile jl goals allowing caller re arguments nope argument hugely julia hidden abstracted hiding potentially huge footgun yield major wtfs reads code allowing caller omit trailing semi separating semi pos kwargs nope required unambiguous call parsing requiring makes separation positional kwargs visible imo useful code readability distinction able julia headscratching issues none probably issues using wrapped functions stuff