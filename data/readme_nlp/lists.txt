lists list collections julia package provides singly linked list doubly linked list implementation julia collections singly linked lists supported cons car cdr standard collection doubly linked lists included samples collection fancy create array nodes maybe list list doubly linked list deletions happen constant time code contains index item list removing items list invalidate index usage list int create list type isempty test items empty remove items length entries operation test item entry list eltype returns item type int indexin index list value item list item list item value push add item list returns index item pop remove return item list unshift add item start list return index item shift remove item return value append items add items list prepend items add items start list index list reference list node treated opaque index getindex index returns value item index setindex index sets item value index endof returns index node operation insert index insert item index pushing values return index deleteat index delete item index return list splice index remove value index returning data value splice index replace item index data value occurrence item list return index index occurrence index kinds iterators list access items loops indices list int prepend item int println item index indexed item getindex index println item slist slist singly linked list items type appending list takes items list usage slist int create list type isempty test items empty remove items eltype returns item type int item list unshift add item start list return index item shift remove item return value prepend items add items start list index list reference list node treated opaque index getindex index returns value item index setindex index sets item value index insert index inserts index returns index following methods singly linked lists included completeness indication using doubly linked list vector choice length entries test item entry list indexin index list value item list item value push add item list returns index item pop remove return item list append items add items list endof returns index node deleteat index delete item index return list splice index remove value index returning data value splice index replace item index data value occurrence item list return index index occurrence index list kinds iterators slist access items loops indices slist int prepend item int println item index indexed item getindex index println item implementation notes code comments time method classes differs interfaces described collections manual differences stem assumption index collection integer comments especially wrong idea write code julia please send email