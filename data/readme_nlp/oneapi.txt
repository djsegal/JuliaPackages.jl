oneapijl julia support oneapi programming toolkit oneapijl provides support oneapi unified programming model package verified currently implementation interface intel compute runtime available linux package significant development expect bugs missing features quick start julia strongly advised official binaries linux supported windows generation windows subsystem linux wsl re using alchemist hardware linux hardware recent linux distribution installed julia proceed entering package manager repl mode pressing adding theoneapi package pkg add oneapi installation couple minutes download binaries oneapi loader spir tools etc oneapijl package depends intel implementation oneapi spec means compatible hardware refer intel documentation details oneapijl installed perform smoke test calling versioninfo function julia using oneapi julia oneapi versioninfo binary dependencies neojll libigcjll gmmlibjll spirvllvmtranslatorunifiedjll spirvtoolsjll toolchain julia llvm driver d v api v devices intel graphics xa intel hd graphics p xd multiple compatible drivers devices driver device functions configure current task julia devices zedevice iterator devices intel graphics xa intel hd graphics p xd julia device zedevice gpu vendor x device xa intel graphics xa julia device zedevice gpu vendor x device xd intel hd graphics p xd ensure functionality expected run test suite package manager repl mode note pull run test suite gpuarrays takes time pkg test oneapi testing finished minutes milliseconds test summary pass total time overall success testing oneapi tests passed usage functionality oneapijl organized follows lowlevel wrappers level zero library kernel programming capabilities abstractions level array programming level zero wrappers available onel submodule expose flexibility underlying apis userfriendly wrappers julia using oneapi oneapi onel julia drv drivers julia ctx zecontext drv julia dev devices drv zedevice gpu vendor x device x intel gen julia computeproperties dev maxtotalgroupsize maxgroupsizex maxgroupsizey maxgroupsizez maxgroupcountx maxgroupcounty maxgroupcountz maxsharedlocalmemory subgroupsizes julia queue zecommandqueue ctx dev julia execute queue list appendbarrier list built top kernel programming capabilities executing julia code oneapi accelerators reuse opencl intrinsics compile spir using khronos translator julia function kernel barrier return julia oneapi items kernel code reflection macros available generated code julia devicecodellvm oneapi items kernel repl kernel define dsolocal spirkernel void zjuliakernel localunnamedaddr top repl kernel oneapijlsrcdeviceopenclsynchronizationjl barrier oneapijlsrcdeviceopenclsynchronizationjl oneapijlsrcdeviceopenclutilsjl macro expansion call void zbarrierj i repl kernel ret void julia devicecodespirv oneapi items kernel spir version generator khronos llvmspir translator bound schema opcapability addresses opcapability kernel opextinstimport openclstd opmemorymodel physical opencl opentrypoint kernel zjuliakernel opsource openclc opname top top uint optypeint uint opconstant uint uint opconstant uint void optypevoid optypefunction void opfunction void none top oplabel opcontrolbarrier uint uint uint opreturn opfunctionend finally onearray type makes oneapi accelerator write custom kernels thanks julia level array abstractions julia onearray rand float onearrayfloat julia onearrayfloat status current version oneapijl supports oneapi level zero interface kernel programming capabilties demonstration implements gpuarraysjl array interfaces results featured gpu array type package extensively tested performance issues integration vendor libraries onemkl onednn development result operations matrix multiplication unavailable slow using local toolchain debugging issues underlying toolchain neo igc etc package local installation components instead downloading prebuilt julia binaries yggdrasil using preferencesjl overriding paths resources provided various jlls oneapijl helpful script automate provided res folder repository julia reslocaljl trying local igc found libigc usrlocallib found libiga usrlocallib found libigdfcl usrlocallib found libopenclclang usrlocallib trying local gmmlib found libigdgmm usrlocallib trying local neo found libzeintelgpu usrlocalliblibzeintelgpu found libigdrcl usrlocallibintelopencl trying local oneapi loader found libzeloader libxlinuxgnulibzeloader found libzevalidationlayer libxlinuxgnulibzevalidationlayer writing preferences discovered paths written global file preferences typically homejuliaenvironmentsvxlocalpreferencestoml vx refers julia version using modify file remove revert default set binaries float support oneapi gpus support float datatypes test gpu using following code julia using oneapi julia onel moduleproperties device fpflags onel zedevicemoduleflagfp onel zedevicemoduleflagfp false gpu executing code relies float values result error julia onearray error module compilation failed error double type supported platform