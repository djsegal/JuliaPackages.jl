monadfunct experiment packag function follow type monad mayb result list usag mayb fmap function map mayb monad none input wrap object output automat wrap none singleton constant none unlik implement fmap function ordinari valu monad appli function usual return ordinari result result elev wrap monad fmap fmap none fmap none els switch use valu none encount els els none els cata execut left function valu function valu use cata none cata extend none type implement maybetypetrait note isnon trait default type captur left object creat object simpli left function left valu valu extract wrap valu left check object left discrimin special result except handl result constructor creat result object default subtyp errorexcept consid left els consid julia result monadresult valu julia result argumenterror bad input monadresult error argumenterror bad input conveni left function check object left extract valu object left valu valu julia result true julia left result argumenterror bad input true julia valu result julia left valu result error methoderror method match left valu result list list monad essenti dimension array list constructor creat list monad fmap element flatten nest list julia list element array int julia list element array int julia fmap element array int julia flatten element array int exampl use mayb monad handl mayb monad contain use use sometim function return throw except indic negat condit exampl match hello bit unfortun test condit use result match match hello result match match match world els notion mayb function style hello match match concat world happen follow creat compos function singl argument base match regex base fix match match regexmatch match concat string base fix string don type piraci defin match function convinc julia core develop addit base librari fine julia hello match match concat world hello world close doesn condit julia abc match match concat world error methoderror method match match help fmap function julia abc fmap match fmap match fmap concat world true get littl hard read compos function process fmap match match concat world use test test process hello hello world test process abc look data flow pipelin condit statement use result monad except handl monad contain data left use track scenario exampl julia parti left sick monadeith left sick julia left parti true julia play badminton weekend monadeith weekend julia play badminton true julia valu play badminton weekend result monad special convent stay track normal condit switch left track encount error condit left track stay ignor comput error condit captur switch left track tell wrong comput monad use handl error simpl exampl run databas queri process establish connect obtain databas cursor run queri troubl throw except databas api call tri conn connect url cursor cursor conn sql select somehwer return queri cursor sql catch error unabl run queri due rethrow nice error flow use tri catch statement anonym function compos run queri sql cursor queri cursor sql error handler handl queri result err lefteith error left valu err result set handler handl queri result datafram job establish pipelin result fmap url connect cursor run queri select somet handl queri result return result run queri valu error bad call left respect dispatch base resulteith erroreith type