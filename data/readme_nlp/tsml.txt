documentation build status help stargazers time tsml timeseries machine learning tsml package time series data processing classification clustering prediction combines ml libraries python scikitlearn thru complementary automlpipeline package julia mls using common api allows seamless ensembling integration heterogenous ml libraries create complex models robust timeseries prediction designframework package influenced heavily samuel jenkins orchestrajl combinemljl packages tsml actively developed tested julia linux macos windows links tsml demo tutorial published juliacon paper tsml binder notebooks live demo jupyter notebook tsml demo juliacon proceedings paper package features support symbolic pipeline composition transformers learners ts data type clusteringclassification automatic data discovery ts aggregation based datetime interval ts imputation based symmetric nearest neighbors ts statistical metrics data quality assessment ts ml wrapper libraries scikitlearn julia ts datevalue matrix conversion ts using sliding windows ml input common api wrappers ml libs juliaml pycall rcall pipeline api allows level description processing workflow specific cleaningnormalization workflow based data type automatic selection optimised ml model automatic segmentation timeseries data matrix form ml training prediction easily extensible architecture using main interfaces fit transform metaensembles robust prediction support threads distributed computation scalability speed installation tsml julia official package registry release installed julia prompt using julia package management triggered pressing julia prompt julia v pkg add tsml equivalently via pkg api julia using pkg julia pkg add tsml motivations past industrial sector seen innovations brought automation inherent automation installation sensor networks status monitoring data collection major challenges datarich environments extract exploit information volume data detect anomalies discover patterns reduce downtimes manufacturing errors reduce energy usage etc address issues developed tsml package leverages ai ml libraries scikitlearn julia building blocks processing huge amount industrial times series data following characteristics described main workflow package assumes column input composed dates values workflow aggregates values based specified datetime interval minimizes occurrence missing values noise aggregated data leftjoined complete sequence dates specified datetime interval remaining missing values replaced nearest neighbors symmetric distance location missing value approach called times missing values tsml pipeline filters transformers iteratively calls fit transform families functions relying multiple dispatch select correct algorithm steps outlined tsml supports transforming time series data matrix form ml training prediction dateifier filter extracts date features convert values matrix form parameterized size stride sliding window representing dimension input ml training prediction similar workflow matrifier filter convert time series values matrix form final combines dates matrix values matrix input ml output representing values time periods predicted ahead time machine learning functions tsml wrappers corresponding scikitlearn native julia ml libraries hundred classifiers regression functions available using common api access scikitlearn wrappers load related package called automlpipeline examples pipeline workflow load tsml setup filterstransformers setup source data filters aggregate impute hourly using tsml fname joinpath dirname pathof tsml datatestdatacsv csvread csvdatevalreader dict filename fname dateformat ddmmyyyy hhmm aggregate datevalgator dict dateinterval dates hour aggregator impute datevalnner dict dateinterval dates hour imputer chkstats statifier dict processmissing true statistics normtonic monotonicer dict normalize monotonic data chkoutlier outliernicer dict dateinterval dates hour normalize outliers pipeline load csv data pipexpr csvread data fittransform pipexpr data dataframe row date value datetime float t t t t t pipeline aggregate check statistics pipexpr csvread aggregate chkstats stats fittransform pipexpr dataframe omitted printing columns row tstart tend sfreq count max min median datetime datetime float int float float float t t note fittransform equivalent calling sequence fit transform functions pipeline aggregate impute check stats pipexpr csvread aggregate impute chkstats stats fittransform pipexpr dataframe omitted printing columns row tstart tend sfreq count max min median datetime datetime float int float float float t t pipeline aggregate impute normalize monotonic data pipexpr csvread aggregate impute normtonic fittransform pipexpr dataframe row date value datetime float t t t t t t t transforming timeseries data matrix form ml modeling create artificial timeseries data datets datetime dates day datetime collect valuets rand length datets ts dataframe date datetsvalue valuets ts dataframe row date value datetime int t t t t t pipeline concatinate matrified value date series args dict ahead size stride datemtr dateifier args valuemtr matrifier args ppl datemtr valuemtr dateval fittransform pplts dateval dataframe omitted printing columns row month day hour week dow doq qoy x x x x int int int int int int int int int int int int ml modeling prediction matrified dateval input features predictionclassication create dummy response consisting random forest learn mapping examples ml modeling found tsml complementary packages automlpipeline amlpipelinebase target rand nrow dateval rf randomforest accuracy score accuracy crossvalidate rfdatevaltargetaccuracy fold fold fold fold fold fold fold fold fold fold mean std folds extending tsml add filter transformer learner note filters transformers process input features ignores output argument hand learners process input output arguments fit transform expects input argument step import abstract types define mutable structure subtype learner transformer import fit transform functions overload load dataframes package main format data processing finally implement fit transform export using dataframes using tsml abstypes import functions overloading import tsml abstypes fit transform export definitions dynamic dispatch export fit transform myfilter define filter structure mutable struct myfilter transformer name string model dict args dict function myfilter args dict define fit function function fit fl myfilter inputfeatures dataframe target vector vector define transform function function transform fl myfilter inputfeatures dataframe dataframe remember main format exchange data dataframe requires transform output return dataframe features input fit transform dataframe format pipeline passes dataframe format consistently corresponding filters transformers learners create transformer plug pipeline element learners transformers feature requests contributions welcome contributions feature requests suggestions link issue encounter contribute please follow guidelines contributors page help usage usage questions posted julia community gitter tsml community julia discourse forum