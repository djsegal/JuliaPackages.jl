lightbson performance encoding decoding bson data allocation free api reading writing bson data natural mapping julia types corresponding bson types convenience api read write dictstring ordereddictstring default roundtrip consistency bson struct api tunable tradeoffs flexibility performance evolution configurable validation levels light weight indexing larger documents transducersjl compatible tested conformance bson corpus generic serialization julia types bson bsonjl functionality lightbsonjl aims natural representations suitable interop languages term persistence integrated fileiojl bsonjl adding semantics confusing bson mutation api reading writing entirely separate complete documents written conversion extended json added level api performance sensitive focus package level api available performance concern level api perform optimally reading simple types strings arrays fields require allocation bsonread src reads src src densevectoruint io object path file bsonwritedst writes dst type maps fields dictionary struct named tuple dst densevectoruint io path file bsonwritedst xs writes xs dst xs list pairstring mapping names field values dst write byte buffer return buffer buf bsonwrite uint int int read byte buffer ordereddictstring bsonread buf read byte buffer specific type bsonread namedtuple int int buf path joinpath homedir testbson write file bsonwrite path read file ordereddictstring bsonread path low level api documents read written byte arrays bsonreader bsonwriter bsonreader bsonwriter immutable struct types instantiated allocation bsonwriter append destination array user responsible writing duplicate fields readerfoo readerfoo foo returns reader field reader materializes field type writerfoo writerfoo appends field name foo value closewriter finalizes document writes document length terminating null byte prefer strings field names symbols julia unfortunately constant time length api example buf uint writer bsonwriter buf writer int close writer reader bsonreader buf reader int nested documents nested documents written assigning field function takes nested writer nested fields read index buf uint writer bsonwriter buf writer nestedwriter begin nestedwriter nestedwriter close writer reader bsonreader buf reader int reader int arrays arrays written assigning array values generators arrays materialized julia arrays accessed index buf uint writer bsonwriter buf writer int writer int close writer reader bsonreader buf reader vectorint reader vectorint reader int reader int dict performance concern elements materialized dictionaries recursively appropriate julia type leaf fields dictionaries written directly buf uint writer bsonwriter buf writer ordereddict string int foo close writer reader bsonreader buf readerdictstring dictstring foo readerordereddictstring ordereddictstring foo reader ordereddictstring foo reader reader foo arrays nested documents generators directly write nested documents arrays buf uint writer bsonwriter buf writer nestedwriter begin nestedwriter int nestedwriter int close writer reader bsonreader buf reader vector ordereddictstring ordereddictstring ordereddictstring reader int read abstract types abstract types integer abstractfloat materialize numeric fields appropriate julia type abstract type buf uint writer bsonwriter buf writer int writer close writer reader bsonreader buf reader reader integer reader reader abstractfloat unsafe string string fields materialized weakrefstringuint aliased unsafebsonstring create string object pointers underlying buffer performing allocations user care gc safety buf uint writer bsonwriter buf writer foo close writer reader bsonreader buf reader unsafebsonstring gc preserve buf foo true binary binary fields represented bsonbinary buf uint writer bsonwriter buf writer bsonbinary x x x bsonsubtypegenericbinary close writer reader bsonreader buf reader bsonbinary data x x x subtype bsonsubtypegenericbinary unsafe binary binary fields materialized unsafebsonbinary zero alocations data field unsafearrayuint pointers underlying buffer user care gc safety buf uint writer bsonwriter buf writer bsonbinary x x x bsonsubtypegenericbinary close writer reader bsonreader buf reader unsafebsonbinary gc preserve buf data x x x true subtype bsonsubtypegenericbinary iteration fields iterated foreach using transducersjl apis fields represented pairunsafebsonstring bsonreader buf uint writer bsonwriter buf writer int writer int writer int close writer reader bsonreader buf reader map int sum foreach println int reader nn indexing bson field access involves linear scan matching field name depending size structure document fields accessed migh preferable build index fields re access bsonindex provides light weight partial collisions evict previous entries index document designed re document document means constant time reset indexedbsonreader wraps reader index accelerate field access document index misses fall wrapped reader buf uint writer bsonwriter buf writer int writer int writer int close writer index bsonindex index built indexbsonreader constructed reader indexedbsonreader index bsonreader buf reader int accessed index empty buf writer bsonwriter buf writer int writer int writer int close writer index re reader indexedbsonreader index bsonreader buf reader int accessed index reader throws keyerror validation bsonreader configured validator processing input document provided strictbsonvalidator validates error bson corpus lightbsonvalidator validates field lengths parent scope document buffer guard invalid memory access default validator uncheckedbsonvalidator performs validation bsonreader buf strictbsonvalidator reader strict validation bsonreader buf lightbsonvalidator reader memory protected validation bsonreader buf uncheckedbsonvalidator reader validation structs structs automatically translated bson provided fields represented bson traits functions select mode conversion serve extension user defined types bsonsimplebool set true fields serialized fieldnames constructed fields declaration defaults structtypesstructtype structtypesnostructtype generic provided bsonsimple false serialization structtypesjl api iterate fields construct structtypesjl details simple simple types using bsonsimple trait generate faster serialization code explicitly set structtypesstructtype defined struct nestedsimple int float struct simple string nestedsimple structtypes structtype typesimple structtypes struct lightbson bsonsimple typesimple true buf uint writer bsonwriter buf writer simple simple foo nestedsimple close writer reader bsonreader buf reader simple simple simplefoo nestedsimple structs written root document buf uint writer bsonwriter buf writer simple foo nestedsimple close writer reader bsonreader buf readersimple simplefoo nestedsimple schema evolution term persistence lived apis advisable encode information schema versions documents implement evolve schemas time specific strategies schema evolution beyond scope package advise impose extension provided users implement mechanisms fit bsonschemaversion current schema version bson compatible type unversioned defaults bsonschemaversionfield field name bson document storing schema version defaults v bsonreadversioned reader handle version respect current version read reader defaults error schema versions mismatched otherwise read unversioned struct evolving int lightbson bsonschemaversion typeevolving int struct evolving int float construct version defaulting fields evolving evolving evolving nan lightbson bsonschemaversion typeevolving int function lightbson bsonreadversioned typeevolving int reader abstractbsonreader evolving bsonreadunversioned evolving reader elseif bsonreadunversioned evolving reader else real world application instead mechanism allow forward compatibility encoding breaking vs breaking change info version error unsupported schema version evolving const evolving evolving buf uint writer bsonwriter buf write version writer evolving close writer reader bsonreader buf read version readerevolving evolving nan named tuples named tuples read written struct type buf uint writer bsonwriter buf writer foo int int close writer reader bsonreader buf reader namedtuple string float namedtuple int int foo faster buffer bsonwriter immutable makes frequent calls resize underlying array track write head position unfortunately optimized operation julia resolving calls manipulating array bsonwritebuffer wraps vectoruint track size purely julia avoid calls implements minimum api bsonreader bsonwriter array implementation buf bsonwritebuffer writer bsonwriter buf writer int close writer reader bsonreader buf reader int buf data underlying array lengthbuf performance performance naturally depend nature data processed main overarching goal package enable performance user requires willing sacrifice convenience achieve target advice performance bson schema short field names avoiding arrays documents using nesting reduce search complexity apply lightbsonjl specifically prefer strings symbols field names unsafe variants allocating strings buffers reuse buffers indexes bsonwritebuffer plain vectoruint enable bsonsimple applicable types example benchmark reading writing named tuple nesting run ryzen x f f int f utc f true f int f d f uuid btime begin buf uint empty buf writer bsonwriter buf writer close writer ns allocations bytes btime begin buf bsonwritebuffer empty buf writer bsonwriter buf writer close writer ns allocations bytes buf uint writer bsonwriter buf writer close writer btime bsonreader buf typeof ns allocations bytes btime bsonreader buf uncheckedbsonvalidator typeof ns allocations bytes btime indexedbsonreader bsonindex bsonreader buf typeof ns allocations bytes btime indexedbsonreader bsonindex bsonreader buf uncheckedbsonvalidator typeof ns allocations bytes btime indexedbsonreader bsonindex bsonreader buf ns allocations bytes btime indexedbsonreader bsonindex bsonreader buf typeof ns allocations bytes observe bsonwritebuffer makes material difference write performance indexing reasonable effect read performance document final lines indexing reading indexed document breaks roughly halfhalf using unchecked validator impact caution objectid bsonobjectid implements bson objectid type accordance spec ids process generated construction using bsonobjectidrange efficient batch generation id bsonobjectid datetime id utc timestamp id generated truncated id bsonobjectid id id true ids unique collect bsonobjectidrange ids equal timestamp sequence field related packages bsonjl generic serialization julia types bson mongocjl julia mongodb client decfpjl provides dec type bson decimal fields transducersjl data iteration transformation api weakrefstringsjl pointer based strings unsafearraysjl pointer based arrays structtypesjl serialization traits utilities user defined structur