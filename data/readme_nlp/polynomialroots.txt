polynomialrootsjl build status code coverage introduction polynomialrootsjl library finding roots complex univariate polynomials written julia implementation julia complex polynomial root solver written fortran jan skowron andrew gould credits goes original algorithm root finding algorithm employed library described skowron gould complex polynomial root solver optimization binary microlenses arxiv algorithm aims fast precise zroots procedure described numerical recipes books implementations fortran available free software according definition free software foundation polynomialrootsjl advantage native arbitrary precision capabilities julia achieve precise results note adopted algorithm highly inaccurate results polynomials mitigated using multiple precision calculations example installation polynomialrootsjl available julia versions installed julia built package manager julia session run command julia pkg add polynomialroots update package list pkgupdate version polynomialrootsjl versions available julia usage installing package run using polynomialroots command julia script polynomialrootsjl provides functions roots complex polynomials roots polynomial roots polish true epsilon e roots polynomial roots epsilon e roots solve polynomials degree roots tailored polynomials degree function exists methods calculate gravitational microlensing amplification binary lens requires solving fifth complex polynomial roots robust roots class polynomials mandatory argument functions polynomial vector holding coefficients polynomial solve ascending lowest coefficients complex real optional arguments roots roughly advance position roots pass vector roots speed convergence roots vector element shorther polynomial roots roots polished elements vector complex real polish boolean keyword roots set true roots found dividing original polynomial root found roots polished using polynomial default false epsilon floating optional keyword determine stopping criterion described skowron gould paper set defaults machine precision polynomial roots argument precision roots calculated functions return output complex vector roots polynomial note roots optional argument provided changed examples roots fifth polynomial zeros roots roots julia roots im im im im im element arraycomplexfloat e im eim e im e im eim julia roots im im im im im element arraycomplexfloat e im eim eim e im e im polynomialrootsjl handles polynomials multiplicity roots example consider x x x x roots julia roots element arraycomplexfloat im im im im im julia roots element arraycomplexfloat im im im im im arbitrary precision due limited precision float type extraction roots polynomials inaccurate results low polynomials caused catastrophic cancellation computation discriminant sqrt ac polynomials example actual roots x x try calculate doubleprecision julia roots julia im julia im doubleprecision accuracy calculating roots precision transforming result doubleprecision julia natively supports multiple precision calculations pass bigfloat roots function note correctly initialize arbitrary precision floating constant string literal julia roots julia float julia float note trade speed accuracy precision related projects julia package finding roots complex polynomials polynomialsjl jameson nash contributors package finding roots polynomials features integrate differentiate polynomials solve polynomial polynomialsjl calculates eigenvalues companion matrix polynomialrootsjl usually faster magnitude slightly precise addition polynomials extract roots arbitrary precision speed precision polynomialrootsjl option development package developed submit bug reports suggestions propose pull requests history changelog package available file top directory license polynomialrootsjl package licensed version apache license gnu lesser public license version version option licenses complex polynomial root solver custom scientific comunity regardless licence chose distribute software code scientific process results scientific kindly appropriate citation paper skowron gould greatful pass information proper citation redistribute software authors complex polynomial root solver original fortran library polynomialrootsjl translated jan skowron andrew gould original author polynomialrootsjl mos giordano