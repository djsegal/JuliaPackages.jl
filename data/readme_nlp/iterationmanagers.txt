iterationmanagers introduction types lightweight package implements types handling printing updates iterative algorithms package based subtypes main abstract types iterationmanager iterationstate iterationmanager iterationmanager type responsible keeping track toplevel details means look implementation default manager defined package immutable itertolmanager iterationmanager tol float maxiter int verbose bool printskip int typealias defaultmanager itertolmanager itertolmanager tol float maxiter int itertolmanager tol maxiter true div maxiter manager responsible defining tolerance level convergence maximum iterations allowed iterations verbose output iterations printouts manger implemented package based iterations performed immutable itermanager iterationmanager maxiter int verbose bool printskip int itermanager maxiter int itermanager maxiter true div maxiter notice manager track desired tolerance level anymore apilevel functions defined subtypes iterationmanager verbose iterationmanager isdefined verbose verbose false printnow mgr iterationmanager int verbose mgr isdefined mgr printskip mgr printskip false functions return false manager verbose field printnow function return true verbose equal true printskip field printskip printskip divisor iterationstate subtypes iterationstate responsible keeping track progress algorithm iterations default iteration type defined follows type defaultstate iterationstate int iterations change float change previous current elapsed float total time elapsed prev previous value prevtime float previous absolute time defaultstate defaultstate inf time notice abstract iterationstate parametric type type parameter package currently subtypes iterationstate defaultstate specialized code generated type utilize future defaultstate fields track iterations total elapsed computation time details current iteration change previous value previous absolute time previous iteration api combining manager iterationmanager iterationstate useful combine reduce lot boilerplate code appears iterative algorithms example newton method diving api consider following example pattern common algorithms seen written function newton fp function fpp function init tol float e maxiter int verbose bool true printskip int stage setup copy init dist iter elapsed oldtime time dist tol iter maxiter stage iteration xnew fpp fp stage iteration processing dist maxabs xnew iter newtime time elapsed newtime oldtime verbose iter printskip println iteration iter dist round dist elapsed elapsed copy xnew oldtime newtime stage post iteration processing verbose iter maxiter error failed converge maxiter iterations else println converged successfully iter iterations code implements simple version newton method compute root function derivatives function initial condition code actually discussion care structure notice main sections code setup iteration iteration processing post iteration processing iterative algorithms written exact structure subset algorithms postiteration step example structure common able automate remove boilerplate consider version newton function function newton fp function fpp function init tol float e maxiter int verbose bool true printskip int setup manager mgr defaultmanager tol maxiter verbose printskip istate defaultstate init stages shot managediteration mgr istate fpp fp function arguments construct instance defaultmanager defaultstate call managediteration function following signature managediterationfunction mgriterationmanager istateiterationstate defaultby argument passed managediteration using julia block syntax represents code perform iteration managediteration function premid postprocessing original version newton wish write line version newton method using special keyword argument version managediteration constructs manager automatically function newton fp function fpp function init tol float e maxiter int verbose bool true printskip int stages managediteration fpp fp init tol tol maxiter maxiter printskip printskip verbose verbose example vfi simplify implementation newton method focus algorithm managing printing messages update user complicated example using package functions function vfi growthmodel arrayfloat vinit arrayfloat getr tol real e howardsteps int maxiter int stage setup vnew similar polind similar vnew int int policies indexes ints ev similar dist iter elapsed oldtime time dist tol iter maxiter stage iteration updateev ev maxrev ev vnew polind howardimprovement howardsteps ev vnew polind stage iteration processing dist maxabs vnew copy vnew iter newtime time elapsed newtime oldtime told oldtime newtime print iteration iter dist round dist elapsed elapsed stage post iteration processing iter maxiter error pfi failed converge maxiter iterations else println converged successfully iter iterations return vupd polkind version using mangediteration function vfimanaged growthmodel arrayfloat vinit arrayfloat getr tol real e howardsteps int maxiter int stage setup vnew similar polind similar vnew int int policies indexes ints ev similar polind ev tuple updating construct manager mgr defaultmanager tol maxiter istate defaultstate stages managediteration mgr istate maxabs st unpack iteration polind ev st vnew similar updateev ev maxrev ev vnew polind howardimprovement howardsteps ev vnew polind returned repacked vnew polind ev key code defaultstate tuple arrays allows track moving iteration allows compiler generate specialized code specify keyword argument calling managediteration argument function computes convergence criterion successive iterations compare vnew using supnorm max absolute difference called sup norm happened elements st tuple respectively code actually run functions called routine howardimprovement included simply example using iterationmanagers tackle complicated implementation managediteration function lot heavy lifting studying implemented help learn understand package actual implementation function managediteration function mgr iterationmanager istate iterationstate defaultby prehook mgr istate finished mgr istate istate prev update istate iterhook mgr istate posthook mgr istate istate main components finishedmgriterationmanager istateiterationstate bool function simply takes iterationmanager iterationstate checks loop terminate iteration updateistateiterationstate method updates contents iterationstate inplace using value returned function routine check convergence using function argument passed default argument function named defaultby apijl various hookmgriterationmanager istateiterationstate methods allow user inject arbitrary code run stages code prehook iterations begin iterhook iterations posthook iterations implementations functions built types found apijl file dedicated specific subtype methods apijl except update method found defaultjl docs written file issue specific request