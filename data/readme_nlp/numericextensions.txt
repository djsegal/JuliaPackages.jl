numericextensionsjl julia extensions provide performance computational support notes implementations originally package migrated julia base improved implementation sum improved implementation maximum minimum performant implementation sum maximum minimum dimensions julia fantastic technical computing environment allows write codes performant generic stage functions performant writing computational algorithms directly based builtin functions performance package provides variety tools address issues package help consider simple example compute sum squared difference vectors easily julia line follows sum abs whereas expression simple involves unnecessary operations lead suboptimal performance creates temporary arrays respectively store abs completes computation passes data computing computing abs finally computing sum julia provides mapreduce function allows complete operation single pass creating temporaries mapreduce abs run probably slower culprit anonymous function abs inlined resolved called iteration compute efficiently write loops length abs bad complex computing rowcolumn matrix writing loops involved tricky implement cachefriendly package compute efficiently writing loops sumfdiff absfun compute specific dimension sumfdiff absfun dim absfun add typed functors provided package unlike normal functions properly inlined passed function causing zero overhead package extends map foldl sum maximum etc accept typed functors introduces additional functions sumfdiff scan etc simplify common benchmarks writing x faster sumabs package provides collection specific functions directly support common computation particular example write sumsqdiff sumsqdiff functions provided main features main features package highlighted predefined functors cover typical mathematical computation easy user define customized functors extendedspecialized methods map map foldl foldr methods carefully optimized result x x speed additional functions map reduce mapreduce allow inplace updating writing results preallocated arrays extended methods sum maximum minimum allow reduction function values sumabs introduces sum maximum minimum allows writing results preallocated storage performing reduction specific dimension collection highly optimized numerical computation functions sumabs sumsq sumabsdiff sumsqdiff etc highly optimized statistical functions varm var stdm std logsumexp softmax etc vector broadcasting computation supporting inplace updating writing results arrays fast sharedmemory views arrays performance functions package carefully optimized particular tricks lead performance improvements computation performed cachefriendly manner computation completes single pass creating intermediate arrays kernels inlined via typed functors inner loops linear indexing precomputed offset opportunities using blas exploited table compares performance reductionmapreduction functions vectorized julia expressions table speed ratio functions package opposed julia expressions reduction colwise reduction rowwise reduction sum mean max min var std sumabs maxabs minabs sumsq dot sumabsdiff maxabsdiff minabsdiff sumsqdiff logsumexp softmax updated dec julia version prerelease numericextensions version notice remarkable speed functions documentation please refer detailed document