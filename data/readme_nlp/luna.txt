lunajl lunajl flexible platform simulation nonlinear optical dynamics waveguides optical fibres freespace geometriesusing unidirectional pulse propagation equation uppe approximate forms commonly generalised nonlinear schrdinger equation gnlse key features luna variety propagation geometries treated unified singlemode modeaveraged propagation waveguides multimode propagation waveguides arbitrary including symmetric modeshapes polarisation resolution intermodal coupling arbitrary nonlinear polarisation terms waveguides arbitrarily varying material properties crosssections tapered fibres freespace propagation radial symmetry dimensional freespace propagation fieldresolved envelope propagation equations range linear nonlinear optical effects modal dispersion loss waveguides optical kerr effect third nonlinearity raman scattering molecular gases glasses strongfield photoionisation plasma dynamics built interface running processing multidimensional parameter scans serial parallel standard library plotting processing functions including calculation spectrograms beam properties luna designed extensible adding type waveguide nonlinear effect straightforward editing main source code luna originally developed modelling ultrafast pulse propagation gasfilled hollow capillary fibres hollowcore photonic crystal fibres simulations particularly support excellent modelling propagation solidcore fibres luna written julia programming language chosen unique combination readability ease speed luna julia relevant section readme using luna simple level interface heavily optimised applications luna propagation gasfilled hollow capillary fibres hollowcore photonic crystal fibres consisting function propcapillary helper functions create input pulses propagation simple gnlse simulations consisting function propgnlse lowlevel interface allows control customisation simulation parameters custom waveguide modes gas fills including gas mixtures freespace propagation simulations short introduction simple interface quickstart gnlse sections information including internals luna found documentation installation luna requires julia v obtained julia terminal install luna simply enter package manager run add luna add luna install precompile luna dependencies quickstart run simple simulation ultrafast pulse propagation gasfilled hollow capillary fibre propcapillary example metre length hcf m core radius filled bar helium gas driving pulses centred nm wavelength j energy fs duration consider frequency grid spans nm m time window ps julia using luna julia output propcapillary e e energy e fwhm e lims e e trange e time run code precompilation message julia using luna info precompiling luna ebfb e dbce time complete additional precompilation messages packages luna depends unless update luna edit package source code using default options including fft planning caching ppt ionisation rate wait processes finish simulation finally runs example minute results stored output julia output propcapillary e e energy e fwhm e lims e e trange e memoryoutput simulationtype dumps meta e grid stats access results indexing output dict example frequencydomain field e julia output e arraycomplexfloat shape array n nz n frequency samples nz steps saved propagation default propcapillary solve field carrierresolved uppe numerical fourier transforms using rfft frequency samples nt nt samples time domain multimode propagation propcapillary accepts keyword arguments list documentation customise simulation parameters input pulse modes defines modeaveraged multimode propagation modes included default propcapillary considers modeaveraged propagation fundamental he mode capillary fast simple accurate especially intensity selffocusing photoionisation play roles propagation dynamics modeaveraged propagation activated using modeshe default replacing he mode designation modeaveraged propagation mode run simulation modes he he capillary set modes example time frequency windows simulation run little faster julia propcapillary e e modes energy e fwhm e trange e lims e e propagation output field e shape n nm nz nm modes julia outputmultimode e arraycomplexfloat note setting modeshe modes equivalent except kerr effect included simulation former modeaveraged propagation treating spatial dependence nonlinear polarisation kerr effect whereas latter projects spatially dependent nonlinear polarisation onto single mode difference especially photoionisation plays major role plotting results usefully directly plot propagation results using plottingpropd plotting imported time propcapillary using luna statement julia plotting propd output pyplot figure pyobject figure size x axes plot display power spectrum input output julia plotting specd output log true pyplot figure pyobject figure size x axes plotting functions accept additional keyword arguments quickly display relevant information example bandpassfiltered uv pulse simulation using bandpass argument julia plotting timed output trange e e bandpass e e pyplot figure pyobject figure size x axes multimode simulations plotting functions display modes individually default display sum modes instead using modessum julia plotting specd outputmultimode log true modes sum pyplot figure pyobject figure size x axes compare modeaveraged note differences appearance additional ultraviolet dispersive waves modes plotting functions available plotting module including propagation statistics plottingstatsoutput spectrograms plottingspectrogram output processing processing module contains useful functions detailed processing manual plotting including spectral energy density frequency wavelength axis optional spectral resolution setting processinggete processinggeti timedomain fields pulse envelopes flexible frequency bandpass linear dispersive propagation operators processinggetet energy processingenergy peak power processingpeakpower including frequency bandpass fwhm widths frequency processingfwhmf time processingfwhmt timebandwidth product processingtimebandwidth g coherence multiple fields processingcoherence gnlse propagation run simple simulation nonlinear pulse propagation optical fibre using generalised nonlinear schrdinger equation gnlse propgnlse example model supercontinuum generation solidcore photonic crystal fibre parameters corresponding simulations fig dudley et al rmp julia using luna julia julia flength e julia s e e e e e e e e e julia output propgnlse flength s e fwhm e power e pulseshape sech lims e e trange e run visualise output julia plotting propd output dbmin range e e trange e e pyplot figure pyobject figure size x axes plot examples examples folder contains complete simulation examples variety scenarios simple interface lowlevel interface simple interface examples require pyplot package lowlevel examples require packages install simply typing add pyplot julia repl equivalent packages lowlevel interface core luna extremely flexible simple interface using propcapillary exposes luna lots examples lowlevel interface examples folder actively maintained guaranteed run effect flexibility easy mistakes using lowlevel interface example changing singlemode multimode propagation fibre requires concurrent changes code trouble interface issue detail try help run running parameter scans luna comes built interface allows running single multidimensional parameter scans little additional code example found examples folder information available documentation julia resources help learn julia start julia academy courses learning julia depending current experience additional resources linked julia website edit run julia code option julia extension visual studio code julia supports unicode symbols code including greek letters luna makes heavy name variables instead omega instead pi etc julia console enter unicode characters using backslash tab key example omegatab result netab result latter equivalent faster entry greek letters specifically autohotkey script solutions getting help contributing expected found bug simply advice please issue github repository please email questions luna luna actively developed github repository contribute bugfix feature please create pull request github follow useful guides learn simple github workflow john travers jtravs chris brahms chrisbrahms help information credits luna jointly developed chris brahms chrisbrahms john travers jtravs chris started project leads development john multiple major contributions luna based john earlier propagation code funding development luna supported funding european research council erc european union horizon research innovation program starting grant agreement hisol references kolesik moloney nonlinear optical pulse propagation simulation maxwell unidirectional equations physical review statistical nonlinear soft matter physics dormand prince rungekutta triples computers mathematics applications dormand prince family embedded rungekutta formulae journal computational applied mathematics hult fourth rungekutta interaction picture method simulating supercontinuum generation optical fibers journal lightwave technology geissler tempea scrinzi schnrer krausz brabec light propagation fieldionizing media extreme nonlinear optics physical review letters perelomov popov terent ev ionization atoms alternating electric field soviet physics jetp ammosov delone krainov tunnel ionization complex atoms atomic ions electromagnetic field soviet physics jetp brzsnyi heiner kalashnikov kovcs osvay dispersion measurement inert gases gas mixtures nm applied optics ermolov mak frosz travers russell supercontinuum generation vacuum ultraviolet dispersivewave solitonplasma interaction noblegasfilled hollowcore photonic crystal fiber physical review lehmeier leupacher penzkofer nonresonant third hyperpolarizability rare gases n determined third harmonic generation optics commun