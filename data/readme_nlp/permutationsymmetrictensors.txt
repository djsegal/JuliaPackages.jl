permutationsymmetrictensorsjl permutationsymmetrictensorsjl provides efficient framework multidimensional arrays symmetric permutation indices implemented pure julia symmetric tensors implemented symmetrictensor dim type element type dim indices required index tensor maximal index dimension example index symmetrictensorcomplexf indices note computer science definition tensor instead mathematical following tensor multidimensional container elements type described refer indices dimension tensor semantically consistent definition multidimensional array mathematics physics texts call dimension usually referred degree rank tensor package exports basic constructors symmetrictensor convenience functions main advantage using symmetrictensor requires memory store array construction symmetrictensor conveniently constructed using zeros ones similar rand julia using permutationsymmetrictensors julia rand symmetrictensorfloat symmetrictensorfloat julia zeros symmetrictensorcomplexf symmetrictensorcomplexf im im im im im im im im im im im im im im im im im im im im im im im im im im im julia ones symmetrictensorbool symmetrictensorbool julia similar symmetrictensorbool julia similar char symmetrictensorchar tensor parametrized size provide arguments zeros ones rand standard library random imported rand create symmetrictensor data stored vector directly constructor symmetrictensordata val valdim called length vector data agrees unique elements requested symmetrictensor function findsymmetrictensorsize dim useful purpose elements dimension dimensions dim returns distinct elements symmetrictensor dim store julia findsymmetrictensorsize julia data collect element vectorint julia symmetrictensor data val val symmetrictensorint note symmetrictensor leverage symmetry minimize memory usage easy create symmetrictensors elements typemaxint stored naively julia rand symmetrictensorfloat julia println tensor requires round sizeof digits gb memory tensor requires gb memory julia println array shape require length gb memory array shape require e gb memory julia println elements elements julia println oops meant oops meant line computation overflowed returned wrong result account calculating sum elements symmetrictensorint dim iteration arrays dim typemaxint length returns int julia rand symmetrictensorfloat julia length julia typeof ans int julia rand symmetrictensorfloat julia length julia typeof ans int standard tensors indexed mutated julia rand symmetrictensorint symmetrictensorint julia julia julia julia symmetrictensorint julia element view symmetrictensorint eltype int julia symmetrictensorint mutating element mutates elements equivalent index permutation iterated support operations arbitrary abstractarray julia rand symmetrictensorbigfloat julia ai enumerate println ai ai ai ai ai ai ai ai ai ai ai ai ai ai ai ai ai julia size julia ndims julia axes base oneto base oneto base oneto base oneto julia length julia sum julia prod e julia extrema julia lastindex julia eachindex arraycartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex cartesianindex functions base explicitly overloaded zeros ones rand similar sizeof size length getindex setindex operations shown fall implementations abstractarray symmetrictensor subtype highly suboptimal performance examples performance section currently broadcasting convert symmetrictensor dimensional array simple broadcasts applying elementwise functions instead consider broadcasting data field holds data symmetric tensor contains julia time rand symmetrictensorfloat allocations kib julia time allocations mib gc time julia typeof arrayfloat julia time similar allocations kib julia time data data allocations bytes julia sum length true aware inplace operations unexpected results julia rand symmetrictensorfloat symmetrictensorfloat julia sort dims symmetrictensorfloat convenience functions findfullindices dim findfullindicessymmetrictensor returns array tuples indices i i i dim i i i dim cartesian index corresponds index underlying data vector symmetrictensor dim example julia findfullindices element vectortupleint int int julia rand symmetrictensorfloat julia fullindices findfullindices element vectorntuple int julia data julia indices fullindices julia indices finddegeneracy dim finddegeneracysymmetrictensor returns symmetrictensorint dim element specifies index permutations element examples julia finddegeneracy symmetrictensorint julia rand symmetrictensorfloat julia finddegeneracy symmetrictensorint performance symmetrictensor mainly save memory explained exchange sacrifice performance indexing basic operations symmetric tensors outperform applied arrays dimensionality sufficiently creation indexing using benchmarktools julia dim julia btime zeros ntuple dim s allocations kib julia btime zeros symmetrictensorfloat dim s allocations kib julia btime ns allocations bytes julia btime ns allocations bytes julia dim julia btime zeros ntuple dim ms allocations mib julia btime zeros symmetrictensorfloat dim ms allocations mib julia btime ns allocations bytes julia btime ns allocations bytes julia dim julia btime zeros ntuple dim ms allocations gib julia btime zeros symmetrictensorfloat dim s allocations kib julia btime ns allocations bytes julia btime ns allocations bytes indexing symmetrictensor slower standard array abusing symmetry underlying data basic operations efficient applying data field tensor directly instead tensor example julia dim julia rand symmetrictensorfloat dim julia array julia btime extrema ms allocations bytes julia btime extrema ms allocations bytes julia btime extrema data s allocations bytes example calling extrema data field avoided looping vast majority elements auxiliary functions finddegeneracy findfullindices sometimes useful implementing efficient computations symmetrictensor example index element symmetrictensor julia dim julia rand symmetrictensorfloat dim julia array julia btime findmin ms allocations bytes cartesianindex julia btime findmin ms allocations bytes cartesianindex julia fullindices btime findfullindices s allocations kib julia btime findmin data s allocations bytes julia fullindices example sum symmetrictensor julia rand symmetrictensorfloat julia array julia btime sum allocations bytes e julia btime sum ms allocations bytes e julia degeneracy btime finddegeneracy ms allocations mib julia btime sum data degeneracy data efficient linearalgebradot s allocations kib e fullindices degeneracy depend shape precomputed performance implementation instance symmetrictensor dim contains fields data vector stores elements symmetric tensor length binomialdim dim conveniently findsymmetrictensorsize dim linearindices vectorvectorint indexed outer vector length lengthlinearindices equal dim length elements vector equal index symmetrictensorfloat indices indices sorted descending linear index found evaluating index linearindices linearindices linearindices linear index value val dataindex methods operating symmetrictensors implemented using generated functions provide efficient implementations based size packages comparable functionality symmetrictensorsjl tensorsjl tensorsjl provides immutable stackallocated dimensional symmetric tensors package preferable tensors fewer roughly elements featured implementing operations tensors instead basic functionality symmetrictensorsjl provides symmetrictensor type exported package implementation based blocked memory pattern sacrificing performance cache locality benchmarks import symmetrictensors using benchmarktools tensor creation julia float julia julia dim julia btime rand symmetrictensors symmetrictensor dim allocations gib julia sizeof frame julia btime rand permutationsymmetrictensors symmetrictensor dim s allocations mib julia sizeof getindex setindex julia btime s allocations kib julia btime s allocations kib julia btime ns allocations bytes julia btime ns allocations byt