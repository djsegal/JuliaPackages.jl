amrvw fast backward stable computation roots polynomials implementation corechasing algorithms finding eigenvalues factored matrices fortran code methods provided eiscor repository repository provides julia package implementing methods applied finding roots polynomials computation eigenvalues sparse factorization companion matrix fast backward stable computation roots polynomials jared aurentz thomas mach raf vandebril david watkins siam matrix anal appl fast backward stable computation roots polynomials ii backward error analysis companion matrix companion pencil jared aurentz thomas mach leonardo robol raf vandebril david watkins arxiv methods summarized monograph format corechasing algorithms eigenvalue jared aurentz thomas mach leonardo robol raf vandebril david watkins twisted algorithm generalization multishift qr algorithm raf vandebril david watkins implemented corechasing algorithms utilize francis qr algorithm sparse factorizations respected companion matrix polynomials real coefficients storage requirements algorithm requires flops iteration flops overall basic qr algorithm applied companion matrix require storage flops overall examples julia import amrvw const amrvw julia p element arrayfloat julia roots p element arraycomplexfloat im im im im means comparison using polynomials package julia using polynomials julia roots polynomial p element arrayfloat advantage methods comes algorithm larger polynomials compared roots function polynomials package methods faster degree faster grows methods storage time whereas roots storage companion matrix created time running time generic eigenvalue solver roots function computes float values generic floating values compared roots function polynomialsroots package methods bit slower bit accurate roots function storage appears time roots function generic floating values roots method run numeric issues polynomials degree larger backward stability methods shown paper grow linearly norm coefficients following accurate computable reasonable time doi s expected value pilog pi julia rs rand float julia time rts roots rs julia sum isreal rts allocations kib relatively speedy statistics generated albeit following time finish julia xs sum isreal roots randn julia using statsbase julia xbar meanandstd xs julia julia xbar sqrt pi log pi exported functions internal functions example paper fast stable unitary qr algorithm discusses situation matrix unitary hessenberg factored terms descending chain rotators fit matrix current framework example using linearalgebra float const amrvw qs randomrotator descendingchainqs qf qfactorization qrfactorizationqf eigvals compared mi diagm ones qs mi eigv