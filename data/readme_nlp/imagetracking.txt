imagetracking julia package optical flow object tracking algorithms package currently implements optical flow estimation using following methods lucaskanade sparse optical flow farneback dense optical flow usage examples following sections summarise key api aid concrete examples farneback algorithm farnebackargs method dense optical flow estimation developed gunnar farneback computes optical flow frame using polynomial representation images idea polynomial expansion approximate neighbourhood d function polynomial displacement fields estimated polynomial coefficients depending polynomial transforms translation options various options fields type described detail choices iterations iterations displacement estimation algorithm run left unspecified default value seven iterations assumed choices estimationwindow determines neighbourhood size information intergrated determining displacement pixel total size equals estimationwindow choices estimationwindow standard deviation gaussian weighting filter weigh contribution pixel neighbourhood determining displacement pixel choices expansionwindow determines size pixel neighbourhood polynomial expansion pixel larger values mean image approximated smoother surfaces yielding robust algorithm blurred motion field total size equals expansionwindow choices expansionwindow standard deviation gaussian smooth image purpose approximating polynomial expansion references farnebck frame motion estimation based polynomial expansion bigun gustavsson eds image analysis scia lecture notes computer science vol springer berlin heidelberg farnebck polynomial expansion orientation motion estimation phd thesis linkping university sweden se linkping sweden dissertation isbn example dense optical flow estimation using farneback algorithm using imagetracking using images imageview using coordinatetransformations staticarrays using linearalgebra image credit liu beyond pixels exploring representations applications motion analysis doctoral thesis massachusetts institute technology demo joinpath dirname pathof imagetracking demo img load joinpath demo carjpg img load joinpath demo carjpg algorithm farneback estimationwindow estimationwindow expansionwindow expansionwindow flow opticalflow gray float img gray float img algorithm convert rowcolumn convention map svector flow flow display optical flow image hue encoding orientation saturation encoding relative magnitude maxnorm maximum map normflow normalisedflow map polarfromcartesian flow maxnorm hsv zeros hsvfloat size img eachindex flow hsv hsv normalisedflow pi pi normalisedflow visualize optical flow save disk imshow rgb hsv save demoopticalflowfarnebackjpg hsv lucaskanade algorithm lucaskanadeargs differential method optical flow estimation developed bruce lucas takeo kanade assumes flow essentially constant local neighbourhood pixel consideration solves basic optical flow equations pixels neighbourhood squares criterion options various options fields type described detail choices iterations termination criteria iterative search algorithm iterations choices windowsize size search window pyramid level total size window windowsize choices pyramidlevels based maximal pyramid level set pyramids single level set levels choices eigenvaluethreshold algorithm calculates minimum eigenvalue normal matrix optical flow equations divided pixels window value eigenvaluethreshold corresponding feature filtered flow processed default value references lucas kanade interative image registration technique application stereo vision darpa image understanding workshop pp bouguet pyramidal implementation afne lucaskanade feature tracker description algorithm intel corporation vol example using lucaskanade algorithm determine optical flow using imagetracking using images imageview using staticarrays image credit liu beyond pixels exploring representations applications motion analysis doctoral thesis massachusetts institute technology demo joinpath dirname pathof imagetracking demo img load joinpath demo tablejpg img load joinpath demo tablejpg corners imcorner img method shitomasi findall iszero corners getindex getindex map ri ci svector float ri float ci algorithm lucaskanade windowsize pyramidlevels eigenvaluethreshold flow indicator opticalflow gray float img gray float img algorithm subset succesfully tracked determine correspondences validpoints indicator validflow flowindicator validcorrespondence map x x validpoints validflow convert rowcolumns convention round nearest integer pts map round int pts map round int validpoints pts map round int validcorrespondence lines map p p pp pts pts visualise optical flow red lines demarcate optical flow keypoints succesfully tracked guidict imshow img idx annotate guidict annotationlines lines linewidth color rgb coordorder xyxi