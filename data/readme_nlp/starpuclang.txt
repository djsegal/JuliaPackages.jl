clang package provides julia language wrapper libclang stable exported interface llvm clang compiler libclang api documentation provides background functionality available libclang julia wrapper repository hosts related tools built top libclang functionality installation package provides box installation experience linux macos windows simply install running pkg add clang usage bindings generator package includes generator create julia wrappers libraries collection header files following declarations currently supported function translated julia ccall valist vararg argument supported struct translated julia struct enum translated cenum union translated julia struct typedef translated julia typealias underlying intrinsic type macro limited support srcwrapcjl simple example using clang using clang libclang llvmjll libclangheaders headers wrapped const libclanginclude joinpath dirname llvmjll libclangpath include clang normpath const libclangheaders joinpath libclanginclude header header readdir libclanginclude endswith header wc init headers libclangheaders outputfile joinpath dir libclangapijl commonfile joinpath dir libclangcommonjl clangincludes vcat libclanginclude clanginclude clangargs joinpath libclanginclude headerwrapped root current root current headerlibrary libclang clangdiagnostics true run wc note complain missing std headers fatal error time file found fixed adding istdlibincludespecificplatform clangargs example macos using clang findstdheaders header findstdheaders pushclangargs header backward compatibility miss behaviors v please pkgpin package v following change generator script using clang clanginclude using clang deprecated wrapc using clang deprecated cindex build custom bindings generator custom bindings generator tends codebases multiple api versions support building generator requires customization effort libraries initial investment pay mentioned bindings generator exposes entry customization actually hard directly build bindings generator example following script generating libclang refer docs details using clang using clang libclang llvmjll const libclanginclude joinpath dirname llvmjll libclangpath include clang normpath const libclangheaders joinpath libclanginclude header header readdir libclanginclude endswith header create context ctx defaultcontext parse headers parseheaders ctx libclangheaders args joinpath libclanginclude includes vcat libclanginclude clanginclude settings ctx libname libclang ctx options isfunctionstrictlytyped false ctx options isstructmutable false write output apifile joinpath dir libclangapijl apistream apifile transunit ctx transunits rootcursor getcursor transunit push ctx cursorstack rootcursor header spelling rootcursor info wrapping header header loop child cursors wrap appropriate ctx children children rootcursor child enumerate ctx children childname name child childheader filename child ctx childrenindex choose cursor wrap startswith childname continue skip compiler definitions childname keys ctx commonbuffer continue wrapped childheader header continue skip cursor filename headers wrapped wrap ctx child info writing apifile println apistream julia wrapper header basename header println apistream automatically generated using clangjl printbuffer apistream ctx apibuffer empty ctx apibuffer clean apibuffer header close apistream write common definitions types typealiases etc commonfile joinpath dir libclangcommonjl commonfile println automatically generated using clangjl printbuffer dumptobuffer ctx commonbuffer uncomment following code generate dependency template files copydepsdirnameapifile printtemplatejoinpathdirnameapifile libtemplatejl libclang libclang thin wrapper libclang mapped libclang apis using clanglibclang cx clang prefixed libclang apis imported current namespace build tools scratch unfamiliar clang ast starting introduction clang ast