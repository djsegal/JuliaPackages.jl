systemjl framework interfacing systeminstalled software julia systemjl allows trusted system software relying binaries downloaded julia artifacts view systemjl essential component proprietary secure computing environments package support platforms common linux distributions provides path goal requires header files installed libraries bindings automatically generated usage systemjl framework providing bindings operating system systeminstalled software api system resources available julia packages encapsulate dynamically generated bindings automatically created cbindingjl import package packages found systemjlpkgs directory available systemjl imported similar revisejl using system occur packages utilizing framework loaded add juliaconfigstartupjl file bindings system resource loaded sys using libxyz macro syntax bindings referenced cbindingjl string macro usually bindings free name collisions julian names available julia using system julia sys using libc c julia printf printf printf julia sys using alsa libasound julia val int sndpcmstreamlast name sndpcmstreamname val printf name playback capture developing framework package packages systemjl framework found systemjlpkgs pkgjl packages installed framework packages unable packages referenced systemjl package dependencies pkgjl framework packages lightweight cbindingjl special sys package introduces tools facilitate process provides pkgconf macro automatically inject dependency packages compilation command line arguments header file inclusions prepare julia definitions declare package bindings following example demonstrates usage macro module libpkg using sys pkgconf begin using libdep libdep pathinclude pathlibs lpkg include pkgheader include pkgheader ji manually written equivalent look module libpkg using sys using libdep using libdep deplib ldep ddepusedep deplib ldep pathinclude pathlib lpkg include depheader include depheader include depheader include depheader include pkgheader include pkgheader ji details available package grows tested system