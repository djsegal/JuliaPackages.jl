argosjl argosjl extends powersystem modeler exapfjl interior solver madnlpjl solve optimal power flow opf entirely julia package structured follows srcevaluators various optimization evaluators implement callbacks objective gradient hessian required optimization algorithms srcalgorithms augmented lagrangian algorithm implemented targeting primarily resolution scale opf gpu architectures srcwrappers wrapper mathoptinterface wrapper nlpmodelsjl implemented installation install argos default package manager add argos check expected please run test argos default command tests evaluators implemented argos cpu available cuda gpu quickstart function runopf entry argos takes input path matpower file solves associated opf madnlp solve space ips argos runopf datacase argos fullspace argument specifies formulation inside madnlp solve opf fullspace implements classical space formulation implemented inside matpower powermodelsjl alternatively solve opf using reducedspace formulation dommel tinney solve reducedspace ips argos runopf datacase argos dommeltinney argos evaluators argos implements evaluators solve opf fullspaceevaluator implements classical opf formulation space whereas reducedspaceevaluator implements reducedspace formulation dommel tinney using evaluator instantiating evaluator matpower file simply amounts reducedspace evaluator nlp argos reducedspaceevaluator case space evaluator flp argos fullspaceevaluator case initial optimization variable computed argos initial nlp variable control throughout optimization obtained refresh structures inside nlp argos update nlp structures refreshed callbacks evaluated argos objective nlp objective argos gradient nlp reduced gradient argos jacobian nlp reduced jacobian argos hessian nlp reduced hessian moi wrapper argos implements wrapper mathoptinterface solve optimal power flow nonlinear optimization solver compatible mathoptinterface nlp argos reducedspaceevaluator case optimizer ipopt optimizer moi optimizer update tolerance tolerance newtonraphson subsolver moi set optimizer moi rawoptimizerattribute tol e solve reduced space solution argos optimize optimizer nlp nlpmodels wrapper alternatively nlpmodelsjl wrap evaluators implemented argos amounts simply nlp argos fullspaceevaluator case wrap nlpmodels model argos opfmodel nlp x nlpmodels getx model obj nlpmodels obj model x evaluator wrapped inside nlpmodelsjl leverage solver implemented juliasmoothoptimizers solve opf deport solution opf gpu exapfjl using kernelabstractions implement core operations hence deporting computation gpu accelerators straightforward argosjl inherits behavior evaluators instantiated gpu accelerators simply using cudakernels load cuda backend kernelabstractions using argoscuda nlp argos reducedspaceevaluator case device cudadevice kernels instantiated gpu avoid memory transfer host device sparse linear algebra operations handled cusparse sparse factorizations performed using cusolverrf via julia wrapper cusolverrfjl package loaded via included argoscudajl package lib deporting computation gpu reduced hessian evaluated parallel batch evaluation reduced hessian instead computing reduced hessian hessianvector product hessianvector product hessianvector products evaluated batch activate batch evaluation reduced hessian please specify hessianvector products perform batch nlp argos reducedspaceevaluator case device cudadevice nbatchhessian note instances batch computation demanding terms gpu memori