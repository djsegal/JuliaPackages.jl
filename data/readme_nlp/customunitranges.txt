customunitranges julia package supports creation array types unconventional indices indices start package custom array type corresponding axes range type consequently providing means consistency allocation similar information defining using array types indices package currently package defines abstractunitrange types zerorange zerorange equivalent except julia type system lower bound analogous base oneto type useful defining arrays indexed starting urange parallel unitrange defining arbitrary range indices usage package somewhat atypical usage include files repository source level reason package range types private module consequently define module global namespace instead suppose re defining array type supports arbitrary indices broad terms module look module myarraytype using customunitranges filenameforurange include filenameforurange struct myarray abstractarray base axes myarray base slice map urange starting indices indices using customunitranges filenameforurange brings exported string filenameforurange scope myarraytype key line includefilenameforurange statement load sourcelevel code urange type myarraytype module chose urangejl arbitrary indices zerobased indices chosen zerorangejl instead note output axes slice containing urange type specifically creating tuple slices myarraytypeurange global urange type indicestuple specific package result packages defining myarray otherarray independently exploit urange myarraytype includes specialization function base similar uniontypefunction shape tupleurangevarargurange myarray map length shape offset similarly otherarraytype myarray otherarray similararrayint axes create myarray similararrayint axes create otherarray despite urang