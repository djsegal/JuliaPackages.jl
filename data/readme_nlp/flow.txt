dataflowjl note package deprecated look irtools instead dataflowjl code intermediate representation ir format representing code expression graph supports closures represented explicitly allowing programs easily represented manipulated complex program transformations applied moreover programs kept level form humanreadable data flow graph bit expression tree variables functions refer inputs directly underneath directed graph linking output function call input dataflowjl provides functions prewalk postwalk allow crazy graphrestructuring operations minimal code cyclic graphs algorithms common subexpression elimination implemented line hundreds basics julia using dataflow vertex constant call dataflowjl provides ivertex data type behaves lot julia expr type construct vertices inputs vertices build expressions constant shortcut vertices representing constant values julia using dataflow vertex constant call constant julia constant constant ivertex ivertex julia vertex call constant ivertex call object analagous head julia expr exprcall key difference expr ivertex graph tree reuse explicitly represented consider multiplying expression julia vertex call constant ivertex bison bison bison represent structure graph text dataflowjl prints expression tree variable binding bison variable graph presentation graphs dumped julia expressions using dataflowsyntax similarly create variable bindings julia dataflow syntax quote edge edge edge julia eval ans graphs allowed cyclic introduce cycles using thread pushes argument existing vertex julia dataflow thread ivertex bison bison notice cycle represented circular dependency bison walking transformations carried via prewalk postwalk functions similar macrotools explanation julia dataflow prewalk value isa call value constant vertex constant ivertex bison ivertex bison bison variants prewalk postwalk advanced transform