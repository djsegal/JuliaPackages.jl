dictionariesjl alternative interface dictionaries julia improved productivity performance package somewhat features added lowlevel interfaces tweaked future stable usage contributions welcome please submit issue pr motivation level goal package define interface dictionary set structures convenient efficient functional data manipulation including operations scalar indexing broadcasting mapping filtering reducing julia comes built abstractdict abstractset supertypes interfaces established generic abstractarray built dictionaries implement common data manipulation operations compared arrays difficult performant manner package aim devise cohesive interface abstract dictionaries associative maps common supertype abstractdictionary indices arbitrary type convenient efficient iteration containers goal dictionary manipulation closely resemble array manipulation easier users simultaneously pushing performance dictionaries closer arrays getting started dictionaries share common supertype abstractdictionary container package dictionary hashbased implementation serves replacement julia inbuilt dict type using hash isequal key lookup comparison main difference dict preserves elements iterates faster iterates values keyvalue pairs constructing dictionaries construct list indices keys list values julia dict dictionary element dictionarystringint julia dict constructor accepts indexable container preserving keys values julia dictionary dict element dictionarystringint prefer dictionary function create dictionary iterates keyvalue pairs pair tuple etc somewhat dict constructor julia dictionary element dictionarystringint final construct dictionary using index function accepts function constructs key element collection julia index alice bob charlie element dictionarycharstring alice bob charlie accessing dictionaries values dictionary mutable settable modified via setindex array indices keys created rearranged julia dict julia dict element dictionarystringint julia dict error indexerror dictionary contain index stacktrace setindex dictionarystringint int string home ferris julia dev dictionaries src abstractdictionary jl top level scope repl indices dictionary insertable indices added removed insert delete functions julia insertdict element dictionarystringint julia deletedict element dictionarystringint note insert delete precise sense insert error index exists delete error index set function provides upsert functionality update insert unset useful removing index exist dictionaries dictionaries manipulated transformed using similar interface julia built arrays note dictionaries iterate values easy perform simple analytics dictionary values julia dict dictionary element dictionarystringint julia sum dict julia using statistics mean dict mapping broadcasting function arrays preserving indices transforming corresponding values julia map iseven dict element dictionarystringbool false true false julia map dict dict element dictionarystringint julia dict element dictionarystringint mapview function exported splitapplycombinejl lazy version filtering dictionary preserves keys dropping remainder julia filter isodd dict element dictionarystringbool filterview function provided lazily filter dictionary occassionally performant larger containers pairs function allows access index key value iterating julia pairs dict element dictionaries pairdictionarystringintdictionarystringint julia map pairs dict element dictionarystringstring bb ccc sort dictionary value using sort function usual keyword arguments julia sort dict rev true element dictionarystring int sortkeys sortpairs functions allows sort dictionary key keyvalue pair respectively sorting supported types sort sortkeys sortpairs slower algorithms indices indices dictionary unique form set mathematical sense indices dictionary keys function julia keys dict element indicesstring whenever call keysabstractdictionary receive abstractindices return indices shares similar implementation baseset perform set operations including union intersect setdiff symdiff mutating counterparts construct iterable unique elements julia inds indices element indicesstring distinct function similar unique base construct indices input unique julia distinct element indicesint distinct function considered useful replacement unique unique function internally constructs hashmap set anyway returning vector indices iterates fast vector useful able map dictionary indices insertable insert delete set unset add remove elements julia insert inds element indicesstring julia delete inds element indicesstring crucial property abstractindices subtype abstractdictionary similar keys abstractarray abstractarray set indices dictionary getindex form map element julia inds iterate abstractindices guaranteed value twice collection set usual set operations union intersect setdiff symdiff defined newly exported predicate function disjointset set returns true set set intersectoverlap according elementwise isequal check false otherwise note dictionariesdisjoint deprecated favour baseisdisjoint julia onwards dictionaries keys indices keys keysindsabstractindices inds indices properties abstractindices little unnecessary lead variety useful behavior wish perform operation element set simply map broadcast indices return dictionary operations return abstractindices mapping results distinct map broadcast preserve elements keys julia map uppercase inds element dictionarystringstring julia inds element dictionarystringstring aat bat cat filter indices julia filter inds element indicesstring subset dictionary indiceskeys satisfy constraint values findall function julia dict element dictionarystringint julia inds findall isodd dict element indicesstring finally useful indices indexing scalar indexing dictionaries little complicated arrays ambiguity indexer single index collection indices arrays scalar indices integers cartesianindex es ambiguity indexingjl provides getindices function return container indices indexer reexported julia getindices dict inds element dictionarystringint suggested syntax dictinds available julia future unambiguous scalar indexing lazy scalar indexing achieved usual view function julia view dict inds element dictionaryviewstringintindicesstringdictionarystringint boolean logical indexing ambiguous scalar scalar indexing luckily findall function convenient convert booleanvalued dictionary indices getindices julia isodd dict element dictionarystringbool true false true julia getindices dict findall isodd dict element dictionarystringint maybe syntax dictionary types unordereddictionary container hashbased dictionary unlike dictionary elements defined internally slightly optimized version implementation dict built julia supports abstractdictionary interface tokens bit faster dictionary workloads focussing insertion deletion building cache iteration speed unimportant arraydictionary container simple iterationbased dictionary faster collections keys corresponding arrayindices type default contain vector support mutation insertion tokenization contain arrays svector staticallysized dictionaries similarities baseimmutabledict filldictionary container lazily maps key value keeping single copy value indices based sort instead hashing dense sorted form tree similar planned factories dictionary creation dictionaries indices similar function create dictionary defined indices undefined values setmutated similardict creates container indices dict optionally element type julia similar dict vectorint element dictionarystringarrayint undef undef undef behaviour dict abstractindices dictionary settablemutable elements preserving indices using similar setting values provides huge performance advantage compared iteratively constructing dictionary via insertion bottom readme hand values initialized fillvalue dict function julia fill dict element dictionarystringint fill function optionally define wider type value helpful assign default value missing allow updated julia fill missing dict unionmissing int element dictionarystringunionmissing int missing missing missing functions zeros ones falses trues defined handy alternative common rand randn julia zeros dict element dictionarystringfloat julia zeros uint dict element dictionarystringuint x x x note indices output guaranteed mutableinsertable current implementation inserting deleting indices output corrupt input container julia suffers similar restrictions abstractarray mutable indices example changing size indices subarray lead corruption segfaults holds true output map broadcast getindices similar zeros ones falses trues container indices insert copy indices furst empty instead empty insertable dictionaries indices empty function create insertable container similar input zero elements specified type indices values empty constructs empty indices dictionary indices empty constructs empty dictionary dictionary indices empty constructs empty container indices indices dictionary dictionary types interfaces traits section primary developers wish understand internals dictionariesjl create custom dictionary types abstractdictionary common supertype package abstractdictionary models indexable container implement simple abstractdictionary implement getindexabstractdictionary keysabstractdictionary abstractindices isassignedabstractdictionary bool abstractindices indexable containers julia keys form set mathematic sense collection distinct elements keys abstractdictionary type abstractindices form set elements abstractindices isequal implement simple index type provide iterate protocol returning unique values type indices implies element indices isequal length override iteratorsize sizeunknown indices dictionaries indices abstractarray abstractarray subtyping relationship abstractindices abstractdictionary indexing abstractindices identity operation indices keys function identity operation indices keysindicesabstractindices indices idempotent dictionaries keyskeysdictabstractdictionary keysdict scalar indexing indexing abstractdictionary follows interface provided indexingjl package indices dictionary arbitrary type including container array dictionary function distinct getindex required indicate scalar indexing expression dict getindicesdict dict follows following simple rules output indices match indexer issetequalkeysdict keysdict values dict directly dict dict dictdict keysdict scalar indexing simplified essentially getindicesdict dict map dict dict note getindicesdict keysdict keys values dict synonymous getindicesdict rules match abstractarray including offset arrays view function similarly setindices function indexingjl implemented mutation settingmutating values dictionary types support setting mutating values elements support mutation abstractdictionary implement issettableabstractdictionary returning true setindexdictabstractdictionary returning dict issettable function trait function indicate abstractdictionary supports setindex idempotency property abstractindices indices immutable values indices inserted deleted insertion deletion arbitrary indices added removed abstractdictionary implement isinsertableabstractdictionary returning true insertdictabstractdictionary returning dict deletedictabstractdictionary returning dict insert delete create remove indices calling insert index exists throw error attempting delete index exist function set provided upsert update insert operation similarly unset function ensure index exist function base note setindex create indices unlike julia abstractdict programming languages set perform upsert operation change inconvenient similar abstractarray julia differs matlab requiring explicitly push vector bugprone pattern abstractindices insertable implementing isinsertableindices returning true insertindices add index indices error index exists deleteindices remove existing index indices error index exist set unset functions behave expected union intersect setdiff symdiff indices iterate values filter function programmatically trim set indices tokens operations dictionaries fast avoid unnecessary lookups dictionary operations recomputations hashes token interface makes efficient especially coiteration similar containers containing identical keys implementing token interface abstractindices token efficient refering element indices using tokens help avoid multiple index lookups single operation tokenizable indices implement istokenizableindices returning true tokentypeindices type iteratetokenindices iterates tokens indices iterate gettokenindices hasindexbool token gettokenvalueindices token returning value index token isinsertable tokenizable indices implement gettokenindices hadtokenbool token deletetokenindices token indices implementing token interface abstractdictionary tokenizable dictionary implement istokenizabledict returning true keysdict istokenizable share tokens dict gettokenvaluedict token returning dictionary value token istokenassigneddict token bool issettable tokenizable dictionary implement settokenvaluedict token value isinsertable tokenizable dictionary implement gettokendict hadtokenbool token deletetokendict token dict coiteration implementation notes dictionaries share tokens coiterating matching elements efficient default similar function indices arrayindices copy indices performing operation map dout din check keysdout keysdin tokens equivalent constanttime operation map operation skip lookup entirely performing zero calls hash dealing hash collisions quick benchmark verifies result julia using dictionaries benchmarktools julia d dictionary julia d d julia btime map d d ms allocations mib copy makes keysd keysd disabling token coiteration iterative approach using mulitple hashtable lookups element relatively snappy julia btime map d dictionary copy keys d d ms allocations mib comparitive baseline benchmark try dense vectors julia v collect julia v v julia btime map v v ms allocations mib vector results line dictionary coiteration using insertion instead preserving existing indices comparitively slow julia function d d dictionary int int keys d insert d d return generic function method julia btime d d allocations mib unfortunately insertion appears idiomatic basedict compare julia dict dict pairs d dict dict pairs d julia function d d dict int int keys d d d return generic function method julia btime dict dict allocations mib result similar generators possibly easiest dealing basedict julia btime dict dict dict keys dict allocations gib represents x speedup example dictionary example basedict