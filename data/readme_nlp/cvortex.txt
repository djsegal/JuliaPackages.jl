cvortexjl julia wrapper gpu accelerated vortex filament vortex particle methods cvortex library introduction cvortexjl cvortexjl wrapper cvortex library following functionality compute velocities induced collections d regularised vortex particles d regularised vortex particles d straight singular vortex filaments compute vortex stretching term induced d vortex particles d particles vortex filaments compute change particle vorticity due viscous interaction d regularised vortex particles redistribute d d vortex particles onto grid run cvortexjl runs bit windows bit linux library compatible macos cpu instruction sets obtain maximum benefit opencl compatible gpu igpu includes intel integrated graphics amd integrated graphics discrete gpus nvidia gpus gpu runs cuda installed appropriate gpu drivers note hypervisors programs allow run virtual machines virtualbox pass graphics hardware compatable compatible gpu benefit multicore implementation cvortexjl add package system run julia v pkg add cvortex remembering access package environment binaries cvortex library automatically downloaded documentation ordinary help syntax julia type repl help particular topic example help particleinducedvelocity examples cvortexjl examples using cvortexjl import cvortexjl using using cvortex vortex filaments vortex filaments cvortex straight singular properties start vorticity d latter scalar velocity obtain velocity induced d startp rand filament start coordinate endp rand filament coordinate fvort rand scalar filament vorticity mesp rand velocity measurement location vel filamentinducedvelocitystartp endp fvort mesp returned vel float array length hardware computations suppose vortex filaments vectorise computation influence measurement startps rand endps rand fvorts rand mesp rand vel filamentinducedvelocitystartps endps fvorts mesp vel float array length create suitable gpu accelleration multiplemultiple measurement matrix startps rand endps rand fvorts rand mesp rand vels filamentinducedvelocitystartps endps fvorts mesp vels float matrix influence matrix desirable obtain influence vortex filament context vortex ring velocity direction function included nvels inducedvelocityinfluencematrix filamentstartcoords matrixreal filamentendcoords matrixreal measurementpoints matrixreal measurementdirections matrixreal vortex filaments matrix returned length vector filament vorticity called induced velocities measured directions vortex particles vortex particles blobs vorticity whilst singular term stability cvortex implements vortex particle regularisation regularisation cvortexjl struct regularisationfunction functions relevent regularisation method regularisationfunction obtained using preprogrammed routines singularreg singularregularisation planetreg planetaryregularisation winckelreg winckelmansregularisation gaussreg gaussianregularisation singularregularisation actually regularisation allows singular vortex particles planetaryregularisation allow regularisation viscous schemes winckelmansregularisation algebraic regularisation gaussianregularisation normal gaussian regularisation d vortex particles using d vortex particles using singular vortex filament additions regularisation function required regularisation distance required regularisation distance radius vortex particles roughly represents finest fidelity field resolve consequently vortex particles overlap solution velocity obtain velocity induced d vortex particle vels particleinducedvelocityparticlepositions particlevorts measurementpoints regularisation regularisationdistance single particle single measurement particlepositions length vector particlevorts scalar measurementpoints length vector vels length vector multiple particles single measurement particlepositions matrix particlevorts length vector measurementpoints length vector vels length vector multiple particles multiple measurement particlepositions matrix particlevorts length vector measurementpoints matrix vels matrix regularisationdistance scalar sized particles supported viscous rate change vorticity viscous vortex particle method rate change vorticity particle computed dvorts particleviscinduceddvort inducingparticlepositions inducingparticlevorts inducingparticleareas inducedparticlepositions inducedparticlevorts inducedparticleareas regularisation regularisationdistance kinematicviscosity rate change vorticity induced particles computed particlearea variables type vorticity vector d vortex particles d vortex particles characterised position d vorticity vector d d particles regularisation function regularisation distance required computation velocity obtain velocity induced d vortex particle vels particleinducedvelocityparticlepositions particlevorts measurementpoints regularisation regularisationdistance single particle single measurement particlepositions length vector particlevorts length vector measurementpoints length vector vels length vector multiple particles single measurement particlepositions matrix particlevorts matrix measurementpoints length vector vels length vector multiple particles multiple measurement particlepositions matrix particlevorts matrix measurementpoints matrix vels matrix regularisationdistance scalar sized particles supported vortex stretching d vorticies stretched leading rate change vorticity compute following dvort particleinduceddvort inducingparticleposition inducingparticlevorticity inducedparticleposition inducedparticlevorticity kernel regularisationfunction regularisationradius real viscous rate change vorticity viscous vortex particle method rate change vorticity particle computed dvorts particleviscinduceddvort inducingparticlepositions inducingparticlevorts inducingparticleareas inducedparticlepositions inducedparticlevorts inducedparticleareas regularisation regularisationdistance kinematicviscosity rate change vorticity induced particles computed particlearea variables type vorticity vector vortex particle redistribution vortex particles redistributed onto grid fix introduced particles spreading redistribution scheme required scheme encapsulated redistributionfunction struct created scheme lambdaredistribution scheme lambdaredistribution scheme lambdaredistribution scheme lambdaredistribution scheme mpredistribution lambdaredistribution scheme mpredistribution scheme recommended lambdaredistribution lambdaredistribution discontinious cause numerically lambdaredistribution dissipative chosen scheme particles redistributed positions vorts redistributeparticlesongrid particlepositions inducingparticlevorticity redistributionfunction griddensity negligiblevorte maxnewparticles optional parameters negligiblevort maxnewparticles designed stop lots vortex particles vorticities created negligiblevort threshold discarding particles value discard particles discard particles implemented proportion average particle vorticity particle possess kept vorticity discarded particle distributed remaining particles maxnewparticles hard limit vortex particles created equal limit negligiblevort chosen maxnewparticles remaining particles discarded particles maxnewparticles due implementation result fewer particles maxnewparticles mixing d vortex particles filaments mix vortex particles filaments d vortex filaments singular include viscosity unless re willing cheat somehow addition function required putting vortex stretching induced vortex filaments vortex particles obtained using dvort filamentinduceddvort filamentstartcoord filamentendcoord filamentstrength inducedparticleposition inducedparticlevorticity assumed singular contolling accelerators gpus computers multiple gpus probably igpu discrete gpu desirable control gpu stop gpus gpus cvortex found numberofgpus numberofaccelerators integer returned accelerators index numberofaccelerators acclerators controlled investigated using index obtain name name acceleratornameacceleratorindex note name unique gpus share name product purchased example amd rx vega julia acceleratorname gfx investigate cvortex using gpu inuse acceleratorenabledindex returns true false enable accelerator acceleratorenableindex disable accelerator acceleratordisableindex potentially faq cvortexjl return floats underlying code floats gpu manufactures cripple double precision speed consumerlevel gpus include doubleprecision capability required opencl spec discretisation vortex particles vortex filaments lead error single precision computing cost using single precision negligible whilst compatabilityperformance benifits huge program hanging implementation opencl drivers supposedly dodgy especially gpus cvortexjl available macos architecture cvortex theoretically compatable macos cpu architecture targetet msvc gcc clang multithreading openmp available gpu acceleration implementation opencl profile available cvortex compiled architectures mac lack hardware compile test binaries sufficiently keen bean compile cvortex source copy shared library cvortexjl build directory faster cvortex faster complicate interface code tailored particular hardware using cvortex time run using cvortex calls underlying cvortex library initialisation function compile opencl kernels programs cvortex using igpugpu thats potentially questions numberofaccelerators returns expected devices probably suitable gpu acceleration multiplemultiple accelerated sufficient target source objects expected complicated opencl kernels sucessfully compiled encountered opencl icd loader device opencl runtime library drivers properly installed additionally windows driver installers liable overwrite files installed driver installers re running virtual machine check gpu passed hypervisor cap