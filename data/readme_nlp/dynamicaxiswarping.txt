dynamicaxiswarpingjl dynamic time warping dtw matrix profile related algorithms julia dynamic time warping method compare measure distance signals contrary euclidean distance signals operates wise dtw compares signals warping time produce closest match constraint warping monotonic underneath hood dtw solves mathcal dynamicprogramming computationally expensive implemented naively package attempts providing fairly optimized implementation supports tricks reduce computational complexity limiting maximum allowed warping radius etc effectively reducing complexity mathcalnr radius dtw require signals comparison length widely applicable measure dissimilarity package supports arbitrary metrics arbitrary spaces passing vector dimensional array distance operate re time considered dimension package registered installed using pkg pkg add dynamicaxiswarping simple usage inputs dimension larger treated sequences time dimension using dimensional series provided distance accepts distance implementing distancesjl interface functions form dist using dynamicaxiswarping distances plots cost i i dtw dist sqeuclidean transportcost cost i i fastdtw dist radius note cost dtwcost dist radius optimized method returns cost supports stopping docstring completely allocation free dtw supports arbitrary upper lower bound vectors constraining warping path iminimax radiuslimits plot imin imax dtw dist imin imax cost equivalent dtwcost dist distancesjl interface supported dtw radius plotting dtwplot dist sqeuclidean transportcost matchplot dist sqeuclidean matchplot dist sqeuclidean example using dynamicaxiswarping plots fs range stop step fs y sin pi y sin pi yy randn yy randn f plot f dtwplot lc green lw f matchplot ds separation plot fff legend false layout grid false example dimension timeseries simple example using dynamicaxiswarping plots distances create signals fs collect range stop step fs create template query signal tq sin pi cos pi randn create similar signal sin pi cos pi randn lastpeak findlast isapprox maximum atol ty lastpeak lastpeak plot signals kws linewidth zlabel index xlabel signal comp ylabel signal comp xticks yticks asepctratio legend cs cq themepalette auto colors colors orig plot eachcol size cq label query kws plot eachcol size cs label similar signal kws warp d time signals visualize cost i i dtw sqeuclidean transportcost kws kws legend warped plot eachcol i length i cq label query kws plot eachcol i length i cs label signal kws linewidth plot orig warped visualizing matched signal kws kws legend ds separation xlabel signal comp ylabel signal comp mp matchplot kws signal index axis mp matchplot showindex true zlabel warped signal index kws plot mp mp short pattern time series function dtwnn searches pattern time series default normalize data window pass znormalizer fifth argument using dynamicaxiswarping distances radius sin randn sin randn res dtwnn sqeuclidean radius saveall false bsfmultiplier takes s dynamicaxiswarpingdtwsearchresult pruneend pruneenv plot eachindex res loc saveall causes entire distance profile computed time compute stored resdists bsfmultiplier require lower bound exceed bsfmultiplierbestsofar allows nearby compute entire distance profile available normalizers znormalizer diagonalznormalizer normnormalizer multithreaded search example series searched occurance query multithreaded fashion using tmap threadtoolsjl example create unique workspace object thread save allocations using threadtools const workspaces map threads nthreads dtwworkspace dist radius time results tmap dtwnn workspacesthreads threadid showprogress false mincost minind findmin results special method vectordtwsearchresult optimizations following optimizations implemented endpoint lower bound pruning envelope lower bound pruning dtw termination online normalization znormalizer sorting query series algorithms operate arbitrary precision pass float instead float twice fast dtwnn fairly performant benchmark performed laptop sin f f randn float sin f f randn float btime dtwnn sqeuclidean znormalizer pruneendpoints true pruneenvelope true ms allocations mib differentiable softdtw softdtw algorithm provided function softdtwcost sqeuclidean transportcost smoothing parameters value makes distance closer standard dtw distance differentiate argument try using reversediff da reversediff gradient softdtwcost zygotejl due arraymutation limitation function softdtwcostmatrix following example illustrates calculate barycenter generalized average using soft dtw optimjl result shown instances input series generalized dtw gdtw function implements algorithm optimization framework dynamic time warping takes continuoustime signals interval warps means warping functions s signals warped symmetrically default signal warped method allows regularization imposing penalties cumulative warping instantaneous warping using linearalgebra ts range stop length linearinterpolation sin ts randn linearinterpolation sin ts norm ts ts cost gdtw norm ts ts clustering barycenter averaging barycenter dba vectorofarrays result dbaclust data nclust dtw note dba produce barycenters softdtwcost softdtw differentiable loss function timeseries spatiotemporal alignments optimal transport space time method produces barycenters expense computational cost sparse distance matrix termination stopping heuristics efficiently calculate sparse distance matrix nearest neighbors caluclated stored function dists inds sparsedistmat vectorvector dist radius matrix profile package defines specialized methods matrixprofile matrixprofile stopping accelerate computation matrix profile interface profile matrixprofile dtw radius transportcost transportcost transportcost adds additional penalty multiplier transporting deviations euclidean matching standard dtw distance consider added cost default value multiplies cost moving horizontally vertically coupling matrix promoting diagonal move corresponding standard euclidean matching influence transport cost visualized sin sin randn dtwplot transportcost default dtwplot transportcost diagonal dtwplot transportcost completely diagonal try transportcost preferable weird alignments sense keyword argument postprocess allows pass function dmodified filterpostprocess cost matrix lowpass filtering effectively remove scale warping combine optimal transport distance datapoints distance supporting distancesjl interface file frequencywarpingjl notebook example combining dynamic time warping optimal transport frequency axis spectrograms example makes spectraldistancesjl distancesjl interface dtw radius radius dist sqeuclidean fastdtw softdtw signal alignment signalalignmentjl package align sync signals signals sample rates acknowledgements package fork maintained special thanks joseph fowler joefowler contributed substantial portion initial code timewarpjl