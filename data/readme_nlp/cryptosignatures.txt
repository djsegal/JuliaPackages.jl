cryptosignaturesjl cryptosignaturesjl aims versatile cryptographic signature library julia currently supports digital signature algorithm available elliptic curves x specification implementation modular prime coming shortly ecdsa step select curve cryptographic signature elliptic curve digital signature algorithm ecdsa curves x specification available cryptogroupsspecs module instance elliptic prime bit length prime modulus secpr instantiated using cryptosignatures import cryptogroups curve cryptogroups curve secpr ctx ecdsacontext curve sha ctx stores relevant parameters verify signatures argument specifies hash function name forwarded nettle hashing externally avoid hashing twice passed argument ecdsacontextcurvep signature pick key calculate corresponding public key privatekey cryptosignatures generatekey ctx publickey cryptosignatures publickey ctx privatekey mode uncompressed publickey stored octet uncompressed notation available uncompressed compressed hybrid modes note compressed mode binary curves limited decompression implemented message abc sign private key signature cryptosignatures sign ctx vector uint privatekey note signature issued value derived deterministically pseudorandom generator seed contains message private key global seed cryptosignaturesseed computed module loaded signature relative generator passing argument message signctx message generator privatekey message verified verify method using public key issued signature cryptosignatures verify ctx vector uint publickey signature true returning true message issued owner publickey signature issued relative generator verified verifyctx message generator publickey dsa ordinary dsa modular arithmetics instantiate dsacontext select prime modulus generator cryptogroups generate parameters creating dsacontext using cryptosignatures import cryptogroups specs generatepq generateg modp generateqp bits example generateg modp ctx dsacontext sha ecdsa context generate private key public key privatekey cryptosignatures generatekey ctx publickey cryptosignatures publickey ctx privatekey sign verify messages abc signature cryptosignatures sign ctx vector uint privatekey verify ctx vector uint publickey signature true security considerations underlying implementation constant time operations vulnerable channel attacks adversary measure time takes signatures concern implementation slow times art implementations quickly bottleneck attractive avenue adversaries performing ddos attacks essential tests available signature algorithm practice attack vectors fool improperly implemented verify function tested detail nutshell projects shy responsibility including library security audit performance addressed wrapping openssl libcrypto library operations elliptic curves rsa signatures add blind signature algorithm