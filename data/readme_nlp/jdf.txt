jdfjl jdf dataframe serialization format following goals fast save load times compressed storage disk enable diskbased data manipulation achieved supports machine learning workloads minibatch sampling achieved jdfjl julia pacakge related jdf jdf stores dataframe folder column stored separate file metadatajls file stores metadata original dataframe collectively column files metadata file folder called jdf file jdfjl purejulia solution lot nifty compression encapsulating underlying struture arrays hard python python numpy arrays objects vector types jdf julia data types please note major version jdf contain breaking changes worry committed providing automatic upgrade path means safely jdfjl save data worry impending breaking change breaking jdf files example quick start using rdatasets jdf dataframes dataset datasets iris dataframe row sepallength sepalwidth petallength petalwidth species float float float float cat setosa setosa saving loading data default jdf loads saves dataframe using multiple threads starting julia julia saves loads using thread time jdffile jdf save irisjdf time a dataframe jdf load irisjdf allocations mib compilation tim allocations mib compilation ti dataframe row sepallength sepalwidth petallength petalwidth species float float float float cat setosa setosa setosa setosa setosa setosa setosa setosa virginica virginica virginica virginica virginica virginica virginica rows omitted simple checks correctness names a names true skipmissing a name array name name names a true true loading columns load columns dataset specifying cols column column example aselected dataframe jdf load irisjdf cols species sepallength petalwidth dataframe row sepallength petalwidth species float float cat setosa setosa setosa setosa setosa setosa setosa setosa virginica virginica virginica virginica virginica virginica virginica rows omitted difference loading datasets subsetting columns saves time selected columns loaded disk dataframe convenience syntaxfunctions advatnage convenience functions create variable type jdffile jdf file disk example jdf pathjdfjdf jdffilestringpathjdfjdf pathtojdf pathjdfjdf jdffile pathtojdf jdffilestringpathjdfjdf using dfcolsymbol syntax load arbitrary col using dfcol syntax operations optimized hence efficient afile jdffile irisjdf afile species load species column element categoricalarrayscategoricalarraystringuint setosa setosa setosa setosa setosa setosa setosa setosa setosa setosa virginica virginica virginica virginica virginica virginica virginica virginica virginica jdffile tablejl colummaccessible using tables ajdf jdffile irisjdf tables columnaccess ajdf true tables columns ajdf jdffilestringirisjdf tables schema ajdf tablesschema sepallength float sepalwidth float petallength float petalwidth float species categoricalvector alias categoricalarrayscategoricalar ray getproperty tables columns ajdf species element categoricalarrayscategoricalarraystringuint setosa setosa setosa setosa setosa setosa setosa setosa setosa setosa virginica virginica virginica virginica virginica virginica virginica virginica virginica load column disk load column jdf file disk using iterations jdffile jdf irisjdf col eachcol jdffile col col content column irisjdf iterate columns names col jdffile jdf irisjdf name col zip names jdffile eachcol jdffile namesymbol name column col content column irisjdf metadata names size disk obtain column names columns ncol jdf example using jdf dataframes df dataframe jdf save df plsdeljdf names jdf plsdeljdf clean rm plsdeljdf force true recursive true additional functionality memory dataframe compression dataframe sizes control gb csv file easily gb ram function typecompressdf compress dfdataframe typecompress df dataframe row int int function looks int columns safely downgraded int type bits size convert float float compressfloat true typecompress df compressfloat true dataframe row int int string compression planned employ categorical encoding combined rle encoding benchmarks benchmarks using fannie mae mortgage data please note reading zero means method failed read write jdf decent performer read write achieve comparable performance fst compiled jdf format results file size vs featherjl particular example probably due featherjl inefficient storage unionstring missing please note benchmarks obtained julia earlier versions julia multithreading available jdf roughly x slower shown benchmarks supported data types believe restricting types jdf supports vital simplicity maintainability support weakrefstringsstringvector vector vectorunionmising vectorunion categoricalarrayscategoricalvetors pooledarrayspooledvector string bool symbol char substringstring timezoneszoneddatetime experimental isbits types uint int float date types etc rlevectors support considered future missing support arrives rlevectorsjl resources bkamins excellent dataframesjl tutorial contains section using jdfjl jdf saving jdf vector blosc compressed using default settings includes unionsmissing types isbits string vectors converted run length encoding rle representation lengths component rle blosc compressed development plans intend develop jdfjl language neutral format version v oss commitments including diskframe hence features slow onboard committed jdf files created using jdfjl v loadable future jdfjl versions notes parallel read write support available julia design jdf inspired fst terms using compressions allowing randomaccess column