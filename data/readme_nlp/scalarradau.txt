scalarradau modul implement radau iia method scalar ordinari differenti equat ode julia algorithm famous effect stiff ode implement follow descript chapter solv ordinari differenti equat ernst hairer gerhard wanner coupl chang found benefici scalar equat step size adapt initi step size chosen automat function implement expect float dens output continu solut implement use cubic hermit interpol approxim jacobian evalu perform finit differ equat scalar method stage jacobian matrix static array effici newton iter implement use scenario stiff scalar ode solv repeat condit exampl solv stiff ode rang initi condit set system paramet solver function special direct ode provid fast slight differentialequ step system defin ode function solv function solv stiff system ode instead scalar equat look nice overview radau method util check stiff differenti equat solv radau method quick start instal use julia packag manag julia add scalarradau solv ode defin function pass radau function use scalarradau param radau snippet solv equat start return space solut interv solut control output function radau yout xout param rtol atol facmax facmin maxnwt maxstp mandatori function argument yout vector output written xout sort vector valu output sampl scalar ode form param initi valu start integr option param argument default type meant scenario extra inform access ode function pass ode function whenev evalu coordin output xout ascend check integr integr check perform integr isn backward keyword argument rtol relat error toler atol absolut error toler facmax maximum fraction step size increas compar previous step facmin minimum fraction step size decreas compar previous step kappa stop toler newton iter epsilon fraction current step size finit differ jacobian approxim maxnwt maximum newton iter step size reduct maxstp maximum step solver stop throw error function avail output option conveni version intern space output space output exampl function definit radau nout param kwarg specifi output nout argument keyword argument default valu solut vector return output comput valu integr interv function radau param kwarg keyword argument default valu ident function