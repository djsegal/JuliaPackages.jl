staticoptim package implements scalar multivariate optimization routines optimized low dimensional cheap function calls univariate rootfinding routines modified newton method bisection method functions except bisection forwarddiff compute derivatives allocate input function thanks stack allocated gradient hessian methods staticarrays forwarddiff optimization newton method quadratic cubic backtracking linesearch inspired linesearchesjl rootfinding initial guess using modified newton method robust fast tried rootfinding bracket tuple bisection example julia using staticarrays benchmarktools staticoptim julia sx svector ones element sarraytuplefloat julia sx sx element sarraytuplefloat julia rosenbrock rosenbrock generic function method julia btime soptimizerosenbrock sx s allocations kib results static optimization algorithm initial guess minimizer minimum e ee hf size iterations function calls gradient calls converged true julia btime soptimizerosenbrock sx bto staticoptimorder s allocations kib results static optimization algorithm initial guess minimizer minimum e ee hf size iterations function calls gradient calls converged true julia rosenbrock rosenbrock generic function method julia res soptimizerosenbrock sx results static optimization algorithm initial guess minimizer minimum e ee hf size iterations function calls gradient calls converged true julia btime soptimizerosenbrock sx s allocations kib results static optimization algorithm initial guess minimizer minimum e ee hf size iterations function calls gradient calls converged true julia btime soptimizerosenbrock resminimizer ns allocations bytes results static optimization algorithm initial guess minimizer minimum e ee hf size iterations function calls gradient calls converged true example univariate derivative based optimization staticarrays julia using staticoptim benchmarktools julia function max log generic function method julia generic function method julia btime soptimize ns allocation bytes results static optimization algorithm initial guess minimizer minimum e hf size iterations function calls gradient calls converged true julia using optim julia btime optimize maybe idea ns allocations bytes results optimization algorithm algorithm brent method search interval minimizer e minimum e iterations convergence max xupper xlower ee true objective function calls julia btime soptimize converges fast guess close ns allocation bytes results static optimization algorithm initial guess minimizer minimum e hf size iterations function calls gradient calls converged true example st rootfinding julia inf generic function method julia up generic function method julia btime sroot ns allocation bytes fx e isroot true iter julia btime sroot ns allocations bytes fx e isroot true iter ismaxiter false example linear equation solving julia using staticarrays benchmarktools staticoptim julia const julia const beta julia const julia const alphah julia uc uc generic function method julia uh alphah uh generic function method julia function eulerfun h h c h c h h h return inf c return inf out ucc betaucc out ucc uhh out ucc uhh svectorout out out eulerfun generic function method julia svector element sarraytuplefloat julia btime srooteulerfun s allocations kib results static optimization algorithm initial guess minimizer minimum e eee hf size iterations function calls gradient calls converged true example constrained optimization julia function h h h return infh h return infh h h return infh log log h log h generic function method julia svector element sarraytuplefloat julia sx svector element sarraytuplefloat julia res constrainedsoptimize sx lower results static optimization algorithm initial guess minimizer minimum e hf size iterations function calls gradient calls converged tru