staticoptim packag implement scalar multivari optim routin optim low dimension cheap function call univari root find routin modifi newton method bisect method function except bisect forwarddiff comput deriv alloc input function thank stack alloc gradient hessian method staticarray forwarddiff optim newton method quadrat cubic backtrack linesearch inspir linesearch root find initi guess use modifi newton method robust fast tri root find bracket tupl bisect exampl julia use staticarray benchmarktool staticoptim julia svector one element sarray tupl float julia element sarray tupl float julia rosenbrock rosenbrock generic function method julia btime soptim rosenbrock alloc kib result static optim algorithm initi guess minim minimum size iter function call gradient call converg true julia btime soptim rosenbrock bto staticoptim alloc kib result static optim algorithm initi guess minim minimum size iter function call gradient call converg true julia rosenbrock rosenbrock generic function method julia res soptim rosenbrock result static optim algorithm initi guess minim minimum size iter function call gradient call converg true julia btime soptim rosenbrock alloc kib result static optim algorithm initi guess minim minimum size iter function call gradient call converg true julia btime soptim rosenbrock res minim alloc byte result static optim algorithm initi guess minim minimum size iter function call gradient call converg true exampl univari deriv base optim staticarray julia use staticoptim benchmarktool julia function max log generic function method julia generic function method julia btime soptim alloc byte result static optim algorithm initi guess minim minimum size iter function call gradient call converg true julia use optim julia btime optim mayb idea alloc byte result optim algorithm algorithm brent method search interv minim minimum iter converg max upper lower true object function call julia btime soptim converg fast guess close alloc byte result static optim algorithm initi guess minim minimum size iter function call gradient call converg true exampl root find julia inf generic function method julia generic function method julia btime sroot alloc byte isroot true iter julia btime sroot alloc byte isroot true iter ismaxit fals exampl linear equat solv julia use staticarray benchmarktool staticoptim julia const julia const beta julia const julia const alpha julia generic function method julia alpha generic function method julia function eulerfun return inf return inf beta svector eulerfun generic function method julia svector element sarray tupl float julia btime sroot eulerfun alloc kib result static optim algorithm initi guess minim minimum size iter function call gradient call converg true exampl constrain optim julia function return inf return inf return inf log log log generic function method julia svector element sarray tupl float julia svector element sarray tupl float julia res constrain soptim lower result static optim algorithm initi guess minim minimum size iter function call gradient call converg true