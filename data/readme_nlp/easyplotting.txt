easyplottingjl graphicalstatistical plotting gui package quick data visualisation exploration coding required gui serves ease process producing quality plots normally produced coding gui takes care coding involved background input data select relevant options produce plots clicks preview main page gui kindly note gui designed primarily quick data exploratory purposes providing basic fundamental user customisation options welcome include plots publications deemed satisfactory contribute please feel free submit pull request issues please feel free issue particular plotting types custom options requested added please issue format data dataset accordance appropriate formats corresponding plot type click relevant links formats relevant sample figures plots look note data generate figures randomly generated appear typical plot resembling based real dataset bar chart format dataset sample figure box whisker format dataset sample figure heatmap format dataset sample figure histogram format dataset sample figure line graph format dataset sample figure pie chart format dataset sample figure scatterplot d format dataset sample figure scatterplot d format dataset sample figure stripplot format dataset sample figure violinplot format dataset sample figure files type xlsxcsvtxttabdelimited extensions supported windows macos usage linux users download install julia julia app copy paste prompt using pkg haskeypkginstalled easyplotting false pkgaddplotlyjs orca imagemagick easyplotting reinstalling dependencies manually due detection pkgs installed manifesttoml path using easyplotting retryeasyplottingeasymainfunction delaysexponentialbackoff firstdelay maxdelay retry function ioerror launching blink press enter time using package min installation process kindly note pressing plot button time error kindly ignore error message try time installed easyplottingjl package prefer launch gui copying pasting instead julia prompt using easyplotting retryeasyplottingeasymainfunction delaysexponentialbackoff firstdelay maxdelay updating easyplottingjl regular updates easyplottingjl package easyplotting installed system simply copy paste using pkg pkgupdateeasyplotting pkgbuildeasyplotting fetches updates local system simply package normal linux usage complete instructions installing julia setting easyplottingjl package julia running arch linux using wayland display server protocol please adapt instructions according specific linux distribution setup detailed explanations instructions reference complete installation instructions srgkarchlinux wget download julia home folder srgkarchlinux tar xvzf julialinuxxtargz rm julialinuxxtargz extract julia remove tarball srgkarchlinux sudo ln homejuliabinjulia usrlocalbinjulia create symbolic link julia binary folder system path srgkarchlinux sudo sh echo export qtqpaplatformwayland etcenvironment source etcenvironment pacman gtk pythonpip pip install seaborn combining commands require root privileges srgkarchlinux echo backend tkagg homeconfigmatplotlibmatplotlibrc set tkagg matplotlib plotting backend srgkarchlinux julia enter interactive julia repl session julia using pkg haskeypkginstalled easyplotting false pkgaddplotlyjs orca imagemagick easyplotting reinstalling dependencies manually due detection pkgs installed manifesttoml path using easyplotting retryeasyplottingeasymainfunction delaysexponentialbackoff firstdelay maxdelay retry function ioerror launching blink kindly note pressing plot button time error kindly ignore error message try time detailed explanations stepstep linux users please refrain installing julia respective package managers julia compiled source using package manager produces build error arpack dependency building easyplottingjl package affects downstream processes instead install generic linux binaries x official package create symbolic link downloaded julia binary inside usrlocalbin folder assuming extracted tarballs home folder home copy paste terminal sudo ln homejuliabinjulia usrlocalbinjulia replace julia respective folder name click information using wayland display server protocol output echo xdgsessiontype bash shell tell wayland x set qt plotting backend environment wayland type bash shell switch qt plotting platform wayland systemwide sudo sh echo export qtqpaplatformwayland etcenvironment source etcenvironment configure user level echo export qtqpaplatformwayland bashprofile source bashprofile installed gtk package installed system respective package manager arch linux based distributions sudo pacman gtk debian based distributions sudo apt install libgtkdev fedora yum based package managers sudo dnf install gtk rhelcentos yumbased package managers sudo yum install gtk python seaborn package tkagg matplotlib backend installed firstly installed install pip python package manager tkagg backend using package manager arch linux based distributions sudo pacman pythonpip debian based distributions sudo apt install pythontk pythonpip fedorarhelcentos based distributions sudo dnf install pythontkinter pythonpip install seaborn sudo pip install seaborn install systemwide python pip install user seaborn install user level set tkagg default matplotlib plotting backend echo backend tkagg homeconfigmatplotlibmatplotlibrc run julia simply typing julia terminal copy paste code install launch easyplotting julia repl prompt terminal using pkg haskeypkginstalled easyplotting false pkgaddplotlyjs orca imagemagick easyplotting reinstalling dependencies manually due detection pkgs installed manifesttoml path using easyplotting retryeasyplottingeasymainfunction delaysexponentialbackoff firstdelay maxdelay retry function ioerror launching blink kindly note pressing plot button time error kindly ignore error message try time installed easyplottingjl package prefer launch gui copying pasting instead julia prompt using easyplotting retryeasyplottingeasymainfunction delaysexponentialbackoff firstdelay maxdelay updating easyplottingjl regular updates easyplottingjl package easyplotting installed system simply copy paste using pkg pkgupdateeasyplotting pkgbuildeasyplotting fetches updates local system simply package normal advanced users docker docker image repo name srgkeasyplotting easyplottingjl release provided credits credits developers julia language libraries special thanks dustin irwin script stackoverflow helped greatly main structure cod