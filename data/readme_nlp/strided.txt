stridedjl strided array views efficient cachefriendly multithreaded manipulations build status coverage quality assurance downloads julia package efficiently strided arrays dense arrays memory layout fixed stride dimension stridedjl assumptions strides stride dimension monotonically increasing strides provides multithreaded cache friendly implementations mapping reducing broadcasting arrays taking views reshaping permuting dimensions simply accessible annotating block standard julia code involving broadcasting array operations macro strided currently stridedjl supports arrays main memory provide implementations arrays gpus hardware accelerators stridedjl v reduces complexity implementation discards unsafestridedview type pointer based required avoid allocations prior julia v associated unsafestrided macro deprecated main structured type stridedview representing strided view contiguous array densearray defined separate package stridedviewsjl definition device agnostic combination dense gpu arrays moment methods implemented stridedjl restricted strided views array data examples running julia single thread julia using strided julia using benchmarktools julia randn julia similar julia btime ms allocations bytes julia btime strided ms allocations bytes julia randn julia similar julia btime ms allocations bytes julia btime strided ms allocations bytes julia btime exp sin ms allocations bytes julia btime strided exp sin ms allocations bytes julia randn julia similar julia btime permutedims ms allocations bytes julia btime strided permutedims ms allocations bytes julia btime permutedims permutedims permutedims permutedims ms allocations mib julia btime strided permutedims permutedims permutedims permutedims ms allocations bytes export julianumthreads julia using strided julia using benchmarktools julia randn julia similar julia btime ms allocations bytes julia btime strided ms allocations bytes julia randn julia similar julia btime ms allocations bytes julia btime strided s allocations bytes julia btime exp sin ms allocations bytes julia btime strided exp sin ms allocations kib julia randn julia similar julia btime permutedims ms allocations bytes julia btime strided permutedims ms allocations bytes julia btime permutedims permutedims permutedims permutedims ms allocations mib julia btime strided permutedims permutedims permutedims permutedims ms allocations kib design principles stridedview stridedjl centered type stridedview provides view parent array type densearray resulting view strided definition type set methods create stridedview instances transform eachother implemented stridedviewsjl package device agnostic actually operators data nontrivial manner broadcasting mapreduce whenever expression contains stridedview array objects scalars overloaded methods broadcasting functions map mapreduce exploit strided structure evaluate result efficient sufficiently arrays overhead extra preparatory negligible particular involves choosing blocking strategy loop aims avoid cache misses matters particular stridedview involved strides monotonously increasing transpose adjoint permutedims applied latter acts lazily whereas creates copy data julia base potentially provide speedup strided macro annotation manually wrapping array stridedview macro annotation strided someexpression wrap densearray appearing someexpression stridedview note stridedview behave lazily indexing ranges acts similar views macro julia base view macro strided acts contract user ensures array manipulations following expressions preserve strided structure reshape view replaced sreshape sview respectively mentioned sreshape throw error requested shape incompatible preserving strided structure function sview defined index arguments ranges int colon throw error indexed else multithreading support optimized methods stridedjl implemented support multithreading threadsnthreads arrays involved sufficiently performance boosted plain arrays strictly sequential memory layout provided broadcast operation compute bound memory bound broadcast function sufficienlty complex stridedjl spawn threading infrastructure tasks spawned customizable via function stridedsetnumthreads integer threading basethreadsnthreads allows spend julia threads multithreading strided spawn additional tasks default basethreadsnthreads threading enabled default convenience functions stridedenablethreads stridedsetnumthreadsthreadsnthreads strideddisablethreads stridedsetnumthreads furthermore experimental feature disabled default apply multithreading matrix multiplication using divideconquer strategy enabled via stridedenablethreadedmul similarly strideddisablethreadedmul revert default setting matrices linearalgebrablasfloat element type float float complexf complexf typically blas multithreaded default beneficial implement multithreading using julia tasks run julia threads distributed julia scheduler hence feature combination linearalgebrablassetnumthreads performance par percent margin threading strategies openblas mkl note latter call disables multithreading lapack eigen svd qr stridedjl help stridedview versus stridedarray blaslapack compatibility stridedarray union type denote arrays strided structure julia base definition type union abstract type impossible user types recognized stridedarray unfortunate dispatching blas lapack routines based stridedarray consequence stridedview fall blas lapack default currently matrix multiplication overloaded fall blas gemm attempt matrix factorizations lapack operations strided context support todo list blas inspired methods axpy axpby scalar multiplication via mul rmul lmul overloaded relying optimized generic map implementation stridedview currently created certainty densearray typically array julia base basesubarray basereshapedarray instances stridedview constructor act underlying parent array try mimic corresponding view reshape operation using sview sreshape limited base counterparts guarantee result strided memory layout respect dimensions error result approach succeed creating stridedview wrappers combinations view reshape recognised basestridedarray example reshapeviewrandn basestridedarrray indeed statically inferred strided knowing argument types provided view reshape example similarly looking reshapeviewrandn strided stridedview constructor try act yield runtime error note basereinterpretarray currently supported note unlike stridedarray stridedview behave lazily produce view parent array permutedims regular indexing ranges planned features wish list support gpuarray dedicated gpu kernel