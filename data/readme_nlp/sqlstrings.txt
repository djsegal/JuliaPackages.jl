sqlstrings sqlstringsjl provides sqlcmd macro allow sql query strings constructed normallooking string interpolation risking sql formatting errors sql injection attacks application example code query insert students values name age class runquery connection query vulerable canonical sql injection attack safe using sqlstringsjl query sql insert students values name age class runquery connection query addition code safe allows julia types interpolated parameters preserved passed database driver library marshal correctly types understands provides control using string interpolation human readability data transfer simple usage database backend amount integration code examples libpqjl runquery function hopefully integration automatic future using sqlstrings import libpq function runquery conn sql sqlstringssql query args sqlstrings prepare sql libpq execute conn query args creating table inserting values conn libpq connection yourconnectionstring runquery conn sql create table foo email text userid integer emailid adminexamplecom fooexamplecom runquery conn sql insert foo values email id thence julia runquery conn sql select foo dataframe dataframe row email userid string int admin example com foo example com howtos inserting values julia collection row circumstances useful splatting syntax interpolate julia collection commaseparated list values simple scalar parameters preferred simplicity splatting useful occasion emailandid barexamplecom runquery conn sql insert foo values emailandid using operator julia collection using splatting syntax julia ids runquery conn sql select foo userid ids dataframe dataframe row email userid string int admin example com foo example com using sql operator simply passing single sql array parameter julia ids runquery conn sql select foo userid ids dataframe dataframe row email userid string int admin example com foo example com building query fragments occasion dynamically build complicated query fragments sql source text result sqlcmd interpolated larger query follows conn libpq connection yourconnectionstring somecondition true example optional clauses empty sql disable andclause somecondition sql sql interpolation values produces sql parameters interpolating sql fragments adds query sql select table andclause runquery conn word warning constructing sql logic julialevel logic code hard understand worth considering writing larger sql query logic sql design sqlstrings minimal approach integrating sql julia code safe understands basic rules sql quoting julia string interpolation parsing source text allows tight integration database choice unopinionated source language sql language extensions chosen backticks sqlcmd normal string macro syntax highlighting interpolations editors typically disable normal string macros sqlcmd conceptually similar builtin backticks basecmd lightweight layer deals preserving structure tokens source text