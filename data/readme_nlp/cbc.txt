cbcjl cbcjl wrapper coin branch cut cbc solver wrapper components thin wrapper complete api interface mathoptinterface affiliation wrapper maintained jump community coin project license cbcjl licensed mit license underlying solver coincbc licensed eclipse public license installation install cbc using pkgadd import pkg pkg add cbc addition installing cbcjl package download install cbc binaries install cbc separately custom binary read custom solver binaries section jump documentation jump cbc jump cbcoptimizer using jump cbc model model cbc optimizer setattribute model loglevel mathoptinterface api coin branchcut cbc optimizer supports following constraints attributes list supported objective functions moiobjectivefunctionmoiscalaraffinefunctionfloat list supported variable types moireals list supported constraint types moiscalaraffinefunctionfloat moiequaltofloat moiscalaraffinefunctionfloat moigreaterthanfloat moiscalaraffinefunctionfloat moiintervalfloat moiscalaraffinefunctionfloat moilessthanfloat moivariableindex moiequaltofloat moivariableindex moigreaterthanfloat moivariableindex moiinteger moivariableindex moiintervalfloat moivariableindex moilessthanfloat moivariableindex moizeroone moivectorofvariables moisosfloat moivectorofvariables moisosfloat list supported model attributes moiobjectivesense options options unfortunately documented following options useful parameter example explanation solution timeout limit loglevel set disable solution output maxsolutions terminate feasible solutions found maxnodes terminate branchbound nodes evaluated allowablegap terminate optimality gap value absolute scale ratiogap terminate optimality gap relative fraction threads set threads parallel branch bound complete list parameters found running cbc executable typing prompt start cbc executable julia follows using cbcjll cbcjll cbc exe run ex