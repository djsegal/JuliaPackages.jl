jokerjailbreak purpose package simulate play game joker jail break basic documentation using package provided rules joker jail break simple card matching game developed ramon huiskamp goal remove joker jail cell shown joker placed center matrix card piles serves jail cell corners cards piles cards joker breakout top bottom left pile depleted joker escape corners cards piles strategically cards removed selecting cards sum black sum red cards equal situations valid card selection exist card remaining deck placed joker attempt resolve impasse cards placed joker ultimately removed maximum cards placed joker time game joker free moves online version joker jail break found api minimum api requires define subtype abstractplayer corresponding decide function outline player struct player abstractplayer optional fields note fields added following code block outline decide method returns variables stop indicates player stops game indices indices selected cards function decide player player board cardcounts decksize kwargs intentionally blank return stopindices defining player subtype decide function game simulated creating instance game player passing simulate minimal example provided following section methods api optionally defined setup allows configure player starting game function setup player player board cardcounts kwargs intentionally blank return default rounds outcome game collected jokerjailbreakjl provides methods custom data collection simulation updatedataround called round updatedataend called game finished define custom data collection define custom data type mydata define methods function updatedataround game player data mydata stop kwargs return function updatedataend game player data mydata stop kwargs return example following example illustrates develop simple player step required libraries using jokerjailbreak import jokerjailbreak abstractplayer decide using statsbase using random subtype abstractplayer called player extend decide function practice fields added subtype abstractplayer example struct player abstractplayer defined subtype abstractplayer define player decision logic player select random pairs cards match found black red attemps matches found player stops game function decide return variables stop indicates player stops game indices indices selected cards function sample package statsbase sample pairs card indices replacement function decide player player board cardcounts decksize indices int cnt cnt cnt indices sample replace false board indices continue iszerosum board indices break stop cnt false true cnt empty indices return stopindices steop simulate game simulate default data object round count outcome indicator win notwinnable returned custom data type passed game game player player simulate game player question answer strategy solve game wrap code block function function wrapper kwargs game game player player return simulate game player kwargs set seed random generator repeat simulation times random seed data map wrapper mean outcome win data expected win probability low