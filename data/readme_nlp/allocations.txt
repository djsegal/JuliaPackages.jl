allocationsjl allocations package deals fair allocation indivisible items set agents background topic wikipedia entry fair item allocation surveys amanatidis et al suksompong unconstrained constrained versions respectively installation install package simply import julia repl julia using allocations press enter resulting prompt install package dependencies install recent version released package manager directly julia repl press enter pkg repl add package directly source pkg add https github com mlhetland allocations jl import module basic specify allocation instance create valuation profile julia profile additivematrixint agents items profile abstract class profilematrix alias additive valuation profile allocation function ones called alloc finding maximum nash welfare mnw allocation julia res allocmnw note time call allocation function time finish lot compilation scenes repl session overhead functions profile input return named tuple field alloc referring allocation julia res alloc allocation agents items bundles agent available bundle function julia bundle setint elements bundles modified directly allocation maintains inverse mapping items agents deny functions allocation functions produce results properties allocation naturally computed allocation process mnw objective value nash welfare maximized available mnw julia res mnw allocation functions permit matrix argument shortcut implicitly creating additive example maximin share mms allocation follows julia allocmms alloc allocation agents items solver configuration allocation functions mixedinteger linear programming via jump depending choice mip solver solving moderatelysized instances significant amount time choosing solver default highsoptimizer speed considerably example appropriate license gurobi follows allocations conf mipsolver gurobi optimizer supply optimizer optimizer factories constructed using optimizerwithattributes solver keyword argument relevant allocation functions normally mip solvers print lot information re output using solverspecific flag supplied optimizerwithattributes supply parameters indicating time limits acceptable inaccuracies etc example allocations conf mipsolver optimizerwithattributes gurobi optimizer logtoconsole console output timelimit finish mipgap permit suboptimality re unable rid output using solver parameters simple solution silence output allocating julia redirectstdout devnull allocmnw trick add redirectstderr footnotes re student researcher gurobi available free academic license jumpsetsilent function requires access mip model gurobi manual explan