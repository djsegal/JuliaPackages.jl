replmak idea replmak tool build domain specif languag julia suppos invent languag call mylang implement parser mylang code julia code suppos execut julia runtim replmak simpli hook parser packag replmak creat repl mode user type mylang code execut automat hope use implement languag dsl julia syntax support julia parser doesn deal headach repl mode download replmak simpli pkg add replmak exampl exampl expr mode suppos simpl repl mode take whatev input provid return quot expr form pars function julia use replmak julia function pars expr quot meta pars test parser generic function method simpli provid parser initrepl function julia initrepl pars expr prompt text expr prompt color blue start key mode name expr mode repl mode expr mode initi press enter backspac exit instruct simpli press key julia prompt replac expr desir enter julia code shown quot version expr expr notic tri multilin express repl mode crap expr function expr incomplet incomplet prematur input haven told repl mode constitu valid complet line replmak export function complet julia tell express complet julia express use replmak dsl pars semant julia roll analog function multi line input complet julia check express complet pass keyword argument initrepl julia initrepl pars expr prompt text expr prompt color blue start key mode name expr mode valid input checker complet julia warn repl key overwritten replmak julia packag replmak pwo src replmak repl mode expr mode initi press enter backspac exit expr function function none exampl revers mode exampl use custom repl mode chang mean input code instead result shown suppos function base print vector tupl backward backward println backward union vector tupl revers println quick dirti repl mode base direct julia initrepl meta pars function backward prompt text revers julia start key mode name revers mode repl mode revers mode initi press enter backspac exit revers julia element array int print revers check variabl julia element array int exampl mode perform reason julia default bit precis sometim don care speed don juggl limit bit precis head start wrap code sound repl abl fortun use replmak function pars str meta pars replac str julia initrepl pars prompt text bigjulia prompt color red start key mode name mode repl mode mode initi press enter backspac exit press repl enter mode bigjulia factori bigjulia factori bigjulia factori exampl lisp mode packag lispsyntax provid string macro pars lisp style code julia code evalu essenti creat lispi languag embed julia julia lisp defn fib fib fib fib generic function method julia lisp fib awesom feel languag nice special repl mode helper function valid sexpr tell replmak press return write input write multi line express use lispsyntax replmak use repl repl lineedit use lispsyntax parsercombin lisp parser lispsyntax lisp eval helper function valid sexpr tri lispsyntax read string copi lineedit buffer true catch err isa err parsercombin parserexcept rethrow err fals creat repl mode use function lispsyntax lisp eval helper pars input text valid sexpr valid input checker julia initrepl lispsyntax lisp eval helper valid input checker valid sexpr prompt text prompt color red start key mode name lisp mode repl mode lisp mode initi press enter backspac exit defn fib fib fib fib generic function method fib tada creat repl mode startup time add custom repl mode whenev julia start add julia config startup code atreplinit repl tri eval use replmak async initrepl apropo prompt text search prompt color magenta start key mode name search mode catch packag use replmak abstractlog packag logic program julia jml dialect program languag famili embed julia apl implement apl julia gitcommand replmak provid git repl mode remoterepl remot share repl session user