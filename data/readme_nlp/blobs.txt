blobs blobs makes easy lay complex datastructures single memory region datastructures built using library relocatable internal pointers converted offsets entire memory region written read disk sent network pointer patching require deserialization directly readwritten copying data julianative datastructure require additional heap allocation field access pointer arithmetic field readwrite returns isbitstype type stored stack makes ideal implementing core datastructures dma coprocessors safety library protect giving incorrect length creating blob using blob freeing underlying allocation apart operations safe user error invalid data cause assertionerror boundserror segfault program modify memory outside blob usage acquire ptr julia struct foo int bool julia libc malloc sizeof foo ptr x interpret pointer isbitstype julia struct julia foo blob foo sizeof foo blobs blob foo ptr xdec blobsmallocandinit safer create fresh blob access references fields foo using fieldnames directly julia foo blobs blob int ptr xdec julia foo blobs blob bool ptr xdec derefence blobs julia foo foo true julia foo julia foo true julia foo blobs blob bool ptr xdec julia true similarly setting values julia foo foo true foo true julia foo foo true julia foo false false julia foo false julia foo blobs blob int ptr xdec julia julia julia foo various datastructures provided nested arbitrarily tests examples compatibility previous versions previous versions library macros compatibility reasons macros bypass boundcheckings safety measures normal usage blobs section introduce usage assume following foo struct julia struct foo int bool julia blobs mallocandinit foo blob foo ptr xfabe address macro obtain pointers fields struct julia blob int ptr xfabe julia blob bool ptr xfabe value macro dereference pointers julia julia false julia blob bool ptr xfabe julia false macro allows setting value pointer julia true true julia true julia blob int ptr xfabe julia julia julia datastructures nested arbitrarily compattests exampl