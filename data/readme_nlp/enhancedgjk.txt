enhancedgjk package contains purejulia implementation enhanced version gilbert johnson keerthi algorithm computing distance convex bodies algorithm described detail stephen cameron julia gjk implementations numerous tested purejulia implementation benefits languages offer implementation gjk entirely agnostic data types describe geometries positions space means example gradients distances easily computed using automatic differentiation provided forwarddiffjl dualnumber type applications geometries transformations rational variableprecision arithmetic purejulia implementation makes easy experiment data types sacrificing performance usage easiest package gjk function gjk takes geometries optionally transformation types specifying pose geometry using enhancedgjk import geometrytypes hyperrectangle hypersphere vec c hyperrectangle vec vec c hyperrectangle vec vec result gjk c c return type gjk gjkresult extract signed distance bodies julia separationdistance result separationdistance result access closest body julia result closestpointinbody element staticarrays svector float julia result closestpointinbody element staticarrays svector float faster simulating physics compute distance bodies bodies move slightly cache intermediate results distance computation faster free memory allocations using enhancedgjk import staticarrays svector import coordinatetransformations identitytransformation translation construct geometries simplex single simplex svector svector float pt svector collisioncache stores geometries remembers information gjk simplex check collisions using cache subsequent computations faster cache collisioncache simplex pt run gjk algorithm geometry transformation describe position orientation world frame result gjk cache identitytransformation identitytransformation check geometries collision result incollision geometries collision accurate distance objects computed using separationdistance result geometries collision gjk algorithm compute accurate measure penetration distance obtain distance nearest simplex gjk algorithm prove penetration underestimate penetration distance proxy value obtained using simplexpenetrationdistanceresult perturb geometries changing transformation reusing cache computation faster expecially complex geometries change transformation result gjk cache translation svector identitytransformation result incollision separationdistance result meshes gjk gjk support meshes represented geometrytypesjl homogenousmesh objects using meshio using fileio mesh load testmeshesrfootchullobj result enhancedgjk gjk mesh mesh identitytransformation translation svector separationdistance result note package check mesh convex convex meshes produce incorrect distance measurements gjk run faster complex meshes precomputing neighbors vertex mesh neighbormesh type handles neighbormesh neighbormesh mesh result gjk neighbormesh neighbormesh identitytransformation translation svector precomputation mesh vertex neighbors enhanced enhanced gjk references cameron enhancing gjk computing minimum penetration distances convex polyhedra ieee international conference robotics automation proceedings vol pp vol