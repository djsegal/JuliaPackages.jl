abbreviatedstacktracesjl goal demonstrate improvement display stack traces julia repl associated pr julialangjulia rationale julia stacktraces practical users form barrier entry annoyance maximize utility stack traces common philosophy time exception due mistake code probability exception due mistake dependency lower probability exception due mistake base probability exception due mistake compiler infinitesimal nonzero value stack frames majority time relating code written actively developing stack frames call foreign method frame validation occurs usually irrelevant composed functions internal frames call foreign function emerges code usually matter frames implementation details difference code raised question counts code sources assumed code stable julia base julia stdlibs dependencies acquired using pkg add whereas sources activated local package code defined repl dependencies acquired using pkg dev modules files matching envjuliadebug file basename module names commaseparated exclude frames originating code shown default immediate frame function code called information sufficient understand mistake mistake located rarer issue code trace retrieved err global variable options envjuliastacktraceabbreviated true enables abbreviated stack traces traces originating interactive session envjuliastacktraceminimal true omits type information lineframe minimal variant examples example stack trace chaining benchmarktools plots add abbreviatedstacktraces using abbreviatedstacktraces writes errorrelated base methods using benchmarktools plots btime plot seriestypeblah aims stack frames code control excludes default except frame package lists modules called intervening frames theory errors code errors inside base stdlibs published packages internals usually superfluous global err variable stores error original stack trace easily optional minimal display available accessed setting envjuliastacktraceminimal true example beginner readily run yikes packag