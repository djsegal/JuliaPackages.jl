nmfjl julia package negative matrix factorization nmf development status note nonnegative matrix factorization active research algorithms proposed contributions welcomed lee seung multiplicative update mse divergence objectives naive projected alternate squared als projected gradient methods coordinate descent methods random initialization nndsvd initialization sparse nmf separable nmf probabilistic nmf overview negative matrix factorization nmf refers techniques factorizing negative matrix product lower rank matrices wh optimally approximates sense techniques widely text mining image analysis recommendation systems package provides sets tools respectively initilization optimization typical nmf procedure consists steps initilization function initialize optimization algorithm pursue optimal solution types functions except level function nnmf package exported users encouraged prefix nmf allows shorter names package makes codes explicit user level interface package provides level function nnmf runs entire procedure initialization optimization nnmf function factorizes input matrix product negative matrices returns result instance type nmfresult defined struct result matrixfloat matrix matrixfloat matrix niters int elapsed iterations converged bool optimization procedure converges objvalue float objective value step function supports following keyword arguments init symbol indicates initialization method default nndsvdar argument accepts following values random matrices filled uniformly random values nndsvd standard version nndsvd nndsvda nndsvda variant nndsvdar nndsvdar variant spa successive projection algorithm custom custom matrices w h nndsvd variants optionally supply svd result via initdata initdatasvd supplied factorization computed using randomized svd rsvd randomizedlinalg alg symbol indicates factorization algorithm default greedycd argument accepts following values multmse multiplicative update using mse objective multdiv multiplicative update using divergence objective projals naive projected alternate square alspgrad alternate square using projected gradient descent cd coordinate descent solver fast hierarchical alternating squares implemetation similar scikitlearn greedycd greedy coordinate descent spa successive projection algorithm maxiter maximum iterations default tol tolerance changes convergence default e replicates times perform factorization default w option custom initialization default h option custom initialization default note w h overwritten avoid please pass copies updateh option specifying update default true verbose procedural information default false initialization nmfrandinit zerohfalse normalizefalse initialize input matrix rank function returns pair suppose size size respectively usage nmf randinit algorithms als initialized set keyword argument zeroh true output simply zero matrix size keyword argument normalize normalize set true columns normalized column sum nmfnndsvd zerohfalse variantstd negative double singular value decomposition nndsvd algorithm initialize reference boutsidis gallopoulos svd based initialization head start nonnegative matrix factorization pattern recognition usage nmf nndsvd function keyword arguments zeroh initialized set true set zeros set false variant variant algorithm default std meaning standard version generate sparse values ar respectively corresponding variants nndsvda nndsvdar particularly ar recommended dense nmf nmfspa successive projection algorithm spa initialize reference gillis vavasis fast robust recursive algorithms separable nonnegative matrix factorization ieee transactions pattern analysis machine intelligence vol pp usage nmf spa factorization algorithms package provides multiple factorization algorithms algorithm corresponds type create algorithm instance choosing type specifying options run algorithm using nmfsolve nmfsolve function nmfsolve alg algorithm alg factorize preallocated matrices respectively size appropriately initialized function invoked algorithms initialized multiplicative updating initialized als matrices updated algorithms multiplicative updating reference daniel lee sebastian seung algorithms negative matrix factorization advances nips algorithm objectives minimizing meansquarederror mse minimizing divergence div initialized multupdate obj symbol mse objective mse div maxiter integer maximum iterations verbose bool false procedural information tol real e tolerance changes convergence updateh bool true update lambdaw real l regularization coefficient lambdah real l regularization coefficient note values default values keyword arguments override naive projected alternate square algorithm alternately updates holding fixed update step solves enforcing negativity constrait forces negative entries zeros afterwards initialized projectedals maxiter integer maximum iterations verbose bool false procedural information tol real e tolerance changes convergence updateh bool true update lambdaw real e l regularization coefficient lambdah real e l regularization coefficient alternate square using projected gradient descent reference chihjen lin projected gradient methods negative matrix factorization neural computing algorithm adopts alternate square strategy efficient projected gradient descent method solve sub initialized alspgrad maxiter integer maximum iterations main procedure maxsubiter integer maximum iterations solving sub tol real e tolerance changes convergence tolg real e tolerable gradient norm sub optimality updateh bool true update verbose bool false procedural information coordinate descent solver fast hierarchical alternating squares reference cichocki andrzej anhhuy fast local algorithms scale nonnegative matrix tensor factorizations ieice transactions fundamentals electronics communications computer sciences sequential constrained minimization set squared euclidean distances matrices l l penalties enforce sparsity coordinatedescent maxiter integer maximum iterations main procedure verbose bool false procedural information tol real e tolerance changes convergence updateh bool true update real constant multiplies regularization terms regularization select regularization affects components transformation none components transformation none lratio real l l regularization mixing parameter shuffle bool false true randomize coordinates cd solver greedy coordinate descent reference chojui hsieh inderjit dhillon fast coordinate descent methods variable selection negative matrix factorization proceedings th acm sigkdd international conference knowledge discovery data mining algorithm fast coordinate descent method variable selection initialized greedycd maxiter integer maximum iterations main procedure verbose bool false procedural information tol real e tolerance changes convergence updateh bool true update lambdaw real l regularization coefficient lambdah real l regularization coefficient successive projection algorithm separable nmf reference gillis vavasis fast robust recursive algorithms separable nonnegative matrix factorization ieee transactions pattern analysis machine intelligence vol pp separable matrix written wh rank identity matrix sum entries column permutation matrix arange columns randomly separable nmf aims decompose separable matrix nonnegative factor matrices wh equal algorithm separable nmf initialized initspa spa obj symbol mse objective mse div examples examples demonstrate package factorize negative dense matrix level function nnmf prepare input matrix nnmf alg multmse maxiter tol e multiplicative update import nmf initialize nmf randinit optimize nmf solve nmf multupdate float obj mse maxiter naive als import nmf initialize nmf randinit optimize nmf solve nmf projectedals float maxiter als projected gradient descent import nmf initialize nmf nndsvd variant ar optimize nmf solve nmf alspgrad float maxiter tolg e coordinate descent import nmf initialize nmf nndsvd variant ar optimize nmf solve nmf coordinatedescent float maxiter lratio greedy coordinate descent import nmf initialize nmf nndsvd variant ar optimize nmf solve nmf greedycd float maxiter successive projection algorithm separable nmf import nmf initialize nmf spa optimize nmf solve nmf spa float obj ms